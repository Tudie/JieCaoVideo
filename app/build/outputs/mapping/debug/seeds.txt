androidx.appcompat.widget.ViewStubCompat
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory
cn.jzvd.demo.CustomJzvd.JzvdStdTinyWindow
cn.jzvd.demo.ActivityApiOrientation
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$8
androidx.lifecycle.FullLifecycleObserverAdapter
android.support.v4.media.MediaBrowserCompat$MediaItem
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$2
androidx.appcompat.widget.ActionMenuView
com.google.android.exoplayer2.upstream.RawResourceDataSource
androidx.activity.ComponentActivity$3
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$6
androidx.versionedparcelable.CustomVersionedParcelable
tv.danmaku.ijk.media.player.pragma.Pragma
androidx.appcompat.widget.ActionBarContextView
androidx.core.graphics.drawable.IconCompatParcelizer
tv.danmaku.ijk.media.player.ISurfaceTextureHost
tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener
cn.jzvd.demo.CustomMedia.JZMediaIjk
tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener
cn.jzvd.demo.ActivityListViewRecyclerView
android.support.v4.media.MediaMetadataCompat
androidx.versionedparcelable.ParcelImpl
cn.jzvd.demo.ActivityListView
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed
androidx.appcompat.widget.ContentFrameLayout
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder
android.support.v4.app.RemoteActionCompatParcelizer
androidx.media.AudioAttributesImplApi21Parcelizer
androidx.lifecycle.CompositeGeneratedAdaptersObserver
androidx.recyclerview.widget.LinearLayoutManager
android.support.v4.media.MediaBrowserCompat$ItemReceiver
android.support.v4.media.RatingCompat
tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler
tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener
androidx.lifecycle.LiveData$LifecycleBoundObserver
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$9
androidx.media.AudioAttributesImplApi21
tv.danmaku.ijk.media.player.IjkTimedText
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder
cn.jzvd.demo.CustomJzvd.JzvdStdShowTitleAfterFullscreen
cn.jzvd.demo.ActivityApiRotationVideoSize
tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener
androidx.recyclerview.widget.GridLayoutManager
tv.danmaku.ijk.media.player.MediaPlayerProxy$2
android.support.v4.media.session.ParcelableVolumeInfo
android.support.v4.media.session.PlaybackStateCompat$CustomAction
androidx.savedstate.Recreator
cn.jzvd.demo.ActivityListViewMultiHolder
cn.jzvd.demo.CustomJzvd.MyJzvdStd
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
androidx.fragment.app.Fragment$2
androidx.core.app.RemoteActionCompatParcelizer
android.support.v4.media.session.MediaSessionCompat$Token
androidx.appcompat.widget.AlertDialogLayout
tv.danmaku.ijk.media.player.IjkMediaPlayer$1
com.google.android.exoplayer2.ui.TrackSelectionView
androidx.annotation.Keep
androidx.activity.ComponentActivity$2
tv.danmaku.ijk.media.player.MediaPlayerProxy$1
cn.jzvd.demo.ActivityTinyWindow
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder
androidx.media.AudioAttributesImplBase
androidx.lifecycle.ReflectiveGenericLifecycleObserver
cn.jzvd.demo.ActivityApiUISmallChange
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnMediaCodecSelectListener
tv.danmaku.ijk.media.player.IjkMediaPlayer
androidx.appcompat.widget.Toolbar
tv.danmaku.ijk.media.player.IjkMediaMeta
tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector
tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener
androidx.appcompat.app.AlertController$RecycleListView
tv.danmaku.ijk.media.player.ffmpeg.FFmpegApi
cn.jzvd.JzvdStd
cn.jzvd.demo.ActivityTinyWindowRecycleView
com.bumptech.glide.load.ImageHeaderParser$ImageType
androidx.lifecycle.SingleGeneratedAdapterObserver
com.google.android.exoplayer2.ui.AspectRatioFrameLayout
androidx.appcompat.widget.ActivityChooserView$InnerLayout
tv.danmaku.ijk.media.player.misc.IAndroidIO
tv.danmaku.ijk.media.player.annotations.AccessedByNative
tv.danmaku.ijk.media.player.misc.IMediaDataSource
cn.jzvd.demo.ActivityApiCustomMedia
tv.danmaku.ijk.media.player.MediaPlayerProxy$5
cn.jzvd.demo.CustomJzvd.JzvdStdMp3
androidx.appcompat.widget.FitWindowsFrameLayout
tv.danmaku.ijk.media.player.IjkLibLoader
tv.danmaku.ijk.media.player.IjkMediaCodecInfo
cn.jzvd.demo.CustomJzvd.JzvdStdShowTextureViewAfterAutoComplete
androidx.activity.ImmLeaksCleaner
androidx.recyclerview.widget.StaggeredGridLayoutManager
cn.jzvd.demo.ActivityListViewFragmentViewPager
cn.jzvd.demo.ApplicationDemo
androidx.savedstate.SavedStateRegistry$1
android.support.v4.graphics.drawable.IconCompatParcelizer
tv.danmaku.ijk.media.player.MediaPlayerProxy$8
androidx.appcompat.widget.SearchView
tv.danmaku.ijk.media.player.ISurfaceTextureHolder
tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener
tv.danmaku.ijk.media.player.BuildConfig
tv.danmaku.ijk.media.player.TextureMediaPlayer
tv.danmaku.ijk.media.player.AbstractMediaPlayer
tv.danmaku.ijk.media.player.MediaPlayerProxy$6
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo
cn.jzvd.demo.ActivityMain
com.bumptech.glide.GeneratedAppGlideModule
tv.danmaku.ijk.media.player.pragma.DebugLog
androidx.core.graphics.drawable.IconCompat
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer
android.support.v4.media.AudioAttributesCompatParcelizer
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta
tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener
tv.danmaku.ijk.media.player.R$string
com.google.android.exoplayer2.ui.SubtitleView
androidx.media.AudioAttributesImplBaseParcelizer
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
tv.danmaku.ijk.media.player.annotations.CalledByNative
androidx.core.app.CoreComponentFactory
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener
androidx.media.AudioAttributesCompat
androidx.appcompat.widget.ActionBarOverlayLayout
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory
tv.danmaku.ijk.media.player.MediaPlayerProxy
cn.jzvd.demo.CustomJzvd.JzvdStdAutoCompleteAfterFullscreen
androidx.lifecycle.Lifecycling$1
tv.danmaku.ijk.media.player.misc.ITrackInfo
tv.danmaku.ijk.media.player.misc.IjkMediaFormat
cn.jzvd.demo.ActivityWebView
tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener
tv.danmaku.ijk.media.player.exceptions.IjkMediaException
androidx.appcompat.widget.ButtonBarLayout
androidx.core.app.RemoteActionCompat
cn.jzvd.demo.ActivityApiExtendsNormal
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat
cn.jzvd.demo.ActivityListViewNormal
android.support.v4.media.session.MediaSessionCompat$QueueItem
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
android.support.v4.media.AudioAttributesImplApi21Parcelizer
android.support.v4.media.session.PlaybackStateCompat
androidx.core.widget.NestedScrollView
android.support.v4.media.MediaDescriptionCompat
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnControlMessageListener
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$3
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$4
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
android.support.v4.media.AudioAttributesImplBaseParcelizer
tv.danmaku.ijk.media.player.MediaInfo
androidx.appcompat.widget.ActionBarContainer
tv.danmaku.ijk.media.player.MediaPlayerProxy$4
tv.danmaku.ijk.media.player.IMediaPlayer
tv.danmaku.ijk.media.player.AndroidMediaPlayer
androidx.appcompat.view.menu.ExpandedMenuView
androidx.appcompat.widget.SearchView$SearchAutoComplete
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
tv.danmaku.ijk.media.player.MediaPlayerProxy$7
cn.jzvd.demo.ActivityDirectPlay
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$5
androidx.appcompat.widget.DialogTitle
tv.danmaku.ijk.media.player.MediaPlayerProxy$3
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter
cn.jzvd.demo.ActivityApi
cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen
tv.danmaku.ijk.media.player.misc.IjkTrackInfo
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$7
cn.jzvd.JZMediaSystem
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen
cn.jzvd.demo.ActivityApiUIBigChange
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy
androidx.appcompat.view.menu.ListMenuItemView
androidx.media.AudioAttributesCompatParcelizer
tv.danmaku.ijk.media.player.misc.IMediaFormat
androidx.appcompat.widget.FitWindowsLinearLayout
tv.danmaku.ijk.media.player.R
androidx.appcompat.view.menu.ActionMenuItemView
androidx.fragment.app.FragmentManagerImpl$FragmentTag: int[] Fragment
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean firstOutIsPop
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: int[] AUDIO_SAMPLING_RATE_TABLE
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mSystemContext
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: int maximumSize
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet textOutputs
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float primaryRChromaticityY
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int currentSampleBytesRemaining
com.google.android.exoplayer2.upstream.ParsingLoadable: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser parser
com.google.android.exoplayer2.extractor.MpegAudioHeader: int[] BITRATE_V1_L1
androidx.exifinterface.media.ExifInterface: byte[] EXIF_ASCII_PREFIX
androidx.lifecycle.ReportFragment: androidx.lifecycle.ReportFragment$ActivityInitializationListener mProcessListener
com.google.android.exoplayer2.upstream.DataSourceInputStream: com.google.android.exoplayer2.upstream.DataSource dataSource
androidx.appcompat.widget.ActionBarContainer: android.view.View mContextView
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.core.R$id: int accessibility_custom_action_28
com.google.android.exoplayer2.source.hls.WebvttExtractor: int sampleSize
com.google.android.exoplayer2.extractor.ChunkIndex: long[] durationsUs
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_BT709
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.drm.DrmSession codecDrmSession
androidx.lifecycle.LifecycleRegistry: java.util.ArrayList mParentStates
cn.jzvd.JzvdStd: android.widget.TextView mDialogBrightnessTextView
com.danikula.videocache.Config: com.danikula.videocache.sourcestorage.SourceInfoStorage sourceInfoStorage
androidx.appcompat.widget.AppCompatAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
org.slf4j.helpers.NamedLoggerBase: java.lang.String name
com.google.android.exoplayer2.extractor.ts.LatmReader: java.lang.String formatId
com.bumptech.glide.request.BaseRequestOptions: boolean isTransformationRequired
androidx.core.R$styleable: int FontFamily_fontProviderCerts
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat mVisibilityAnim
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt0
androidx.appcompat.widget.AppCompatPopupWindow: boolean COMPAT_OVERLAP_ANCHOR
androidx.exifinterface.media.ExifInterface$ExifAttribute: int format
com.google.android.exoplayer2.extractor.ts.TsDurationReader: com.google.android.exoplayer2.util.TimestampAdjuster pcrTimestampAdjuster
com.google.android.exoplayer2.source.SinglePeriodTimeline: java.lang.Object UID
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: android.media.MediaCrypto mediaCrypto
com.google.android.exoplayer2.util.CodecSpecificDataUtil: int[] AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE
com.bumptech.glide.load.engine.ResourceCacheGenerator: int modelLoaderIndex
com.google.android.exoplayer2.upstream.DefaultAllocator: boolean trimOnReset
androidx.appcompat.app.AlertController: int mButtonIconDimen
com.google.android.exoplayer2.drm.DefaultDrmSession: android.os.HandlerThread requestHandlerThread
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLContext context
com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable: long[] pointSampleNumbers
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int height
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: java.util.Map headerFields
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference: com.bumptech.glide.load.Key key
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: java.util.Map responseHeaders
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener mItemAnimatorListener
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.util.regex.Pattern CONTENT_RANGE_HEADER
androidx.core.provider.FontsContractCompat$1: java.lang.String val$id
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: android.net.Uri uri
androidx.appcompat.widget.ActionMenuPresenter: boolean mExpandedActionViewsExclusive
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ToolbarWidgetWrapper mWrapper
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_AUDIO_DECODED_START
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mCoordinate
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence mHintText
androidx.core.view.OneShotPreDrawListener: java.lang.Runnable mRunnable
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int bitmapWidth
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer sps
android.support.v4.media.MediaBrowserCompat$MediaItem: int mFlags
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join mStrokeLineJoin
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long positionBeforeSeekToEnd
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: com.google.android.exoplayer2.util.SlidingPercentile slidingPercentile
com.google.android.exoplayer2.ui.SubtitlePainter: android.text.Layout$Alignment cueTextAlignment
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
androidx.recyclerview.widget.OrientationHelper: int mLastTotalSpace
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: int mPosition
com.google.android.exoplayer2.util.SlidingPercentile: com.google.android.exoplayer2.util.SlidingPercentile$Sample[] recycledSamples
com.google.android.exoplayer2.decoder.DecoderCounters: int droppedBufferCount
androidx.appcompat.view.menu.ActionMenuItem: android.content.Context mContext
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isPrepared
androidx.appcompat.widget.SearchView: android.os.Bundle mAppSearchData
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: com.google.android.exoplayer2.audio.DefaultAudioSink this$0
androidx.collection.MapCollections$ArrayIterator: int mOffset
cn.jzvd.demo.AdapterListView$ViewHolder: cn.jzvd.demo.AdapterListView this$0
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutNumericChar
org.slf4j.LoggerFactory: org.slf4j.helpers.NOPLoggerFactory NOP_FALLBACK_FACTORY
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
androidx.recyclerview.widget.RecyclerView: boolean mDataSetHasChangedAfterLayout
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowAnimationStyle
androidx.appcompat.R$id: int action_bar_container
androidx.collection.LongSparseArray: int mSize
com.google.android.exoplayer2.metadata.MetadataDecoderFactory: com.google.android.exoplayer2.metadata.MetadataDecoderFactory DEFAULT
androidx.appcompat.graphics.drawable.DrawableContainer: java.lang.Runnable mAnimationRunnable
androidx.appcompat.widget.DropDownListView: androidx.core.view.ViewPropertyAnimatorCompat mClickAnimation
androidx.appcompat.app.AlertController$3: android.view.View val$top
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: int availsExpected
androidx.appcompat.R$drawable: int abc_textfield_search_default_mtrl_alpha
com.google.android.exoplayer2.source.chunk.Chunk: long startTimeUs
com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle: java.util.List cues
androidx.appcompat.widget.SearchView: java.util.WeakHashMap mOutsideDrawablesCache
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingParentHelper mParentHelper
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText mWrapped
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: java.lang.String mQuery
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentHostCallback mHost
androidx.fragment.app.Fragment: android.view.LayoutInflater mLayoutInflater
com.google.android.exoplayer2.Timeline$Window: boolean isDynamic
com.bumptech.glide.load.data.ExifOrientationStream: byte orientation
com.bumptech.glide.provider.ResourceEncoderRegistry: java.util.List encoders
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.CollapsibleActionView mWrappedView
com.google.android.exoplayer2.extractor.flac.FlacExtractor: int minFrameSize
androidx.appcompat.R$styleable: int[] AppCompatImageView
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoMixedMimeTypeAdaptiveness
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Paint DEFAULT_PAINT
androidx.appcompat.R$styleable: int[] Toolbar
com.google.android.exoplayer2.source.hls.HlsChunkSource: android.net.Uri expectedPlaylistUrl
com.google.android.exoplayer2.Format: int width
com.google.android.exoplayer2.extractor.ChunkIndex: long durationUs
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int displayHeight
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: boolean selectUndeterminedTextLanguage
com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup: int iLogModes
tv.danmaku.ijk.media.player.misc.IMediaFormat: java.lang.String KEY_HEIGHT
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: long firstFramePosition
androidx.appcompat.R$styleable: int[] Spinner
android.support.v4.media.session.MediaSessionCompat$QueueItem: long mId
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTintMode
com.bumptech.glide.load.resource.bitmap.BitmapResource: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
com.google.android.exoplayer2.extractor.ts.SectionReader: int bytesRead
com.bumptech.glide.load.engine.DecodeJob: java.lang.Object model
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: boolean ptsFlag
com.google.android.exoplayer2.ui.SubtitlePainter: int edgeColor
android.support.v4.media.session.PlaybackStateCompat: long mPosition
com.google.android.exoplayer2.extractor.mp4.TrackFragment: boolean[] sampleHasSubsampleEncryptionTable
com.google.android.exoplayer2.decoder.CryptoInfo: com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24 patternHolder
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: android.view.ViewGroup mParent
android.support.v4.media.MediaBrowserCompat$ItemReceiver: java.lang.String mMediaId
androidx.fragment.app.FragmentManagerImpl$3$1: androidx.fragment.app.FragmentManagerImpl$3 this$1
com.bumptech.glide.util.LruCache$Entry: int size
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.Key signature
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.drm.DrmSession sourceDrmSession
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mSubtitleTextColor
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mBackground
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long syncUnadjustedReleaseTimeNs
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_SURROUND_DIRECT_LEFT
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: byte[] syncframePrefix
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: boolean preventNetworkOperations
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean playbackStateChanged
com.google.android.exoplayer2.source.ads.AdPlaybackState: long adResumePositionUs
com.google.android.exoplayer2.extractor.ts.PesReader: int extendedHeaderLength
androidx.recyclerview.widget.RecyclerView: int mEatenAccessibilityChangeFlags
com.bumptech.glide.disklrucache.DiskLruCache: java.util.concurrent.Callable cleanupCallable
androidx.core.graphics.drawable.IconCompat: android.os.Parcelable mParcelable
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mChangingConfigurations
tv.danmaku.ijk.media.player.IjkMediaMeta: java.util.ArrayList mStreams
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetEpicenterBoundsMethod
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean processSeiNalUnitPayload
androidx.appcompat.R$styleable: int MenuItem_android_alphabeticShortcut
androidx.appcompat.widget.ListPopupWindow: android.widget.PopupWindow mPopup
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistResetException: android.net.Uri url
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.trackselection.TrackSelection trackSelection
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean released
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: byte[] nalData
androidx.appcompat.widget.Toolbar: android.view.View mExpandedActionView
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory: android.content.res.Resources resources
androidx.core.view.ActionProvider: android.content.Context mContext
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantWidth
com.google.android.exoplayer2.audio.DtsUtil: int[] CHANNELS_BY_AMODE
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.audio.SonicAudioProcessor sonicAudioProcessor
com.google.android.exoplayer2.text.ttml.TtmlRegion: int lineType
androidx.viewpager.widget.ViewPager: int mMinimumVelocity
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float whitePointChromaticityY
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry: com.bumptech.glide.load.ResourceDecoder decoder
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.os.Bundle frozenActionViewState
com.google.android.exoplayer2.text.pgs.PgsDecoder: com.google.android.exoplayer2.util.ParsableByteArray inflatedBuffer
com.bumptech.glide.load.engine.GlideException: java.lang.Exception exception
com.bumptech.glide.load.engine.EngineResource: com.bumptech.glide.load.engine.EngineResource$ResourceListener listener
com.bumptech.glide.load.engine.GlideException: com.bumptech.glide.load.Key key
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: android.content.Context context
com.google.android.exoplayer2.util.NalUnitUtil: int[] scratchEscapePositions
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding MEMORY
androidx.fragment.app.FragmentHostCallback: android.os.Handler mHandler
com.google.android.exoplayer2.ExoPlayerImpl: boolean shuffleModeEnabled
cn.jzvd.JzvdStd$1: cn.jzvd.JzvdStd this$0
androidx.core.graphics.drawable.IconCompat: android.content.res.ColorStateList mTintList
androidx.appcompat.R$drawable: int abc_text_cursor_material
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] RGBA_F16_IN_CONFIGS
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.util.ConditionVariable loadCondition
androidx.appcompat.app.AppCompatDelegateImpl: boolean mSubDecorInstalled
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ViewPropertyAnimatorCompatSet mCurrentShowAnim
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: boolean writingSample
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean loadPending
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANMF
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanIndices
com.google.android.exoplayer2.AudioFocusManager$AudioFocusListener: com.google.android.exoplayer2.AudioFocusManager this$0
com.google.android.exoplayer2.metadata.icy.IcyHeaders: java.lang.String name
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTint
androidx.core.widget.NestedScrollView: int[] mScrollConsumed
com.google.android.exoplayer2.audio.Sonic: float speed
androidx.viewpager.widget.ViewPager: float mInitialMotionX
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.SparseIntArray AVC_LEVEL_NUMBER_TO_CONST
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$RecycleListView val$listView
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.PorterDuff$Mode mTintMode
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.appcompat.R$styleable: int Toolbar_subtitleTextColor
androidx.appcompat.R$styleable: int MenuItem_android_icon
com.google.android.exoplayer2.extractor.ts.AdtsReader: com.google.android.exoplayer2.util.ParsableByteArray id3HeaderBuffer
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer suffixSei
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer$Owner owner
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasXOffset
com.google.android.exoplayer2.metadata.flac.PictureFrame: java.lang.String mimeType
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.regex.Pattern CELL_RESOLUTION
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo lastPlayingMediaPeriod
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer prefixSei
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.TextView mTextView
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long endPlaybackHeadPosition
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mContentDescription
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager applicationManager
com.google.android.exoplayer2.audio.Sonic: int minPeriod
androidx.appcompat.app.AlertController$3: androidx.appcompat.app.AlertController this$0
com.bumptech.glide.load.engine.EngineJob: boolean isCacheable
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorCompat this$0
com.google.android.exoplayer2.BasePlayer$ListenerHolder: boolean released
com.google.android.exoplayer2.source.CompositeMediaSource$MediaSourceAndListener: com.google.android.exoplayer2.source.MediaSourceEventListener eventListener
androidx.exifinterface.media.ExifInterface: boolean mXmpIsFromSeparateMarker
cn.jzvd.JZTextureView: int currentVideoHeight
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mOnClickListener
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: android.net.Uri uri
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.content.res.Resources resources
com.google.android.exoplayer2.trackselection.TrackSelectionArray: int length
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int id
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long start
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: java.lang.String audioGroupId
cn.jzvd.demo.ActivityTinyWindow: cn.jzvd.demo.CustomJzvd.JzvdStdTinyWindow jzvdStdTinyWindow
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: byte[] data
com.bumptech.glide.request.SingleRequest: java.lang.Object requestLock
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioTrackPositionTracker audioTrackPositionTracker
com.google.android.exoplayer2.ui.SubtitlePainter: android.text.StaticLayout textLayout
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.IjkLibLoader sLocalLibLoader
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed: com.bumptech.glide.load.engine.EngineJob this$0
com.bumptech.glide.load.engine.DecodeHelper: java.lang.Class resourceClass
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy uncaughtThrowableStrategy
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy CENTER_OUTSIDE
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.Timeline$Window window
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner mTabSpinner
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ChildHelper mChildHelper
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long approxBytesPerFrame
tv.danmaku.ijk.media.player.IjkMediaPlayer: android.view.SurfaceHolder mSurfaceHolder
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
com.google.android.exoplayer2.extractor.wav.WavExtractor: com.google.android.exoplayer2.extractor.wav.WavExtractor$OutputWriter outputWriter
com.google.android.exoplayer2.extractor.ts.PsExtractor: com.google.android.exoplayer2.extractor.ts.PsDurationReader durationReader
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: int extendedHeaderLength
androidx.core.R$id: int accessibility_custom_action_29
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: android.content.res.Resources resources
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: android.media.MediaCodec$BufferInfo outputBufferInfo
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mShowActionModePopup
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: int calculatedVideoTrackHeight
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int windowFillColor
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState: boolean[] trackIsAudioVideoFlags
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean haveOutputSample
com.google.android.exoplayer2.text.cea.Cea608Decoder: int selectedField
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_dither
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: com.google.android.exoplayer2.util.ParsableByteArray bitmapData
com.google.android.exoplayer2.ExoPlaybackException: int rendererFormatSupport
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemIconResId
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$BitmapTracker tracker
com.google.android.exoplayer2.extractor.ts.H262Reader: boolean sampleIsKeyframe
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.Timeline$Window window
cn.jzvd.demo.ActivityListViewMultiHolder: android.widget.ListView listView
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: int[] laces
androidx.appcompat.R$styleable: int TextAppearance_android_textColorHint
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemShowAsAction
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransition
com.bumptech.glide.disklrucache.DiskLruCache$1: com.bumptech.glide.disklrucache.DiskLruCache this$0
com.google.android.exoplayer2.util.SlidingPercentile: java.util.Comparator VALUE_COMPARATOR
com.google.android.exoplayer2.MediaPeriodHolder: java.lang.Object uid
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: java.nio.ByteBuffer[] yuvPlanes
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: long realtimeMs
androidx.appcompat.widget.SuggestionsAdapter: android.app.SearchableInfo mSearchable
com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache this$0
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: boolean multiSession
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_visible
com.google.android.exoplayer2.ui.SubtitlePainter: int textLeft
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: com.google.android.exoplayer2.util.ParsableByteArray packetBuffer
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[] mSpans
androidx.fragment.app.FragmentHostCallback: int mWindowAnimations
com.bumptech.glide.request.SingleRequest: boolean isCallingCallbacks
androidx.collection.ArraySet: androidx.collection.MapCollections mCollections
androidx.fragment.app.FragmentActivity: int mNextCandidateRequestIndex
com.google.android.exoplayer2.text.cea.Cea608Decoder: int currentChannel
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: long[][] accumulatedSampleSizes
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry: java.lang.Class dataClass
tv.danmaku.ijk.media.player.MediaInfo: java.lang.String mVideoDecoderImpl
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_SEGMENT_INDEX
androidx.appcompat.widget.SearchView$10: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Object mRealOwner
cn.jzvd.JZMediaInterface: android.os.Handler mMediaHandler
cn.jzvd.JZDataSource: java.util.LinkedHashMap urlsMap
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_OCTAGONAL
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.PlaybackInfo playbackInfo
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: long samplePosition
androidx.core.R$id: int accessibility_custom_action_5
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sGetMaxAvailableHeightMethod
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.util.FlacStreamMetadata flacStreamMetadata
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView mMenuView
cn.jzvd.R$drawable: int jz_enlarge
androidx.appcompat.R$styleable: int ViewBackgroundHelper_android_background
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$2: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mSystemGestureInsets
com.google.android.exoplayer2.audio.AudioAttributes: android.media.AudioAttributes audioAttributesV21
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitRight
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: long elapsedRealtimeMs
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long endOfMdatPosition
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean idrPicFlag
com.google.android.exoplayer2.upstream.BaseDataSource: int listenerCount
com.google.android.exoplayer2.DefaultRenderersFactory: boolean enableDecoderFallback
com.bumptech.glide.load.engine.EngineJob$CallResourceReady: com.bumptech.glide.request.ResourceCallback cb
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.executor.GlideExecutor sourceExecutor
com.danikula.videocache.ProxyCache: java.util.concurrent.atomic.AtomicInteger readSourceErrorsCount
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_SUBTITLE_TIMED_OUT
com.google.android.exoplayer2.extractor.ts.Ac3Reader: int bytesRead
tv.danmaku.ijk.media.player.misc.IMediaFormat: java.lang.String KEY_WIDTH
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseIntArray continuityCounters
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1: com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory this$0
androidx.appcompat.R$styleable: int[] AppCompatSeekBar
com.bumptech.glide.load.model.GlideUrl: java.lang.String stringUrl
com.google.android.exoplayer2.extractor.ogg.StreamReader: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
androidx.appcompat.widget.ActionBarContextView: int mTitleStyleRes
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mIcon
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: long basisTimeUs
androidx.appcompat.graphics.drawable.StateListDrawable: boolean mMutated
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: boolean networkTypeOverrideSet
tv.danmaku.ijk.media.player.MediaPlayerProxy$3: tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener val$finalListener
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableItem
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TIME_OFFSET
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_VIDEO_DECODED_START
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: boolean seenIcyMetadata
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long[] DEFAULT_INITIAL_BITRATE_ESTIMATES_2G
com.google.android.exoplayer2.Format: long subsampleOffsetUs
androidx.appcompat.app.AlertController: boolean mViewSpacingSpecified
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: android.media.AudioTrack audioTrack
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLaidOutInvalidFullSpan
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: java.io.File FD_SIZE_LIST
com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder: long offset
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: int[] sizes
android.support.v4.media.session.PlaybackStateCompat: java.util.List mCustomActions
com.danikula.videocache.file.FileCache: java.io.File file
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: com.google.android.exoplayer2.text.ttml.TtmlNode root
androidx.media.AudioAttributesImplBase: int mLegacyStream
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$4: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
com.danikula.videocache.HttpProxyCache: com.danikula.videocache.CacheListener listener
com.google.android.exoplayer2.ui.SubtitleView: float textSize
com.google.android.exoplayer2.AudioFocusManager: com.google.android.exoplayer2.AudioFocusManager$AudioFocusListener focusListener
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.GlideException exception
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Paint CIRCLE_CROP_BITMAP_PAINT
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mTopGlow
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: int bodySize
com.google.android.exoplayer2.util.FlacStreamMetadata: int minFrameSize
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View mStatusGuard
com.google.android.exoplayer2.audio.DefaultAudioSink: long playbackParametersPositionUs
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean enableConvertHighResIntPcmToFloat
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: java.util.List callbacksAndExecutors
com.google.android.exoplayer2.source.ads.AdPlaybackState: long contentDurationUs
com.bumptech.glide.manager.RequestManagerRetriever: androidx.collection.ArrayMap tempViewToSupportFragment
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitle
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean rebuffering
androidx.appcompat.R$color: int abc_decor_view_status_guard_light
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableBottom
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int reportedUnappliedRotationDegrees
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: com.google.android.exoplayer2.extractor.SeekPoint second
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Rendition: java.lang.String groupId
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.text.SubtitleOutputBuffer nextSubtitle
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long adjustedLastFrameTimeNs
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.PlaybackParameters playbackParameters
com.google.android.exoplayer2.BasePlayer: com.google.android.exoplayer2.Timeline$Window window
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long dataStartPosition
androidx.appcompat.view.menu.MenuItemImpl: int mIconResId
androidx.appcompat.widget.ListPopupWindow$2: androidx.appcompat.widget.ListPopupWindow this$0
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int pendingOutputBytes
com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header
com.google.android.exoplayer2.extractor.ts.LatmReader: long sampleDurationUs
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean playing
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler: com.google.android.exoplayer2.drm.DefaultDrmSession this$0
com.bumptech.glide.Registry: com.bumptech.glide.provider.ModelToResourceClassCache modelToResourceClassCache
androidx.core.provider.FontsContractCompat$1: androidx.core.provider.FontRequest val$request
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener
com.google.android.exoplayer2.DefaultLoadControl: boolean prioritizeTimeOverSizeThresholds
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: int type
androidx.appcompat.widget.SuggestionsAdapter: int mText2Col
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_VIDEO_SEEK_RENDERING_START
cn.jzvd.demo.ApplicationDemo: com.danikula.videocache.HttpProxyCacheServer proxy
androidx.recyclerview.widget.GapWorker: long mFrameIntervalNs
com.google.android.exoplayer2.text.cea.Cea608Decoder: int selectedChannel
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: int type
com.google.android.exoplayer2.text.ttml.TtmlStyle: int backgroundColor
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineJobListener engineJobListener
androidx.core.R$id: int accessibility_custom_action_18
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
androidx.appcompat.widget.ActionBarContainer: int mHeight
androidx.appcompat.widget.TooltipPopup: android.graphics.Rect mTmpDisplayFrame
com.google.android.exoplayer2.util.ColorParser: java.util.Map COLOR_MAP
com.google.android.exoplayer2.extractor.ts.H265Reader: long pesTimeUs
androidx.appcompat.widget.ActionBarOverlayLayout: int[] ATTRS
androidx.core.R$styleable: int FontFamilyFont_fontWeight
com.google.android.exoplayer2.PlaybackParameters: int scaledUsPerMs
androidx.appcompat.R$styleable: int ActionMode_height
androidx.viewpager.widget.ViewPager: android.widget.Scroller mScroller
androidx.lifecycle.Lifecycle: java.util.concurrent.atomic.AtomicReference mInternalScopeRef
com.google.android.exoplayer2.Format: int rotationDegrees
com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy ALL
androidx.appcompat.view.menu.ActionMenuItemView: int mMinWidth
androidx.recyclerview.widget.GapWorker: java.util.Comparator sTaskComparator
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.Loader initialPlaylistLoader
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mAutoMirrored
com.bumptech.glide.load.engine.cache.LruResourceCache: com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener listener
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_AUDIO_SEEK_RENDERING_START
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int codecAdaptationWorkaroundMode
androidx.core.R$id: int accessibility_custom_action_6
androidx.appcompat.view.menu.ExpandedMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: com.google.android.exoplayer2.extractor.wav.WavHeader header
com.google.android.exoplayer2.extractor.ts.LatmReader: int secondHeaderByte
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean mHasPendingShowSoftInputRequest
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean repeatableControlSet
cn.jzvd.demo.CustomMedia.JZMediaExo: java.lang.String TAG
com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler: java.lang.String url
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CHANNEL_LAYOUT
androidx.viewpager.widget.ViewPager$ItemInfo: float widthFactor
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean mInChangeScrap
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray sampleStrippedBytes
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeAlpha
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.source.TrackGroupArray trackGroups
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int count
com.google.android.exoplayer2.decoder.DecoderCounters: int maxConsecutiveDroppedBufferCount
androidx.core.provider.SelfDestructiveThread: int mDestructAfterMillisec
com.google.android.exoplayer2.source.hls.WebvttExtractor: byte[] sampleData
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int featureId
androidx.exifinterface.media.ExifInterface: int[] IFD_FORMAT_BYTES_PER_FORMAT
com.google.android.exoplayer2.video.ColorInfo: int colorSpace
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State RESUMED
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mShortcutView
com.google.android.exoplayer2.extractor.wav.WavHeader: int frameRateHz
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mMutated
com.google.android.exoplayer2.drm.DefaultDrmSession: int state
com.google.android.exoplayer2.upstream.RawResourceDataSource: long bytesRemaining
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: android.media.MediaPlayer$TrackInfo mTrackInfo
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mInfinite
androidx.appcompat.widget.ActionMenuView: int mPopupTheme
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.ts.Id3Reader: com.google.android.exoplayer2.util.ParsableByteArray id3Header
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params mParams
androidx.core.provider.FontsContractCompat$1: android.content.Context val$context
com.bumptech.glide.gifdecoder.GifHeader: int gctSize
androidx.appcompat.R$id: int titleDividerNoCustom
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.Format ICY_FORMAT
com.google.android.exoplayer2.text.ssa.SsaSubtitle: java.util.List cueTimesUs
android.support.v4.media.MediaDescriptionCompat: android.net.Uri mIconUri
com.bumptech.glide.RequestBuilder: com.bumptech.glide.GlideContext glideContext
androidx.appcompat.app.AlertController$4: android.view.View val$bottom
com.google.android.exoplayer2.decoder.SimpleDecoder: java.lang.Object lock
com.google.android.exoplayer2.util.FlacStreamMetadata: long totalSamples
com.bumptech.glide.load.resource.gif.StreamGifDecoder: java.util.List parsers
com.google.android.exoplayer2.text.TextRenderer: android.os.Handler outputHandler
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mTotalDuration
com.bumptech.glide.load.model.LazyHeaders$Builder: boolean copyOnModify
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$exitingViews
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: android.media.MediaFormat currentMediaFormat
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mShownAnchorView
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VERSION
androidx.fragment.app.Fragment: int mContainerId
com.bumptech.glide.Glide: com.bumptech.glide.GlideContext glideContext
androidx.core.R$styleable: int[] FontFamily
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int markpos
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizePresetSizes
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition mTransition
androidx.viewpager.widget.ViewPager: java.util.List mOnPageChangeListeners
tv.danmaku.ijk.media.player.MediaInfo: java.lang.String mVideoDecoder
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TARGET_DURATION
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mMenuVisibilityListeners
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.mediacodec.MediaCodecSelector mediaCodecSelector
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.Option DOWNSAMPLE_STRATEGY
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: int textAlignment
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mStackedMatrix
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.ColorStateList mTintList
com.google.android.exoplayer2.PlaybackInfo: long totalBufferedDurationUs
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat CONSUMED
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableLeft
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int picOrderCountType
androidx.appcompat.widget.RtlSpacingHelper: int mStart
com.bumptech.glide.RequestManager: com.bumptech.glide.manager.TargetTracker targetTracker
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: java.lang.String preferredAudioLanguage
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotLoadMs
com.google.android.exoplayer2.extractor.MpegAudioHeader: int version
androidx.appcompat.view.menu.MenuBuilder: int[] sCategoryToOrder
com.danikula.videocache.HttpProxyCacheServer$Builder: com.danikula.videocache.sourcestorage.SourceInfoStorage sourceInfoStorage
com.google.android.exoplayer2.metadata.id3.BinaryFrame: byte[] data
com.bumptech.glide.load.engine.DecodeHelper: java.lang.Class transcodeClass
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long blacklistUntilMs
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.Key currentAttemptingKey
com.google.android.exoplayer2.source.ClippingMediaPeriod: com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream[] sampleStreams
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.view.menu.ActionMenuItem mNavItem
androidx.core.R$id: int accessibility_custom_action_31
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: int textIndex
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom: byte[] schemeData
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_MAX
com.google.android.exoplayer2.extractor.wav.WavSeekMap: long firstBlockPosition
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: java.util.ArrayList mActionModes
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.text.SubtitleOutputBuffer subtitle
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sGetLayoutDirectionMethod
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: com.google.android.exoplayer2.extractor.MpegAudioHeader header
androidx.fragment.app.Fragment: boolean mHasMenu
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTintMode
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecReceivedEos
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CODECS
com.google.android.exoplayer2.extractor.amr.AmrExtractor: long currentSampleTimeUs
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.Format format
com.bumptech.glide.util.ExceptionPassthroughInputStream: java.io.InputStream wrapped
androidx.appcompat.R$id: int action_mode_close_button
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.core.widget.PopupWindowCompat: boolean sSetWindowLayoutTypeMethodAttempted
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor parcelFileDescriptor
android.support.v4.media.MediaDescriptionCompat$Builder: android.net.Uri mIconUri
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.bumptech.glide.load.model.GlideUrl: com.bumptech.glide.load.model.Headers headers
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException lastException
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean mHasReversibleFlag
androidx.appcompat.widget.AppCompatTextHelper$1: int val$fontWeight
com.google.android.exoplayer2.extractor.ogg.OggPacket: int segmentCount
com.google.android.exoplayer2.util.ColorParser: java.util.regex.Pattern RGBA_PATTERN_FLOAT_ALPHA
androidx.core.view.ViewCompat: boolean sMinHeightFieldFetched
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int EVENT_DID_HTTP_OPEN
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackIndices
androidx.viewpager.widget.ViewPager$LayoutParams: int childIndex
com.google.android.exoplayer2.source.ExtractorMediaSource: com.google.android.exoplayer2.source.ProgressiveMediaSource progressiveMediaSource
com.google.android.exoplayer2.ExoPlayerLibraryInfo: java.util.HashSet registeredModules
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: long renderTimeLimitMs
androidx.appcompat.R$attr: int autoCompleteTextViewStyle
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int firstVideoTrackIndex
com.google.android.exoplayer2.audio.Sonic: int remainingInputToCopyFrameCount
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sNextServedViewField
com.google.android.exoplayer2.source.hls.HlsSampleStream: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper sampleStreamWrapper
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseContentInsets
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdAutoCompleteAfterFullscreen jzvdStdAutoCompleteAfterFullscreen
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean stoppedAudioTrack
com.google.android.exoplayer2.video.AvcConfig: java.util.List initializationData
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_MONO
android.support.v4.media.session.MediaControllerCompat$Callback: java.lang.Object mCallbackObj
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean loadCanceled
com.google.android.exoplayer2.ui.R$styleable: int[] AspectRatioFrameLayout
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String formatId
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState mPendingSavedState
com.google.android.exoplayer2.source.hls.HlsManifest: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist mediaPlaylist
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: int windowIndex
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: java.lang.String mimeType
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri primaryMediaPlaylistUrl
com.google.android.exoplayer2.extractor.ts.TsDurationReader: boolean isDurationRead
com.google.android.exoplayer2.extractor.ts.H262Reader: long totalBytesWritten
androidx.arch.core.internal.SafeIterableMap: int mSize
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mSizePerSpan
androidx.appcompat.widget.ActionMenuView: android.content.Context mPopupContext
com.bumptech.glide.manager.RequestManagerRetriever: android.os.Bundle tempBundle
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsChunkSource chunkSource
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration pendingConfiguration
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: androidx.appcompat.widget.ListPopupWindow this$0
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewPropertyAnimator mCurrentActionBarTopAnimator
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup mSubDecor
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_STEREO_LEFT
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.Option ALLOW_HARDWARE_CONFIG
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean[] sampleQueueIsAudioVideoFlags
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.executor.GlideExecutor sourceUnlimitedExecutor
com.google.android.exoplayer2.DefaultLoadControl: int targetBufferBytesOverwrite
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean exceedRendererCapabilitiesIfNecessary
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1: java.lang.String val$diskCacheName
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_CACHE_STATISTIC_COUNT_BYTES
androidx.appcompat.app.TwilightManager$TwilightState: long nextUpdate
androidx.appcompat.view.menu.MenuBuilder: android.view.View mHeaderView
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long startGranule
com.bumptech.glide.util.Util: android.os.Handler mainThreadHandler
com.google.android.exoplayer2.ui.SubtitlePainter: int textPaddingX
androidx.appcompat.app.AlertController: androidx.appcompat.app.AppCompatDialog mDialog
com.bumptech.glide.disklrucache.DiskLruCache: int appVersion
com.google.android.exoplayer2.source.hls.WebvttExtractor: com.google.android.exoplayer2.util.ParsableByteArray sampleDataWrapper
androidx.core.R$id: int accessibility_custom_action_14
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: int[] outputChannels
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity3ParamsMethod
androidx.appcompat.R$styleable: int[] TextAppearance
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastBaseInnerInsets
cn.jzvd.Jzvd: int positionInList
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$AccessibilityDelegate ACCESSIBILITY_DELEGATE
androidx.appcompat.widget.ViewStubCompat: androidx.appcompat.widget.ViewStubCompat$OnInflateListener mInflateListener
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
androidx.appcompat.widget.SearchView$2: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable mResizePopupRunnable
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
androidx.appcompat.R$layout: int abc_screen_toolbar
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMajor
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.source.MediaSource mediaSource
androidx.appcompat.widget.TintContextWrapper: java.lang.Object CACHE_LOCK
com.google.android.exoplayer2.extractor.ts.Ac4Reader: com.google.android.exoplayer2.extractor.TrackOutput output
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean shouldSkipAdaptationWorkaroundOutputBuffer
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorAdapter$ChangeObserver mChangeObserver
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: com.bumptech.glide.load.DecodeFormat val$decodeFormat
com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData
com.bumptech.glide.gifdecoder.GifFrame: int ih
androidx.fragment.app.FragmentManagerImpl$3: androidx.fragment.app.FragmentManagerImpl this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mAnchorPosition
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: java.io.File file
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: android.content.Context context
androidx.core.R$styleable: int FontFamilyFont_fontStyle
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.exoplayer2.audio.DefaultAudioSink: android.os.ConditionVariable releasingConditionVariable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_LEFT
androidx.core.os.TraceCompat: long sTraceTagApp
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mResourceId
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory factory
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource baseDataSource
androidx.appcompat.widget.ContentFrameLayout: android.graphics.Rect mDecorPadding
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.MpegAudioHeader synchronizedHeader
com.google.android.exoplayer2.upstream.AssetDataSource: android.net.Uri uri
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPendingActions
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int bitmapPoolSize
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery: android.content.ContentResolver contentResolver
com.google.android.exoplayer2.Format: java.util.List initializationData
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioSink$Listener listener
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.DataSource currentDataSource
androidx.core.graphics.Insets: int left
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_HTTP_CODE
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.collection.ArrayMap mTargetNameMap
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode mIconTintMode
androidx.appcompat.widget.DrawableUtils: int[] EMPTY_STATE_SET
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCategoryOrder
androidx.appcompat.R$styleable: int[] MenuView
androidx.fragment.app.FragmentTransaction: int mPopEnterAnim
androidx.appcompat.widget.AppCompatProgressBarHelper: android.widget.ProgressBar mView
com.google.android.exoplayer2.DefaultRenderersFactory: boolean playClearSamplesWithoutKeys
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.model.ModelLoader uriDelegate
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mVerticalBoundCheckCallback
com.google.android.exoplayer2.drm.DefaultDrmSession: java.util.UUID uuid
androidx.core.widget.NestedScrollView: long mLastScroll
androidx.appcompat.view.menu.StandardMenuPopup$1: androidx.appcompat.view.menu.StandardMenuPopup this$0
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_FLOAT_PLAYBACK_RATE
com.google.android.exoplayer2.util.SlidingPercentile$Sample: int weight
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean loadingFinished
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: com.google.android.exoplayer2.ui.AspectRatioFrameLayout this$0
cn.jzvd.demo.CustomMedia.JZMediaExo: java.lang.Runnable callback
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener mOnVideoSizeChangedListener
com.bumptech.glide.util.Executors: java.util.concurrent.Executor MAIN_THREAD_EXECUTOR
com.google.android.exoplayer2.MediaPeriodQueue: long oldFrontPeriodWindowSequenceNumber
com.google.android.exoplayer2.extractor.wav.WavHeader: byte[] extraData
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer pps
com.google.android.exoplayer2.extractor.ts.PesReader: int bytesRead
androidx.appcompat.R$id: int message
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: java.util.List parsers
androidx.appcompat.R$layout: int abc_action_mode_close_item_material
androidx.appcompat.app.AppCompatDelegateImpl: boolean mBaseContextAttached
com.google.android.exoplayer2.Format: int encoderPadding
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: boolean isRoot
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mPrimaryNav
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableStart
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix mFinalPathMatrix
androidx.appcompat.view.menu.ListMenuItemView: android.widget.RadioButton mRadioButton
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId loadingMediaPeriodId
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mRvStart
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: int maxSize
cn.jzvd.Jzvd: int ON_PLAY_PAUSE_TMP_STATE
com.google.android.exoplayer2.decoder.SimpleDecoder$1: com.google.android.exoplayer2.decoder.SimpleDecoder this$0
com.google.android.exoplayer2.source.CompositeMediaSource: android.os.Handler eventHandler
androidx.appcompat.R$styleable: int[] AppCompatTheme
androidx.core.view.ViewPropertyAnimatorCompat$2: android.view.View val$view
com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result: com.google.android.exoplayer2.extractor.Extractor extractor
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long lastReportedBitrateEstimate
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: boolean mRecursive
androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_MIF1
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
com.google.android.exoplayer2.DefaultLoadControl: boolean retainBackBufferFromKeyframe
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int maxVideoHeight
com.google.android.exoplayer2.source.ClippingMediaPeriod: long endUs
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: android.util.SparseIntArray sampleQueueIndicesByType
com.google.android.exoplayer2.source.hls.HlsChunkSource: byte[] scratchSpace
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.decoder.DecoderCounters decoderCounters
androidx.core.R$id: int accessibility_custom_action_27
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: android.graphics.Bitmap bitmap
com.bumptech.glide.gifdecoder.StandardGifDecoder: int framePointer
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource REMOTE
com.google.android.exoplayer2.source.SampleQueue: long largestDiscardedTimestampUs
org.slf4j.event.Level: org.slf4j.event.Level WARN
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.util.ParsableByteArray scratch
tv.danmaku.ijk.media.player.misc.ITrackInfo: int MEDIA_TRACK_TYPE_UNKNOWN
com.google.android.exoplayer2.ExoPlayerImpl: long maskingWindowPositionMs
androidx.appcompat.R$styleable: int Toolbar_popupTheme
com.google.android.exoplayer2.audio.SonicAudioProcessor: float speed
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: long mediaStartTimeMs
androidx.collection.ArraySet: int sBaseCacheSize
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mPrevious
androidx.viewpager.widget.ViewPager: float mLastOffset
com.google.android.exoplayer2.text.ttml.TtmlStyle: boolean hasBackgroundColor
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker: java.util.Map locks
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotY
com.danikula.videocache.StorageUtils: org.slf4j.Logger LOG
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect mEpicenterBounds
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.extractor.mp4.TrackFragment fragment
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int channelCount
androidx.appcompat.app.WindowDecorActionBar: boolean mHideOnContentScroll
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowMixedMimeAdaptiveness
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: java.lang.RuntimeException initException
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean reverseLayout
com.google.android.exoplayer2.AudioFocusManager: int focusGain
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$DvbSubtitleInfo: int type
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean shouldSpliceIn
androidx.appcompat.widget.Toolbar$2: androidx.appcompat.widget.Toolbar this$0
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry: com.bumptech.glide.load.ResourceEncoder encoder
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemNumericModifiers
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray encryptionInitializationVector
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.load.engine.Resource resource
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_VIDEO_CACHED_DURATION
com.google.android.exoplayer2.extractor.ts.DtsReader: int state
cn.jzvd.Jzvd: android.widget.ImageView startButton
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
androidx.appcompat.app.AlertController: int mButtonPanelSideLayout
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.lang.String userAgent
androidx.appcompat.R$id: int scrollView
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.Renderer[] renderers
androidx.recyclerview.widget.GapWorker$Task: int viewVelocity
androidx.appcompat.view.menu.CascadingMenuPopup: int mRawDropDownGravity
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int byteLimit
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean fieldPicFlag
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long end
cn.jzvd.R$id: int battery_time_layout
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] $VALUES
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mChildNonConfigs
android.support.v4.media.MediaDescriptionCompat$Builder: android.net.Uri mMediaUri
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: int currentTrackRunIndex
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.util.List sessions
androidx.appcompat.R$styleable: int MenuItem_android_menuCategory
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray nalStartCode
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.util.HashMap keyRequestParameters
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean pendingResetUpstreamFormats
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_WIDE_LEFT
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: int availsExpected
com.google.android.exoplayer2.extractor.MpegAudioHeader: int[] BITRATE_V2_L1
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: int bitrateMin
androidx.appcompat.widget.Toolbar: int mTitleTextAppearance
com.bumptech.glide.load.data.AssetPathFetcher: android.content.res.AssetManager assetManager
com.google.android.exoplayer2.extractor.ts.Ac3Reader: com.google.android.exoplayer2.Format format
androidx.viewpager.widget.ViewPager: int mMaximumVelocity
androidx.appcompat.widget.SearchView: boolean mVoiceButtonEnabled
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long vsyncOffsetNs
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: int sdkBasedMaxFdCount
com.google.android.exoplayer2.extractor.VorbisUtil$Mode: boolean blockFlag
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: int minDurationToRetainAfterDiscardMs
com.bumptech.glide.request.transition.NoTransition: com.bumptech.glide.request.transition.TransitionFactory NO_ANIMATION_FACTORY
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mBridge
androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.viewpager.widget.ViewPager: android.view.animation.Interpolator sInterpolator
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int maxVideoFrameRate
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String mPrefix
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsIn
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List subtitles
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray atomData
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int seqParameterSetId
tv.danmaku.ijk.media.player.IjkMediaPlayer: int mVideoSarDen
androidx.appcompat.R$drawable: int abc_dialog_material_background
com.google.android.exoplayer2.decoder.DecoderInputBuffer: int bufferReplacementMode
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: byte[] model
com.google.android.exoplayer2.extractor.MpegAudioHeader: int[] BITRATE_V1_L3
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean preventEdgeOffset
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long dataEndPosition
com.bumptech.glide.request.BaseRequestOptions: int overrideWidth
androidx.recyclerview.widget.RecyclerView: int[] mScrollOffset
com.google.android.exoplayer2.audio.SonicAudioProcessor: boolean pendingSonicRecreation
com.bumptech.glide.load.data.ExifOrientationStream: int ORIENTATION_POSITION
androidx.appcompat.R$styleable: int Toolbar_titleMarginEnd
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.regex.Pattern PERCENTAGE_COORDINATES
com.bumptech.glide.disklrucache.DiskLruCache: int redundantOpCount
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLDisplay display
androidx.appcompat.R$styleable: int ActionMode_subtitleTextStyle
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.drawable.Drawable mTickMark
com.danikula.videocache.HttpUrlSource: org.slf4j.Logger LOG
com.bumptech.glide.Glide: com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory
com.bumptech.glide.manager.DefaultConnectivityMonitor$1: com.bumptech.glide.manager.DefaultConnectivityMonitor this$0
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: long bytesLoaded
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$SearchAutoComplete mSearchSrcTextView
com.bumptech.glide.request.BaseRequestOptions: boolean useUnlimitedSourceGeneratorsPool
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int sampleBytesWritten
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory engineResourceFactory
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.DecodeJob this$0
com.danikula.videocache.GetRequest: long rangeOffset
com.google.android.exoplayer2.extractor.GaplessInfoHolder: int encoderDelay
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.SeekParameters seekParameters
com.google.android.exoplayer2.metadata.id3.MlltFrame: int mpegFramesBetweenReference
androidx.appcompat.R$styleable: int TextAppearance_fontVariationSettings
cn.jzvd.R$drawable: int jz_forward_icon
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableTransition
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder: com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder rewinder
androidx.appcompat.R$id: int search_go_btn
android.support.v4.media.MediaDescriptionCompat: android.net.Uri mMediaUri
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanGroupIndexCache
com.google.android.exoplayer2.extractor.ts.TsExtractor: int pcrPid
com.bumptech.glide.util.ByteBufferUtil$SafeArray: int offset
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.upstream.BandwidthMeter bandwidthMeter
android.support.v4.media.session.PlaybackStateCompat: java.lang.Object mStateObj
com.google.android.exoplayer2.text.dvb.DvbDecoder: com.google.android.exoplayer2.text.dvb.DvbParser parser
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int dataType
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean mItalic
androidx.fragment.app.Fragment: int mFragmentId
com.bumptech.glide.load.engine.GlideException: java.util.List causes
androidx.appcompat.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.appcompat.app.WindowDecorActionBar$2: androidx.appcompat.app.WindowDecorActionBar this$0
androidx.core.text.PrecomputedTextCompat$Params: int mBreakStrategy
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: int nextAdGroupIndex
com.google.android.exoplayer2.upstream.RawResourceDataSource: java.io.InputStream inputStream
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources mResources
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler
androidx.fragment.app.FragmentManagerImpl: int mCurState
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int metadataType
com.google.android.exoplayer2.extractor.ts.H264Reader: long pesTimeUs
com.google.android.exoplayer2.Format: int encoderDelay
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long lastInputTimeUs
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long frameCount
com.google.android.exoplayer2.extractor.ts.H262Reader: com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer csdBuffer
com.google.android.exoplayer2.text.pgs.PgsSubtitle: java.util.List cues
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: int bufferSize
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.Map DOLBY_VISION_STRING_TO_LEVEL
androidx.appcompat.graphics.drawable.DrawableContainer: long mEnterAnimationEnd
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.util.ParsableByteArray encryptionSignalByte
com.google.android.exoplayer2.drm.DefaultDrmSession: byte[] offlineLicenseKeySetId
com.google.android.exoplayer2.source.ProgressiveMediaSource: long timelineDurationUs
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: java.util.concurrent.locks.Lock lock
tv.danmaku.ijk.media.player.AndroidMediaPlayer: tv.danmaku.ijk.media.player.MediaInfo sMediaInfo
androidx.core.provider.SelfDestructiveThread$2$1: androidx.core.provider.SelfDestructiveThread$2 this$1
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.metadata.Metadata id3Metadata
com.danikula.videocache.HttpProxyCacheServer: java.lang.Thread waitConnectionThread
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.Option PREFERRED_COLOR_SPACE
cn.jzvd.Jzvd: cn.jzvd.JZTextureView textureView
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrtTextViewBoundsExpanded
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowTop
androidx.appcompat.app.WindowDecorActionBar$3: androidx.appcompat.app.WindowDecorActionBar this$0
com.bumptech.glide.load.engine.LoadPath: java.lang.String failureMessage
androidx.core.provider.SelfDestructiveThread$2$1: java.lang.Object val$result
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: long retryDelayMillis
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedChannelCountAdaptiveness
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.nio.ByteBuffer[] inputBuffers
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mParentVirtualDescendantId
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mPopup
androidx.viewpager.widget.ViewPager: float mLastMotionX
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder: com.bumptech.glide.load.resource.transcode.ResourceTranscoder bitmapBytesTranscoder
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter$VideoHolder: cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter this$1
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mExpectedEnd
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: boolean isOrdered
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.appcompat.view.menu.MenuItemImpl: int mShowAsAction
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int displayUnit
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CODEC_LEVEL
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_SIDE_RIGHT
androidx.appcompat.view.menu.MenuPopupHelper$1: androidx.appcompat.view.menu.MenuPopupHelper this$0
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist primaryMediaPlaylistSnapshot
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode next
androidx.fragment.app.FragmentTransitionImpl$1: int val$numSharedElements
com.google.android.exoplayer2.util.Util: java.util.regex.Pattern ESCAPED_CHARACTER_PATTERN
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int planeHeight
androidx.fragment.app.FragmentManagerViewModel: boolean mStateAutomaticallySaved
androidx.fragment.app.FragmentTransition$4: android.view.View val$nonExistentView
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding QUALITY
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: java.lang.String captionGroupId
com.google.android.exoplayer2.source.SampleQueue: long largestQueuedTimestampUs
androidx.appcompat.app.AlertController: android.widget.ListView mListView
androidx.lifecycle.ViewModel: java.util.Map mBagOfTags
androidx.core.widget.TextViewCompat$OreoCallback: android.view.ActionMode$Callback mCallback
androidx.appcompat.widget.FitWindowsFrameLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
com.google.android.exoplayer2.extractor.ogg.StreamReader: com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData setupData
androidx.appcompat.app.WindowDecorActionBar: boolean mDisplayHomeAsUpSet
com.bumptech.glide.load.engine.ActiveResources: java.util.concurrent.Executor monitorClearedResourcesExecutor
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int pixelCode8Bit
androidx.core.widget.AutoScrollHelper: android.view.animation.Interpolator mEdgeInterpolator
androidx.recyclerview.widget.LinearLayoutManager: boolean mStackFromEnd
com.google.android.exoplayer2.extractor.ogg.OpusReader: boolean headerRead
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_FRONT_LEFT
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: boolean isCreateCalled
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mAutoMeasure
androidx.cursoradapter.widget.CursorAdapter: boolean mAutoRequery
com.bumptech.glide.load.resource.bitmap.Downsampler: android.util.DisplayMetrics displayMetrics
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int captionMode
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.SpinnerAdapter mAdapter
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int rowCount
com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected
com.google.android.exoplayer2.text.dvb.DvbParser: android.graphics.Bitmap bitmap
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long floorBytePosition
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: int channels
androidx.core.R$styleable: int FontFamilyFont_android_ttcIndex
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager sAccessibilityPaneVisibilityManager
androidx.recyclerview.widget.RecyclerView: java.util.List mPendingAccessibilityImportanceChange
androidx.core.provider.FontsContractCompat$TypefaceResult: int mResult
androidx.appcompat.view.menu.BaseMenuPresenter: android.content.Context mContext
androidx.appcompat.R$drawable: int abc_btn_borderless_material
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: android.util.SparseArray objects
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean haveAudioVideoSampleQueues
com.google.android.exoplayer2.source.SampleDataQueue: com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode readAllocationNode
androidx.appcompat.app.AlertController: int mAlertDialogLayout
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: com.bumptech.glide.load.data.mediastore.FileService DEFAULT_SERVICE
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_VERBOSE
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.util.Map sortedSizes
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean hasGapTag
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: android.text.Layout$Alignment textAlign
androidx.appcompat.widget.AppCompatTextHelper: android.widget.TextView mView
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.text.SubtitleDecoder decoder
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: com.google.android.exoplayer2.source.CompositeMediaSource this$0
androidx.cursoradapter.widget.CursorAdapter: android.content.Context mContext
com.google.android.exoplayer2.FormatHolder: boolean includesDrmSession
com.google.android.exoplayer2.util.TimedValueQueue: int size
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long durationUs
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.lang.Runnable maybeFinishPrepareRunnable
com.google.android.exoplayer2.extractor.ts.H264Reader: java.lang.String formatId
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNeutralButtonListener
androidx.appcompat.widget.AbsActionBarView: int mContentHeight
androidx.appcompat.view.menu.MenuBuilder: boolean mShortcutsVisible
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy CENTER_INSIDE
com.google.android.exoplayer2.extractor.MpegAudioHeader: int frameSize
cn.jzvd.R$id: int volume_image_tip
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.view.View mHostView
androidx.core.view.NestedScrollingChildHelper: boolean mIsNestedScrollingEnabled
androidx.appcompat.app.AlertController$AlertParams: android.database.Cursor mCursor
com.google.android.exoplayer2.source.hls.WebvttExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput output
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long outputStreamOffsetUs
androidx.fragment.app.FragmentTransitionImpl$3: java.util.Map val$nameOverrides
androidx.viewpager.widget.ViewPager: int mOffscreenPageLimit
androidx.appcompat.R$styleable: int SearchView_iconifiedByDefault
androidx.appcompat.app.TwilightCalculator: long sunset
com.google.android.exoplayer2.DefaultRenderersFactory: int extensionRendererMode
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat this$0
com.google.android.exoplayer2.decoder.DecoderCounters: int skippedOutputBufferCount
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: boolean separateColorPlaneFlag
com.google.android.exoplayer2.extractor.amr.AmrExtractor: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.executor.GlideExecutor sourceExecutor
androidx.recyclerview.widget.RecyclerView: boolean FORCE_ABS_FOCUS_SEARCH_DIRECTION
com.google.android.exoplayer2.ui.SubtitlePainter: int cueLineAnchor
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Jobs jobs
androidx.core.graphics.drawable.WrappedDrawableApi21: java.lang.reflect.Method sIsProjectedDrawableMethod
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$VisibilityListener mVisibilityListener
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: java.lang.Object periodUid
com.google.android.exoplayer2.upstream.Loader$LoadTask: java.lang.Thread executorThread
com.google.android.exoplayer2.upstream.DataSchemeDataSource: byte[] data
androidx.exifinterface.media.ExifInterface$ExifTag: int secondaryFormat
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean allowPositionDiscontinuity
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTint
androidx.fragment.app.FragmentTransitionCompat21$4: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.viewpager.widget.ViewPager: float mLastMotionY
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long targetTimePosition
com.google.android.exoplayer2.extractor.ts.Ac3Reader: int sampleSize
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int stereoMode
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status FAILED
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal INSTANCE
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mMandatorySystemGestureInsets
androidx.core.R$id: int accessibility_custom_action_11
com.bumptech.glide.GlideContext: java.util.List defaultRequestListeners
com.google.android.exoplayer2.ui.R$styleable: int[] GradientColor
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshMenuContent
androidx.appcompat.app.ResourcesFlusher: java.lang.Class sThemedResourceCacheClazz
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: java.util.ArrayList mAnimators
com.google.android.exoplayer2.text.Cue: int windowColor
com.google.android.exoplayer2.source.SampleQueue: int upstreamSourceId
com.bumptech.glide.request.target.CustomTarget: int width
com.google.android.exoplayer2.trackselection.TrackSelector: com.google.android.exoplayer2.upstream.BandwidthMeter bandwidthMeter
androidx.appcompat.widget.ActionBarOverlayLayout$3: androidx.appcompat.widget.ActionBarOverlayLayout this$0
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextPaint mPaint
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.EngineKey loadKey
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_dark
androidx.appcompat.widget.Toolbar: boolean mEatingHover
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mEnterTransition
com.bumptech.glide.disklrucache.StrictLineReader: byte[] buf
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.MediaPeriod$Callback callback
androidx.exifinterface.media.ExifInterface$ExifTag: int number
com.bumptech.glide.load.model.MultiModelLoaderFactory: com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory factory
cn.jzvd.JzvdStd: android.widget.TextView mDialogVolumeTextView
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean isWideBand
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: android.content.Context context
androidx.core.graphics.Insets: int bottom
com.google.android.exoplayer2.ExoPlayerImplInternal: int nextPendingMessageIndex
com.google.android.exoplayer2.metadata.MetadataRenderer: boolean inputStreamEnded
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: android.content.Context context
androidx.appcompat.view.menu.ExpandedMenuView: int[] TINT_ATTRS
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean waitForLayout
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$RunReason runReason
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_AT_MOVEMENT_GRANULARITY
androidx.appcompat.widget.ActionMenuView: int mFormatItemsWidth
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: long lastTimestampRawPositionFrames
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$State mState
cn.jzvd.R$layout: int jz_dialog_brightness
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingRight
com.google.android.exoplayer2.upstream.RawResourceDataSource: boolean opened
com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader: long size
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_STATE_LIST
com.bumptech.glide.load.engine.SourceGenerator: java.lang.Object dataToCache
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.util.ParsableByteArray seiWrapper
com.google.android.exoplayer2.source.SampleQueue: boolean isLastSampleQueued
androidx.collection.LruCache: int createCount
androidx.appcompat.app.AlertController$AlertParams: androidx.appcompat.app.AlertController$AlertParams$OnPrepareListViewListener mOnPrepareListViewListener
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_SEQUENCE
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long nextFragmentDecodeTime
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: long[] timestampsUs
androidx.appcompat.R$styleable: int View_theme
com.google.android.exoplayer2.Timeline$Window: long presentationStartTimeMs
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mLayoutFromEnd
androidx.core.R$styleable: int GradientColor_android_startX
androidx.fragment.app.FragmentState: boolean mHidden
androidx.recyclerview.R$styleable: int RecyclerView_reverseLayout
androidx.appcompat.view.SupportMenuInflater: java.lang.Object mRealOwner
com.bumptech.glide.signature.EmptySignature: com.bumptech.glide.signature.EmptySignature EMPTY_KEY
com.google.android.exoplayer2.DefaultLoadControl: long minBufferAudioUs
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mY
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: int currentSampleInTrackRun
com.google.android.exoplayer2.metadata.emsg.EventMessage: com.google.android.exoplayer2.Format SCTE35_FORMAT
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int width
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int nalRefIdc
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Field sDialogKeyListenerField
androidx.appcompat.R$styleable: int Toolbar_contentInsetRight
androidx.appcompat.widget.TooltipCompatHandler: int mHoverSlop
androidx.appcompat.widget.ForwardingListener: boolean mForwarding
com.google.android.exoplayer2.util.StandaloneMediaClock: long baseElapsedMs
com.google.android.exoplayer2.extractor.ts.Ac4Reader: java.lang.String language
com.google.android.exoplayer2.upstream.DataSchemeDataSource: int endPosition
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.ViewGroup decorView
com.danikula.videocache.ProxyCache: boolean stopped
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentNonTouch
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: int horizontalPosition
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.Object mCustomActionObj
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mLayoutDirection
androidx.appcompat.app.AlertController$3: android.view.View val$bottom
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray atomData
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource rawResourceDataSource
com.danikula.videocache.IgnoreHostProxySelector: java.lang.String hostToIgnore
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener mOnTimedTextListener
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_CONTEXT
androidx.recyclerview.widget.GapWorker$Task: androidx.recyclerview.widget.RecyclerView view
androidx.appcompat.widget.ScrollingTabContainerView: android.view.animation.Interpolator sAlphaInterpolator
com.bumptech.glide.disklrucache.StrictLineReader: java.io.InputStream in
androidx.fragment.app.FragmentTransaction$Op: int mPopExitAnim
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mRecycle
com.bumptech.glide.load.model.ModelLoaderRegistry: com.bumptech.glide.load.model.MultiModelLoaderFactory multiModelLoaderFactory
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: boolean constantBitrateSeekingEnabled
androidx.appcompat.view.menu.MenuItemImpl: boolean mIsActionViewExpanded
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: boolean loadCanceled
com.bumptech.glide.load.model.ModelLoader$LoadData: com.bumptech.glide.load.Key sourceKey
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: java.util.List mFullSpanItems
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mShownAnchorView
androidx.appcompat.R$drawable: int abc_edit_text_material
com.google.android.exoplayer2.upstream.DataSpec: long absoluteStreamPosition
com.bumptech.glide.disklrucache.DiskLruCache$Entry: long sequenceNumber
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_LENGTH_TAG
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.Map HEVC_CODEC_STRING_TO_PROFILE_LEVEL
com.bumptech.glide.load.data.HttpUrlFetcher: boolean isCancelled
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_VIDEO_TRACK_LAGGING
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String mPathName
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.upstream.TransferListener mediaTransferListener
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: long durationUs
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat PREFER_RGB_565
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mPendingInvalidate
com.google.android.exoplayer2.text.cea.Cea608Decoder: java.util.List lastCues
com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap mExtraDataMap
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.ListMenuPresenter listMenuPresenter
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: long startTimeUs
com.bumptech.glide.load.model.GlideUrl: java.net.URL safeUrl
androidx.appcompat.widget.ListPopupWindow: java.lang.reflect.Method sSetClipToWindowEnabledMethod
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 this$1
androidx.loader.app.LoaderManagerImpl: boolean DEBUG
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: boolean dtsFlag
com.google.android.exoplayer2.PlayerMessage: int windowIndex
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionFromIndex
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.CharSequence mSubtitle
androidx.appcompat.view.menu.MenuAdapter: int mItemLayoutRes
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceWebSearchIntent
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long dataSize
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: long[] offsets
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: int uniqueProgramId
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage INITIALIZE
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.executor.GlideExecutor diskCacheExecutor
com.bumptech.glide.util.LruCache: long initialMaxSize
com.bumptech.glide.request.ThumbnailRequestCoordinator: java.lang.Object requestLock
cn.jzvd.R$id: int bottom_seek_progress
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: int height
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int height
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: android.widget.TextView tvSpeed
com.google.android.exoplayer2.ExoPlayerImpl$1: com.google.android.exoplayer2.ExoPlayerImpl this$0
androidx.viewpager.widget.ViewPager: float mFirstOffset
androidx.recyclerview.widget.RecyclerView: boolean IGNORE_DETACHED_FOCUSED_CHILD
androidx.collection.LongSparseArray: java.lang.Object DELETED
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaOutputBuffer: com.google.android.exoplayer2.text.cea.CeaDecoder this$0
com.google.android.exoplayer2.source.SampleQueue: long sampleOffsetUs
com.google.android.exoplayer2.audio.DefaultAudioSink: int preV21OutputBufferOffset
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: long durationUs
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: long chunkTimeUs
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemVisible
androidx.collection.LongSparseArray: long[] mKeys
org.slf4j.event.SubstituteLoggingEvent: org.slf4j.event.Level level
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: int clearBlocks
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] PEN_STYLE_BACKGROUND
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: boolean mIsStarted
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long durationUs
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
androidx.viewpager.widget.ViewPager: android.graphics.drawable.Drawable mMarginDrawable
cn.jzvd.Jzvd: android.media.AudioManager$OnAudioFocusChangeListener onAudioFocusChangeListener
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] cleanFiles
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: long identifier
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: android.graphics.PointF position
com.bumptech.glide.load.engine.ResourceRecycler: android.os.Handler handler
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_AUDIO_STREAM
com.bumptech.glide.load.engine.DecodeHelper: java.util.Map transformations
com.google.android.exoplayer2.AudioBecomingNoisyManager: com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver receiver
androidx.core.R$id: int accessibility_custom_action_4
androidx.core.view.LayoutInflaterCompat: boolean sCheckedField
com.google.android.exoplayer2.decoder.DecoderCounters: int inputBufferCount
com.bumptech.glide.gifdecoder.StandardGifDecoder: java.lang.Boolean isFirstFrameTransparent
com.bumptech.glide.util.Util$1: int[] $SwitchMap$android$graphics$Bitmap$Config
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String mCodecProfile
androidx.appcompat.widget.TooltipPopup: int[] mTmpAppPos
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long ceilingTimePosition
com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map DEFAULT_HEADERS
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener aspectRatioListener
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTint
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int mPosition
androidx.exifinterface.media.ExifInterface: byte[] PNG_SIGNATURE
com.google.android.exoplayer2.extractor.mp4.Track: int id
com.google.android.exoplayer2.PlaybackParameters: boolean skipSilence
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleAttr
cn.jzvd.R$drawable: int jz_click_play_selector
com.google.android.exoplayer2.source.hls.HlsMediaChunk: java.util.concurrent.atomic.AtomicInteger uidSource
com.google.android.exoplayer2.upstream.FileDataSource: long bytesRemaining
cn.jzvd.JzvdStd: android.widget.ImageView batteryLevel
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: com.google.android.exoplayer2.upstream.DataSpec dataSpec
androidx.lifecycle.Lifecycling: java.util.Map sClassToAdapters
com.bumptech.glide.load.engine.EngineKey: java.lang.Object model
com.google.android.exoplayer2.metadata.flac.PictureFrame: int height
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mPendingMenus
com.google.android.exoplayer2.decoder.DecoderCounters: int renderedOutputBufferCount
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri uri
androidx.recyclerview.widget.RecyclerView: boolean mLayoutSuppressed
com.bumptech.glide.load.engine.SourceGenerator: com.bumptech.glide.load.engine.DataCacheGenerator sourceCacheGenerator
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo: byte[] descriptorBytes
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_VAL_TYPE__TIMEDTEXT
androidx.appcompat.app.AppCompatDelegateImpl: int mInvalidatePanelMenuFeatures
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: int uniqueProgramId
com.google.android.exoplayer2.extractor.ts.AdtsReader: com.google.android.exoplayer2.extractor.TrackOutput id3Output
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.ref.WeakReference mView
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isFdSizeBelowHardwareLimit
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.ActivityFragmentLifecycle lifecycle
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float[] VALUES
com.google.android.exoplayer2.audio.AudioTimestampPoller: com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19 audioTimestamp
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: java.util.List events
com.google.android.exoplayer2.source.ProgressiveMediaSource: com.google.android.exoplayer2.upstream.DataSource$Factory dataSourceFactory
com.bumptech.glide.GlideContext: int logLevel
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int localeLanguageScore
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: int[] flags
com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry entry
androidx.appcompat.R$drawable: int abc_tab_indicator_material
tv.danmaku.ijk.media.player.AndroidMediaPlayer: android.media.MediaPlayer mInternalMediaPlayer
androidx.media.AudioAttributesImplBase: int mContentType
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CLOSED_CAPTIONS
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$Factory: int maxSegmentsPerLoad
androidx.core.widget.AutoScrollHelper: boolean mNeedsCancel
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean codecNeedsDiscardChannelsWorkaround
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.hls.HlsExtractorFactory extractorFactory
cn.jzvd.R$drawable: int jz_battery_level_100
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.FrameWaiter frameWaiter
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.source.hls.HlsExtractorFactory extractorFactory
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent mNestedScrollingParentTouch
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mLoader
com.bumptech.glide.R$id: int glide_custom_view_target_tag
org.slf4j.event.Level: int levelInt
com.google.android.exoplayer2.audio.BaseAudioProcessor: java.nio.ByteBuffer outputBuffer
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecReceivedBuffers
com.google.android.exoplayer2.source.hls.HlsChunkSource: java.util.List muxedCaptionFormats
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean notifiedReadingStarted
com.bumptech.glide.load.engine.EngineResource: boolean isRecycled
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CONTEXT_CLICK
androidx.appcompat.R$styleable: int AppCompatTextView_drawableLeftCompat
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.CharSequence mDescription
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.executor.GlideExecutor animationExecutor
androidx.core.content.res.ResourcesCompat$FontCallback$2: int val$reason
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransition$FragmentContainerTransition val$fragments
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuItemHoverListener mMenuItemHoverListener
com.google.android.exoplayer2.ui.SubtitlePainter: java.lang.CharSequence cueText
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampUpDuration
android.support.v4.media.MediaDescriptionCompat$Builder: android.graphics.Bitmap mIcon
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState: boolean[] trackEnabledStates
com.google.android.exoplayer2.extractor.ts.Ac4Reader: com.google.android.exoplayer2.util.ParsableBitArray headerScratchBits
androidx.appcompat.widget.TintInfo: android.content.res.ColorStateList mTintList
com.google.android.exoplayer2.extractor.ogg.VorbisReader: com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup vorbisSetup
androidx.appcompat.widget.SearchView$SearchAutoComplete: androidx.appcompat.widget.SearchView mSearchView
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mEnd
cn.jzvd.demo.ActivityListViewNormal$1: cn.jzvd.demo.ActivityListViewNormal this$0
com.google.android.exoplayer2.extractor.ogg.StreamReader: boolean formatSet
androidx.fragment.app.Fragment$AnimationInfo: int mNextTransitionStyle
androidx.appcompat.R$attr: int colorSwitchThumbNormal
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFinished
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object mProvider
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: com.google.android.exoplayer2.util.ParsableByteArray sampleData
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.Class mMenuBuilderClass
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: java.lang.String fontFamily
com.google.android.exoplayer2.Format: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.ui.TrackSelectionView: boolean allowAdaptiveSelections
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.MediaDescriptionCompat mDescription
androidx.appcompat.widget.Toolbar: android.content.Context mPopupContext
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: java.lang.String name
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnItemTouchListener mInterceptingOnItemTouchListener
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder: com.bumptech.glide.load.resource.transcode.ResourceTranscoder gifDrawableBytesTranscoder
com.google.android.exoplayer2.decoder.DecoderCounters: int skippedInputBufferCount
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: java.lang.String captionGroupId
androidx.fragment.app.FragmentManagerState: androidx.fragment.app.BackStackState[] mBackStack
com.bumptech.glide.load.data.HttpUrlFetcher: java.net.HttpURLConnection urlConnection
com.google.android.exoplayer2.text.cea.Cea608Decoder: byte repeatableControlCc2
com.google.android.exoplayer2.audio.DefaultAudioSink: java.util.ArrayDeque playbackParametersCheckpoints
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8L
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: long skippedFrames
com.google.android.exoplayer2.extractor.ts.Ac4Reader: boolean lastByteWasAC
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: java.util.List cueStyles
androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanApplyOverrideConfiguration
com.google.android.exoplayer2.extractor.ts.H262Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer userData
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeStepGranularityInPx
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumHeight
com.google.android.exoplayer2.drm.FrameworkMediaCrypto: java.util.UUID uuid
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_URI
androidx.recyclerview.widget.RecyclerView: int mMinFlingVelocity
androidx.appcompat.R$layout: int abc_tooltip
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.SeekParameters seekParameters
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: long codecHotswapDeadlineMs
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String encryptionIV
androidx.appcompat.widget.MenuPopupWindow: java.lang.reflect.Method sSetTouchModalMethod
com.google.android.exoplayer2.upstream.StatsDataSource: java.util.Map lastResponseHeaders
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource assetDataSource
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_URL
cn.jzvd.Jzvd: cn.jzvd.Jzvd CURRENT_JZVD
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder: com.bumptech.glide.load.resource.bitmap.HardwareConfigState hardwareConfigState
android.support.v4.os.ResultReceiver$MyRunnable: android.support.v4.os.ResultReceiver this$0
androidx.appcompat.R$styleable: int AlertDialog_singleChoiceItemLayout
com.bumptech.glide.util.MultiClassKey: java.lang.Class second
androidx.appcompat.R$styleable: int[] MenuItem
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mBoundFlags
androidx.appcompat.R$attr: int checkboxStyle
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int tsMode
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float minMasteringLuminance
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.NestedScrollingParentHelper mParentHelper
org.slf4j.helpers.NOPLogger: org.slf4j.helpers.NOPLogger NOP_LOGGER
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean deviceNeedsSetOutputSurfaceWorkaround
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_BUFFERING_START
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: int typeIndicator
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean forceLowestBitrate
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.core.R$id: int tag_accessibility_actions
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder thumbnailBuilder
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int[] mFrameTimes
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int codecReconfigurationState
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: long nalUnitTimeUs
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long atomPosition
androidx.appcompat.widget.RtlSpacingHelper: int mExplicitLeft
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher eventDispatcher
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: long minTimeBetweenBufferReevaluationMs
com.bumptech.glide.GlideBuilder: boolean isActiveResourceRetentionAllowed
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestTask: java.lang.Object request
com.google.android.exoplayer2.source.SampleQueue: int absoluteFirstIndex
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode: com.bumptech.glide.manager.SupportRequestManagerFragment this$0
androidx.appcompat.R$drawable: int abc_textfield_activated_mtrl_alpha
androidx.viewpager.widget.ViewPager: java.lang.ClassLoader mRestoredClassLoader
com.google.android.exoplayer2.extractor.ts.DtsReader: int sampleSize
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean foregroundMode
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId: int id
com.bumptech.glide.load.engine.LockedResource: androidx.core.util.Pools$Pool POOL
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets mSystemWindowInsets
androidx.fragment.app.FragmentManagerImpl: boolean DEBUG
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long[] tableOfContents
androidx.appcompat.widget.Toolbar: android.widget.ImageView mLogoView
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: boolean hasProgramDateTime
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: android.media.AudioTimestamp audioTimestamp
androidx.appcompat.widget.ActionBarContainer: boolean mIsTransitioning
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format[] formats
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mAnimating
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: boolean hasOutputNoise
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinWidthField
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int tabOffset
androidx.appcompat.R$styleable: int SearchView_defaultQueryHint
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ScrollingTabContainerView mTabScrollView
androidx.cursoradapter.widget.CursorAdapter: android.database.DataSetObserver mDataSetObserver
com.google.android.exoplayer2.AudioFocusManager: android.media.AudioFocusRequest audioFocusRequest
androidx.appcompat.app.AlertController$AlertParams: android.view.View mCustomTitleView
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long segmentContentPosition
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long approxBytesPerFrame
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_TIMED_TEXT_ERROR
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource fileDataSource
com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition: int timeOutSecs
com.bumptech.glide.load.Option: com.bumptech.glide.load.Option$CacheKeyUpdater cacheKeyUpdater
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.Option OPTION
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: long mediaTimeUs
com.google.android.exoplayer2.extractor.mp4.TrackFragment: int[] sampleSizeTable
com.bumptech.glide.load.engine.DecodeJob$1: int[] $SwitchMap$com$bumptech$glide$load$engine$DecodeJob$Stage
com.google.android.exoplayer2.text.dvb.DvbParser: android.graphics.Paint defaultPaint
com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader: com.google.android.exoplayer2.extractor.TrackOutput output
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_444
com.google.android.exoplayer2.PlaybackParameters: com.google.android.exoplayer2.PlaybackParameters DEFAULT
androidx.appcompat.widget.ActionBarOverlayLayout: android.animation.AnimatorListenerAdapter mTopAnimatorListener
androidx.appcompat.app.AlertController$AlertParams: boolean[] mCheckedItems
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: int responseCode
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int mExpandedIndex
androidx.collection.SparseArrayCompat: java.lang.Object DELETED
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LOW_FREQUENCY
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry: java.lang.Class fromClass
androidx.core.R$id: int accessibility_custom_action_1
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues: int inputSize
androidx.lifecycle.LifecycleRegistry: java.lang.ref.WeakReference mLifecycleOwner
androidx.appcompat.widget.Toolbar: android.widget.TextView mTitleTextView
androidx.appcompat.R$styleable: int AppCompatTextView_drawableRightCompat
androidx.appcompat.R$layout: int abc_list_menu_item_checkbox
androidx.core.view.ViewCompat$1: androidx.core.view.OnApplyWindowInsetsListener val$listener
com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.nio.ByteBuffer[] outputBuffers
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean isMasterTimestampSource
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_TIMEDTEXT_STREAM
android.support.v4.os.ResultReceiver$MyRunnable: int mResultCode
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.Rect mHotspotBounds
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern sGpsTimestampPattern
androidx.exifinterface.media.ExifInterface: int mThumbnailOffset
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mOnItemTouchListeners
androidx.appcompat.app.AlertController: android.widget.TextView mMessageView
androidx.recyclerview.widget.LinearLayoutManager: int[] mReusableIntPair
androidx.appcompat.widget.ViewStubCompat: int mInflatedId
androidx.lifecycle.LiveData: androidx.arch.core.internal.SafeIterableMap mObservers
com.google.android.exoplayer2.text.SubtitleOutputBuffer: com.google.android.exoplayer2.text.Subtitle subtitle
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: int puts
androidx.appcompat.R$styleable: int ActionBar_displayOptions
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: long[] timestamps
androidx.appcompat.app.TwilightCalculator: long sunrise
androidx.appcompat.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.FragmentManager mFragmentManager
androidx.appcompat.R$attr: int actionOverflowMenuStyle
androidx.appcompat.R$styleable: int[] View
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
com.google.android.exoplayer2.source.hls.HlsChunkSource: java.io.IOException fatalError
cn.jzvd.demo.AdapterListView: android.content.Context context
cn.jzvd.JzvdStd: android.widget.LinearLayout batteryTimeLayout
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.extractor.mkv.EbmlReader reader
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean sampleEncodingHandled
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: java.lang.String key
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue: com.google.android.exoplayer2.drm.DrmInitData drmInitData
com.bumptech.glide.disklrucache.DiskLruCache$Value: java.lang.String key
com.google.android.exoplayer2.DefaultMediaClock: com.google.android.exoplayer2.Renderer rendererClockSource
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater mMenuInflater
com.bumptech.glide.load.engine.DecodeJob: boolean isCallbackNotified
com.google.android.exoplayer2.audio.Sonic: int maxPeriod
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: byte[] buffer
com.google.android.exoplayer2.extractor.wav.WavHeader: int blockSize
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider diskCacheProvider
cn.jzvd.Jzvd: cn.jzvd.JZMediaInterface mediaInterface
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy: com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy THROW
com.danikula.videocache.IgnoreHostProxySelector: java.net.ProxySelector defaultProxySelector
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLastScrollDelta
androidx.core.R$styleable: int FontFamily_fontProviderFetchStrategy
com.google.android.exoplayer2.source.SinglePeriodTimeline: long windowStartTimeMs
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNegativeText
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory chunkSourceFactory
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.ViewTreeObserver mTreeObserver
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: androidx.appcompat.graphics.drawable.DrawableContainer mOwner
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: int[] flags
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mPositiveButtonListener
androidx.appcompat.widget.SuggestionsAdapter: int mText2UrlCol
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStack
com.google.android.exoplayer2.upstream.ContentDataSource: android.net.Uri uri
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_RESOLUTION_UI
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] PEN_STYLE_EDGE_TYPE
com.google.android.exoplayer2.util.FlacStreamMetadata: int maxFrameSize
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.widget.MenuPopupWindow mPopup
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: java.lang.String[] children
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: android.util.SparseArray pps
com.google.android.exoplayer2.extractor.ts.AdtsReader: com.google.android.exoplayer2.util.ParsableBitArray adtsScratch
com.bumptech.glide.request.BaseRequestOptions: boolean isCacheable
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: long mChannelLayout
androidx.appcompat.R$styleable: int MenuItem_android_id
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray nalPrefix
com.bumptech.glide.load.Option: java.lang.Object defaultValue
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: boolean isRequired
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean waitingForKeys
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController val$dialog
com.google.android.exoplayer2.MediaPeriodInfo: long durationUs
com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader: com.google.android.exoplayer2.util.ParsableBitArray patScratch
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: int disabledTextTrackSelectionFlags
com.danikula.videocache.Config: java.io.File cacheRoot
com.google.android.exoplayer2.source.hls.playlist.FilteringHlsPlaylistParserFactory: java.util.List streamKeys
com.google.android.exoplayer2.extractor.mp4.TrackFragment: boolean[] sampleIsSyncFrameTable
com.bumptech.glide.manager.TargetTracker: java.util.Set targets
com.google.android.exoplayer2.extractor.ogg.StreamReader: com.google.android.exoplayer2.extractor.ogg.OggPacket oggPacket
androidx.core.R$id: int accessibility_custom_action_16
androidx.appcompat.R$styleable: int AppCompatTextView_drawableBottomCompat
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementReturnTransition
com.google.android.exoplayer2.decoder.CryptoInfo: byte[] iv
com.google.android.exoplayer2.metadata.id3.ChapterFrame: com.google.android.exoplayer2.metadata.id3.Id3Frame[] subFrames
com.google.android.exoplayer2.Timeline: com.google.android.exoplayer2.Timeline EMPTY
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: android.util.SparseArray initialBitrateEstimates
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.bumptech.glide.load.resource.transcode.TranscoderRegistry: java.util.List transcoders
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mStrokePaint
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: long endPosition
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownAlwaysVisible
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$Factory playlistTrackerFactory
com.google.android.exoplayer2.video.DummySurface: boolean threadReleased
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: int width
androidx.appcompat.view.menu.MenuItemImpl: boolean mNeedToApplyIconTint
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String mLanguage
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace SRGB
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.Id3Peeker id3Peeker
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.Resource resource
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver staticInstance
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.Priority priority
androidx.appcompat.widget.LinearLayoutCompat: boolean mBaselineAligned
androidx.exifinterface.media.ExifInterface: byte[] mThumbnailBytes
com.google.android.exoplayer2.source.ClippingMediaPeriod: long startUs
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.decoder.DecoderCounters videoDecoderCounters
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryOwner mOwner
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mIsCheckedColumn
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: java.util.ArrayDeque containerAtoms
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long ceilingBytePosition
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence mTitle
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mThemedContext
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseWidth
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStopTime
com.google.android.exoplayer2.source.TrackGroupArray: android.os.Parcelable$Creator CREATOR
androidx.appcompat.resources.R$drawable: int abc_vector_test
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: int defaultColorRgba
androidx.appcompat.R$styleable: int Toolbar_titleMarginBottom
androidx.fragment.app.FragmentTransitionImpl$2: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int mGapDir
androidx.collection.LruCache: int putCount
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.lang.Runnable onContinueLoadingRequestedRunnable
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowEnterTransitionOverlap
androidx.appcompat.app.AppCompatDelegateImpl: int mLocalNightMode
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.app.WindowDecorActionBar this$0
cn.jzvd.JzvdStd$DismissControlViewTimerTask: cn.jzvd.JzvdStd this$0
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.widget.ActionBarContextView mContextView
androidx.exifinterface.media.ExifInterface$ExifAttribute: byte[] bytes
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: androidx.collection.SimpleArrayMap mMenus
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View shownPanelView
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: int length
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mOldMaxState
com.google.android.exoplayer2.metadata.id3.GeobFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: int mPopupTheme
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: boolean spliceEventCancelIndicator
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.TrackOutput output
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData previousSliceHeader
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: java.lang.String[] classes
com.bumptech.glide.load.engine.DecodePath: java.lang.String failureMessage
androidx.appcompat.R$id: int search_src_text
com.bumptech.glide.GlideContext: com.bumptech.glide.request.target.ImageViewTargetFactory imageViewTargetFactory
androidx.appcompat.R$styleable: int Spinner_android_dropDownWidth
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: boolean seenFirstDts
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_FD
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean allowVideoNonSeamlessAdaptiveness
androidx.exifinterface.media.ExifInterface: boolean mIsExifDataOnly
androidx.arch.core.executor.DefaultTaskExecutor$1: java.util.concurrent.atomic.AtomicInteger mThreadId
androidx.core.R$styleable: int GradientColor_android_gradientRadius
androidx.appcompat.widget.TintResources: java.lang.ref.WeakReference mContextRef
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix mLocalMatrix
com.google.android.exoplayer2.audio.SonicAudioProcessor: int pendingOutputSampleRate
androidx.appcompat.R$styleable: int Toolbar_title
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.OrientationHelper mSecondaryOrientation
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.regex.Pattern OFFSET_TIME
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: java.util.List mFullSpanItems
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: int sampleCount
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: java.lang.String subtitleGroupId
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: com.google.android.exoplayer2.util.ParsableByteArray chunkOffsets
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.ExoMediaDrm$KeyRequest currentKeyRequest
androidx.core.provider.SelfDestructiveThread: int mPriority
com.google.android.exoplayer2.extractor.ts.Ac3Reader: com.google.android.exoplayer2.util.ParsableBitArray headerScratchBits
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean prepared
com.google.android.exoplayer2.video.HevcConfig: java.util.List initializationData
com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: long componentSplicePlaybackPositionUs
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableTopTint
androidx.core.provider.FontRequest: java.lang.String mIdentifier
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.FormatHolder formatHolder
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: int nalLength
com.google.android.exoplayer2.extractor.ts.H262Reader: long pesTimeUs
cn.jzvd.demo.ActivityListViewNormal: android.hardware.SensorManager sensorManager
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int bufferSize
com.google.android.exoplayer2.text.ttml.TtmlStyle: int underline
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean passthrough
com.google.android.exoplayer2.ui.R$string: int exo_track_role_commentary
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int pos
com.bumptech.glide.load.engine.cache.SafeKeyGenerator: androidx.core.util.Pools$Pool digestPool
tv.danmaku.ijk.media.player.pragma.DebugLog: boolean ENABLE_WARN
com.danikula.videocache.Pinger: java.lang.String host
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_SAMPLE_RATE
androidx.collection.SimpleArrayMap: java.lang.Object[] mBaseCache
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mRetreatKey
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int justification
androidx.appcompat.R$styleable: int TextAppearance_android_typeface
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState mDrawableContainerState
androidx.appcompat.R$style: int Theme_AppCompat_CompactMenu
com.google.android.exoplayer2.video.ColorInfo: byte[] hdrStaticInfo
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean playWhenReady
com.google.android.exoplayer2.AudioBecomingNoisyManager: boolean receiverRegistered
com.google.android.exoplayer2.text.ttml.TtmlNode: com.google.android.exoplayer2.text.ttml.TtmlStyle style
com.google.android.exoplayer2.text.ssa.SsaStyle$Format: int alignmentIndex
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.Toolbar mToolbar
com.bumptech.glide.manager.DefaultConnectivityMonitor: android.content.BroadcastReceiver connectivityReceiver
androidx.appcompat.R$styleable: int CompoundButton_buttonTint
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: int mFillRule
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long seekEntryPosition
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: long startOfPlaylistInPeriodUs
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int width
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
com.bumptech.glide.disklrucache.StrictLineReader$1: com.bumptech.glide.disklrucache.StrictLineReader this$0
androidx.core.graphics.TypefaceCompatApi21Impl: boolean sHasInitBeenCalled
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertController$AlertParams P
androidx.collection.SimpleArrayMap: int mBaseCacheSize
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int maxVideoWidth
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mEpicenterBounds
androidx.core.provider.SelfDestructiveThread$2: java.util.concurrent.Callable val$callable
com.bumptech.glide.load.model.GlideUrl: int hashCode
androidx.appcompat.R$string: int abc_action_bar_up_description
androidx.fragment.app.Fragment: boolean mRetainInstance
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.Format videoFormat
com.google.android.exoplayer2.util.ConditionVariable: boolean isOpen
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter singletonInstance
com.google.android.exoplayer2.extractor.ogg.OggPacket: boolean populated
com.bumptech.glide.load.engine.ResourceCacheKey: int width
com.google.android.exoplayer2.source.TrackGroupArray: int hashCode
com.google.android.exoplayer2.metadata.MetadataRenderer: android.os.Handler outputHandler
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean isEncodeComplete
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.DecoderInputBuffer[] availableInputBuffers
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.String mMediaId
androidx.exifinterface.media.ExifInterface: java.util.Set mAttributesOffsets
com.google.android.exoplayer2.extractor.ts.LatmReader: com.google.android.exoplayer2.Format format
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: java.lang.String[] ALL_COLUMNS
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean shouldContinueLoading
androidx.appcompat.widget.SearchView: java.lang.CharSequence mQueryHint
androidx.appcompat.R$drawable: int abc_seekbar_track_material
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController: java.lang.CharSequence mTitle
com.google.android.exoplayer2.extractor.ts.H262Reader: com.google.android.exoplayer2.util.ParsableByteArray userDataParsable
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityY
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int[] states
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean seenExpectedPlaylistError
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle style
com.bumptech.glide.load.engine.GlideException: java.lang.Class dataClass
tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector: tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector sInstance
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mEventToHandlers
com.google.android.exoplayer2.AudioFocusManager: com.google.android.exoplayer2.AudioFocusManager$PlayerControl playerControl
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean hasOutputSeekMap
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: com.google.android.exoplayer2.extractor.wav.WavHeader header
androidx.core.widget.NestedScrollView: int[] SCROLLVIEW_STYLEABLE
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long minTimeBetweenBufferReevaluationMs
com.google.android.exoplayer2.drm.DrmInitData: java.lang.String schemeType
androidx.appcompat.widget.SearchView: android.graphics.Rect mSearchSrcTextViewBounds
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: int encryptedBlocks
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: int outputSampleRate
cn.jzvd.R$id: int video_current_time
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$sharedElementsIn
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean rowLock
com.google.android.exoplayer2.ui.R$string: int exo_item_list
androidx.appcompat.app.AlertController$2: androidx.appcompat.app.AlertController this$0
com.bumptech.glide.load.engine.Engine$LoadStatus: com.bumptech.glide.load.engine.Engine this$0
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: int firstSampleToOutputIndex
com.google.android.exoplayer2.MediaPeriodInfo: boolean isLastInTimelinePeriod
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1: java.nio.ByteBuffer val$data
androidx.appcompat.widget.SearchView: java.lang.Runnable mUpdateDrawableStateRunnable
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.source.SampleStream[] sampleStreams
com.bumptech.glide.module.ManifestParser: android.content.Context context
cn.jzvd.JzvdStd: android.widget.ImageView mDialogVolumeImageView
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord lastInTransaction
com.bumptech.glide.gifdecoder.GifFrame: boolean interlace
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader metadataReader
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: int frameSize
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpAddedFragments
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean hasOutputFormat
com.google.android.exoplayer2.audio.DefaultAudioSink: android.media.AudioTrack keepSessionIdAudioTrack
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener: java.lang.ref.WeakReference sizeDeterminerRef
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTooltipText
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: android.graphics.drawable.Animatable mA
androidx.appcompat.widget.SuggestionsAdapter: int mQueryRefinement
com.google.android.exoplayer2.source.SampleDataQueue: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.bumptech.glide.gifdecoder.GifHeader: boolean gctFlag
androidx.appcompat.widget.ScrollingTabContainerView: int mStackedTabMaxWidth
androidx.appcompat.R$id: int textSpacerNoButtons
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: long byterangeOffset
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds
com.google.android.exoplayer2.source.SampleQueue: int capacity
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: long[] eventTimesUs
com.google.android.exoplayer2.util.EventDispatcher: java.util.concurrent.CopyOnWriteArrayList listeners
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry: com.bumptech.glide.load.model.ModelLoaderFactory factory
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.atomic.AtomicBoolean val$running
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picParameterSetId
cn.jzvd.JzvdStd: android.widget.TextView videoCurrentTime
androidx.recyclerview.R$styleable: int[] GradientColorItem
com.google.android.exoplayer2.extractor.ts.H262Reader: boolean[] prefixFlags
com.google.android.exoplayer2.extractor.ts.H265Reader: java.lang.String formatId
com.google.android.exoplayer2.extractor.ogg.OpusReader: byte[] OPUS_SIGNATURE
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.os.PowerManager mPowerManager
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$OnMenuItemClickListener mOnMenuItemClickListener
com.bumptech.glide.request.target.ViewTarget: boolean isClearedByUs
tv.danmaku.ijk.media.player.MediaPlayerProxy$7: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: java.lang.String url
androidx.lifecycle.LiveData$1: androidx.lifecycle.LiveData this$0
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean inputStreamEnded
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int trackType
com.bumptech.glide.load.engine.EngineJob: java.util.concurrent.atomic.AtomicInteger pendingCallbacks
android.support.v4.media.MediaMetadataCompat: java.lang.String[] PREFERRED_URI_ORDER
com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion: int verticalAddress
com.google.android.exoplayer2.metadata.id3.ChapterFrame: int startTimeMs
com.google.android.exoplayer2.source.ads.AdPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup[] adGroups
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: android.content.Context context
com.google.android.exoplayer2.MediaPeriodInfo: long endPositionUs
com.bumptech.glide.load.engine.DecodeHelper: java.lang.Object model
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean readingSample
androidx.appcompat.R$layout: int abc_search_view
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.content.res.Resources mSourceRes
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: int frameSize
androidx.collection.LongSparseArray: boolean mGarbage
androidx.appcompat.R$styleable: int Toolbar_android_gravity
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidth
com.google.android.exoplayer2.source.chunk.MediaChunk: long chunkIndex
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: int pcrPid
com.google.android.exoplayer2.audio.DefaultAudioSink: java.nio.ByteBuffer outputBuffer
androidx.appcompat.view.menu.ActionMenuItem: int mOrdering
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int horizontalAnchor
androidx.appcompat.widget.TooltipCompatHandler: java.lang.CharSequence mTooltipText
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchorSet
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: com.bumptech.glide.load.Option TIMEOUT
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMinor
com.bumptech.glide.gifdecoder.StandardGifDecoder: int status
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: int reason
com.google.android.exoplayer2.decoder.OutputBuffer: int skippedOutputBufferCount
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: byte[] START_CODE
androidx.core.R$id: int accessibility_custom_action_8
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VIDEO
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.widget.TextView mTextView
androidx.lifecycle.LiveData: java.lang.Object mPendingData
com.bumptech.glide.util.MultiClassKey: java.lang.Class first
androidx.appcompat.R$styleable: int ActionBar_title
com.google.android.exoplayer2.ui.R$styleable: int[] PlayerView
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_UNKNOWN
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_TBR_NUM
cn.jzvd.R$drawable: int jz_click_replay_selector
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnSearchClickListener
androidx.appcompat.resources.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.view.ActionMode val$mode
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.lang.Object mLock
com.google.android.exoplayer2.audio.AudioCapabilities: int maxChannelCount
androidx.appcompat.R$styleable: int[] GradientColor
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha
cn.jzvd.Jzvd: java.lang.Class mediaInterfaceClass
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.RequestManagerFragment rootRequestManagerFragment
com.google.android.exoplayer2.source.BaseMediaSource: android.os.Looper looper
androidx.appcompat.widget.ForwardingListener: int mTapTimeout
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
org.slf4j.helpers.SubstituteLoggerFactory: boolean postInitialization
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int currentUnappliedRotationDegrees
com.google.android.exoplayer2.extractor.flv.FlvExtractor: int bytesToNextTagHeader
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher eventDispatcher
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: java.util.Map imageMap
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.Animator$AnimatorListener mAnimatorListener
cn.jzvd.R$id: int back_tiny
androidx.activity.OnBackPressedDispatcher: java.lang.Runnable mFallbackOnBackPressed
androidx.appcompat.widget.ActivityChooserView$InnerLayout: int[] TINT_ATTRS
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23: com.google.android.exoplayer2.video.MediaCodecVideoRenderer this$0
com.google.android.exoplayer2.extractor.ts.TsExtractor: java.util.List timestampAdjusters
androidx.core.widget.TextViewCompat$OreoCallback: boolean mCanUseMenuBuilderReferences
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode$Callback mWrappedCallback
com.google.android.exoplayer2.text.Cue: int textSizeType
androidx.appcompat.app.AlertController: int mMultiChoiceItemLayout
com.bumptech.glide.load.resource.bitmap.FitCenter: byte[] ID_BYTES
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable mHeaderIcon
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: android.graphics.Bitmap resource
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: com.google.android.exoplayer2.upstream.DataSource$Factory manifestDataSourceFactory
androidx.appcompat.widget.SearchView: boolean mExpandedInActionView
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.widget.MenuPopupWindow window
com.danikula.videocache.file.FileCache: java.io.RandomAccessFile dataFile
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_KEYFRAME
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int backgroundColor
com.google.android.exoplayer2.drm.DrmInitData: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri playlistUrl
com.google.android.exoplayer2.extractor.ts.Id3Reader: int sampleBytesRead
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect1
com.google.android.exoplayer2.metadata.icy.IcyHeaders: java.lang.String genre
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int spanCount
androidx.recyclerview.widget.RecyclerView$LayoutParams: android.graphics.Rect mDecorInsets
com.google.android.exoplayer2.Timeline$Window: boolean isLive
com.danikula.videocache.HttpProxyCacheServer$Builder: java.io.File cacheRoot
androidx.appcompat.widget.ActionMenuView: int mMinCellSize
cn.jzvd.demo.ActivityListViewRecyclerView: cn.jzvd.demo.AdapterRecyclerView adapterVideoList
androidx.appcompat.R$styleable: int MenuGroup_android_enabled
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap$Config DEFAULT_CONFIG
androidx.appcompat.view.menu.MenuAdapter: boolean mOverflowOnly
androidx.appcompat.view.menu.ListMenuItemView: android.graphics.drawable.Drawable mSubMenuArrow
com.google.android.exoplayer2.extractor.MpegAudioHeader: java.lang.String mimeType
com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator: long toIndex
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnCancelListener mOnCancelListener
androidx.recyclerview.R$styleable: int[] FontFamilyFont
androidx.exifinterface.media.ExifInterface$ExifTag: int primaryFormat
androidx.appcompat.widget.SearchView$3: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableItem
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.util.ArrayList decodeOnlyPresentationTimestamps
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxAscent
com.google.android.exoplayer2.decoder.SimpleDecoder: java.util.ArrayDeque queuedInputBuffers
com.bumptech.glide.load.model.MultiModelLoader: androidx.core.util.Pools$Pool exceptionListPool
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: com.google.android.exoplayer2.audio.AudioTimestampPoller audioTimestampPoller
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: com.google.android.exoplayer2.mediacodec.MediaCodecInfo codecInfo
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: com.google.android.exoplayer2.source.TrackGroupArray unmappedTrackGroups
com.google.android.exoplayer2.source.ProgressiveMediaSource: com.google.android.exoplayer2.upstream.TransferListener transferListener
com.google.android.exoplayer2.text.webvtt.CssParser: java.util.regex.Pattern VOICE_NAME_PATTERN
com.google.android.exoplayer2.extractor.ts.PsExtractor: boolean foundAudioTrack
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_BITRATE
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo: int windowIndex
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: boolean programSpliceFlag
androidx.interpolator.view.animation.LookupTableInterpolator: float[] mValues
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_BACK_RIGHT
com.google.android.exoplayer2.extractor.flac.FlacExtractor: int currentFrameBytesWritten
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray scratch
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_CODEC_PROFILE_LEVEL_UI
android.support.v4.media.MediaMetadataCompat: android.os.Bundle mBundle
com.google.android.exoplayer2.audio.AudioProcessor: java.nio.ByteBuffer EMPTY_BUFFER
com.google.android.exoplayer2.audio.DefaultAudioSink: long startMediaTimeUs
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23: android.os.Handler handler
cn.jzvd.R$id: int retry_layout
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: long spliceEventId
com.google.android.exoplayer2.util.TimedValueQueue: java.lang.Object[] values
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] ROW_INDICES
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.FullLifecycleObserver mFullLifecycleObserver
com.bumptech.glide.request.target.ViewTarget: int tagId
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: byte[] PIFF_SAMPLE_ENCRYPTION_BOX_EXTENDED_TYPE
com.bumptech.glide.RequestBuilder: com.bumptech.glide.Glide glide
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.SampleQueue[] sampleQueues
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_LOGICAL_FILE_SIZE
androidx.core.widget.AutoScrollHelper: float[] mMaximumVelocity
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] SPECIAL_PT_DE_CHARACTER_SET
com.bumptech.glide.load.engine.ResourceCacheKey: com.bumptech.glide.util.LruCache RESOURCE_CLASS_BYTES
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: android.net.Uri uri
cn.jzvd.demo.ActivityListViewRecyclerView$1: cn.jzvd.demo.ActivityListViewRecyclerView this$0
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.source.hls.HlsExtractorFactory extractorFactory
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mMutated
cn.jzvd.demo.ActivityApiRotationVideoSize: cn.jzvd.JzvdStd myJzvdStd
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: com.bumptech.glide.load.Key key
androidx.fragment.app.FragmentState: java.lang.String mWho
android.support.v4.media.session.MediaSessionCompat$Token: java.lang.Object mInner
com.google.android.exoplayer2.source.ads.AdPlaybackState: int adGroupCount
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewFieldByNameCache
com.google.android.exoplayer2.audio.Sonic: short[] outputBuffer
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.lifecycle.FullLifecycleObserverAdapter: androidx.lifecycle.LifecycleEventObserver mLifecycleEventObserver
com.bumptech.glide.RequestManager: com.bumptech.glide.request.RequestOptions requestOptions
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.HlsExtractorFactory extractorFactory
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mCreateFromFamiliesWithDefault
com.bumptech.glide.load.engine.EngineKey: int height
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track: int sampleIndex
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean allowAudioMixedChannelCountAdaptiveness
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.util.ParsableByteArray headerBuffer
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Object mHost
com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: int type
androidx.core.R$styleable: int ColorStateListItem_android_alpha
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mLayoutFromEnd
com.google.android.exoplayer2.audio.AuxEffectInfo: float sendLevel
com.google.android.exoplayer2.BaseRenderer: boolean streamIsFinal
com.google.android.exoplayer2.extractor.ogg.FlacReader: com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker flacOggSeeker
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory playlistParserFactory
com.bumptech.glide.request.BaseRequestOptions: float sizeMultiplier
com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader: int length
androidx.fragment.app.FragmentTransaction$Op: androidx.lifecycle.Lifecycle$State mCurrentMaxState
androidx.media.AudioAttributesCompat: int[] SDK_USAGES
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRelative
android.support.v4.media.MediaDescriptionCompat: java.lang.String mMediaId
com.google.android.exoplayer2.metadata.flac.PictureFrame: int width
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastBaseInnerInsetsRect
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: com.google.android.exoplayer2.upstream.DataSource$Factory dataSourceFactory
androidx.appcompat.widget.ActionMenuPresenter: android.util.SparseBooleanArray mActionButtonGroups
androidx.fragment.app.FragmentTransition$2: java.lang.Object val$enterTransition
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey: boolean tunneling
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy FIT_CENTER
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_QUAD
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_VAL_TYPE__AUDIO
com.bumptech.glide.request.ErrorRequestCoordinator: com.bumptech.glide.request.Request error
com.google.android.exoplayer2.upstream.Loader$ReleaseTask: com.google.android.exoplayer2.upstream.Loader$ReleaseCallback callback
com.bumptech.glide.request.target.ViewTarget: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer sizeDeterminer
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader sampleReader
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.appcompat.R$styleable: int AppCompatImageView_srcCompat
com.google.android.exoplayer2.Timeline$Period: long durationUs
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.util.ParsableByteArray tsPacketBuffer
com.google.android.exoplayer2.extractor.mp4.TrackFragment: int sampleCount
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: androidx.appcompat.widget.SearchView$SearchAutoComplete this$0
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int decoderPrivate
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int foregroundColor
com.bumptech.glide.load.engine.DataCacheGenerator: com.bumptech.glide.load.model.ModelLoader$LoadData loadData
androidx.activity.ComponentActivity$NonConfigurationInstances: androidx.lifecycle.ViewModelStore viewModelStore
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean readingSample
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mPosition
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mInternalPageChangeListener
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_VALUES_HOLDER
androidx.core.widget.AutoScrollHelper: int mEdgeType
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int primaryTrackGroupIndex
cn.jzvd.Jzvd: long lastAutoFullscreenTime
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator sInstance
com.bumptech.glide.load.resource.bytes.BytesResource: byte[] bytes
androidx.appcompat.widget.SearchView: java.lang.CharSequence mOldQueryText
com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket: int currentIndex
androidx.appcompat.app.AppCompatDelegateImpl: boolean mClosingActionMenu
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: java.lang.Class dataClass
cn.jzvd.demo.AdapterListView: java.lang.String[] videoTitles
androidx.viewpager.widget.ViewPager: int mPageMargin
com.google.android.exoplayer2.Timeline$Window: java.lang.Object uid
androidx.core.util.LogWriter: java.lang.StringBuilder mBuilder
androidx.collection.MapCollections$ArrayIterator: androidx.collection.MapCollections this$0
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer mVPathRenderer
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.DefaultRenderersFactory: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.bumptech.glide.gifdecoder.StandardGifDecoder: int[] mainScratch
com.danikula.videocache.GetRequest: boolean partial
com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues: int duration
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1: java.nio.ByteBuffer buffer
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mHomeDescription
androidx.appcompat.view.menu.ActionMenuItem: int mId
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: com.google.android.exoplayer2.util.Clock clock
androidx.appcompat.widget.AppCompatTextHelper$1: java.lang.ref.WeakReference val$textViewWeak
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int viewportHeight
com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder: long sampleNumber
com.google.android.exoplayer2.source.hls.Aes128DataSource: com.google.android.exoplayer2.upstream.DataSource upstream
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: long trimmedFrameCount
com.bumptech.glide.gifdecoder.GifFrame: int[] lct
androidx.recyclerview.R$styleable: int RecyclerView_spanCount
androidx.appcompat.R$dimen: int abc_search_view_preferred_width
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Class mType
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: int networkType
com.google.android.exoplayer2.extractor.SeekPoint: long timeUs
androidx.fragment.app.FragmentManagerViewModel: boolean mHasSavedSnapshot
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mSpanOffsetsSize
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_UP
com.bumptech.glide.load.data.LocalUriFetcher: android.net.Uri uri
androidx.appcompat.view.menu.StandardMenuPopup: android.content.Context mContext
com.google.android.exoplayer2.upstream.Loader$LoadTask: int errorCount
com.google.android.exoplayer2.extractor.ts.LatmReader: int state
com.bumptech.glide.manager.RequestManagerFragment: android.app.Fragment parentFragmentHint
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder mByteOrder
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mActionItems
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$AdapterRecyclerView videoAdapter
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.drawable.Drawable mWindowContentOverlay
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeMinTextSize
com.bumptech.glide.manager.SupportRequestManagerFragment: java.util.Set childRequestManagerFragments
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: int pid
tv.danmaku.ijk.media.player.misc.IMediaFormat: java.lang.String KEY_MIME
com.google.android.exoplayer2.metadata.id3.ApicFrame: byte[] pictureData
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.google.android.exoplayer2.util.MimeTypes: java.util.ArrayList customMimeTypes
com.google.android.exoplayer2.upstream.UdpDataSource: java.net.DatagramPacket packet
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence mSubtitle
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: android.net.Uri url
tv.danmaku.ijk.media.player.pragma.DebugLog: boolean ENABLE_ERROR
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean deliverPendingMessageAtStartPositionRequired
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.widget.Toolbar this$0
com.bumptech.glide.load.model.MultiModelLoaderFactory: com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory DEFAULT_FACTORY
androidx.appcompat.app.AlertController$1: androidx.appcompat.app.AlertController this$0
androidx.recyclerview.widget.LayoutState: int mEndLine
androidx.appcompat.app.AppCompatDelegateImpl: android.graphics.Rect mTempRect2
com.bumptech.glide.load.model.ResourceLoader$UriFactory: android.content.res.Resources resources
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantSize
androidx.appcompat.resources.R$styleable: int[] AnimatedStateListDrawableCompat
androidx.appcompat.R$styleable: int[] MenuGroup
com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition: int[] clutEntries2Bit
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.TrackOutput[] cea608TrackOutputs
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseBooleanArray trackIds
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: java.util.List componentSpliceList
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnMultiChoiceClickListener mOnCheckboxClickListener
androidx.appcompat.app.AlertController$AlertParams$2: int mIsCheckedIndex
androidx.appcompat.app.TwilightManager: android.content.Context mContext
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChildrenChangingConfigurations
androidx.viewpager.widget.ViewPager: java.util.Comparator COMPARATOR
androidx.appcompat.widget.DropDownListView: java.lang.reflect.Field mIsChildViewEnabled
com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition: int id
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.extractor.Extractor extractor
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat mNodeInfoCompat
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayoutManager
com.google.android.exoplayer2.source.hls.playlist.FilteringHlsPlaylistParserFactory: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory hlsPlaylistParserFactory
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$EngineJobFactory engineJobFactory
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText2
androidx.core.provider.SelfDestructiveThread: android.os.Handler mHandler
com.google.android.exoplayer2.AudioFocusManager: float volumeMultiplier
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int audioBitDepth
androidx.appcompat.R$drawable: int abc_btn_radio_material
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMinor
androidx.collection.MapCollections$ArrayIterator: boolean mCanRemove
androidx.core.provider.FontsContractCompat$FontFamilyResult: int mStatusCode
androidx.appcompat.R$id: int alertTitle
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder: com.bumptech.glide.load.ResourceEncoder encoder
com.google.android.exoplayer2.ui.R$styleable: int[] FontFamilyFont
com.google.android.exoplayer2.Format: float pixelWidthHeightRatio
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.source.MediaSource mediaSource
com.bumptech.glide.load.engine.EngineKey: com.bumptech.glide.load.Options options
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: int orientation
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: android.content.Context context
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean foundFirstFrame
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mCurrDrawable
com.google.android.exoplayer2.extractor.ogg.FlacReader: com.google.android.exoplayer2.util.FlacStreamMetadata streamMetadata
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: java.util.List fetchers
com.bumptech.glide.gifdecoder.StandardGifDecoder: int sampleSize
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.util.ParsableByteArray scratchId3Data
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PROPERTY_ANIMATOR
androidx.core.provider.SelfDestructiveThread$1: androidx.core.provider.SelfDestructiveThread this$0
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_ASYNC_STATISTIC_BUF_FORWARDS
androidx.core.graphics.TypefaceCompatBaseImpl$1: androidx.core.graphics.TypefaceCompatBaseImpl this$0
androidx.appcompat.R$attr: int ratingBarStyle
com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy DATA
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE_TARGET
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement: long elementEndPosition
com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result: boolean isPackedAudioExtractor
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.reflect.Method mMethod
com.bumptech.glide.load.engine.LockedResource: boolean isRecycled
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean mDelegateTargeted
android.support.v4.media.MediaMetadataCompat: androidx.collection.ArrayMap METADATA_KEYS_TYPE
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_CACHE_STATISTIC_FILE_FORWARDS
androidx.appcompat.widget.TooltipCompatHandler$1: androidx.appcompat.widget.TooltipCompatHandler this$0
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorPosition
com.google.android.exoplayer2.ExoPlayerImpl: int repeatMode
cn.jzvd.JzvdStd: int LAST_GET_BATTERYLEVEL_PERCENT
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP_A
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] EXIF_POINTER_TAGS
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean seekForCues
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean playClearSamplesWithoutKeys
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean skipMediaCodecStopOnRelease
com.bumptech.glide.load.engine.DecodeHelper: boolean isScaleOnlyOrNoTransform
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_VIDEO_CACHED_BYTES
androidx.appcompat.R$layout: int abc_popup_menu_item_layout
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemNumericShortcut
com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mVerticalBoundCheck
com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom: com.google.android.exoplayer2.util.ParsableByteArray data
com.google.android.exoplayer2.source.ClippingMediaPeriod: com.google.android.exoplayer2.source.MediaPeriod$Callback callback
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float primaryBChromaticityY
com.google.android.exoplayer2.extractor.ts.DtsReader: java.lang.String language
androidx.exifinterface.media.ExifInterface: int mOrfThumbnailLength
cn.jzvd.JzvdStd: android.widget.LinearLayout mRetryLayout
com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean outputFirstSample
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: java.lang.String preferredAudioLanguage
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.LiveData this$0
com.google.android.exoplayer2.extractor.ts.TsExtractor: int remainingPmts
androidx.core.R$styleable: int[] GradientColorItem
androidx.appcompat.widget.AppCompatCheckedTextView: int[] TINT_ATTRS
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.MediaPeriodQueue queue
com.bumptech.glide.util.LruCache: java.util.Map cache
com.bumptech.glide.load.engine.DecodeJob: java.lang.Object currentData
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: double playlistStuckTargetDurationCoefficient
androidx.appcompat.resources.R$styleable: int[] StateListDrawable
androidx.appcompat.widget.SearchView: android.widget.ImageView mCollapsedIcon
com.google.android.exoplayer2.source.SinglePeriodTimeline: java.lang.Object manifest
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: long[][] allocationCheckpoints
androidx.core.widget.CompoundButtonCompat: java.lang.reflect.Field sButtonDrawableField
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsEosPropagation
com.bumptech.glide.util.ByteBufferUtil$SafeArray: byte[] data
android.support.v4.media.session.PlaybackStateCompat: int mErrorCode
androidx.appcompat.R$string: int abc_menu_alt_shortcut_label
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray blockAdditionalData
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int peekBufferPosition
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.Glide: com.bumptech.glide.Glide glide
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuView mMenuView
com.google.android.exoplayer2.text.pgs.PgsDecoder: java.util.zip.Inflater inflater
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest mRequest
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: com.bumptech.glide.load.resource.bitmap.HardwareConfigState instance
com.google.android.exoplayer2.metadata.icy.IcyInfo: byte[] rawMetadata
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.WakeLockManager wakeLockManager
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: java.lang.String description
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
androidx.fragment.app.Fragment: android.view.ViewGroup mContainer
com.bumptech.glide.Registry: com.bumptech.glide.load.model.ModelLoaderRegistry modelLoaderRegistry
com.google.android.exoplayer2.extractor.amr.AmrExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.appcompat.widget.ListPopupWindow$3: androidx.appcompat.widget.ListPopupWindow this$0
androidx.core.graphics.ColorUtils: java.lang.ThreadLocal TEMP_ARRAY
androidx.appcompat.app.AlertController: int mViewLayoutResId
androidx.viewpager.widget.ViewPager: int[] LAYOUT_ATTRS
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: long currentPositionUs
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser mediaPlaylistParser
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int[] tracks
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.gifdecoder.GifDecoder gifDecoder
androidx.appcompat.R$drawable: int abc_switch_thumb_material
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: int currentIndex
androidx.appcompat.R$styleable: int[] ActionMenuItemView
com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener opener
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.DataSource dataSource
androidx.appcompat.R$layout: int abc_expanded_menu_layout
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap
com.google.android.exoplayer2.ui.SubtitlePainter: int cuePositionAnchor
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int consecutiveDroppedFrameCount
androidx.appcompat.R$styleable: int AppCompatSeekBar_android_thumb
com.bumptech.glide.GlideContext: com.bumptech.glide.TransitionOptions DEFAULT_TRANSITION_OPTIONS
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnSuggestionListener mOnSuggestionListener
androidx.appcompat.view.menu.ListMenuPresenter: int mItemIndexOffset
androidx.appcompat.view.menu.MenuBuilder: boolean mStructureChangedWhileDispatchPrevented
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: java.lang.Object tag
androidx.appcompat.R$attr: int alertDialogStyle
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.upstream.Loader loader
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat DEFAULT
androidx.fragment.app.Fragment: android.os.Bundle mArguments
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.source.TrackGroup group
com.google.android.exoplayer2.source.hls.WebvttExtractor: java.util.regex.Pattern MEDIA_TIMESTAMP
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool keyPool
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: int val$requestedHeight
cn.jzvd.R$id: int tv_volume
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiModeChecked
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_RGB
androidx.fragment.app.Fragment: boolean mCalled
androidx.appcompat.R$styleable: int AppCompatTextView_drawableStartCompat
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: androidx.appcompat.widget.ListPopupWindow this$0
androidx.appcompat.widget.ButtonBarLayout: int mLastWidthSize
tv.danmaku.ijk.media.player.MediaPlayerProxy$2: tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener val$finalListener
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mAddActionBarHideOffset
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: boolean reconfigurationPending
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer sei
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_STEREO
com.google.android.exoplayer2.decoder.SimpleDecoder: java.lang.Exception exception
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mCurrentVolume
com.bumptech.glide.load.resource.gif.GifFrameLoader: android.os.Handler handler
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker playlistTracker
com.google.android.exoplayer2.audio.SonicAudioProcessor: com.google.android.exoplayer2.audio.Sonic sonic
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.TrackGroupArray trackGroups
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.DropDownListView: boolean mHijackFocus
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.ref.WeakReference mCustomView
com.google.android.exoplayer2.video.DummySurface: com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread thread
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader mPriorLoader
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: android.hardware.display.DisplayManager displayManager
androidx.core.graphics.drawable.DrawableCompat: boolean sSetLayoutDirectionMethodFetched
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.RequestManager requestManager
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int EVENT_WILL_HTTP_SEEK
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder mRemote
com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable: long[] pointOffsets
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.ColorFilter mColorFilter
androidx.core.util.Pools$SynchronizedPool: java.lang.Object mLock
com.bumptech.glide.load.model.MediaStoreFileLoader: android.content.Context context
androidx.recyclerview.widget.RecyclerView: int mInitialTouchX
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState mState
androidx.core.widget.AutoScrollHelper: boolean mExclusive
com.bumptech.glide.gifdecoder.GifFrame: int delay
androidx.recyclerview.widget.RecyclerView: boolean mClipToPadding
androidx.core.R$id: int accessibility_custom_action_15
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.upstream.Loader mediaPlaylistLoader
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: int positionAnchor
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$5: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
androidx.appcompat.R$dimen: int tooltip_precise_anchor_extra_offset
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.RequestOptions DOWNLOAD_ONLY_OPTIONS
androidx.viewpager.widget.ViewPager: int mBottomPageBounds
androidx.appcompat.R$styleable: int TextAppearance_android_textStyle
com.google.android.exoplayer2.Format: int bitrate
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.source.ProgressiveMediaPeriod this$0
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: int sampleRate
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_CAMERA_SETTINGS_TAGS
com.bumptech.glide.util.Util: char[] SHA_256_CHARS
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mCurrentPosition
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedStateful
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: int encoding
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.load.Options options
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mTabView
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: java.lang.CharSequence text
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.Format audioFormat
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: float rendererOperatingRate
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.util.ParsableByteArray tagHeaderBuffer
androidx.appcompat.R$styleable: int MenuItem_actionViewClass
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int atomHeaderBytesRead
androidx.appcompat.widget.AppCompatAutoCompleteTextView: int[] TINT_ATTRS
androidx.appcompat.R$color: int abc_tint_spinner
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.MediaDrmCallback callback
com.danikula.videocache.file.LruDiskUsage$TouchCallable: java.io.File file
cn.jzvd.R$layout: int jz_dialog_volume
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean isFilling
androidx.appcompat.view.menu.BaseMenuPresenter: int mMenuLayoutRes
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemClickListener mOnItemClickListener
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder: androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks mCallback
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean hasOutputSeekMap
androidx.recyclerview.widget.RecyclerView: java.lang.Class[] LAYOUT_MANAGER_CONSTRUCTOR_SIGNATURE
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.bumptech.glide.Priority: com.bumptech.glide.Priority IMMEDIATE
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: float width
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean sampleIsKeyframe
androidx.appcompat.widget.ActionMenuView$LayoutParams: int cellsUsed
androidx.versionedparcelable.VersionedParcelParcel: int mCurrentField
com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket: int packetSize
com.google.android.exoplayer2.extractor.ts.LatmReader: int sampleRateHz
androidx.appcompat.view.menu.MenuItemImpl: int mGroup
com.google.android.exoplayer2.upstream.DataSpec: byte[] httpBody
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mTempShortcutItemList
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory: android.content.Context context
android.support.v4.media.session.PlaybackStateCompat: long mUpdateTime
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmEventListener: com.google.android.exoplayer2.drm.DefaultDrmSessionManager this$0
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: com.google.android.exoplayer2.util.ParsableByteArray sampleData
androidx.appcompat.view.menu.MenuBuilder: android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo
androidx.appcompat.app.AppCompatDelegateImpl$1: java.lang.Thread$UncaughtExceptionHandler val$defHandler
androidx.recyclerview.widget.RecyclerView: boolean POST_UPDATES_ON_ANIMATION
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler requestHandler
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State mState
androidx.appcompat.view.menu.StandardMenuPopup: int ITEM_LAYOUT
com.google.android.exoplayer2.extractor.flac.FlacExtractor: boolean id3MetadataDisabled
com.bumptech.glide.gifdecoder.GifHeader: int status
androidx.lifecycle.FullLifecycleObserverAdapter$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
com.google.android.exoplayer2.upstream.Allocation: int offset
com.google.android.exoplayer2.ui.SubtitlePainter: int parentLeft
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mStartAction
com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData: byte[] topFieldData
androidx.activity.ComponentActivity$1: androidx.activity.ComponentActivity this$0
androidx.activity.ComponentActivity: int mContentLayoutId
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_EXIF
androidx.appcompat.view.menu.CascadingMenuPopup: int ITEM_LAYOUT
com.google.android.exoplayer2.extractor.amr.AmrExtractor: byte[] amrSignatureWb
androidx.appcompat.R$id: int title_template
androidx.appcompat.R$attr: int actionBarTheme
com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues: int size
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_MALFORMED
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: java.util.Map DEFAULT_INITIAL_BITRATE_COUNTRY_GROUPS
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget next
cn.jzvd.JzvdStd: android.widget.TextView titleTextView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
com.bumptech.glide.load.resource.gif.GifDrawable: boolean applyGravity
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_TIMED_TEXT
androidx.fragment.app.FragmentManagerImpl: boolean mDestroyed
androidx.fragment.app.FragmentTransition$4: boolean val$inIsPop
com.google.android.exoplayer2.audio.AudioCapabilities: int[] supportedEncodings
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int height
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: long startTimeUs
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$9: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
androidx.appcompat.app.AppCompatDelegate: int sDefaultNightMode
com.google.android.exoplayer2.audio.AudioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities EXTERNAL_SURROUND_SOUND_CAPABILITIES
tv.danmaku.ijk.media.player.MediaInfo: tv.danmaku.ijk.media.player.IjkMediaMeta mMeta
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: int preferredTextRoleFlags
androidx.appcompat.widget.TintTypedArray: android.util.TypedValue mTypedValue
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.drm.DrmInitData drmInitData
androidx.appcompat.app.AlertController$AlertParams: boolean mRecycleOnMeasure
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool keyPool
com.google.android.exoplayer2.extractor.ts.TsDurationReader: long lastPcrValue
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: boolean hasGapTag
androidx.cursoradapter.widget.CursorAdapter: androidx.cursoradapter.widget.CursorFilter mCursorFilter
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List muxedCaptionFormats
com.google.android.exoplayer2.audio.Sonic: int inputFrameCount
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: android.os.Handler handler
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory
com.google.android.exoplayer2.source.SampleDataQueue: long totalBytesWritten
com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader: java.lang.String[] comments
androidx.appcompat.view.menu.ActionMenuItem: boolean mHasIconTintMode
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FORCED
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mAdded
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: int pendingTrimStartBytes
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup mLazySpanLookup
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: android.os.Bundle mMeta
com.bumptech.glide.load.resource.gif.GifOptions: com.bumptech.glide.load.Option DECODE_FORMAT
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback mActionBarVisibilityCallback
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_LONG_CLICK
com.google.android.exoplayer2.AudioFocusManager$AudioFocusListener: android.os.Handler eventHandler
com.google.android.exoplayer2.text.Cue: int positionAnchor
com.google.android.exoplayer2.extractor.ts.DtsReader: long timeUs
com.bumptech.glide.load.model.FileLoader$FileFetcher: com.bumptech.glide.load.model.FileLoader$FileOpener opener
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mHeight
com.google.android.exoplayer2.source.CompositeMediaSource: com.google.android.exoplayer2.upstream.TransferListener mediaTransferListener
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_VIDEO_RENDERING_START
android.support.v4.media.session.PlaybackStateCompat: int mState
com.google.android.exoplayer2.extractor.ts.H262Reader: com.google.android.exoplayer2.extractor.TrackOutput output
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource$Factory: com.google.android.exoplayer2.upstream.DataSource$Factory dataSourceFactory
com.google.android.exoplayer2.SeekParameters: com.google.android.exoplayer2.SeekParameters NEXT_SYNC
com.google.android.exoplayer2.MediaPeriodQueue: int length
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.metadata.id3.Id3Decoder id3Decoder
com.google.android.exoplayer2.source.chunk.DataChunk: byte[] data
androidx.appcompat.view.menu.CascadingMenuPopup$2: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.appcompat.view.menu.MenuItemImpl: android.view.View mActionView
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCategory
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: int fieldSize
com.google.android.exoplayer2.ui.SubtitlePainter: int parentRight
androidx.appcompat.R$styleable: int MenuItem_android_visible
androidx.appcompat.widget.AppCompatSpinner$SavedState: boolean mShowDropdown
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VARIABLE_REFERENCE
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: float[] mOffsets
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: int nalUnitBytesRead
androidx.appcompat.app.AppCompatViewInflater: java.lang.Object[] mConstructorArgs
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_TITLE
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern MOVE_PATTERN
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_CHANNEL_UI
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: java.util.List streamKeys
com.google.android.exoplayer2.Timeline$Period: int windowIndex
androidx.appcompat.R$styleable: int[] StateListDrawable
androidx.appcompat.view.menu.MenuBuilder: boolean mIsVisibleItemsStale
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int hashCode
androidx.appcompat.widget.DropDownListView: android.graphics.Rect mSelectorRect
com.google.android.exoplayer2.util.FlacStreamMetadata: int minBlockSizeSamples
com.google.android.exoplayer2.extractor.mp4.AtomParsers: byte[] opusMagic
com.google.android.exoplayer2.extractor.ogg.StreamReader: int sampleRate
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.upstream.Allocator allocator
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper output
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean visible
androidx.appcompat.widget.DropDownListView: int mSelectionTopPadding
com.google.android.exoplayer2.audio.DefaultAudioSink: java.nio.ByteBuffer avSyncHeader
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mMutated
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: int horizontalPositionMinimum
androidx.fragment.app.FragmentManagerViewModel: java.util.HashSet mRetainedFragments
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PASTE
androidx.core.R$attr: int alpha
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mTransitionEnded
org.slf4j.helpers.SubstituteLogger: org.slf4j.event.EventRecodingLogger eventRecodingLogger
androidx.collection.MapCollections$MapIterator: boolean mEntryValid
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockSampleIndex
androidx.lifecycle.CompositeGeneratedAdaptersObserver: androidx.lifecycle.GeneratedAdapter[] mGeneratedAdapters
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_THREAD_GAP_WORK
com.google.android.exoplayer2.extractor.flac.FlacExtractor: long currentFrameFirstSampleNumber
com.google.android.exoplayer2.source.hls.HlsMediaSource: boolean allowChunklessPreparation
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: com.google.android.exoplayer2.PlayerMessage message
com.google.android.exoplayer2.decoder.DecoderCounters: int decoderReleaseCount
androidx.appcompat.app.AlertController$AlertParams: boolean mViewSpacingSpecified
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long[] DEFAULT_INITIAL_BITRATE_ESTIMATES_4G
androidx.appcompat.app.WindowDecorActionBar: java.util.ArrayList mTabs
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.widget.CompoundButton mView
com.google.android.exoplayer2.drm.DrmInitData: int schemeDataCount
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mIndex
androidx.recyclerview.widget.RecyclerView: boolean mIsAttached
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: com.bumptech.glide.load.model.DataUrlLoader$StreamFactory this$0
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo: java.util.List dvbSubtitleInfos
com.bumptech.glide.gifdecoder.StandardGifDecoder: byte[] pixelStack
com.google.android.exoplayer2.audio.AudioSink$InitializationException: int audioTrackState
com.google.android.exoplayer2.text.CaptionStyleCompat: int edgeColor
com.bumptech.glide.request.SingleRequest: java.util.List requestListeners
org.slf4j.event.SubstituteLoggingEvent: java.lang.String loggerName
com.google.android.exoplayer2.text.subrip.SubripSubtitle: long[] cueTimesUs
androidx.core.provider.FontsContractCompat$3: java.lang.String val$id
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool pool
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingBottomNoButtons
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int mTransitionToIndex
cn.jzvd.R$dimen: int jz_start_button_w_h_normal
cn.jzvd.Jzvd: long mGestureDownPosition
com.bumptech.glide.load.model.ModelLoaderRegistry: com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache cache
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CODEC_PROFILE
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnClickListener mNegativeButtonListener
androidx.appcompat.R$id: int search_voice_btn
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: int trackId
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int width
androidx.appcompat.R$styleable: int[] ColorStateListItem
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mReverseLayout
com.google.android.exoplayer2.IllegalSeekPositionException: long positionMs
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long[] playheadOffsets
com.google.android.exoplayer2.Timeline$Window: java.lang.Object manifest
com.google.android.exoplayer2.metadata.flac.VorbisComment: java.lang.String value
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_1
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioProcessor[] toFloatPcmAvailableAudioProcessors
tv.danmaku.ijk.media.player.BuildConfig: java.lang.String APPLICATION_ID
androidx.core.view.DisplayCutoutCompat: java.lang.Object mDisplayCutout
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: int bytesToCheck
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int channelCount
androidx.core.graphics.drawable.WrappedDrawableState: android.content.res.ColorStateList mTint
com.bumptech.glide.load.model.UriLoader$StreamFactory: android.content.ContentResolver contentResolver
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: java.util.List rolledUpCaptions
androidx.appcompat.app.AppCompatViewInflater: int[] sOnClickAttrs
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean codecHandlesHdr10PlusOutOfBandMetadata
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo: int streamType
com.google.android.exoplayer2.ui.TrackSelectionView: android.view.LayoutInflater inflater
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab mTab
androidx.appcompat.widget.ListPopupWindow: android.view.View mDropDownAnchorView
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.locks.Condition val$cond
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: long durationUs
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_7POINT0
androidx.appcompat.R$drawable: int abc_text_select_handle_right_mtrl_light
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
androidx.appcompat.app.AlertController: int mListItemLayout
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode DEFAULT_MODE
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_UNSUPPORTED_SUBTITLE
com.google.android.exoplayer2.metadata.icy.IcyDecoder: java.nio.charset.CharsetDecoder utf8Decoder
com.bumptech.glide.request.target.ViewTarget: boolean isAttachStateListenerAdded
androidx.fragment.app.FragmentManagerImpl: boolean mStopped
com.google.android.exoplayer2.extractor.flv.FlvExtractor: long mediaTagTimestampOffsetUs
com.bumptech.glide.load.engine.DecodeJob: int height
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: com.google.android.exoplayer2.upstream.TransferListener listener
com.google.android.exoplayer2.upstream.Loader$LoadTask: long startTimeMs
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat NOT_SET
androidx.appcompat.R$styleable: int TextAppearance_textAllCaps
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: com.bumptech.glide.load.Option COMPRESSION_FORMAT
androidx.appcompat.R$bool: int abc_action_bar_embed_tabs
com.google.android.exoplayer2.extractor.ts.DtsReader: int syncBytes
com.google.android.exoplayer2.upstream.DefaultAllocator: int availableCount
com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties: java.util.Map requestProperties
androidx.core.content.res.ResourcesCompat$FontCallback$1: androidx.core.content.res.ResourcesCompat$FontCallback this$0
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: int trackSelectionReason
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_5POINT0_BACK
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.Menu menu
com.bumptech.glide.load.model.StringLoader: com.bumptech.glide.load.model.ModelLoader uriLoader
com.google.android.exoplayer2.text.Cue: int lineType
androidx.appcompat.R$id: int edit_query
com.google.android.exoplayer2.text.cea.Cea608Decoder: int captionMode
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: long breakDurationUs
com.bumptech.glide.load.engine.DecodeHelper: boolean isCacheKeysSet
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.executor.GlideExecutor diskCacheExecutor
androidx.appcompat.R$style: int Animation_AppCompat_Tooltip
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean deviceNeedsNoPostProcessWorkaround
com.google.android.exoplayer2.extractor.ts.AdtsReader: int sampleSize
androidx.core.widget.TextViewCompat$OreoCallback: android.widget.TextView mTextView
com.danikula.videocache.GetRequest: java.lang.String uri
com.bumptech.glide.gifdecoder.StandardGifDecoder: byte[] suffix
com.google.android.exoplayer2.extractor.VorbisBitArray: int byteLimit
com.bumptech.glide.GlideBuilder: com.bumptech.glide.manager.ConnectivityMonitorFactory connectivityMonitorFactory
com.bumptech.glide.load.model.UnitModelLoader$Factory: com.bumptech.glide.load.model.UnitModelLoader$Factory FACTORY
com.google.android.exoplayer2.trackselection.FixedTrackSelection: int reason
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: long startTime
androidx.appcompat.R$styleable: int MenuView_android_itemTextAppearance
androidx.appcompat.R$id: int action_bar_subtitle
androidx.appcompat.app.AlertController$2: android.view.View val$bottom
androidx.appcompat.widget.ForwardingListener: int mLongPressTimeout
androidx.appcompat.R$styleable: int Spinner_popupTheme
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: com.google.android.exoplayer2.upstream.TransferListener listener
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.google.android.exoplayer2.ui.SubtitlePainter: float cueLine
androidx.fragment.app.FragmentManagerImpl$4: androidx.fragment.app.FragmentManagerImpl this$0
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage SOURCE
androidx.appcompat.widget.AppCompatSpinner: android.widget.SpinnerAdapter mTempAdapter
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeHelper decodeHelper
com.danikula.videocache.file.LruDiskUsage: org.slf4j.Logger LOG
tv.danmaku.ijk.media.player.IjkMediaPlayer: int SDL_FCC_YV12
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: java.lang.String mimeType
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: java.lang.String mAction
com.google.android.exoplayer2.metadata.id3.MlltFrame: int bytesBetweenReference
com.bumptech.glide.Glide: com.bumptech.glide.Registry registry
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mSpanLookupSize
androidx.appcompat.R$styleable: int AppCompatTextView_autoSizeTextType
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.lang.String key
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewFlinger mViewFlinger
androidx.appcompat.R$attr: int colorButtonNormal
androidx.appcompat.R$attr: int actionBarWidgetTheme
com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook: long[] lengthMap
androidx.appcompat.R$styleable: int AlertDialog_android_layout
com.google.android.exoplayer2.source.hls.WebvttExtractor: java.lang.String language
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters DEFAULT_WITHOUT_VIEWPORT
androidx.cursoradapter.widget.CursorAdapter: boolean mDataValid
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int bytesPerFrame
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float primaryBChromaticityX
androidx.appcompat.view.SupportMenuInflater$MenuState: char itemAlphabeticShortcut
com.bumptech.glide.load.model.MultiModelLoaderFactory: java.util.Set alreadyUsedEntries
androidx.fragment.app.Fragment: java.lang.Boolean mIsPrimaryNavigationFragment
com.bumptech.glide.load.model.MultiModelLoader: java.util.List modelLoaders
androidx.fragment.app.FragmentState: boolean mRemoving
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: boolean outOfNetworkIndicator
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mStopValue
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_SHARE_CACHE_DATA
com.google.android.exoplayer2.audio.Sonic: int maxDiff
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Resources mResources
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoBatteryNightModeManager
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions: android.util.DisplayMetrics displayMetrics
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult NO_TIMESTAMP_IN_RANGE_RESULT
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Object mAction
cn.jzvd.JZDataSource: java.lang.String title
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPendingAccessibilityState
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mContentDescription
androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_QUINT
org.slf4j.impl.StaticLoggerBinder: org.slf4j.ILoggerFactory loggerFactory
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.util.Map sortedSizes
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioProcessor[] activeAudioProcessors
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean softwareOnly
com.bumptech.glide.load.engine.EngineJob: boolean isCancelled
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.ListMenuPresenter mPresenter
androidx.appcompat.widget.LinearLayoutCompat: int mGravity
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mSpanCount
com.google.android.exoplayer2.metadata.id3.MlltFrame: int[] bytesDeviations
com.google.android.exoplayer2.upstream.DataSchemeDataSource: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition: android.util.SparseArray regions
androidx.lifecycle.ClassesInfoCache: java.util.Map mCallbackMap
androidx.appcompat.R$styleable: int AlertDialog_buttonIconDimen
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int frameNum
androidx.appcompat.R$dimen: int abc_dropdownitem_icon_width
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: androidx.appcompat.widget.ActionMenuPresenter this$0
cn.jzvd.Jzvd: int VIDEO_IMAGE_DISPLAY_TYPE
androidx.viewpager.widget.ViewPager: int mDefaultGutterSize
androidx.appcompat.R$drawable: int abc_cab_background_internal_bg
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingTop
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: int bitrateNominal
com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRecycled
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: int currentSampleIndex
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_4POINT0
androidx.appcompat.R$drawable: int abc_cab_background_top_material
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DefaultDrmSession noMultiSessionDrmSession
cn.jzvd.JzvdStd: android.app.Dialog mVolumeDialog
androidx.fragment.app.BackStackState: int mIndex
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean playWhenReady
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: float defaultVerticalPlacement
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: int numSamples
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mInternalOnDismissListener
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: long livePresentationDelayMs
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: java.util.List segments
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList mIconTintList
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner this$0
com.google.android.exoplayer2.extractor.ts.LatmReader: boolean streamMuxRead
androidx.appcompat.R$attr: int imageButtonStyle
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUTOSELECT
com.google.android.exoplayer2.extractor.mp4.Sniffer: int[] COMPATIBLE_BRANDS
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.PopupWindow mActionModePopup
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View mAnchorView
com.bumptech.glide.load.resource.gif.GifFrameLoader: boolean startFromFirstFrame
com.bumptech.glide.load.data.ExifOrientationStream: int SEGMENT_LENGTH
androidx.appcompat.R$styleable: int[] ActionBarLayout
com.google.android.exoplayer2.Timeline$Window: boolean isSeekable
androidx.appcompat.widget.ViewStubCompat: int mLayoutResource
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta mMediaFormat
com.google.android.exoplayer2.extractor.VorbisUtil$Mode: int windowType
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_HEADER_PATTERN
androidx.appcompat.widget.ScrollingTabContainerView$1: androidx.appcompat.widget.ScrollingTabContainerView this$0
tv.danmaku.ijk.media.player.MediaPlayerProxy$8: tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener val$finalListener
com.google.android.exoplayer2.source.TrackGroup: int hashCode
androidx.appcompat.widget.AbsActionBarView: boolean mEatingTouch
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: android.app.ActivityManager activityManager
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListener mListener
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: boolean allowMultipleAdaptiveSelections
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: long timestampToUpdate
androidx.exifinterface.media.ExifInterface: int mOrfMakerNoteOffset
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: android.os.Bundle mBundle
androidx.savedstate.SavedStateRegistry$1: androidx.savedstate.SavedStateRegistry this$0
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: long firstSampleTimestampUs
com.bumptech.glide.load.engine.EngineKey: int width
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int bufferPosition
androidx.appcompat.R$styleable: int Toolbar_buttonGravity
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_EXIF
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory: android.content.res.Resources resources
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedPadding
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder reading
com.danikula.videocache.HttpProxyCacheServerClients: java.util.concurrent.atomic.AtomicInteger clientsCount
androidx.versionedparcelable.VersionedParcelParcel: int mFieldId
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_CONSTRAINED
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int[] BYTES_PER_FORMAT
androidx.appcompat.app.AppCompatDelegateImpl: androidx.collection.SimpleArrayMap sLocalNightModes
com.google.android.exoplayer2.upstream.ParsingLoadable: int type
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: boolean outOfNetworkIndicator
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.regex.Pattern FONT_SIZE
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long minDurationToRetainAfterDiscardUs
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: boolean mCacheSpanGroupIndices
androidx.collection.LruCache: int maxSize
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$SavedState mPendingSavedState
androidx.core.view.NestedScrollingChildHelper: int[] mTempNestedScrollConsumed
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Method sAddFontWeightStyle
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_light
androidx.appcompat.app.AppCompatDelegateImpl: android.widget.TextView mTitleView
com.bumptech.glide.load.data.DataRewinderRegistry: com.bumptech.glide.load.data.DataRewinder$Factory DEFAULT_FACTORY
cn.jzvd.JzvdStd: android.widget.TextView mRetryBtn
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: androidx.appcompat.view.ViewPropertyAnimatorCompatSet this$0
org.slf4j.event.Level: org.slf4j.event.Level TRACE
com.google.android.exoplayer2.audio.Sonic: int minDiff
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener mOnNativeInvokeListener
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long durationUs
com.bumptech.glide.request.target.CustomTarget: com.bumptech.glide.request.Request request
com.google.android.exoplayer2.util.SlidingPercentile: int totalWeight
com.google.android.exoplayer2.extractor.ts.LatmReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingRequestManagerFragments
com.bumptech.glide.util.ExceptionPassthroughInputStream: java.io.IOException exception
androidx.appcompat.widget.DrawableUtils: java.lang.Class sInsetsClazz
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.widget.ActionMenuPresenter this$0
com.google.android.exoplayer2.decoder.CryptoInfo: int numSubSamples
androidx.core.widget.NestedScrollView: boolean mFillViewport
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean qwertyMode
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: int position
androidx.appcompat.R$styleable: int ActionBar_icon
tv.danmaku.ijk.media.player.MediaPlayerProxy$8: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
com.bumptech.glide.load.resource.gif.GifDrawable: boolean isStarted
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: boolean foundSyncframe
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.appcompat.app.AlertController$5: androidx.appcompat.app.AlertController this$0
androidx.viewpager.widget.ViewPager: boolean mFakeDragging
androidx.appcompat.widget.ButtonBarLayout: int mMinimumHeight
com.google.android.exoplayer2.source.chunk.Chunk: com.google.android.exoplayer2.upstream.StatsDataSource dataSource
com.bumptech.glide.gifdecoder.GifHeader: int[] gct
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter mColorFilter
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: java.util.List rolledUpCaptions
androidx.fragment.app.FragmentTransaction: boolean mReorderingAllowed
androidx.appcompat.widget.LinearLayoutCompat: int mDividerWidth
com.google.android.exoplayer2.util.Util: int SDK_INT
androidx.appcompat.app.AlertController$4: androidx.appcompat.app.AlertController this$0
com.google.android.exoplayer2.extractor.ts.LatmReader: int frameLengthType
androidx.appcompat.R$layout: int abc_action_menu_item_layout
com.google.android.exoplayer2.audio.BaseAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat pendingInputAudioFormat
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray nalBuffer
com.google.android.exoplayer2.extractor.ogg.StreamReader: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.appcompat.R$styleable: int Toolbar_menu
com.google.android.exoplayer2.ExoPlayerImplInternal$MediaSourceRefreshInfo: com.google.android.exoplayer2.source.MediaSource source
androidx.appcompat.R$styleable: int Spinner_android_popupBackground
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory: com.bumptech.glide.load.model.DataUrlLoader$DataDecoder opener
androidx.viewpager.widget.ViewPager$LayoutParams: int gravity
com.google.android.exoplayer2.video.AvcConfig: float pixelWidthAspectRatio
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: long resolvedPeriodTimeUs
androidx.fragment.app.FragmentTransitionImpl$1: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.appcompat.R$dimen: int abc_search_view_preferred_height
androidx.fragment.app.FragmentManagerImpl$4: android.view.View val$viewToAnimate
androidx.appcompat.widget.ActionBarContainer: boolean mIsSplit
com.google.android.exoplayer2.source.SampleQueue: int[] sizes
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: int sequenceExtensionPosition
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean exposeId3
com.google.android.exoplayer2.extractor.mp4.TrackFragment: com.google.android.exoplayer2.util.ParsableByteArray sampleEncryptionData
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentViewLifecycleOwner mViewLifecycleOwner
com.google.android.exoplayer2.metadata.flac.PictureFrame: int colors
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater mInflater
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mPlaybackType
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: long livePresentationDelayMs
androidx.collection.ArraySet: java.lang.Object[] sBaseCache
androidx.appcompat.R$styleable: int[] ActivityChooserView
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_CENTER
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionViewConstructorArguments
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable mIconDrawable
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: long duration
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_BACK_CENTER
androidx.appcompat.widget.ListPopupWindow: java.lang.Runnable mShowDropDownRunnable
androidx.appcompat.widget.FitWindowsLinearLayout: androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener mListener
com.google.android.exoplayer2.text.ttml.TtmlRegion: float textSize
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.trackselection.TrackSelector trackSelector
android.support.v4.media.session.ParcelableVolumeInfo: int currentVolume
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: byte[] scratch
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mSplitBackground
com.google.android.exoplayer2.mediacodec.MediaCodecSelector: com.google.android.exoplayer2.mediacodec.MediaCodecSelector DEFAULT
com.google.android.exoplayer2.Timeline$Period: com.google.android.exoplayer2.source.ads.AdPlaybackState adPlaybackState
org.slf4j.helpers.FormattingTuple: java.lang.Object[] argArray
com.bumptech.glide.request.ErrorRequestCoordinator: java.lang.Object requestLock
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo mInfo
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: byte[] JPEG_EXIF_SEGMENT_PREAMBLE_BYTES
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mCollapseButtonView
androidx.appcompat.widget.ActionMenuPresenter: boolean mWidthLimitSet
androidx.core.provider.FontsContractCompat$FontInfo: boolean mItalic
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper[] sampleStreamWrappers
androidx.appcompat.view.menu.MenuWrapperICS: androidx.core.internal.view.SupportMenu mWrappedObject
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int reportedWidth
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray nalLength
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: long programSplicePts
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_CODEC_NAME_UI
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler INSTANCE
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int sampleSize
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track: com.google.android.exoplayer2.extractor.mp4.Track track
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: com.google.android.exoplayer2.extractor.ts.TsExtractor this$0
com.bumptech.glide.load.resource.gif.GifDrawable: int maxLoopCount
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder sampleNumberHolder
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: int minHardwareDimension
androidx.appcompat.resources.R$styleable: int[] StateListDrawableItem
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mDeletedSize
com.google.android.exoplayer2.extractor.wav.WavExtractor: int dataStartPosition
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long durationUs
androidx.fragment.app.Fragment: boolean mPerformedCreateView
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_IMMEDIATE_RECONNECT
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IMPORT
com.google.android.exoplayer2.audio.Sonic: short[] downSampleBuffer
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mExitTransitionCallback
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDefaultTaskExecutor
androidx.recyclerview.widget.RecyclerView: boolean mIgnoreMotionEventTillDown
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: int playlistType
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence mTitle
tv.danmaku.ijk.media.player.IjkMediaPlayer: int mVideoHeight
androidx.core.util.Pools$SimplePool: int mPoolSize
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
androidx.appcompat.widget.ListPopupWindow: boolean mOverlapAnchor
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mStackedBackground
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: int componentTag
com.google.android.exoplayer2.ui.R$string: int exo_track_surround_7_point_1
androidx.appcompat.view.SupportActionModeWrapper: androidx.appcompat.view.ActionMode mWrappedObject
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: int rotationDegrees
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelection$Factory trackSelectionFactory
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.extractor.ts.AdtsReader reader
com.google.android.exoplayer2.util.ParsableByteArray: int position
com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup: com.google.android.exoplayer2.extractor.VorbisUtil$Mode[] modes
tv.danmaku.ijk.media.player.IjkMediaPlayer: int mListenerContext
androidx.collection.ContainerHelpers: long[] EMPTY_LONGS
androidx.recyclerview.widget.LayoutState: int mAvailable
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int indent
androidx.appcompat.R$id: int scrollIndicatorUp
com.google.android.exoplayer2.source.hls.HlsExtractorFactory: com.google.android.exoplayer2.source.hls.HlsExtractorFactory DEFAULT
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: android.content.Context context
androidx.fragment.app.FragmentPagerAdapter: int mBehavior
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata$Entry[] entries
com.google.android.exoplayer2.source.ProgressiveMediaSource: java.lang.Object tag
cn.jzvd.Jzvd: cn.jzvd.Jzvd$ProgressTimerTask mProgressTimerTask
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.Options options
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int bold
androidx.appcompat.view.menu.ActionMenuItemView: int mSavedPaddingLeft
androidx.media.AudioAttributesImplBase: int mFlags
com.google.android.exoplayer2.Timeline$Period: java.lang.Object uid
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int constraintsFlagsAndReservedZero2Bits
androidx.appcompat.widget.AppCompatTextHelper: int mFontWeight
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher$ListenerAndHandler: android.os.Handler handler
com.google.android.exoplayer2.text.ssa.SsaDecoder: java.util.Map styles
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format unadjustedUpstreamFormat
androidx.appcompat.R$style: int Theme_AppCompat_Light
com.google.android.exoplayer2.extractor.ts.AdtsReader: int state
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String title
com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook: int dimensions
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String url
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean isQuickTime
androidx.media.AudioAttributesImplApi21: android.media.AudioAttributes mAudioAttributes
com.bumptech.glide.load.resource.bitmap.CenterCrop: byte[] ID_BYTES
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: long[] durationsUs
androidx.core.widget.NestedScrollView$SavedState: int scrollPosition
androidx.appcompat.widget.LinearLayoutCompat: int[] mMaxDescent
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: byte[] buffer
androidx.appcompat.R$styleable: int Spinner_android_entries
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: long byterangeLength
com.bumptech.glide.load.resource.gif.GifFrameLoader: int height
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_ATTR_BYTERANGE
androidx.appcompat.R$styleable: int[] GradientColorItem
com.google.android.exoplayer2.extractor.MpegAudioHeader: int[] SAMPLING_RATE_V1
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.Object mItem
com.google.android.exoplayer2.metadata.icy.IcyDecoder: java.nio.charset.CharsetDecoder iso88591Decoder
com.google.android.exoplayer2.drm.DrmInitData: int hashCode
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutAlphabeticChar
androidx.core.app.RemoteActionCompat: boolean mShouldShowIcon
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableEnd
androidx.appcompat.app.TwilightManager$TwilightState: long tomorrowSunrise
com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning
com.google.android.exoplayer2.ui.R$string: int exo_track_unknown
com.bumptech.glide.util.pool.FactoryPools$FactoryPool: com.bumptech.glide.util.pool.FactoryPools$Resetter resetter
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List audios
com.google.android.exoplayer2.extractor.Id3Peeker: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.google.android.exoplayer2.extractor.flv.FlvExtractor: long tagTimestampUs
com.google.android.exoplayer2.text.dvb.DvbSubtitle: java.util.List cues
com.google.android.exoplayer2.extractor.flv.TagPayloadReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: long sampleRate
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long sampleBytesTransferred
androidx.core.widget.AutoScrollHelper: float[] mMinimumVelocity
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long[] positions
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int[] NO_TRACKS
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long allowedJoiningTimeMs
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int targetSampleSizeFrames
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: boolean hasOutputFormat
org.slf4j.event.Level: org.slf4j.event.Level[] $VALUES
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider mActionProvider
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor mFontFamilyCtor
com.google.android.exoplayer2.Format: java.lang.String sampleMimeType
com.bumptech.glide.load.engine.Engine$EngineJobFactory: androidx.core.util.Pools$Pool pool
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo val$nextInfo
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: java.lang.String subtitleGroupId
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: boolean isWithinRendererCapabilities
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter mOuterActionMenuPresenter
cn.jzvd.demo.VideoConstant: java.lang.String[][] videoTitles
com.google.android.exoplayer2.source.SinglePeriodTimeline: java.lang.Object tag
androidx.core.widget.NestedScrollView: int mActivePointerId
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId periodId
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
com.google.android.exoplayer2.drm.FrameworkMediaCrypto: byte[] sessionId
com.bumptech.glide.load.engine.DataCacheGenerator: int sourceIdIndex
cn.jzvd.demo.ActivityWebView$JZCallBack: cn.jzvd.demo.ActivityWebView this$0
android.support.v4.media.MediaMetadataCompat: java.lang.String[] PREFERRED_BITMAP_ORDER
androidx.core.app.TaskStackBuilder: java.util.ArrayList mIntents
androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool
com.google.android.exoplayer2.extractor.wav.WavSeekMap: com.google.android.exoplayer2.extractor.wav.WavHeader wavHeader
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonPositiveText
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: long endPosition
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: java.io.File directory
com.bumptech.glide.request.SingleRequest: int overrideHeight
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry: java.lang.Class dataClass
androidx.viewpager.widget.ViewPager: int mScrollState
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener
com.google.android.exoplayer2.decoder.SimpleDecoder: boolean released
androidx.appcompat.R$styleable: int ActionBar_subtitleTextStyle
com.google.android.exoplayer2.text.ssa.SsaStyle: int alignment
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern ALIGNMENT_OVERRIDE_PATTERN
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROPV_DECODER_MEDIACODEC
androidx.appcompat.view.menu.BaseMenuWrapper: android.content.Context mContext
com.google.android.exoplayer2.MediaPeriodQueue: long nextWindowSequenceNumber
androidx.appcompat.R$id: int title
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mTriggerLongPress
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuBuilder$ItemInvoker mItemInvoker
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mDeltaTime
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder BIG_ENDIAN
tv.danmaku.ijk.media.player.MediaPlayerProxy$6: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
androidx.fragment.app.Fragment: java.lang.Object USE_DEFAULT_TRANSITION
androidx.appcompat.view.menu.CascadingMenuPopup: android.content.Context mContext
androidx.fragment.app.Fragment: android.util.SparseArray mSavedViewState
androidx.appcompat.widget.RtlSpacingHelper: int mRight
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: int preferredLanguageScore
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: float bandwidthFraction
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemActionViewLayout
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: boolean hasOutputFormat
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int colorSpace
com.bumptech.glide.load.resource.gif.GifFrameLoader: int firstFrameSize
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat$Impl mImpl
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long durationUs
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry: java.lang.Class resourceClass
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView mMenuView
androidx.appcompat.R$styleable: int[] ViewStubCompat
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int sampleCurrentNalBytesRemaining
androidx.fragment.app.FragmentTransaction: int mTransitionStyle
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: java.util.IdentityHashMap streamWrapperIndices
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate REQUIRED_ID3_FRAME_PREDICATE
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: int playheadOffsetCount
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.upstream.Allocator allocator
androidx.recyclerview.widget.RecyclerView$ViewHolder: long mItemId
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean writingParameterSets
com.bumptech.glide.request.BaseRequestOptions: android.content.res.Resources$Theme theme
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_LANGUAGE
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.FragmentTransitionImpl val$impl
androidx.appcompat.app.AlertController: android.widget.Button mButtonNeutral
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: java.lang.String audioGroupId
androidx.recyclerview.widget.RecyclerView: int mLastTouchX
androidx.core.graphics.PathParser$ExtractFloatResult: boolean mEndWithNegOrDot
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: int version
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets mInsets
com.google.android.exoplayer2.util.NalUnitUtil: float[] ASPECT_RATIO_IDC_VALUES
com.google.android.exoplayer2.extractor.mp4.Track: long[] editListMediaTimes
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mCollapseDescription
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: java.lang.Object tag
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String mAction
androidx.recyclerview.widget.RecyclerView: int mLayoutOrScrollCounter
androidx.collection.ArraySet: int[] mHashes
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.content.Context listPresenterContext
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.drm.DrmInitData drmInitData
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory playlistParserFactory
androidx.appcompat.widget.ActionMenuPresenter: boolean mMaxItemsSet
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int height
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sPendingHandler
tv.danmaku.ijk.media.player.MediaInfo: java.lang.String mMediaPlayerName
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: java.nio.ByteBuffer byteBuffer
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: com.google.android.exoplayer2.video.spherical.CameraMotionListener listener
cn.jzvd.R$id: int tv_brightness
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mPositiveButtonIcon
com.bumptech.glide.request.BaseRequestOptions: java.lang.Class resourceClass
com.google.android.exoplayer2.ExoPlayerImplInternal: int repeatMode
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate NO_FRAMES_PREDICATE
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: int chunkSize
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID uuid
com.bumptech.glide.load.data.BufferedOutputStream: int index
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemChecked
com.google.android.exoplayer2.extractor.VorbisUtil$Mode: int mapping
com.bumptech.glide.load.data.StreamLocalUriFetcher: android.content.UriMatcher URI_MATCHER
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType UNKNOWN
androidx.appcompat.app.AppCompatDelegateImpl: boolean mInvalidatePanelMenuPosted
com.bumptech.glide.request.target.ViewTarget: boolean isTagUsedAtLeastOnce
com.google.android.exoplayer2.util.ParsableBitArray: byte[] data
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mCachedTint
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeightMode
androidx.fragment.app.FragmentManagerImpl$5: androidx.fragment.app.Fragment val$fragment
com.google.android.exoplayer2.video.HevcConfig: int nalUnitLengthFieldLength
androidx.core.view.ViewCompat: java.util.concurrent.atomic.AtomicInteger sNextGeneratedId
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean sampleInitializationVectorRead
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int colorRange
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_AUDIO_DECODER
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long firstFrameBytePosition
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool: java.util.Queue pool
com.google.android.exoplayer2.audio.DefaultAudioSink$1: com.google.android.exoplayer2.audio.DefaultAudioSink this$0
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: com.google.android.exoplayer2.util.FlacStreamMetadata flacStreamMetadata
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromBuffer
androidx.appcompat.R$attr: int colorControlNormal
com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues: int sampleDescriptionIndex
cn.jzvd.demo.ActivityApi: cn.jzvd.JzvdStd mJzvdStd
androidx.appcompat.view.menu.BaseMenuPresenter: int mId
androidx.appcompat.R$styleable: int[] LinearLayoutCompat
com.google.android.exoplayer2.upstream.ContentDataSource: boolean opened
cn.jzvd.R$layout: int jz_layout_clarity
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: java.lang.Class[] PARAM_TYPES
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.view.View mCustomView
cn.jzvd.JzvdStd: android.app.Dialog mBrightnessDialog
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_PATH
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: int provider
androidx.media.AudioAttributesCompat: android.util.SparseIntArray SUPPRESSIBLE_USAGES
androidx.fragment.app.BackStackState: int mTransitionStyle
com.google.android.exoplayer2.upstream.DefaultDataSource: android.content.Context context
com.google.android.exoplayer2.extractor.ts.H264Reader: boolean allowNonIdrKeyframes
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore$ProcessCallback mViewInfoProcessCallback
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State DESTROYED
androidx.core.R$id: int accessibility_custom_action_26
org.slf4j.helpers.Util: boolean SECURITY_MANAGER_CREATION_ALREADY_ATTEMPTED
com.google.android.exoplayer2.audio.DefaultAudioSink: int audioSessionId
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsFlushWorkaround
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue[] sampleQueues
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean isFirstSlice
com.google.android.exoplayer2.text.ttml.TtmlRegion: int textSizeType
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: java.util.UUID WAVE_SUBFORMAT_PCM
com.google.android.exoplayer2.metadata.emsg.EventMessage: java.lang.String value
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri mUri
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.ListMenuPresenter this$0
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format[] formats
com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames
com.google.android.exoplayer2.extractor.ts.PesReader: long timeUs
androidx.appcompat.R$styleable: int AppCompatTheme_panelBackground
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isInCaptionService
androidx.exifinterface.media.ExifInterface: java.lang.String mFilename
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int verticalAnchor
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int levelOfCompatibility
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_STEREO_RIGHT
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mStrategy
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mTitle
com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy: int minimumLoadableRetryCount
com.google.android.exoplayer2.audio.SonicAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat pendingOutputAudioFormat
com.google.android.exoplayer2.upstream.UdpDataSource: android.net.Uri uri
cn.jzvd.demo.ActivityListViewNormal: cn.jzvd.Jzvd$JZAutoFullscreenListener sensorEventListener
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: int nextPlayheadOffsetIndex
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.util.pool.StateVerifier stateVerifier
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.util.ParsableByteArray buffer
com.google.android.exoplayer2.DefaultLoadControl: long bufferForPlaybackUs
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: long timeUs
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: long[] cueTimesUs
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: java.util.List subtitleInfos
androidx.appcompat.widget.ThemeUtils: int[] SELECTED_STATE_SET
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean seenClusterPositionForCurrentCuePoint
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_NOT_SEEKABLE
com.bumptech.glide.load.engine.EngineKey: com.bumptech.glide.load.Key signature
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.SingleRequest$Status status
androidx.appcompat.R$attr: int colorControlActivated
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: android.widget.ImageView shareButton
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: com.google.android.exoplayer2.util.Clock clock
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean detectAccessUnits
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int pixelCode2Bit
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_TIMED_OUT
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: int mProxyEndCount
androidx.appcompat.R$styleable: int CompoundButton_buttonTintMode
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMaxTextSizeInPx
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mSlopBounds
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$sharedElementTransition
com.google.android.exoplayer2.DefaultMediaClock: com.google.android.exoplayer2.util.StandaloneMediaClock standaloneClock
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int[] sampleQueueTrackIds
androidx.appcompat.R$styleable: int TextAppearance_android_textColor
androidx.core.R$id: int accessibility_custom_action_13
com.google.android.exoplayer2.ExoPlayerImpl: android.os.Handler eventHandler
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.reflect.Method mResolvedMethod
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: com.bumptech.glide.load.model.ModelLoader fileDelegate
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.video.ColorInfo colorInfo
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorX
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.Renderer[] enabledRenderers
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: byte[] endBuffer
com.google.android.exoplayer2.audio.Ac3Util: int[] SAMPLE_RATE_BY_FSCOD2
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier: boolean isReleased
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mChildStart
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: java.util.List cues
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsEosOutputExceptionWorkaround
androidx.viewpager.widget.ViewPager: int mPageTransformerLayerType
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] mAutoSizeTextSizesInPx
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COPY
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.BaseRequestOptions requestOptions
androidx.fragment.app.FragmentManagerImpl: android.os.Bundle mStateBundle
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton mOverflowButton
com.bumptech.glide.load.resource.bitmap.Downsampler: java.util.Set NO_DOWNSAMPLE_PRE_N_MIME_TYPES
androidx.appcompat.R$attr: int toolbarStyle
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_CLIP_PATH
com.bumptech.glide.GlideContext: com.bumptech.glide.Registry registry
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: com.google.android.exoplayer2.util.Clock clock
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: android.text.SpannableStringBuilder captionStringBuilder
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: int[] useDrmSessionsForClearContentTrackTypes
androidx.exifinterface.media.ExifInterface: java.util.HashMap sExifPointerTagMap
com.danikula.videocache.HttpProxyCache: com.danikula.videocache.HttpUrlSource source
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable mIconDrawable
com.google.android.exoplayer2.text.Cue: float line
com.bumptech.glide.load.data.BufferedOutputStream: byte[] buffer
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int outputSampleRate
androidx.appcompat.R$styleable: int TextAppearance_textLocale
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool parserPool
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int localeLanguageMatchIndex
androidx.appcompat.R$styleable: int SearchView_commitIcon
androidx.appcompat.widget.Toolbar: int mContentInsetEndWithActions
com.bumptech.glide.Priority: com.bumptech.glide.Priority HIGH
androidx.fragment.app.FragmentManagerState: java.lang.String mPrimaryNavActiveWho
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int reason
com.bumptech.glide.load.engine.Engine$DecodeJobFactory: int creationOrder
androidx.appcompat.view.menu.ListMenuItemView: android.widget.CheckBox mCheckBox
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int sampleBytesRead
androidx.exifinterface.media.ExifInterface: java.nio.charset.Charset ASCII
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LiveData this$0
androidx.fragment.app.FragmentManagerImpl$3: android.view.ViewGroup val$container
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: com.google.android.exoplayer2.video.VideoRendererEventListener listener
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: byte[] maybeSilenceBuffer
androidx.core.text.PrecomputedTextCompat: android.text.Spannable mText
com.bumptech.glide.load.model.ModelLoader$LoadData: java.util.List alternateKeys
androidx.viewpager.widget.ViewPager: int mActivePointerId
com.google.android.exoplayer2.util.Util: java.lang.String[] isoGrandfatheredTagReplacements
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.TrackGroupArray trackGroups
androidx.fragment.app.Fragment: float mPostponedAlpha
com.google.android.exoplayer2.text.cea.CeaDecoder: java.util.ArrayDeque availableInputBuffers
androidx.appcompat.app.AppCompatDialog: androidx.core.view.KeyEventDispatcher$Component mKeyDispatcher
androidx.appcompat.widget.ListPopupWindow: android.widget.AdapterView$OnItemClickListener mItemClickListener
androidx.core.provider.FontRequest: java.lang.String mProviderAuthority
com.bumptech.glide.provider.EncoderRegistry$Entry: com.bumptech.glide.load.Encoder encoder
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineResource engineResource
androidx.appcompat.widget.ListPopupWindow: int mDropDownHeight
com.google.android.exoplayer2.extractor.DefaultExtractorInput: byte[] scratchSpace
com.google.android.exoplayer2.source.ClippingMediaPeriod: long pendingInitialDiscontinuityPositionUs
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.fragment.app.FragmentHostCallback: android.app.Activity mActivity
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsMonoChannelCountWorkaround
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache sInstance
androidx.core.provider.SelfDestructiveThread: android.os.HandlerThread mThread
com.bumptech.glide.request.ThumbnailRequestCoordinator: com.bumptech.glide.request.RequestCoordinator parent
com.google.android.exoplayer2.audio.AudioAttributes: int flags
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder: java.lang.Object data
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$finalSharedElementTransition
androidx.appcompat.R$styleable: int[] AlertDialog
com.bumptech.glide.disklrucache.DiskLruCache$Value: long sequenceNumber
com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache this$0
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.AudioBecomingNoisyManager audioBecomingNoisyManager
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: int majorVersion
cn.jzvd.demo.AdapterRecyclerViewTiny: int[] videoIndexs
androidx.core.view.KeyEventDispatcher: boolean sDialogFieldsFetched
com.google.android.exoplayer2.upstream.DataSourceInputStream: boolean closed
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_MEDIA_ACCURATE_SEEK_COMPLETE
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache keyCache
androidx.core.provider.FontRequest: java.lang.String mQuery
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable mLayoutState
cn.jzvd.JzvdStd: java.util.Timer DISMISS_CONTROL_VIEW_TIMER
androidx.appcompat.R$styleable: int[] CompoundButton
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuItemImpl mCurrentExpandedItem
com.bumptech.glide.load.model.ModelCache$1: com.bumptech.glide.load.model.ModelCache this$0
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] $VALUES
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: int availNum
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.util.PriorityTaskManager priorityTaskManager
androidx.appcompat.widget.AppCompatSpinner: android.content.Context mPopupContext
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long bufferSizeUs
androidx.appcompat.R$id: int submenuarrow
com.google.android.exoplayer2.extractor.VorbisBitArray: int bitOffset
androidx.recyclerview.widget.RecyclerView: int mScrollPointerId
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span mSpan
cn.jzvd.R$layout: int jz_dialog_progress
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expanded
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.widget.TextView mTextView
androidx.core.R$id: int tag_transition_group
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.google.android.exoplayer2.text.ttml.TtmlStyle: java.lang.String fontFamily
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: int blockSize1
com.bumptech.glide.load.ImageHeaderParserUtils$4: java.io.InputStream val$finalIs
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mScrollingOffset
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$MetadataSampleInfo: long presentationTimeDeltaUs
com.google.android.exoplayer2.text.ttml.TtmlStyle: int bold
com.google.android.exoplayer2.metadata.id3.InternalFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.R$id: int customPanel
com.google.android.exoplayer2.text.ttml.TtmlStyle: java.lang.String id
androidx.fragment.app.Fragment: boolean mRemoving
com.google.android.exoplayer2.DefaultLoadControl: boolean hasVideo
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory: android.content.Context context
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: java.lang.String name
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.util.BitSet mRemainingSpans
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mFocusable
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.google.android.exoplayer2.upstream.ContentDataSource: android.content.ContentResolver resolver
androidx.fragment.app.Fragment$AnimationInfo: boolean mEnterTransitionPostponed
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: com.bumptech.glide.load.model.ByteArrayLoader$Converter converter
androidx.core.app.BundleCompat$BundleCompatBaseImpl: boolean sGetIBinderMethodFetched
androidx.versionedparcelable.VersionedParcelParcel: android.util.SparseIntArray mPositionLookup
androidx.appcompat.widget.SearchView: boolean mQueryRefinement
androidx.lifecycle.ReflectiveGenericLifecycleObserver: java.lang.Object mWrapped
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode mCurrentMode
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView this$0
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable mPendingOverflowIcon
androidx.appcompat.R$id: int parentPanel
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarOverlayLayout mOverlayLayout
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemAlphabeticModifiers
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mIcon
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_SELECTED_AUDIO_STREAM
androidx.viewpager.widget.ViewPager: boolean mIsUnableToDrag
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy
com.google.android.exoplayer2.SimpleExoPlayer: int surfaceHeight
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType RAW
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mHideListener
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.LoadControl loadControl
com.google.android.exoplayer2.Format: float frameRate
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory: java.lang.String name
androidx.appcompat.widget.ListPopupWindow: int mListItemExpandMaximum
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean handledEndOfStream
androidx.collection.LruCache: java.util.LinkedHashMap map
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: long loadDurationMs
androidx.appcompat.R$id: int topPanel
com.google.android.exoplayer2.extractor.DefaultExtractorInput: long streamLength
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mSharedElementEnterTransition
org.slf4j.event.EventRecodingLogger: java.lang.String name
com.bumptech.glide.load.resource.gif.GifBitmapProvider: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: java.lang.String mimeType
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple: int channelCount
androidx.core.graphics.drawable.IconCompat: java.lang.String mTintModeStr
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.appcompat.app.AppCompatDelegateImpl: int mThemeResId
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: androidx.cursoradapter.widget.CursorAdapter this$0
androidx.collection.MapCollections$KeySet: androidx.collection.MapCollections this$0
androidx.appcompat.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
androidx.fragment.app.FragmentManagerImpl: java.util.HashMap mActive
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy NONE
com.google.android.exoplayer2.extractor.ts.Ac3Reader: java.lang.String language
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: androidx.core.util.Pools$Pool throwableListPool
com.google.android.exoplayer2.ui.SubtitlePainter: float spacingMult
com.google.android.exoplayer2.trackselection.TrackSelectorResult: int length
androidx.fragment.app.FragmentManagerImpl: java.lang.Runnable mExecCommit
androidx.appcompat.resources.R$styleable: int[] GradientColorItem
com.google.android.exoplayer2.extractor.ts.AdtsReader: int firstFrameSampleRateIndex
com.google.android.exoplayer2.BaseRenderer: long streamOffsetUs
com.google.android.exoplayer2.util.SlidingPercentile$Sample: float value
androidx.appcompat.widget.SearchView: boolean mIconifiedByDefault
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsDestroyed
com.google.android.exoplayer2.util.NalUnitUtil$PpsData: boolean bottomFieldPicOrderInFramePresentFlag
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: int componentTag
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: java.lang.String targetVoice
androidx.appcompat.R$dimen: int abc_action_bar_stacked_max_height
androidx.fragment.app.BackStackState: int[] mOldMaxLifecycleStates
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.ExoMediaDrm exoMediaDrm
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_FRONT_CENTER
androidx.media.AudioAttributesImplApi21: int mLegacyStreamType
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta mStreamMeta
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] $VALUES
com.bumptech.glide.request.BaseRequestOptions: android.graphics.drawable.Drawable fallbackDrawable
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: int currentSpeedIndex
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int CTRL_WILL_TCP_OPEN
com.google.android.exoplayer2.extractor.ts.DtsReader: com.google.android.exoplayer2.util.ParsableByteArray headerScratchBytes
androidx.interpolator.view.animation.LookupTableInterpolator: float mStepSize
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.DefaultMediaClock mediaClock
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: int slidingWindowMaxWeight
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipCompatHandler sActiveHandler
androidx.appcompat.R$styleable: int PopupWindow_overlapAnchor
cn.jzvd.R$id: int back
com.google.android.exoplayer2.extractor.ogg.StreamReader: boolean seekMapSet
cn.jzvd.R$id: int volume_progressbar
com.google.android.exoplayer2.WakeLockManager: android.os.PowerManager powerManager
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: int targetType
com.bumptech.glide.load.engine.DataCacheWriter: java.lang.Object data
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] WINDOW_STYLE_FILL
com.google.android.exoplayer2.extractor.ts.Ac3Reader: long sampleDurationUs
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int italic
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mFillColor
androidx.appcompat.widget.AppCompatImageHelper: android.widget.ImageView mView
androidx.fragment.app.FragmentManagerImpl: boolean mNeedMenuInvalidate
com.bumptech.glide.request.SingleRequest: int width
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: java.util.List closedCaptionFormats
cn.jzvd.JzvdStd: android.widget.ImageView backButton
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState PAUSED
androidx.appcompat.view.menu.CascadingMenuPopup: int mLastPosition
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView mRecyclerView
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.source.MediaSource mediaSource
com.google.android.exoplayer2.extractor.wav.WavHeader: int bitsPerSample
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mSubtitle
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int fontSizeUnit
com.google.android.exoplayer2.util.Clock: com.google.android.exoplayer2.util.Clock DEFAULT
com.bumptech.glide.gifdecoder.StandardGifDecoder: byte[] mainPixels
com.google.android.exoplayer2.MediaPeriodInfo: long contentPositionUs
androidx.appcompat.app.AlertController$AlertParams: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.EngineJobListener engineJobListener
androidx.appcompat.view.SupportMenuInflater$MenuState: android.content.res.ColorStateList itemIconTintList
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: com.google.android.exoplayer2.source.TrackGroupArray[] rendererTrackGroups
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean seenFirstTrackSelection
com.bumptech.glide.load.engine.ResourceCacheGenerator: java.io.File cacheFile
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_BIT_RATE_UI
tv.danmaku.ijk.media.player.IjkMediaPlayer: int OPT_CATEGORY_SWS
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup val$popup
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_FRONT_RIGHT
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.Priority priority
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: java.lang.String videoGroupId
androidx.appcompat.R$attr: int panelMenuListTheme
com.bumptech.glide.gifdecoder.GifFrame: int ix
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean isLive
androidx.core.R$styleable: int GradientColor_android_type
com.google.android.exoplayer2.extractor.ogg.StreamReader: int state
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_FOCUS
com.bumptech.glide.load.model.ModelCache$ModelKey: java.util.Queue KEY_QUEUE
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean released
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: int metadataType
androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_XMP_APP1
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMajor
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mFrameworkMinimumSdk
androidx.core.R$styleable: int FontFamily_fontProviderFetchTimeout
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction RETRY
androidx.appcompat.app.AppCompatDelegateImpl$7: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId DUMMY_MEDIA_PERIOD_ID
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: int nalUnitType
androidx.appcompat.R$attr: int toolbarNavigationButtonStyle
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: android.view.ViewTreeObserver$OnGlobalLayoutListener val$layoutListener
com.google.android.exoplayer2.metadata.id3.MlltFrame: int millisecondsBetweenReference
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_ERROR
androidx.appcompat.widget.Toolbar: int mTitleMarginStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0
androidx.fragment.app.Fragment: boolean mFromLayout
com.google.android.exoplayer2.decoder.DecoderInputBuffer: long timeUs
com.google.android.exoplayer2.source.hls.HlsMediaChunk: int uid
com.bumptech.glide.disklrucache.DiskLruCache: java.util.LinkedHashMap lruEntries
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: com.google.android.exoplayer2.util.EGLSurfaceTexture eglSurfaceTexture
androidx.fragment.app.BackStackState: java.lang.String mName
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback mPopupCallback
com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData: int id
androidx.appcompat.app.AlertController: android.view.Window mWindow
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_WIDTH
cn.jzvd.demo.AdapterListView: java.lang.String[] videoThumbs
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isCaptionValid
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathStart
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener mTabClickListener
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
androidx.appcompat.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.SparseArrayCompat mStateIds
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isLastOutputBuffer
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: com.google.android.exoplayer2.extractor.mkv.VarintReader varintReader
androidx.appcompat.R$styleable: int Toolbar_logo
com.google.android.exoplayer2.source.IcyDataSource: com.google.android.exoplayer2.upstream.DataSource upstream
androidx.core.widget.AutoScrollHelper: boolean mAlreadyDelayed
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mDoAfterTextChanged
android.support.v4.media.MediaDescriptionCompat: java.lang.CharSequence mDescription
com.google.android.exoplayer2.text.ttml.TtmlStyle: float fontSize
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mEnterFadeDuration
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: int chunkOffset
com.bumptech.glide.GlideContext: com.bumptech.glide.load.engine.Engine engine
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long[] pendingOutputStreamSwitchTimesUs
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int pendingOutputStreamOffsetCount
com.google.android.exoplayer2.ui.SubtitlePainter: float spacingAdd
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isComplete
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_7POINT1_WIDE
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: android.util.SparseIntArray mSpanIndexCache
com.google.android.exoplayer2.metadata.emsg.EventMessage: com.google.android.exoplayer2.Format ID3_FORMAT
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mBaseHeight
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.android.exoplayer2.source.BaseMediaSource: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: boolean isInputPcm
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int windowAnimations
com.google.android.exoplayer2.extractor.ts.AdtsReader: java.lang.String language
androidx.appcompat.R$drawable: int abc_list_divider_mtrl_alpha
com.google.android.exoplayer2.extractor.ts.Ac3Reader: com.google.android.exoplayer2.extractor.TrackOutput output
androidx.arch.core.internal.FastSafeIterableMap: java.util.HashMap mHashMap
androidx.appcompat.widget.Toolbar$SavedState: boolean isOverflowOpen
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: int subtitlePageId
androidx.appcompat.R$styleable: int ViewBackgroundHelper_backgroundTint
androidx.fragment.app.FragmentManagerImpl$2: androidx.fragment.app.FragmentManagerImpl this$0
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: int disabledTextTrackSelectionFlags
com.google.android.exoplayer2.decoder.DecoderInputBuffer: java.nio.ByteBuffer supplementalData
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean mediaSegmentEncrypted
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: long sampleTimeUs
com.google.android.exoplayer2.drm.DefaultDrmSession: java.util.List schemeDatas
androidx.appcompat.view.menu.MenuBuilder: java.util.concurrent.CopyOnWriteArrayList mPresenters
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager INSTANCE
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int tsFlags
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory DEFAULT_FACTORY
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int groupIndex
com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData: byte[] bottomFieldData
com.google.android.exoplayer2.extractor.ts.H262Reader: double[] FRAME_RATE_VALUES
com.bumptech.glide.gifdecoder.GifFrame: int iy
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean BLOCK_HARDWARE_BITMAPS_WHEN_GL_CONTEXT_MIGHT_NOT_BE_INITIALIZED
com.google.android.exoplayer2.text.ttml.TtmlRegion: float height
com.google.android.exoplayer2.metadata.id3.GeobFrame: java.lang.String filename
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List sessionKeyDrmInitData
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_BACKGROUND_MULTIPLY
androidx.appcompat.app.TwilightManager$TwilightState: boolean isNight
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mSarDen
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory: com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy uncaughtThrowableStrategy
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mStateful
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.Priority priority
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mIcon
com.google.android.exoplayer2.metadata.icy.IcyHeaders: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: long[] referenceTimesMs
com.google.android.exoplayer2.extractor.ts.DtsReader: int bytesRead
com.google.android.exoplayer2.extractor.mp4.TrackFragment: boolean sampleEncryptionDataNeedsFill
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mExitFadeDuration
androidx.appcompat.widget.AppCompatSeekBarHelper: android.content.res.ColorStateList mTickMarkTintList
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.ExoMediaDrm mediaDrm
androidx.appcompat.R$styleable: int MenuView_android_itemBackground
androidx.appcompat.R$styleable: int[] FontFamily
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: androidx.cursoradapter.widget.CursorAdapter this$0
org.slf4j.helpers.SubstituteLogger: java.util.Queue eventQueue
com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook: int entries
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int bitmapY
androidx.appcompat.view.menu.StandardMenuPopup: int mDropDownGravity
com.google.android.exoplayer2.ExoPlayerImplInternal: long backBufferDurationUs
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.Format codecFormat
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: com.google.android.exoplayer2.audio.AudioSink audioSink
androidx.recyclerview.widget.RecyclerView: float mScaledHorizontalScrollFactor
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.core.content.ContextCompat: java.lang.Object sLock
com.google.android.exoplayer2.util.SlidingPercentile: java.util.Comparator INDEX_COMPARATOR
com.google.android.exoplayer2.extractor.ts.TsExtractor: int mode
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.resource.gif.GifFrameLoader$OnEveryFrameListener onEveryFrameListener
com.bumptech.glide.load.model.FileLoader$Factory: com.bumptech.glide.load.model.FileLoader$FileOpener opener
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect mConstantPadding
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConstructorFetched
cn.jzvd.R$id: int layout_top
androidx.core.text.PrecomputedTextCompat$Params$Builder: android.text.TextDirectionHeuristic mTextDir
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_DOWN
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitle
com.google.android.exoplayer2.decoder.CryptoInfo: int encryptedBlocks
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: java.util.List parsers
com.bumptech.glide.RequestManager: java.lang.Runnable addSelfToLifecycle
com.bumptech.glide.gifdecoder.GifHeader: int height
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource contentDataSource
com.google.android.exoplayer2.text.TextRenderer: int decoderReplacementState
tv.danmaku.ijk.media.player.IjkMediaPlayer: int OPT_CATEGORY_CODEC
androidx.appcompat.app.WindowDecorActionBar: boolean mContentAnimations
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback mPopupCallback
com.google.android.exoplayer2.SeekParameters: com.google.android.exoplayer2.SeekParameters CLOSEST_SYNC
androidx.appcompat.R$id: int buttonPanel
com.google.android.exoplayer2.DefaultMediaClock: com.google.android.exoplayer2.util.MediaClock rendererClock
tv.danmaku.ijk.media.player.IjkTimedText: android.graphics.Rect mTextBounds
com.bumptech.glide.RequestBuilder: java.util.List requestListeners
com.bumptech.glide.gifdecoder.StandardGifDecoder: com.bumptech.glide.gifdecoder.GifHeader header
com.google.android.exoplayer2.ui.SubtitlePainter: int textTop
com.danikula.videocache.HttpProxyCacheServer$Builder: com.danikula.videocache.file.DiskUsage diskUsage
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int mOriginalHorizontalOffset
androidx.core.widget.AutoScrollHelper: boolean mEnabled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeMiterlimit
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.content.Context mContext
com.google.android.exoplayer2.ui.R$string: int exo_track_role_closed_captions
androidx.activity.OnBackPressedCallback: boolean mEnabled
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMinor
androidx.appcompat.widget.Toolbar: boolean mCollapsible
androidx.core.os.TraceCompat: java.lang.reflect.Method sTraceCounterMethod
com.google.android.exoplayer2.audio.BaseAudioProcessor: java.nio.ByteBuffer buffer
com.google.android.exoplayer2.ui.SubtitlePainter: boolean applyEmbeddedStyles
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.upstream.FileDataSource: boolean opened
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockTrackNumber
androidx.appcompat.widget.Toolbar: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: long lastTimestampUs
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.regex.Pattern PIXEL_COORDINATES
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder: com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder wrapped
androidx.loader.app.LoaderManagerImpl$LoaderInfo: int mId
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_dark
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: com.google.android.exoplayer2.extractor.ts.Ac3Reader reader
androidx.arch.core.executor.DefaultTaskExecutor: android.os.Handler mMainHandler
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints startSeekPoints
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: int nextSamplesPerChunkChangeIndex
android.support.v4.os.ResultReceiver: android.os.Handler mHandler
com.google.android.exoplayer2.source.TrackGroup: int length
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_UP
com.google.android.exoplayer2.metadata.icy.IcyHeaders: int bitrate
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.LifecycleEventObserver mLifecycleObserver
androidx.fragment.app.Fragment: java.lang.String mWho
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool keyPool
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource rtmpDataSource
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.OutputBuffer[] availableOutputBuffers
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean sampleIsKeyframe
com.google.android.exoplayer2.extractor.ts.Ac4Reader: long sampleDurationUs
com.google.android.exoplayer2.audio.Sonic: short[] inputBuffer
androidx.recyclerview.widget.RecyclerView: int mInterceptRequestLayoutDepth
androidx.lifecycle.ViewModel: boolean mCleared
tv.danmaku.ijk.media.player.IjkMediaPlayer: int SDL_FCC_RV16
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanSize
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mLogo
com.google.android.exoplayer2.audio.Sonic: int outputFrameCount
com.bumptech.glide.load.Option: com.bumptech.glide.load.Option$CacheKeyUpdater EMPTY_UPDATER
com.google.android.exoplayer2.upstream.DataSpec: java.lang.String key
com.google.android.exoplayer2.extractor.ogg.OggExtractor: com.google.android.exoplayer2.extractor.ogg.StreamReader streamReader
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String mFormat
com.google.android.exoplayer2.extractor.ts.Ac4Reader: com.google.android.exoplayer2.util.ParsableByteArray headerScratchBytes
com.google.android.exoplayer2.extractor.ts.PsExtractor: boolean foundVideoTrack
com.google.android.exoplayer2.DefaultLoadControl: long backBufferDurationUs
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long lastRenderTimeUs
com.google.android.exoplayer2.upstream.DataSchemeDataSource: int readPosition
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
com.bumptech.glide.util.ContentLengthInputStream: long contentLength
androidx.viewpager.widget.ViewPager: int mTopPageBounds
com.bumptech.glide.load.engine.Engine: boolean VERBOSE_IS_LOGGABLE
android.support.v4.media.RatingCompat: int mRatingStyle
androidx.appcompat.R$styleable: int AlertDialog_listItemLayout
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag JPEG_INTERCHANGE_FORMAT_TAG
androidx.recyclerview.widget.LinearLayoutManager: boolean mShouldReverseLayout
androidx.appcompat.widget.DropDownListView: int mMotionPosition
tv.danmaku.ijk.media.player.MediaPlayerProxy$1: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
androidx.appcompat.R$drawable: int abc_ic_ab_back_material
androidx.collection.ContainerHelpers: int[] EMPTY_INTS
androidx.appcompat.view.menu.MenuBuilder: boolean mItemsChangedWhileDispatchPrevented
com.bumptech.glide.RequestBuilder$1: int[] $SwitchMap$android$widget$ImageView$ScaleType
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int maxVideoWidth
androidx.viewpager.widget.ViewPager: int mDecorChildCount
androidx.appcompat.app.AlertController: android.os.Message mButtonNeutralMessage
com.google.android.exoplayer2.extractor.ts.PesReader: boolean dataAlignmentIndicator
androidx.core.provider.SelfDestructiveThread: android.os.Handler$Callback mCallback
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor mTouchInterceptor
com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver: com.google.android.exoplayer2.AudioBecomingNoisyManager$EventListener listener
androidx.core.widget.NestedScrollView: android.view.VelocityTracker mVelocityTracker
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: int relativeDiscontinuitySequence
com.bumptech.glide.MemoryCategory: float multiplier
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy: com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy DEFAULT
com.bumptech.glide.load.model.GlideUrl: java.lang.String safeStringUrl
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource$Factory baseDataSourceFactory
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean allowFirstBufferPositionDiscontinuity
androidx.exifinterface.media.ExifInterface: byte[] WEBP_VP8_SIGNATURE
androidx.appcompat.widget.Toolbar: int[] mTempMargins
androidx.appcompat.widget.TooltipCompatHandler: android.view.View mAnchor
com.bumptech.glide.util.LruCache: long maxSize
androidx.appcompat.R$styleable: int ViewStubCompat_android_layout
androidx.core.R$styleable: int GradientColor_android_endColor
com.google.android.exoplayer2.text.ttml.TtmlStyle: int italic
com.google.android.exoplayer2.audio.AudioAttributes$Builder: int allowedCapturePolicy
com.google.android.exoplayer2.upstream.DataSourceInputStream: byte[] singleByteArray
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_ASYNC_STATISTIC_BUF_BACKWARDS
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mRenderPath
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder mAdapterMenu
androidx.appcompat.R$attr: int actionModePopupWindowStyle
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition defaultDisplayDefinition
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: long mediaSequence
com.google.android.exoplayer2.util.StandaloneMediaClock: com.google.android.exoplayer2.util.Clock clock
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.Map DOLBY_VISION_STRING_TO_PROFILE
com.google.android.exoplayer2.source.hls.HlsChunkSource: android.net.Uri[] playlistUrls
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mVisibleItems
androidx.appcompat.content.res.AppCompatResources: java.lang.Object sColorStateCacheLock
org.slf4j.helpers.SubstituteLogger: java.lang.reflect.Method logMethodCache
com.bumptech.glide.load.model.UrlUriLoader: java.util.Set SCHEMES
androidx.appcompat.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
androidx.recyclerview.widget.RecyclerView: java.lang.Runnable mItemAnimatorRunner
androidx.appcompat.R$drawable: int abc_ratingbar_small_material
com.google.android.exoplayer2.PlayerMessage: android.os.Handler handler
androidx.appcompat.view.menu.CascadingMenuPopup: int mYOffset
androidx.core.R$styleable: int[] FontFamilyFont
com.google.android.exoplayer2.MediaPeriodInfo: boolean isFinal
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.Option DECODE_FORMAT
com.google.android.exoplayer2.ExoPlayerImpl: boolean hasPendingPrepare
androidx.appcompat.R$styleable: int MenuGroup_android_id
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: java.util.List targetClasses
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mNoRecycleSpace
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int linethrough
androidx.fragment.app.Fragment: boolean mDeferStart
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int tunnelingAudioSessionId
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int length
androidx.appcompat.R$drawable: int abc_textfield_search_activated_mtrl_alpha
com.google.android.exoplayer2.extractor.amr.AmrExtractor: long timeOffsetUs
com.bumptech.glide.load.engine.ActiveResources: boolean isActiveResourceRetentionAllowed
com.bumptech.glide.load.model.ByteArrayLoader: com.bumptech.glide.load.model.ByteArrayLoader$Converter converter
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mIconView
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: com.google.android.exoplayer2.trackselection.TrackSelector trackSelector
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor channelMappingAudioProcessor
androidx.appcompat.widget.AppCompatSeekBarHelper: boolean mHasTickMarkTint
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: com.google.android.exoplayer2.upstream.Allocation allocation
com.google.android.exoplayer2.text.CaptionStyleCompat: int windowColor
com.google.android.exoplayer2.extractor.ts.Ac4Reader: com.google.android.exoplayer2.Format format
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_PLAYLIST_TYPE
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: android.os.Bundle mExtras
com.bumptech.glide.load.engine.EngineJob$CallResourceReady: com.bumptech.glide.load.engine.EngineJob this$0
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContextView mContextView
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_SERVER_DIED
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.collection.ArrayMap mVGTargetsMap
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int droppedFrames
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder: com.google.android.exoplayer2.extractor.Extractor[] extractors
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener mOnErrorListener
cn.jzvd.demo.VideoConstant: java.lang.String[] videoThumbList
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy NONE
com.google.android.exoplayer2.source.hls.HlsChunkSource$EncryptionKeyChunk: byte[] result
androidx.core.widget.NestedScrollView: boolean mIsBeingDragged
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_444_PREDICTIVE
androidx.core.R$id: int accessibility_custom_action_20
com.google.android.exoplayer2.SimpleExoPlayer: android.view.SurfaceHolder surfaceHolder
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.Key signature
com.google.android.exoplayer2.video.AvcConfig: int height
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory
androidx.recyclerview.widget.GridLayoutManager: int mSpanCount
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunset
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int size
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedOpacity
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence[] mItems
com.google.android.exoplayer2.audio.DefaultAudioSink: java.nio.ByteBuffer inputBuffer
androidx.collection.MapCollections$MapIterator: int mEnd
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityViewCommand mCommand
androidx.appcompat.R$attr: int alertDialogTheme
cn.jzvd.Jzvd: java.util.LinkedList CONTAINER_LIST
com.bumptech.glide.load.engine.EngineJob: boolean isLoadedFromAlternateCacheKey
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: boolean useSessionKeys
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long timecodeScale
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ScrollingTabContainerView: int mContentHeight
com.bumptech.glide.manager.ActivityFragmentLifecycle: boolean isStarted
androidx.core.content.res.ResourcesCompat$FontCallback$2: androidx.core.content.res.ResourcesCompat$FontCallback this$0
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$State
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: int sampleRate
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_id
com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData: boolean nonModifyingColorFlag
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long floorTimePosition
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_VAL_TYPE__UNKNOWN
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: long pendingSeekGranule
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter mSuggestionsAdapter
androidx.appcompat.widget.Toolbar$1: androidx.appcompat.widget.Toolbar this$0
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_RESOLUTION
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.text.SubtitleDecoderFactory decoderFactory
com.bumptech.glide.manager.RequestManagerRetriever: java.util.Map pendingSupportRequestManagerFragments
androidx.core.graphics.drawable.DrawableCompat: boolean sGetLayoutDirectionMethodFetched
androidx.recyclerview.widget.RecyclerView: boolean mPreserveFocusAfterLayout
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager this$1
androidx.fragment.app.Fragment: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.fragment.app.FragmentTransition$3: boolean val$inIsPop
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: android.content.Context context
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean tracksEnded
androidx.core.R$id: int accessibility_custom_action_21
com.bumptech.glide.load.engine.ResourceCacheKey: int height
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mHeight
com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: java.lang.Class dataClass
androidx.fragment.app.FragmentTransaction: int mEnterAnim
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: float naturalAspectRatio
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShowTitle
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple: int sampleRate
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean isRunningDuringBegin
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seenFirstTrackSelection
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: long streamSerialNumber
androidx.appcompat.R$styleable: int AlertDialog_buttonPanelSideLayout
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_toId
androidx.fragment.app.BackStackRecord: int mIndex
androidx.appcompat.widget.ListPopupWindow: android.database.DataSetObserver mObserver
cn.jzvd.Jzvd$ProgressTimerTask: cn.jzvd.Jzvd this$0
com.google.android.exoplayer2.upstream.BaseDataSource: java.util.ArrayList listeners
com.danikula.videocache.HttpProxyCacheServerClients: java.lang.String url
androidx.appcompat.widget.ListPopupWindow: android.widget.ListAdapter mAdapter
com.google.android.exoplayer2.text.ttml.TtmlDecoder: org.xmlpull.v1.XmlPullParserFactory xmlParserFactory
androidx.appcompat.widget.AbsActionBarView: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.util.ArrayDeque availableCodecInfos
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: androidx.appcompat.widget.ListPopupWindow this$0
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory dataSourceFactory
androidx.appcompat.R$attr: int alertDialogCenterButtons
com.danikula.videocache.HttpProxyCacheServer: java.net.ServerSocket serverSocket
com.google.android.exoplayer2.upstream.StatsDataSource: long bytesRead
com.bumptech.glide.util.MultiClassKey: java.lang.Class third
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: int track
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mIgnoreWindowContentOverlay
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int[][][] rendererFormatSupports
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: com.google.android.exoplayer2.extractor.mp4.Track track
androidx.core.R$styleable: int[] ColorStateListItem
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.Window$Callback mWindowCallback
com.google.android.exoplayer2.ui.SubtitlePainter: float cueBitmapHeight
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_COLLAPSE
com.google.android.exoplayer2.Format: java.lang.String containerMimeType
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long auxiliaryDataPosition
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int numSamplesWithSameSize
androidx.appcompat.R$styleable: int MenuItem_android_titleCondensed
cn.jzvd.demo.VideoConstant: java.lang.String[] videoUrlList
androidx.recyclerview.widget.RecyclerView$Adapter: androidx.recyclerview.widget.RecyclerView$AdapterDataObservable mObservable
androidx.core.R$styleable: int FontFamilyFont_ttcIndex
androidx.fragment.app.Fragment: android.view.View mInnerView
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$BandwidthProvider bandwidthProvider
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedWidthMajor
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: int discontinuityReason
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: long currentPlaybackPositionMs
androidx.appcompat.view.menu.MenuAdapter: android.view.LayoutInflater mInflater
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_SELECTED_VIDEO_STREAM
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean[] sampleQueuesEnabledStates
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: int length
com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor: int FLOAT_NAN_AS_INT
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextHelper$1: androidx.appcompat.widget.AppCompatTextHelper this$0
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession mExtraBinder
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentManagerImpl mManager
tv.danmaku.ijk.media.player.pragma.DebugLog: boolean ENABLE_DEBUG
com.bumptech.glide.request.BaseRequestOptions: int fallbackId
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Paint mFillPaint
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: java.lang.Object listener
com.bumptech.glide.load.Key: java.nio.charset.Charset CHARSET
androidx.collection.MapCollections: androidx.collection.MapCollections$KeySet mKeySet
androidx.appcompat.R$attr: int colorAccent
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: long relativeStartTimeUs
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Bundle mExtras
com.bumptech.glide.load.engine.DecodeJob: boolean isLoadingFromAlternateCacheKey
androidx.core.provider.FontsContractCompat: androidx.collection.LruCache sTypefaceCache
androidx.appcompat.app.WindowDecorActionBar: android.content.Context mContext
tv.danmaku.ijk.media.player.IjkMediaPlayer: int SDL_FCC_RV32
androidx.recyclerview.widget.GridLayoutManager: boolean mUsingSpansToEstimateScrollBarDimensions
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemListenerMethodName
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int underlineStartPosition
androidx.appcompat.widget.ActionBarContextView: android.view.View mClose
androidx.fragment.app.FragmentTransaction: int mPopExitAnim
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_drawableRight
androidx.fragment.app.FragmentManagerImpl: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
androidx.collection.LruCache: int missCount
androidx.appcompat.view.menu.CascadingMenuPopup: int mDropDownGravity
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mRightGlow
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_WIDE_RIGHT
cn.jzvd.demo.AdapterListView$ViewHolder: cn.jzvd.JzvdStd jzvdStd
com.bumptech.glide.load.engine.DecodeJob$1: int[] $SwitchMap$com$bumptech$glide$load$engine$DecodeJob$RunReason
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: com.google.android.exoplayer2.extractor.ogg.FlacReader this$0
com.google.android.exoplayer2.text.Cue: float size
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean samplePartitionCountRead
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: androidx.appcompat.widget.ActionMenuView this$0
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_BACK_RIGHT
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$SavedState mSavedState
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver mObserver
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.Priority priority
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
androidx.appcompat.R$color: int abc_tint_switch_track
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CODEC_NAME
com.google.android.exoplayer2.extractor.wav.WavExtractor: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long pendingSeekTimeUs
com.bumptech.glide.load.HttpException: int statusCode
androidx.fragment.app.FragmentTransitionCompat21$4: android.graphics.Rect val$epicenter
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean sampleQueuesBuilt
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int profileIdc
com.bumptech.glide.util.Util: char[] HEX_CHAR_ARRAY
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CODEC_PROFILE_ID
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry: java.util.List loaders
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: android.view.animation.Interpolator mInterpolator
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mContentInsets
androidx.appcompat.graphics.drawable.DrawableContainer: long mExitAnimationEnd
com.google.android.exoplayer2.extractor.flv.FlvExtractor: int tagDataSize
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: int connectTimeoutMillis
androidx.appcompat.view.menu.MenuBuilder: boolean mGroupDividerEnabled
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: android.media.MediaCodecInfo$CodecCapabilities capabilities
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_PATH_INTERPOLATOR
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence mPrompt
com.google.android.exoplayer2.PlayerMessage: boolean isSent
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean positionDiscontinuity
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy SOURCE
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: long programSplicePlaybackPositionUs
androidx.appcompat.widget.ActionMenuPresenter: int mWidthLimit
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap mSampleTile
androidx.viewpager.widget.ViewPager$SavedState: int position
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mPayloads
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long maxDurationForQualityDecreaseUs
com.google.android.exoplayer2.source.chunk.Chunk: int trackSelectionReason
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: java.lang.StringBuilder captionStringBuilder
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.ExoPlayerImpl player
com.google.android.exoplayer2.MediaPeriodQueue: int repeatMode
com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo$Pattern pattern
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String[] styleIds
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: boolean hasColorInfo
com.bumptech.glide.load.data.AssetPathFetcher: java.lang.String assetPath
androidx.fragment.app.FragmentActivity: boolean mStartedIntentSenderFromFragment
org.slf4j.event.Level: org.slf4j.event.Level DEBUG
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.widget.AppCompatSpinner this$0
com.bumptech.glide.load.engine.Engine$DecodeJobFactory: com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider diskCacheProvider
androidx.appcompat.R$styleable: int SearchView_android_inputType
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: long atomSize
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_BASELINE
com.google.android.exoplayer2.text.cea.Cea608Decoder: int captionRowCount
com.google.android.exoplayer2.extractor.ts.Ac3Reader: long timeUs
com.bumptech.glide.GlideContext: java.util.Map defaultTransitionOptions
com.google.android.exoplayer2.video.DolbyVisionConfig: int level
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory hlsDataSourceFactory
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: byte[] buf
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mIsAttachedToWindow
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.extractor.mp4.Track track
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int backgroundColor
com.google.android.exoplayer2.extractor.ts.UserDataReader: java.util.List closedCaptionFormats
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic mTextDir
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentHostCallback mHost
com.google.android.exoplayer2.source.SinglePeriodTimeline: boolean isSeekable
androidx.core.app.BundleCompat$BundleCompatBaseImpl: java.lang.reflect.Method sGetIBinderMethod
com.danikula.videocache.SourceInfo: java.lang.String mime
com.google.android.exoplayer2.extractor.ts.PesReader: boolean seenFirstDts
tv.danmaku.ijk.media.player.IjkMediaPlayer: int PROP_FLOAT_VIDEO_DECODE_FRAMES_PER_SECOND
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks EMPTY_CALLBACKS
com.google.android.exoplayer2.metadata.id3.ApicFrame: java.lang.String mimeType
androidx.appcompat.widget.ActionBarOverlayLayout: int mHideOnContentScrollReference
com.google.android.exoplayer2.text.Cue: int lineAnchor
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowVideoNonSeamlessAdaptiveness
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int viewportWidth
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.nio.ByteBuffer outputBuffer
com.bumptech.glide.load.engine.EngineKey: int hashCode
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder: com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder wrapped
com.google.android.exoplayer2.ui.TrackSelectionView$ComponentListener: com.google.android.exoplayer2.ui.TrackSelectionView this$0
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean waitingForFirstSyncSample
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction DONT_RETRY
androidx.collection.LruCache: int hitCount
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mTtcIndex
com.google.android.exoplayer2.source.SinglePeriodTimeline: long windowPositionInPeriodUs
androidx.appcompat.R$attr: int textColorSearchUrl
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_7POINT1_WIDE_BACK
com.google.android.exoplayer2.audio.Sonic: float pitch
androidx.recyclerview.widget.LayoutState: boolean mInfinite
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory GIF_DECODER_FACTORY
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator sInstance
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: int streamType
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: android.net.Uri uri
androidx.appcompat.app.AppCompatViewInflater: androidx.collection.SimpleArrayMap sConstructorMap
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState FAILED
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar mDecorToolbar
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNeutralIcon
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long[] DEFAULT_INITIAL_BITRATE_ESTIMATES_WIFI
androidx.core.R$styleable: int GradientColor_android_centerY
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTooltipText
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: java.util.concurrent.atomic.AtomicBoolean isHardwareConfigAllowedByAppState
com.google.android.exoplayer2.source.hls.HlsChunkSource: long liveEdgeInPeriodTimeUs
com.google.android.exoplayer2.metadata.id3.InternalFrame: java.lang.String description
androidx.fragment.app.FragmentActivity: boolean mStartedActivityFromFragment
androidx.fragment.app.FragmentState: android.os.Bundle mSavedFragmentState
androidx.fragment.app.FragmentTransition$2: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.android.exoplayer2.upstream.UdpDataSource: boolean opened
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.reflect.Constructor sFontFamilyCtor
androidx.arch.core.internal.SafeIterableMap$Entry: androidx.arch.core.internal.SafeIterableMap$Entry mNext
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererTrackTypes
androidx.core.widget.AutoScrollHelper: float[] mMaximumEdges
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker writeLocker
com.google.android.exoplayer2.offline.FilteringManifestParser: java.util.List streamKeys
androidx.fragment.app.Fragment$AnimationInfo: androidx.core.app.SharedElementCallback mEnterTransitionCallback
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int paddingSize
com.google.android.exoplayer2.upstream.DataSpec: int flags
android.support.v4.media.MediaDescriptionCompat$Builder: android.os.Bundle mExtras
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: com.google.android.exoplayer2.util.ParsableByteArray nalStartCode
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: com.google.android.exoplayer2.util.NalUnitUtil$SpsData spsData
cn.jzvd.R$id: int duration_progressbar
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState mStateListState
androidx.appcompat.R$styleable: int MenuItem_android_title
androidx.appcompat.R$string: int abc_prepend_shortcut_label
tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler: java.lang.ref.WeakReference mWeakPlayer
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.ExoMediaDrm$Provider exoMediaDrmProvider
com.google.android.exoplayer2.ui.SubtitlePainter: boolean applyEmbeddedFontSizes
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mSubtitle
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCanConstantState
com.bumptech.glide.manager.SupportRequestManagerFragment: androidx.fragment.app.Fragment parentFragmentHint
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.viewpager.widget.ViewPager$PagerObserver: androidx.viewpager.widget.ViewPager this$0
androidx.appcompat.widget.ThemeUtils: int[] FOCUSED_STATE_SET
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback mPanelMenuPresenterCallback
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mChangingConfigurations
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.AdapterHelper mAdapterHelper
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long initialPositionUs
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: android.util.SparseArray sps
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestTask: boolean allowRetry
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int[] yuvStrides
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mDrawable
com.google.android.exoplayer2.MediaPeriodHolder: long rendererPositionOffsetUs
androidx.appcompat.widget.TintTypedArray: android.content.Context mContext
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: int decodesSinceLastFdCheck
com.bumptech.glide.load.engine.DataCacheGenerator: java.util.List modelLoaders
androidx.appcompat.widget.Toolbar: java.lang.Runnable mShowOverflowMenuRunnable
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager mLayout
androidx.appcompat.R$drawable: int abc_ic_menu_cut_mtrl_alpha
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_CODEC_PIXEL_FORMAT_UI
cn.jzvd.demo.ActivityListViewFragmentViewPager$MyAdapter: cn.jzvd.demo.ActivityListViewFragmentViewPager this$0
com.bumptech.glide.disklrucache.DiskLruCache$Entry: long[] lengths
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: byte[] offlineLicenseKeySetId
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_SELECTION
com.bumptech.glide.request.BaseRequestOptions: int fields
androidx.appcompat.app.TwilightCalculator: int state
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Boolean mAllowReturnTransitionOverlap
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window mWindow
com.google.android.exoplayer2.extractor.FlacMetadataReader$FlacStreamMetadataHolder: com.google.android.exoplayer2.util.FlacStreamMetadata flacStreamMetadata
cn.jzvd.Jzvd: int NORMAL_ORIENTATION
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback: com.bumptech.glide.load.resource.gif.GifFrameLoader this$0
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean expandable
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState: boolean[] trackNotifiedDownstreamFormats
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$sharedElementsIn
com.google.android.exoplayer2.audio.DefaultAudioSink: long submittedPcmBytes
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: boolean isDefault
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int picOrderCntLsb
com.google.android.exoplayer2.extractor.ogg.StreamReader: long lengthOfReadPacket
androidx.appcompat.R$styleable: int TextAppearance_android_fontFamily
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: boolean hasCaptionRoleFlags
androidx.core.widget.TextViewCompat$OreoCallback: boolean mInitializedMenuBuilderReferences
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: com.google.android.exoplayer2.video.ColorInfo colorInfo
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean mIsNativeInitialized
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long pendingResetPositionUs
org.slf4j.event.Level: java.lang.String levelStr
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: com.google.android.exoplayer2.util.ParsableByteArray decodedData
androidx.recyclerview.widget.GridLayoutManager: android.view.View[] mSet
androidx.appcompat.resources.R$styleable: int[] FontFamily
androidx.lifecycle.ClassesInfoCache: java.util.Map mHasLifecycleMethods
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23 tunnelingOnFrameRenderedListener
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMarkTintMode
androidx.appcompat.app.WindowDecorActionBar: boolean mHasEmbeddedTabs
androidx.collection.ArraySet: int mSize
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.cache.MemoryCache cache
androidx.recyclerview.widget.LayoutState: int mLayoutDirection
androidx.viewpager.widget.ViewPager: int mRestoredCurItem
com.bumptech.glide.gifdecoder.GifHeader: int loopCount
androidx.appcompat.widget.ActionBarContainer: boolean mIsStacked
androidx.appcompat.view.menu.ListMenuItemView: boolean mForceShowIcon
androidx.appcompat.R$styleable: int MenuItem_alphabeticModifiers
androidx.collection.SimpleArrayMap: int[] mHashes
androidx.core.app.ActivityRecreator$1: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mExitTransition
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback mCallback
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mNavIcon
androidx.appcompat.view.menu.ExpandedMenuView: int mAnimations
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: com.google.android.exoplayer2.upstream.BandwidthMeter bandwidthMeter
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean HARDWARE_BITMAPS_SUPPORTED
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingBottom
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: int ancillaryPageId
com.bumptech.glide.load.engine.SourceGenerator: com.bumptech.glide.load.model.ModelLoader$LoadData loadData
android.support.v4.media.session.PlaybackStateCompat: java.lang.CharSequence mErrorMessage
androidx.core.view.ViewCompat: java.util.WeakHashMap sTransitionNameMap
androidx.appcompat.widget.SuggestionsAdapter: java.util.WeakHashMap mOutsideDrawablesCache
com.google.android.exoplayer2.metadata.id3.GeobFrame: java.lang.String mimeType
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: int mConsumed
androidx.fragment.app.Fragment: boolean mUserVisibleHint
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: java.lang.ref.WeakReference mCallback
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_EXPAND
com.bumptech.glide.Registry: com.bumptech.glide.load.data.DataRewinderRegistry dataRewinderRegistry
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean isLoadingChanged
com.google.android.exoplayer2.drm.DefaultDrmSession: int mode
cn.jzvd.Jzvd: android.widget.ImageView fullscreenButton
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: long offset
com.bumptech.glide.load.data.AssetPathFetcher: java.lang.Object data
com.google.android.exoplayer2.video.DummySurface: int secureMode
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory: android.content.Context context
androidx.appcompat.R$styleable: int MenuView_preserveIconSpacing
androidx.appcompat.widget.ScrollingTabContainerView: java.lang.Runnable mTabSelector
androidx.viewpager.widget.ViewPager: boolean mScrollingCacheEnabled
androidx.fragment.app.BackStackState: int mBreadCrumbShortTitleRes
androidx.fragment.app.Fragment$AnimationInfo: androidx.fragment.app.Fragment$OnStartEnterTransitionListener mStartEnterTransitionListener
androidx.appcompat.widget.DropDownListView: int mSelectionLeftPadding
androidx.lifecycle.ViewModelStore: java.util.HashMap mMap
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1: com.bumptech.glide.load.engine.Engine$DecodeJobFactory this$0
cn.jzvd.JzvdStd: android.widget.TextView mDialogSeekTime
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status WAITING_FOR_SIZE
tv.danmaku.ijk.media.player.IjkMediaPlayer: long mNativeAndroidIO
com.google.android.exoplayer2.extractor.ts.Id3Reader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame
com.google.android.exoplayer2.util.PriorityTaskManager: java.lang.Object lock
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler responseHandler
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener mOnCompletionListener
com.bumptech.glide.util.CachedHashCodeArrayMap: int hashCode
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool PARSER_POOL
com.google.android.exoplayer2.util.SlidingPercentile: int recycledSampleCount
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1: com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer this$0
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.HashMap mCallbackMap
cn.jzvd.JzvdStd: android.content.BroadcastReceiver battertReceiver
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: com.google.android.exoplayer2.util.ParsableBitArray pmtScratch
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle EMPTY
androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanSizeCache
androidx.appcompat.widget.ToolbarWidgetWrapper: android.graphics.drawable.Drawable mDefaultNavigationIcon
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean drmResourcesAcquired
cn.jzvd.Jzvd: int seekToManulPosition
cn.jzvd.demo.AdapterRecyclerView: int[] videoIndexs
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsAdaptationWorkaroundBuffer
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker: com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool writeLockPool
androidx.core.R$id: int accessibility_custom_action_0
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState CLEARED
com.google.android.exoplayer2.extractor.ogg.VorbisReader: boolean seenFirstAudioPacket
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_PLAYBACK_COMPLETE
androidx.core.view.ViewPropertyAnimatorCompat$2: androidx.core.view.ViewPropertyAnimatorUpdateListener val$listener
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean hasOutputFormat
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: byte[] value
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition pendingInitialSeekPosition
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long nextSearchBytePosition
androidx.viewpager.widget.ViewPager: java.util.List mAdapterChangeListeners
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey: java.lang.String mimeType
androidx.appcompat.R$styleable: int LinearLayoutCompat_dividerPadding
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sHField
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: int state
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mSarNum
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent mIntent
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int COLOR_TRANSPARENT
tv.danmaku.ijk.media.player.IjkMediaPlayer: int mNativeSurfaceTexture
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback
androidx.appcompat.R$style: int Theme_AppCompat_Empty
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_FORMAT
com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder builder
androidx.appcompat.R$styleable: int[] ButtonBarLayout
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy strategy
com.google.android.exoplayer2.ui.SubtitlePainter: int edgeType
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: boolean allowCrossProtocolRedirects
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.metadata.icy.IcyHeaders icyHeaders
com.google.android.exoplayer2.Format: int selectionFlags
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: com.google.android.exoplayer2.extractor.ExtractorsFactory extractorsFactory
androidx.appcompat.R$styleable: int MenuItem_actionProviderClass
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: java.util.ArrayList bandwidthMeters
com.google.android.exoplayer2.IllegalSeekPositionException: com.google.android.exoplayer2.Timeline timeline
com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor currentEditor
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_DURATION_US
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: boolean opened
com.bumptech.glide.load.engine.ResourceCacheKey: com.bumptech.glide.load.Options options
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory: android.content.Context context
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTooltipText
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: long utcSpliceTime
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.source.TrackGroupArray trackGroups
com.google.android.exoplayer2.audio.AudioTimestampPoller: int state
com.google.android.exoplayer2.extractor.ChunkIndex: int length
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl mActionMode
com.google.android.exoplayer2.extractor.wav.WavExtractor: long dataEndPosition
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_FIND_STREAM_INFO
androidx.appcompat.R$styleable: int SearchView_android_focusable
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mPendingScrollPositionOffset
androidx.recyclerview.widget.GapWorker: java.util.ArrayList mRecyclerViews
com.google.android.exoplayer2.audio.DefaultAudioSink: long playbackParametersOffsetUs
com.google.android.exoplayer2.extractor.amr.AmrExtractor: byte[] scratch
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource udpDataSource
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekTimestampConverter seekTimestampConverter
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.GaplessInfoHolder gaplessInfoHolder
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: long bytePositionToUpdate
com.bumptech.glide.load.engine.ResourceCacheKey: java.lang.Class decodedResourceClass
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener mOnPreparedListener
androidx.fragment.app.Fragment: java.lang.Runnable mPostponedDurationRunnable
androidx.viewpager.widget.ViewPager$ItemInfo: java.lang.Object object
com.google.android.exoplayer2.ui.TrackSelectionView: com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo mappedTrackInfo
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.Timeline$Period period
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.extractor.SeekMap seekMap
androidx.core.widget.AutoScrollHelper: float[] mRelativeEdges
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] $VALUES
androidx.appcompat.view.menu.ListMenuPresenter: android.content.Context mContext
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter mAdapter
com.google.android.exoplayer2.audio.Sonic: short[] pitchBuffer
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mBottomGlow
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.Format streamFormat
androidx.appcompat.widget.SearchView: int[] mTemp2
com.google.android.exoplayer2.extractor.ts.PesReader: boolean ptsFlag
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: com.bumptech.glide.load.model.ModelLoader uriDelegate
com.google.android.exoplayer2.extractor.ts.TsDurationReader: long durationUs
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mWriteCache
com.google.android.exoplayer2.extractor.ts.UserDataReader: com.google.android.exoplayer2.extractor.TrackOutput[] outputs
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$7: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
cn.jzvd.Jzvd: long gobakFullscreenTime
com.google.android.exoplayer2.decoder.DecoderInputBuffer: com.google.android.exoplayer2.decoder.CryptoInfo cryptoInfo
com.bumptech.glide.RequestManager: java.util.concurrent.CopyOnWriteArrayList defaultRequestListeners
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsDiscardToSpsWorkaround
com.bumptech.glide.load.engine.DecodeJob: long startFetchTime
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: int frameSize
com.google.android.exoplayer2.text.subrip.SubripDecoder: java.util.regex.Pattern SUBRIP_TIMING_LINE
androidx.collection.SimpleArrayMap: int mTwiceBaseCacheSize
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
androidx.appcompat.widget.ActionMenuView: boolean mFormatItems
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mPendingScrollPosition
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed: com.bumptech.glide.request.ResourceCallback cb
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean hasData
com.bumptech.glide.manager.ActivityFragmentLifecycle: boolean isDestroyed
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: java.lang.String language
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.SupportRequestManagerFragment rootRequestManagerFragment
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo lastReportedPlayingMediaPeriod
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mTintLists
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool pool
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int reportedHeight
com.google.android.exoplayer2.decoder.SimpleDecoder: boolean flushed
androidx.recyclerview.widget.GapWorker$Task: int position
org.slf4j.LoggerFactory: boolean DETECT_LOGGER_NAME_MISMATCH
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean retainBackBufferFromKeyframe
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Field sConsumedField
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: com.google.android.exoplayer2.Format format
com.google.android.exoplayer2.extractor.ogg.OggExtractor: boolean streamReaderInitialized
com.danikula.videocache.file.TotalSizeLruDiskUsage: long maxSize
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int outputEncoding
com.google.android.exoplayer2.source.hls.HlsMediaSource: int metadataType
com.google.android.exoplayer2.source.IcyDataSource: byte[] metadataLengthByteHolder
com.google.android.exoplayer2.extractor.GaplessInfoHolder: java.util.regex.Pattern GAPLESS_COMMENT_PATTERN
com.google.android.exoplayer2.metadata.icy.IcyHeaders: boolean isPublic
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor: java.util.concurrent.Executor executor
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
androidx.appcompat.widget.SearchView: android.widget.ImageView mVoiceButton
androidx.core.view.KeyEventDispatcher: java.lang.reflect.Method sActionBarOnMenuKeyMethod
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: androidx.appcompat.widget.AppCompatSpinner this$0
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: com.bumptech.glide.load.resource.ImageDecoderResourceDecoder this$0
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.Format[] playlistFormats
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener mOnInfoListener
cn.jzvd.JzvdStd: android.widget.ImageView tinyBackImageView
com.google.android.exoplayer2.upstream.Loader$LoadTask: java.io.IOException currentError
com.google.android.exoplayer2.DefaultLoadControl: int targetBufferSize
com.google.android.exoplayer2.extractor.mp4.TrackFragment: boolean definesEncryptionData
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference: com.bumptech.glide.load.engine.Resource resource
com.bumptech.glide.load.engine.DecodeHelper: java.util.List cacheKeys
com.google.android.exoplayer2.metadata.emsg.EventMessage: long durationMs
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.Format upstreamTrackFormat
com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean outputSeekMap
com.google.android.exoplayer2.ExoPlayerImpl: int maskingWindowIndex
com.google.android.exoplayer2.metadata.id3.ApicFrame: java.lang.String description
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate playbackInfoUpdate
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8X
androidx.appcompat.R$styleable: int Toolbar_contentInsetLeft
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason INITIALIZE
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.data.DataFetcher currentFetcher
androidx.appcompat.widget.ActionBarContextView: android.view.View mCustomView
com.google.android.exoplayer2.source.CompositeMediaSource$MediaSourceAndListener: com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller caller
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifBitmapProvider provider
androidx.appcompat.app.WindowDecorActionBar: int mCurWindowVisibility
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: boolean isDefaultSelectionFlag
com.google.android.exoplayer2.metadata.id3.ChapterFrame: int endTimeMs
com.bumptech.glide.load.engine.ResourceCacheGenerator: com.bumptech.glide.load.engine.DecodeHelper helper
com.google.android.exoplayer2.audio.DefaultAudioSink: byte[] preV21OutputBuffer
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String mDataSource
androidx.appcompat.widget.TooltipPopup: android.view.View mContentView
com.bumptech.glide.load.data.HttpUrlFetcher: int timeout
com.google.android.exoplayer2.extractor.ts.PsExtractor: com.google.android.exoplayer2.util.ParsableByteArray psPacketBuffer
androidx.appcompat.R$styleable: int[] StateListDrawableItem
com.google.android.exoplayer2.upstream.ContentDataSource: long bytesRemaining
androidx.fragment.app.FragmentTransitionImpl$3: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService subtitleService
com.bumptech.glide.GlideContext: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$Callback mCallback
androidx.appcompat.R$styleable: int MenuItem_android_orderInCategory
androidx.appcompat.app.WindowDecorActionBar: android.app.Activity mActivity
cn.jzvd.Jzvd: int mScreenHeight
com.google.android.exoplayer2.DefaultRenderersFactory: android.content.Context context
com.google.android.exoplayer2.ui.R$string: int exo_track_surround_5_point_1
com.bumptech.glide.request.BaseRequestOptions: int errorId
com.bumptech.glide.load.engine.ActiveResources$1$1: java.lang.Runnable val$r
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int outputPcmFrameSize
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.util.ConditionVariable loadCondition
com.danikula.videocache.HttpProxyCacheServer: java.util.concurrent.ExecutorService socketProcessor
com.google.android.exoplayer2.extractor.ts.H262Reader: long sampleTimeUs
androidx.appcompat.widget.ListPopupWindow: int mDropDownVerticalOffset
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int frameNumLength
androidx.appcompat.R$styleable: int TextAppearance_android_textColorLink
com.google.android.exoplayer2.extractor.ts.PsExtractor: boolean foundAllTracks
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.animation.Animator animator
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: boolean spliceImmediateFlag
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater mInflater
com.google.android.exoplayer2.PlaybackParameters: float pitch
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mTbrNum
com.google.android.exoplayer2.C: java.util.UUID PLAYREADY_UUID
androidx.appcompat.view.menu.StandardMenuPopup: android.view.View$OnAttachStateChangeListener mAttachStateChangeListener
androidx.appcompat.widget.ToolbarWidgetWrapper$2: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: com.bumptech.glide.load.model.DataUrlLoader$DataDecoder reader
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: int bufferLength
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: java.lang.String targetId
com.bumptech.glide.load.engine.EngineKey: java.util.Map transformations
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence mTitle
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemContentDescription
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.locks.ReentrantLock val$lock
com.google.android.exoplayer2.extractor.ts.AdtsReader: long currentSampleDuration
com.google.android.exoplayer2.text.cea.Cea708Decoder: java.util.List cues
cn.jzvd.Jzvd: int mScreenWidth
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] $VALUES
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitleCondensed
com.google.android.exoplayer2.ui.TrackSelectionView: com.google.android.exoplayer2.ui.TrackSelectionView$ComponentListener componentListener
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: com.bumptech.glide.load.Transformation wrapped
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean tunneling
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isDecodeOnlyOutputBuffer
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStopQueued
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$inFragment
com.google.android.exoplayer2.util.FlacStreamMetadata: int bitsPerSample
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context mContext
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.ExpandedMenuView mMenuView
androidx.appcompat.R$styleable: int[] DrawerArrowToggle
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: java.lang.String name
com.google.android.exoplayer2.metadata.emsg.EventMessage: java.lang.String schemeIdUri
androidx.recyclerview.R$styleable: int[] FontFamily
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNegativeButtonIcon
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.RequestManager requestManager
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.RequestBuilder requestBuilder
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory HIGH
androidx.core.view.ViewCompat: boolean sAccessibilityDelegateCheckFailed
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mOnMenuItemClickListener
androidx.lifecycle.LifecycleRegistry: androidx.arch.core.internal.FastSafeIterableMap mObserverMap
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mVolumeControl
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_INTEROPERABILITY_TAGS
com.bumptech.glide.Registry: androidx.core.util.Pools$Pool throwableListPool
com.google.android.exoplayer2.ui.SubtitlePainter: int cueLineType
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.google.android.exoplayer2.C: java.util.UUID CLEARKEY_UUID
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: float bufferedFractionToLiveEdgeForQualityIncrease
androidx.recyclerview.widget.RecyclerView: android.graphics.RectF mTempRectF
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: com.google.android.exoplayer2.source.SampleStream childStream
com.google.android.exoplayer2.video.AvcConfig: int width
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: int cryptoMode
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mNeedsAutoSizeText
com.google.android.exoplayer2.ui.TrackSelectionView: android.widget.CheckedTextView disableView
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter mExpandedMenuPresenter
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions screenDimensions
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean mAllowCaching
androidx.appcompat.widget.AppCompatSpinner$2: androidx.appcompat.widget.AppCompatSpinner this$0
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List closedCaptions
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: com.google.android.exoplayer2.extractor.TrackOutput[] outputs
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.executor.GlideExecutor diskCacheExecutor
com.bumptech.glide.load.engine.ResourceCacheGenerator: int sourceIdIndex
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable mResolveHoverRunnable
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableItem_android_drawable
androidx.viewpager.widget.ViewPager$LayoutParams: boolean isDecor
androidx.viewpager.widget.ViewPager: int mCloseEnough
androidx.fragment.app.FragmentManagerState: int mNextFragmentIndex
androidx.appcompat.app.AlertController: int mSingleChoiceItemLayout
com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup: com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader idHeader
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy DEFAULT
androidx.appcompat.widget.ThemeUtils: int[] PRESSED_STATE_SET
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.MenuItemHoverListener mHoverListener
androidx.appcompat.widget.ActionMenuView: int mGeneratedItemPadding
androidx.core.text.PrecomputedTextCompat$Params: int mHyphenationFrequency
androidx.appcompat.R$styleable: int Toolbar_titleMarginStart
com.google.android.exoplayer2.extractor.ogg.StreamReader: long payloadStartPosition
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_VIDEO_CACHED_PACKETS
com.google.android.exoplayer2.PlaybackParameters: float speed
androidx.appcompat.app.WindowDecorActionBar: android.view.View mContentView
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mRampDownDuration
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mParcelizerCache
com.google.android.exoplayer2.source.SampleQueue: boolean upstreamKeyframeRequired
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget current
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long lastLatencySampleTimeUs
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: java.nio.ByteBuffer data
com.google.android.exoplayer2.SimpleExoPlayer: boolean hasNotifiedFullWrongThreadWarning
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.SparseIntArray VP9_LEVEL_NUMBER_TO_CONST
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.upstream.BandwidthMeter bandwidthMeter
com.google.android.exoplayer2.decoder.SimpleDecoder: int availableOutputBufferCount
com.bumptech.glide.load.engine.ResourceCacheGenerator: com.bumptech.glide.load.model.ModelLoader$LoadData loadData
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat: android.media.MediaFormat mMediaFormat
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.extractor.Extractor previousExtractor
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] PEF_TAGS
androidx.appcompat.app.AlertController: android.widget.Button mButtonPositive
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory
com.google.android.exoplayer2.DefaultMediaClock: boolean standaloneClockIsStarted
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaY
androidx.appcompat.widget.ResourceManagerInternal: boolean mHasCheckedVectorDrawableSetup
androidx.appcompat.app.AlertController$5: android.view.View val$bottom
androidx.fragment.app.FragmentTransaction$Op: int mExitAnim
org.slf4j.helpers.FormattingTuple: java.lang.Throwable throwable
cn.jzvd.JzvdStd: android.widget.ProgressBar mDialogProgressBar
com.google.android.exoplayer2.extractor.ts.PesReader: int state
com.google.android.exoplayer2.util.SlidingPercentile$Sample: int index
com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder: int size
androidx.exifinterface.media.ExifInterface: java.lang.String[] IFD_FORMAT_NAMES
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] PEN_STYLE_FONT_STYLE
cn.jzvd.Jzvd: android.widget.TextView currentTimeTextView
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String imageId
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode mDeferredDestroyActionMode
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.view.menu.ListMenuItemView: int mTextAppearance
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$Factory FACTORY
androidx.core.app.ActivityRecreator: android.os.Handler mainHandler
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean independentSegments
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mBackStackChangeListeners
androidx.core.graphics.drawable.IconCompat: android.graphics.PorterDuff$Mode mTintMode
cn.jzvd.JzvdStd: android.widget.TextView clarity
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader: java.nio.ByteBuffer byteBuffer
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockSampleCount
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl SUPPORT_IMPL
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck mHorizontalBoundCheck
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mValid
com.google.android.exoplayer2.extractor.ts.Ac3Reader: com.google.android.exoplayer2.util.ParsableByteArray headerScratchBytes
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory LOW
androidx.core.text.PrecomputedTextCompat: java.lang.Object sLock
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$enteringViews
com.google.android.exoplayer2.upstream.DataSpec: java.util.Map httpRequestHeaders
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mMenuPrepared
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureProgress
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.appcompat.R$styleable: int ActionBar_homeAsUpIndicator
androidx.appcompat.R$styleable: int MenuView_subMenuArrow
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long lastSeekPositionUs
com.bumptech.glide.load.engine.DataCacheGenerator: com.bumptech.glide.load.Key sourceKey
com.google.android.exoplayer2.metadata.icy.IcyInfo: java.lang.String url
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.google.android.exoplayer2.ExoPlayerImplInternal: android.os.Handler eventHandler
com.danikula.videocache.HttpProxyCacheServer: com.danikula.videocache.Pinger pinger
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE
androidx.core.content.res.ResourcesCompat$FontCallback$1: android.graphics.Typeface val$typeface
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: long length
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean mIsBack
androidx.core.R$styleable: int FontFamily_fontProviderQuery
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean pendingDeferredRetry
com.google.android.exoplayer2.metadata.id3.PrivFrame: java.lang.String owner
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int mLength
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: android.os.Handler handler
androidx.lifecycle.SingleGeneratedAdapterObserver: androidx.lifecycle.GeneratedAdapter mGeneratedAdapter
androidx.appcompat.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.android.exoplayer2.util.TimestampAdjuster: long timestampOffsetUs
com.google.android.exoplayer2.PlaybackInfo: int playbackState
com.google.android.exoplayer2.metadata.id3.Id3Frame: java.lang.String id
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_PROGRESS
com.google.android.exoplayer2.upstream.DefaultAllocator: int targetBufferSize
com.bumptech.glide.Registry: com.bumptech.glide.provider.ResourceDecoderRegistry decoderRegistry
com.google.android.exoplayer2.audio.SonicAudioProcessor: float pitch
com.google.android.exoplayer2.upstream.Loader$LoadTask: boolean canceled
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BANDWIDTH
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mStrokeWidth
com.google.android.exoplayer2.extractor.ts.DtsReader: com.google.android.exoplayer2.Format format
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: long nalUnitTimeUs
androidx.appcompat.widget.ScrollingTabContainerView$1: android.view.View val$tabView
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mFpsDen
com.danikula.videocache.Pinger: java.util.concurrent.ExecutorService pingExecutor
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.load.Key signature
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int maxVideoBitrate
tv.danmaku.ijk.media.player.IjkMediaMeta: android.os.Bundle mMediaMeta
androidx.appcompat.widget.SearchView: android.widget.TextView$OnEditorActionListener mOnEditorActionListener
androidx.arch.core.executor.DefaultTaskExecutor: java.lang.Object mLock
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sHideInterpolator
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean useSessionKeys
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.GlideContext glideContext
androidx.appcompat.view.menu.MenuItemImpl: int mOrdering
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: androidx.appcompat.widget.ForwardingListener this$0
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.extractor.TrackOutput$CryptoData[] cryptoDatas
com.danikula.videocache.HttpProxyCacheServer: java.lang.Object clientsLock
com.google.android.exoplayer2.extractor.ogg.OggPacket: com.google.android.exoplayer2.extractor.ogg.OggPageHeader pageHeader
com.google.android.exoplayer2.extractor.ts.SeiReader: java.util.List closedCaptionFormats
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IHDR
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long lastRawPlaybackHeadPosition
com.bumptech.glide.load.model.AssetUriLoader: android.content.res.AssetManager assetManager
androidx.core.widget.NestedScrollView: int mNestedYOffset
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean shuffleModeEnabled
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: cn.jzvd.demo.ActivityListViewMultiHolder this$0
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Class sFontFamily
com.google.android.exoplayer2.util.Util: java.lang.String MODEL
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutAlphabeticModifiers
androidx.core.graphics.TypefaceCompatBaseImpl: java.util.concurrent.ConcurrentHashMap mFontFamilies
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory DEFAULT_FACTORY
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mClickableSpanActionId
com.google.android.exoplayer2.AudioFocusManager: boolean rebuildAudioFocusRequest
com.google.android.exoplayer2.source.chunk.Chunk: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.bumptech.glide.load.data.HttpUrlFetcher: com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory DEFAULT_CONNECTION_FACTORY
androidx.appcompat.widget.Toolbar: int mContentInsetStartWithNavigation
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long sampleOffsetUs
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: int continueLoadingCheckIntervalBytes
androidx.appcompat.R$styleable: int LinearLayoutCompat_showDividers
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: boolean shouldCallAppCompatResources
cn.jzvd.demo.ActivityListViewFragmentViewPager: java.util.List fragmentList
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.Runnable mInvalidatePanelMenuRunnable
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int maxAudioBitrate
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long latencyUs
cn.jzvd.R$drawable: int jz_battery_level_70
androidx.appcompat.widget.AbsActionBarView: android.content.Context mPopupContext
androidx.appcompat.widget.ListPopupWindow: int mDropDownGravity
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Rendition: java.lang.String name
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo
com.bumptech.glide.load.engine.Jobs: java.util.Map onlyCacheJobs
com.bumptech.glide.load.engine.SourceGenerator: com.bumptech.glide.load.engine.DataCacheKey originalKey
com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData: com.google.android.exoplayer2.extractor.ogg.OggSeeker oggSeeker
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable errorDrawable
com.bumptech.glide.request.SingleRequest: boolean IS_VERBOSE_LOGGABLE
com.google.android.exoplayer2.offline.StreamKey: int periodIndex
com.bumptech.glide.request.BaseRequestOptions: java.util.Map transformations
androidx.core.app.TaskStackBuilder: android.content.Context mSourceContext
androidx.appcompat.app.AppCompatDelegateImpl: int[] sWindowBackgroundStyleable
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: android.app.Activity mActivity
androidx.appcompat.R$styleable: int CompoundButton_android_button
com.google.android.exoplayer2.decoder.SimpleDecoder: int skippedOutputBufferCount
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean forceHighestSupportedBitrate
androidx.appcompat.R$styleable: int MenuItem_showAsAction
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher eventDispatcher
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: int trackIdIncrement
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: com.google.android.exoplayer2.audio.AudioTrackPositionTracker$Listener listener
androidx.appcompat.R$id: int submit_area
androidx.fragment.app.FragmentManagerImpl$5: android.view.View val$animatingView
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextClassifierHelper mTextClassifierHelper
com.bumptech.glide.request.target.ViewTarget: android.view.View view
androidx.recyclerview.widget.RecyclerView: float mScaledVerticalScrollFactor
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern POSITION_PATTERN
com.bumptech.glide.request.ErrorRequestCoordinator: com.bumptech.glide.request.RequestCoordinator$RequestState primaryState
com.google.android.exoplayer2.metadata.MetadataRenderer: long[] pendingMetadataTimestamps
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch: int score
com.google.android.exoplayer2.drm.DrmSessionManager: com.google.android.exoplayer2.drm.DrmSessionManager DUMMY
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace DISPLAY_P3
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.util.SparseBooleanArray rendererDisabledFlags
com.bumptech.glide.load.engine.ActiveResources$1$1: com.bumptech.glide.load.engine.ActiveResources$1 this$1
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mEffectiveRampDown
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.IjkMediaPlayer$OnMediaCodecSelectListener mOnMediaCodecSelectListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLICK
androidx.appcompat.view.StandaloneActionMode: android.content.Context mContext
com.google.android.exoplayer2.extractor.wav.WavHeader: int averageBytesPerSecond
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int tunnelingAudioSessionId
com.google.android.exoplayer2.util.StandaloneMediaClock: boolean started
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int flags
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_TRAFFIC_STATISTIC_BYTE_COUNT
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper mAutoSizeTextHelper
com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler: com.google.android.exoplayer2.drm.DefaultDrmSession this$0
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int chunkUid
androidx.appcompat.view.menu.StandardMenuPopup: boolean mWasDismissed
com.google.android.exoplayer2.extractor.ts.H264Reader: boolean randomAccessIndicator
androidx.cursoradapter.widget.ResourceCursorAdapter: int mDropDownLayout
androidx.core.text.PrecomputedTextCompat: java.util.concurrent.Executor sExecutor
com.google.android.exoplayer2.extractor.wav.WavSeekMap: long blockCount
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: com.google.android.exoplayer2.Format trackFormat
androidx.appcompat.widget.AppCompatTextHelper: int mStyle
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean playClearSamplesWithoutKeys
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: android.content.Context context
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track currentTrack
androidx.appcompat.widget.TooltipCompatHandler: boolean mFromTouch
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int mTimeoutMs
androidx.appcompat.widget.SearchView: int mCollapsedImeOptions
androidx.appcompat.widget.ThemeUtils: int[] EMPTY_STATE_SET
com.bumptech.glide.disklrucache.DiskLruCache: java.io.File journalFile
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status COMPLETE
com.google.android.exoplayer2.source.IcyDataSource: com.google.android.exoplayer2.source.IcyDataSource$Listener listener
org.slf4j.helpers.SubstituteLogger: java.lang.String name
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Bitmap mCachedBitmap
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher aspectRatioUpdateDispatcher
com.bumptech.glide.load.engine.EngineJob: boolean onlyRetrieveFromCache
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode: com.bumptech.glide.manager.RequestManagerFragment this$0
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: boolean sRebaseMethodFetched
com.bumptech.glide.load.resource.gif.GifFrameLoader: java.util.List callbacks
androidx.appcompat.view.menu.StandardMenuPopup$2: androidx.appcompat.view.menu.StandardMenuPopup this$0
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleAttr
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean evaluatedDeviceNeedsSetOutputSurfaceWorkaround
com.google.android.exoplayer2.extractor.ts.AdtsReader: long sampleDurationUs
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.Format ID3_FORMAT
com.google.android.exoplayer2.text.ttml.TtmlNode: java.util.HashMap nodeEndsByRegion
com.google.android.exoplayer2.C: java.util.UUID UUID_NIL
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mOverflowOnly
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: java.util.regex.Pattern COMMENT
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: java.lang.String customCacheKey
com.bumptech.glide.Glide: java.util.List managers
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float maxMasteringLuminance
com.google.android.exoplayer2.audio.Ac3Util: int[] SYNCFRAME_SIZE_WORDS_BY_HALF_FRMSIZECOD_44_1
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: java.lang.Object sRebaseMethodLock
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: java.util.regex.Pattern BRACES_PATTERN
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: com.bumptech.glide.load.Option COMPRESSION_QUALITY
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: long diskCacheSize
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_INTRA
com.google.android.exoplayer2.SeekParameters: long toleranceAfterUs
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mInnerInsetsRect
com.danikula.videocache.HttpProxyCacheServer: com.danikula.videocache.Config config
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener mMenuViewItemClickListener
androidx.recyclerview.widget.RecyclerView$Adapter: boolean mHasStableIds
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAdded
com.google.android.exoplayer2.Timeline$Window: long durationUs
androidx.lifecycle.LifecycleRegistry: boolean mHandlingEvent
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.DecodeJob decodeJob
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer: java.security.MessageDigest messageDigest
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory: android.content.res.AssetManager assetManager
androidx.appcompat.R$styleable: int[] RecycleListView
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_6POINT1_BACK
com.bumptech.glide.RequestManager: com.bumptech.glide.Glide glide
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mSubtitleText
androidx.core.graphics.drawable.WrappedDrawableState: int mChangingConfigurations
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedSampleRateAdaptiveness
com.google.android.exoplayer2.util.ParsableBitArray: int byteOffset
com.bumptech.glide.load.model.FileLoader: com.bumptech.glide.load.model.FileLoader$FileOpener fileOpener
com.bumptech.glide.load.resource.drawable.DrawableResource: android.graphics.drawable.Drawable drawable
androidx.appcompat.widget.ResourceManagerInternal: android.util.TypedValue mTypedValue
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean isTimestampMaster
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: boolean flagForced
com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
com.google.android.exoplayer2.Format: int accessibilityChannel
com.google.android.exoplayer2.audio.DefaultAudioSink: int framesPerEncodedSample
androidx.appcompat.widget.Toolbar: int mTitleMarginBottom
androidx.viewpager.widget.ViewPager: boolean mInLayout
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.EngineResource$ResourceListener resourceListener
com.google.android.exoplayer2.metadata.MetadataRenderer: com.google.android.exoplayer2.metadata.MetadataOutput output
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_VALUE
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: float targetAspectRatio
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: android.os.Handler handler
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long continueLoadingCheckIntervalBytes
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: long ptsAdjustment
com.google.android.exoplayer2.extractor.mkv.Sniffer: int peekLength
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: boolean spliceEventCancelIndicator
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float[] mX
com.bumptech.glide.manager.RequestManagerRetriever: android.os.Handler handler
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: boolean secureDecoderRequired
com.google.android.exoplayer2.extractor.ts.H262Reader: com.google.android.exoplayer2.extractor.ts.UserDataReader userDataReader
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: java.lang.Object data
androidx.appcompat.widget.AppCompatTextView: java.util.concurrent.Future mPrecomputedTextFuture
com.google.android.exoplayer2.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo frameworkCryptoInfo
androidx.core.R$styleable: int GradientColorItem_android_offset
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: com.google.android.exoplayer2.util.ParsableByteArray packetBuffer
androidx.appcompat.R$id: int search_mag_icon
androidx.appcompat.app.AlertController: int mViewSpacingBottom
com.google.android.exoplayer2.extractor.mp3.XingSeeker: int xingFrameSize
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mFixedHeightMajor
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId mediaPeriodId
com.google.android.exoplayer2.extractor.ts.LatmReader: int audioMuxVersionA
androidx.appcompat.widget.SearchView: android.view.View mSearchEditFrame
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float projectionPoseYaw
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.Toolbar: boolean mEatingTouch
com.google.android.exoplayer2.text.ssa.SsaDecoder: java.util.regex.Pattern SSA_TIMECODE_PATTERN
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_SELECTED_TIMEDTEXT_STREAM
androidx.appcompat.R$attr: int actionBarStyle
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory gifDecoderFactory
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: android.net.Uri[] uris
com.google.android.exoplayer2.metadata.id3.CommentFrame: java.lang.String language
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.Toolbar: int mGravity
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: boolean hasPreferredIsForcedFlag
androidx.collection.LruCache: int size
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: com.google.android.exoplayer2.text.webvtt.CssParser cssParser
androidx.fragment.app.FragmentManagerImpl: android.view.animation.Interpolator DECELERATE_CUBIC
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mInnerInsets
org.slf4j.event.SubstituteLoggingEvent: org.slf4j.helpers.SubstituteLogger logger
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$inFragment
com.google.android.exoplayer2.extractor.ts.H262Reader: long frameDurationUs
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleAttr
com.google.android.exoplayer2.extractor.ts.LatmReader: com.google.android.exoplayer2.util.ParsableByteArray sampleDataBuffer
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool pool
com.bumptech.glide.gifdecoder.GifFrame: int bufferFrameStart
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: int bitrate
androidx.exifinterface.media.ExifInterface: byte[] PNG_CHUNK_TYPE_IEND
androidx.appcompat.app.AppCompatDelegateImpl: boolean sCanReturnDifferentContext
cn.jzvd.Jzvd: android.view.ViewGroup bottomContainer
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: java.util.ArrayList mAnimators
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: java.lang.String defaultFontFamily
androidx.appcompat.widget.SearchView$4: androidx.appcompat.widget.SearchView this$0
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: int blockSize0
androidx.fragment.app.FragmentHostCallback: androidx.fragment.app.FragmentManagerImpl mFragmentManager
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$AlertParams this$0
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_COMPONENT_OPEN
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: int quality
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: android.util.SparseArray cluts
com.bumptech.glide.load.resource.gif.GifDrawable: boolean isVisible
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo mMenuInfo
com.google.android.exoplayer2.source.SinglePeriodTimeline: boolean isLive
cn.jzvd.demo.ActivityListViewMultiHolder: cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter mAdapter
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: android.util.SparseIntArray trackIdToPidScratch
com.bumptech.glide.util.ByteBufferUtil: java.util.concurrent.atomic.AtomicReference BUFFER_REF
com.google.android.exoplayer2.ExoPlayerImplInternal: java.util.ArrayList pendingMessages
tv.danmaku.ijk.media.player.TextureMediaPlayer: tv.danmaku.ijk.media.player.ISurfaceTextureHost mSurfaceTextureHost
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: int metadataType
androidx.appcompat.R$styleable: int ActionBarLayout_android_layout_gravity
androidx.fragment.app.Fragment: int mState
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.appcompat.widget.ActionMenuPresenter mActionMenuPresenter
cn.jzvd.demo.CustomMedia.JZMediaExo$onBufferingUpdate: cn.jzvd.demo.CustomMedia.JZMediaExo this$0
androidx.customview.view.AbsSavedState: androidx.customview.view.AbsSavedState EMPTY_STATE
androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_2
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_PORT
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int[] mSpanLookup
cn.jzvd.JzvdStd: android.widget.ProgressBar loadingProgressBar
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mSubtitleView
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: java.util.ArrayList mediaPeriodInfoQueue
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.TrackGroup trackGroup
com.google.android.exoplayer2.extractor.ts.SectionReader: com.google.android.exoplayer2.extractor.ts.SectionPayloadReader reader
androidx.appcompat.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
com.bumptech.glide.gifdecoder.StandardGifDecoder: byte[] block
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_2_2
tv.danmaku.ijk.media.player.IjkMediaMeta: long mStartUS
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_CAVLC_444
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: android.view.MenuItem$OnMenuItemClickListener mObject
androidx.core.app.ActivityRecreator: java.lang.reflect.Method requestRelaunchActivityMethod
androidx.appcompat.R$styleable: int AppCompatTheme_windowMinWidthMajor
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean released
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.metadata.id3.ChapterFrame: long endOffset
androidx.collection.MapCollections$ValuesCollection: androidx.collection.MapCollections this$0
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReturnTransition
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: long bitrate
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: android.util.SparseBooleanArray rendererDisabledFlags
com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int mRank
com.google.android.exoplayer2.ui.R$string: int exo_track_surround
com.bumptech.glide.load.data.InputStreamRewinder$Factory: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.model.ModelLoader fileDelegate
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.LinearLayoutCompat mTabLayout
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: android.media.MediaCodecInfo[] mediaCodecInfos
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: boolean hasFontColor
com.google.android.exoplayer2.source.chunk.DataChunk: boolean loadCanceled
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen jzvdStdVolumeAfterFullscreen
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long segmentContentSize
androidx.appcompat.R$styleable: int ActionBar_subtitle
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.PlayerMessage$Target target
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int atomType
android.support.v4.media.session.PlaybackStateCompat: long mActiveItemId
com.google.android.exoplayer2.ui.SubtitlePainter: int windowColor
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAddFontFromAssetManager
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.ActiveResources activeResources
androidx.appcompat.app.AlertController: android.content.Context mContext
com.google.android.exoplayer2.extractor.wav.WavHeader: int formatType
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int[] mGapPerSpan
cn.jzvd.JZMediaSystem: android.media.MediaPlayer mediaPlayer
androidx.appcompat.view.menu.CascadingMenuPopup: android.os.Handler mSubMenuHoverHandler
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float primaryGChromaticityY
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPosition
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup mPopup
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator: long currentIndex
com.google.android.exoplayer2.upstream.Loader$LoadTask: com.google.android.exoplayer2.upstream.Loader$Callback callback
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker tsBinarySearchSeeker
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider timestampAdjusterProvider
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTintMode
cn.jzvd.demo.ActivityApiCustomMedia: android.os.Handler handler
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle$State mMaxState
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme mTheme
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: com.google.android.exoplayer2.util.ParsableByteArray nalLength
cn.jzvd.JzvdStd: android.app.Dialog mProgressDialog
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.Cancellable mCurrentCancellable
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mInternalImageTint
com.google.android.exoplayer2.audio.DtsUtil: int[] SAMPLE_RATE_BY_SFREQ
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_GPS_TAGS
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Matrix IDENTITY_MATRIX
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType WEBP
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mHyphenationFrequency
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean lookingForFirstSliceFlag
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mAutoMirrored
com.google.android.exoplayer2.audio.AudioTimestampPoller: long sampleIntervalUs
androidx.appcompat.widget.ButtonBarLayout: boolean mAllowStacking
androidx.core.widget.NestedScrollView: android.view.View mChildToScrollTo
com.google.android.exoplayer2.text.ssa.SsaStyle$Format: int nameIndex
com.danikula.videocache.HttpUrlSource: com.danikula.videocache.SourceInfo sourceInfo
androidx.fragment.app.Fragment$AnimationInfo: int mNextAnim
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: androidx.appcompat.widget.ForwardingListener this$0
androidx.recyclerview.widget.GridLayoutManager: int[] mCachedBorders
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: com.google.android.exoplayer2.util.Clock clock
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: float pixelWidthAspectRatio
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.RendererConfiguration configuration
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy AT_LEAST
com.google.android.exoplayer2.metadata.flac.VorbisComment: java.lang.String key
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next
androidx.appcompat.R$layout: int abc_dialog_title_material
androidx.fragment.app.FragmentTransition$4: android.graphics.Rect val$inEpicenter
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar mDecorToolbar
com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook: int lookupType
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: androidx.core.view.ActionProvider$VisibilityListener mListener
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LOW_FREQUENCY_2
com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean committed
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: com.google.android.exoplayer2.metadata.id3.Id3Frame[] subFrames
androidx.fragment.app.Fragment: android.os.Bundle mSavedFragmentState
com.danikula.videocache.HttpProxyCacheServer$WaitRequestsRunnable: java.util.concurrent.CountDownLatch startSignal
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: boolean isFilling
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.mediacodec.MediaCodecInfo codecInfo
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int mp3Flags
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager$TwilightState mTwilightState
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl mItemData
com.google.android.exoplayer2.ExoPlayerImpl: int pendingOperationAcks
androidx.appcompat.R$styleable: int Toolbar_titleTextAppearance
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener mOnFlingListener
com.bumptech.glide.provider.ModelToResourceClassCache: java.util.concurrent.atomic.AtomicReference resourceClassKeyRef
androidx.recyclerview.widget.GridLayoutManager: android.graphics.Rect mDecorInsets
androidx.lifecycle.ClassesInfoCache$MethodReference: int mCallType
com.danikula.videocache.Pinger: int port
com.google.android.exoplayer2.DefaultLoadControl: long bufferForPlaybackAfterRebufferUs
com.google.android.exoplayer2.source.SampleDataQueue: com.google.android.exoplayer2.upstream.Allocator allocator
androidx.recyclerview.widget.RecyclerView: int mInitialTouchY
com.google.android.exoplayer2.extractor.ts.Ac3Reader: boolean lastByteWas0B
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: android.os.Handler handler
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: com.google.android.exoplayer2.util.TimestampAdjuster pcrTimestampAdjuster
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int arrayPoolSize
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflowSet
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData: int requiredSampleTransformation
cn.jzvd.R$id: int bottom_progress
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean viewportOrientationMayChange
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format upstreamCommittedFormat
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mCreatedMenus
androidx.appcompat.app.AppCompatDelegateImpl: androidx.core.view.ViewPropertyAnimatorCompat mFadeAnim
com.google.android.exoplayer2.extractor.ts.H264Reader: boolean[] prefixFlags
androidx.versionedparcelable.VersionedParcelParcel: int mEnd
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: java.util.regex.Pattern CUE_SETTING_PATTERN
androidx.appcompat.app.AlertController: android.view.View$OnClickListener mButtonHandler
com.google.android.exoplayer2.upstream.AssetDataSource: boolean opened
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: int chunkFlags
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintList
com.google.android.exoplayer2.util.EGLSurfaceTexture: int[] EGL_CONFIG_ATTRIBUTES
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$outNames
com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result: boolean isReusable
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: android.content.Context context
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: java.lang.ref.WeakReference mWeakMediaPlayer
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatViewInflater mAppCompatViewInflater
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache$1: int val$maxSize
androidx.appcompat.R$styleable: int[] LinearLayoutCompat_Layout
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mImageTint
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_FPS_DEN
androidx.appcompat.widget.Toolbar$SavedState: int expandedMenuItemId
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet metadataOutputs
androidx.appcompat.graphics.drawable.DrawableContainer: int mAlpha
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData: int nalUnitLengthFieldLength
androidx.fragment.app.FragmentTransitionImpl$2: java.util.ArrayList val$sharedElementsIn
androidx.appcompat.R$styleable: int Toolbar_titleTextColor
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction DONT_RETRY_FATAL
androidx.core.widget.NestedScrollView: androidx.core.widget.NestedScrollView$OnScrollChangeListener mOnScrollChangeListener
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_SELECTION
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController val$dialog
com.bumptech.glide.load.engine.DecodeJob$1: int[] $SwitchMap$com$bumptech$glide$load$EncodeStrategy
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: long startPosition
com.google.android.exoplayer2.util.FlacStreamMetadata: int maxBlockSizeSamples
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache: java.util.LinkedHashMap backingMap
com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData: com.google.android.exoplayer2.Format format
androidx.appcompat.app.AppCompatDelegateImpl: boolean mIsFloating
com.google.android.exoplayer2.Format: int stereoMode
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.source.SampleStream stream
androidx.appcompat.R$attr: int actionBarSize
androidx.appcompat.widget.ActionBarOverlayLayout: int mLastSystemUiVisibility
com.bumptech.glide.manager.RequestTracker: boolean isPaused
com.google.android.exoplayer2.source.hls.HlsMediaSource: java.lang.Object tag
com.google.android.exoplayer2.extractor.ogg.StreamReader: long currentGranule
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: long utcSpliceTime
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: long mBitrate
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: com.google.android.exoplayer2.extractor.TrackOutput output
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] SPECIAL_ES_FR_CHARACTER_SET
com.google.android.exoplayer2.extractor.ogg.VorbisReader: com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader commentHeader
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsOut
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: com.google.android.exoplayer2.Format inputFormat
tv.danmaku.ijk.media.player.IjkMediaMeta: tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta mVideoStream
com.bumptech.glide.load.ImageHeaderParserUtils$3: com.bumptech.glide.load.data.ParcelFileDescriptorRewinder val$parcelFileDescriptorRewinder
com.google.android.exoplayer2.extractor.ts.LatmReader: long timeUs
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource LOCAL
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: com.bumptech.glide.Priority priority
androidx.appcompat.app.AlertController$AlertParams: android.graphics.drawable.Drawable mNeutralButtonIcon
com.google.android.exoplayer2.trackselection.TrackSelectionArray: com.google.android.exoplayer2.trackselection.TrackSelection[] trackSelections
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: long firstSamplePosition
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple: java.lang.String mimeType
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mLastInnerInsets
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_MEDIA_DURATION
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarContainer mActionBarTop
androidx.core.provider.SelfDestructiveThread: java.lang.Object mLock
com.google.android.exoplayer2.ui.SubtitlePainter: float outlineWidth
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int viewportWidth
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Method sSetWindowLayoutTypeMethod
androidx.appcompat.widget.AppCompatTextHelper$1: int val$style
com.bumptech.glide.load.engine.ResourceRecycler: boolean isRecycling
org.slf4j.event.Level: org.slf4j.event.Level ERROR
androidx.core.provider.SelfDestructiveThread: java.lang.String mThreadName
cn.jzvd.JzvdStd: cn.jzvd.JzvdStd$DismissControlViewTimerTask mDismissControlViewTimerTask
com.google.android.exoplayer2.extractor.ts.PsExtractor: boolean hasOutputSeekMap
androidx.appcompat.widget.LinearLayoutCompat: boolean mUseLargestChild
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean allowVideoMixedMimeTypeAdaptiveness
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: boolean hasBackgroundColor
com.google.android.exoplayer2.MediaPeriodInfo: long startPositionUs
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable[] mDrawables
com.google.android.exoplayer2.decoder.CryptoInfo: int[] numBytesOfClearData
com.google.android.exoplayer2.text.ttml.TtmlRegion: int lineAnchor
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.util.pool.StateVerifier stateVerifier
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.trackselection.TrackSelectorResult emptyTrackSelectorResult
androidx.arch.core.executor.DefaultTaskExecutor$1: androidx.arch.core.executor.DefaultTaskExecutor this$0
androidx.appcompat.widget.ActionBarOverlayLayout$2: androidx.appcompat.widget.ActionBarOverlayLayout this$0
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long joiningDeadlineMs
com.bumptech.glide.load.engine.DataCacheGenerator: int modelLoaderIndex
com.google.android.exoplayer2.extractor.mp4.Atom: int type
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier mTextClassifier
androidx.appcompat.R$styleable: int TextAppearance_fontFamily
com.google.android.exoplayer2.text.pgs.PgsDecoder: com.google.android.exoplayer2.util.ParsableByteArray buffer
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: float lowMemoryMaxSizeMultiplier
androidx.appcompat.widget.DropDownListView: boolean mDrawsInPressedState
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: int[] viewtype
com.google.android.exoplayer2.trackselection.TrackSelection$Definition: com.google.android.exoplayer2.source.TrackGroup group
androidx.appcompat.widget.ToolbarWidgetWrapper$1: androidx.appcompat.widget.ToolbarWidgetWrapper this$0
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException fallbackDecoderInitializationException
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: int horizontalPositionMaximum
com.google.android.exoplayer2.drm.UnsupportedDrmException: int reason
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: int bitrateMax
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int[] mSpanReferenceLines
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat PREFER_ARGB_8888
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: boolean isCreateCalled
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable mDelegateDrawable
androidx.appcompat.R$styleable: int MenuItem_tooltipText
cn.jzvd.R$drawable: int jz_shrink
tv.danmaku.ijk.media.player.IjkMediaPlayer: int OPT_CATEGORY_FORMAT
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: byte[] commandBytes
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.upstream.DataSpec initDataSpec
androidx.appcompat.R$styleable: int Toolbar_titleMargins
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: com.bumptech.glide.load.PreferredColorSpace val$preferredColorSpace
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: com.bumptech.glide.load.data.mediastore.FileService service
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: android.content.BroadcastReceiver mReceiver
com.bumptech.glide.Registry: com.bumptech.glide.provider.ImageHeaderParserRegistry imageHeaderParserRegistry
com.bumptech.glide.Glide: com.bumptech.glide.load.engine.Engine engine
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mLastInnerInsetsRect
com.google.android.exoplayer2.ui.SubtitlePainter: android.graphics.Paint paint
com.bumptech.glide.disklrucache.DiskLruCache$Value: com.bumptech.glide.disklrucache.DiskLruCache this$0
com.danikula.videocache.GetRequest: java.util.regex.Pattern URL_PATTERN
com.bumptech.glide.load.model.MultiModelLoaderFactory: com.bumptech.glide.load.model.ModelLoader EMPTY_MODEL_LOADER
com.bumptech.glide.load.engine.DecodeHelper: boolean isLoadDataSet
com.google.android.exoplayer2.extractor.ts.SectionReader: boolean waitingForPayloadStart
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: long lastInputTimeUs
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int width
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int picOrderCntLsbLength
androidx.appcompat.widget.TintInfo: android.graphics.PorterDuff$Mode mTintMode
com.bumptech.glide.disklrucache.DiskLruCache: long nextSequenceNumber
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_5POINT1_BACK
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: java.lang.reflect.Constructor FLAC_EXTENSION_EXTRACTOR_CONSTRUCTOR
com.bumptech.glide.disklrucache.DiskLruCache$Value: java.io.File[] files
androidx.appcompat.R$string: int abc_searchview_description_search
com.google.android.exoplayer2.metadata.MetadataRenderer: com.google.android.exoplayer2.metadata.MetadataDecoderFactory decoderFactory
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mItemDirection
androidx.appcompat.R$styleable: int ViewStubCompat_android_inflatedId
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: int verticalPosition
com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: int endBufferSize
androidx.lifecycle.LiveData: boolean mDispatchInvalidated
androidx.appcompat.app.AlertController: androidx.core.widget.NestedScrollView mScrollView
tv.danmaku.ijk.media.player.AndroidMediaPlayer: tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder mInternalListenerAdapter
androidx.exifinterface.media.ExifInterface: int mThumbnailCompression
androidx.media.AudioAttributesCompat: androidx.media.AudioAttributesImpl mImpl
com.google.android.exoplayer2.video.DolbyVisionConfig: int profile
androidx.appcompat.app.AlertController$AlertParams$2: int mLabelIndex
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$enterTransition
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode mIconTintMode
androidx.fragment.app.BackStackState: int[] mCurrentMaxLifecycleStates
com.google.android.exoplayer2.extractor.ts.PesReader: com.google.android.exoplayer2.util.ParsableBitArray pesScratch
cn.jzvd.JZMediaInterface: android.os.Handler handler
androidx.core.view.ViewConfigurationCompat: java.lang.reflect.Method sGetScaledScrollFactorMethod
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: boolean printedNewLine
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.Options options
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.executor.GlideExecutor sourceUnlimitedExecutor
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int[] STEP_TABLE
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_STARTED_AS_NEXT
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.offline.StreamKey: int groupIndex
com.bumptech.glide.load.model.DataUrlLoader: com.bumptech.glide.load.model.DataUrlLoader$DataDecoder dataDecoder
androidx.viewpager.widget.ViewPager: boolean mPopulatePending
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long lastSeekPositionUs
com.google.android.exoplayer2.metadata.flac.PictureFrame: int pictureType
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.SubMenuBuilder mSubMenu
com.google.android.exoplayer2.ui.SubtitlePainter: int backgroundColor
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode DEFAULT_MODE
com.google.android.exoplayer2.upstream.UdpDataSource: java.net.MulticastSocket multicastSocket
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int type
com.danikula.videocache.HttpUrlSource: java.net.HttpURLConnection connection
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_BAD_INTERLEAVING
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: android.os.Bundle mExtras
com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean[] written
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHasActionBar
com.google.android.exoplayer2.extractor.wav.WavHeader: int numChannels
androidx.appcompat.widget.Toolbar: android.widget.TextView mSubtitleTextView
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker mGapWorker
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonPositiveIcon
com.bumptech.glide.load.model.ResourceLoader: com.bumptech.glide.load.model.ModelLoader uriLoader
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: int backgroundPixelCode
com.google.android.exoplayer2.video.ColorInfo: int colorTransfer
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition pageComposition
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorListener mShowListener
com.google.android.exoplayer2.SimpleExoPlayer: boolean isPriorityTaskManagerRegistered
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder extrasHolder
androidx.appcompat.view.menu.ActionMenuItemView: int mMaxIconSize
com.google.android.exoplayer2.text.cea.Cea608Decoder: java.util.List cues
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: int hits
com.google.android.exoplayer2.extractor.mp4.Track: long[] editListDurations
com.google.android.exoplayer2.PlayerMessage: java.lang.Object payload
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean prepared
cn.jzvd.demo.AdapterRecyclerViewTiny: android.content.Context context
cn.jzvd.demo.ActivityListViewRecyclerView: androidx.recyclerview.widget.RecyclerView recyclerView
com.bumptech.glide.GlideBuilder: java.util.Map defaultTransitionOptions
androidx.core.graphics.drawable.IconCompat: int mType
androidx.recyclerview.widget.RecyclerView: android.widget.EdgeEffect mLeftGlow
cn.jzvd.R$id: int surface_container
androidx.appcompat.view.menu.MenuPopupHelper: android.content.Context mContext
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties requestProperties
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean vendor
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int byteOffset
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback mActionMenuPresenterCallback
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.Class mViewCommandArgumentClass
com.google.android.exoplayer2.text.dvb.DvbParser: android.graphics.Canvas canvas
androidx.appcompat.R$drawable: int abc_text_select_handle_middle_mtrl_light
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder drawableDecoder
androidx.exifinterface.media.ExifInterface: boolean mIsSupportedFile
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: long eventPlaybackPositionMs
cn.jzvd.JZMediaInterface: android.graphics.SurfaceTexture SAVED_SURFACE
androidx.appcompat.R$layout: int abc_action_bar_title_item
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int maxAudioBitrate
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.collection.MapCollections: androidx.collection.MapCollections$EntrySet mEntrySet
androidx.appcompat.widget.Toolbar: java.util.ArrayList mTempViews
androidx.fragment.app.Fragment: android.view.View mView
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver mTreeObserver
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int marklimit
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean mBeforeStart
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.content.res.AssetFileDescriptor assetFileDescriptor
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: android.media.MediaCodecInfo mCodecInfo
com.google.android.exoplayer2.ExoPlayerImpl: boolean hasPendingSeek
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SimpleArrayMap mDelegates
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist masterPlaylist
androidx.appcompat.widget.SuggestionsAdapter: int mFlagsCol
com.bumptech.glide.disklrucache.DiskLruCache: long maxSize
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_FRAME_RATE_UI
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.graphics.RectF TEMP_RECTF
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int underline
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_ERROR
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: long spliceEventId
com.bumptech.glide.load.resource.gif.GifOptions: com.bumptech.glide.load.Option DISABLE_ANIMATION
com.bumptech.glide.load.ImageHeaderParserUtils$1: java.io.InputStream val$finalIs
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_CACHE_STATISTIC_FILE_POS
androidx.appcompat.widget.ActionBarOverlayLayout: int mActionBarHeight
com.bumptech.glide.load.resource.gif.StreamGifDecoder: com.bumptech.glide.load.ResourceDecoder byteBufferDecoder
com.google.android.exoplayer2.extractor.ts.H262Reader: boolean startedFirstSample
androidx.core.widget.NestedScrollView: androidx.core.view.NestedScrollingChildHelper mChildHelper
com.bumptech.glide.load.resource.gif.GifFrameLoader: boolean isRunning
androidx.core.text.PrecomputedTextCompat$Params$Builder: int mBreakStrategy
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Recycler mRecycler
org.slf4j.event.EventRecodingLogger: org.slf4j.helpers.SubstituteLogger logger
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status CLEARED
com.google.android.exoplayer2.audio.AudioAttributes: int allowedCapturePolicy
cn.jzvd.JzvdStd: android.widget.TextView mDialogTotalTime
com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy AUTOMATIC
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate framePredicate
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$ReleaseManager releaseManager
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.PlayerMessage$Sender sender
com.google.android.exoplayer2.ui.SubtitlePainter: android.graphics.Bitmap cueBitmap
androidx.core.widget.AutoScrollHelper$ClampedScroller: float mTargetVelocityX
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mShowRunnable
androidx.appcompat.widget.Toolbar$3: androidx.appcompat.widget.Toolbar this$0
com.bumptech.glide.load.engine.Engine$LoadStatus: com.bumptech.glide.load.engine.EngineJob engineJob
androidx.appcompat.R$styleable: int[] SwitchCompat
androidx.appcompat.widget.Toolbar: java.util.ArrayList mHiddenViews
com.google.android.exoplayer2.metadata.MetadataRenderer: int pendingMetadataIndex
com.google.android.exoplayer2.ui.SubtitlePainter: int parentBottom
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: long outputFrameCount
com.google.android.exoplayer2.ui.SubtitlePainter: float bottomPaddingFraction
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: com.google.android.exoplayer2.util.ParsableByteArray data
androidx.collection.SimpleArrayMap: java.lang.Object[] mArray
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory: int threadNum
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_UNKNOWN
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.SparseIntArray VP9_PROFILE_NUMBER_TO_CONST
android.support.v4.media.MediaDescriptionCompat: java.lang.Object mDescriptionObj
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: java.io.IOException playlistError
androidx.appcompat.R$string: int abc_menu_sym_shortcut_label
com.google.android.exoplayer2.metadata.icy.IcyHeaders: int metadataInterval
com.bumptech.glide.disklrucache.Util: java.nio.charset.Charset UTF_8
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.metadata.Metadata metadata
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder$Callback mMenuBuilderCallback
com.google.android.exoplayer2.trackselection.TrackSelector: com.google.android.exoplayer2.trackselection.TrackSelector$InvalidationListener listener
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] $VALUES
com.google.android.exoplayer2.upstream.DefaultAllocator: int allocatedCount
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG_A
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: int sampleCount
androidx.appcompat.widget.ListPopupWindow: android.os.Handler mHandler
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties defaultRequestProperties
androidx.exifinterface.media.ExifInterface$1: long mPosition
com.google.android.exoplayer2.ui.TrackSelectionView: com.google.android.exoplayer2.source.TrackGroupArray trackGroups
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: boolean mHasUnwantedGapAfter
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.Timeline$Period period
androidx.fragment.app.FragmentTransition$4: java.util.ArrayList val$sharedElementsOut
androidx.appcompat.app.AlertController$AlertParams: int mCheckedItem
com.bumptech.glide.load.engine.DecodePath: java.lang.Class dataClass
com.bumptech.glide.RequestManager: com.bumptech.glide.manager.Lifecycle lifecycle
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHARACTERISTICS
com.google.android.exoplayer2.audio.Sonic: int inputSampleRateHz
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int[] mThemeAttrs
com.bumptech.glide.load.data.HttpUrlFetcher: java.io.InputStream stream
com.bumptech.glide.load.engine.EngineResource: com.bumptech.glide.load.engine.Resource resource
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: long frameDurationUs
androidx.exifinterface.media.ExifInterface: int[] BITS_PER_SAMPLE_GREYSCALE_2
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
androidx.lifecycle.Lifecycling$1: androidx.lifecycle.LifecycleEventObserver val$observer
androidx.appcompat.widget.SuggestionsAdapter: boolean mClosed
androidx.appcompat.R$styleable: int SearchView_submitBackground
cn.jzvd.JzvdStd: android.widget.ProgressBar mDialogBrightnessProgressBar
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementSourceNames
androidx.appcompat.R$layout: int abc_search_dropdown_item_icons_2line
androidx.appcompat.R$attr: int dropDownListViewStyle
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.content.res.ColorStateList mTint
com.google.android.exoplayer2.audio.DefaultAudioSink$2: com.google.android.exoplayer2.audio.DefaultAudioSink this$0
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray atomHeader
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.source.SampleDataQueue sampleDataQueue
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: long seekTimeUs
com.bumptech.glide.provider.EncoderRegistry$Entry: java.lang.Class dataClass
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean sampleSignalByteRead
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean outputStreamEnded
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.GlideContext glideContext
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: boolean IS_BITMAP_FACTORY_SCALING_SUPPORTED
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.lang.String TAG
cn.jzvd.Jzvd: boolean mTouchingProgressBar
android.support.v4.media.RatingCompat: float mRatingValue
androidx.appcompat.R$attr: int listMenuViewStyle
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_METHOD
com.google.android.exoplayer2.metadata.MetadataRenderer: com.google.android.exoplayer2.metadata.MetadataInputBuffer buffer
com.google.android.exoplayer2.extractor.ts.H262Reader: long samplePosition
androidx.appcompat.widget.Toolbar: android.content.res.ColorStateList mTitleTextColor
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues: int height
androidx.appcompat.widget.ContentFrameLayout: androidx.appcompat.widget.ContentFrameLayout$OnAttachListener mAttachListener
cn.jzvd.R$id: int loading
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean[] WINDOW_STYLE_WORD_WRAP
com.google.android.exoplayer2.util.PriorityTaskManager: java.util.PriorityQueue queue
cn.jzvd.demo.ActivityApi: cn.jzvd.Jzvd$JZAutoFullscreenListener mSensorEventListener
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String mType
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_SILENT
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mChangingConfigurations
com.google.android.exoplayer2.decoder.CryptoInfo: int mode
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool: java.util.Queue pool
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator mItemAnimator
com.bumptech.glide.load.engine.DecodeHelper: java.util.List loadData
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: java.lang.String fullSegmentEncryptionKeyUri
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_TYPE
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mValue
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mNonActionItems
androidx.core.R$styleable: int FontFamily_fontProviderAuthority
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasTintMode
com.google.android.exoplayer2.ui.SubtitlePainter: float cueTextSizePx
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon1
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mHasYOffset
com.google.android.exoplayer2.extractor.GaplessInfoHolder: int encoderPadding
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry mRegistry
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: com.google.android.exoplayer2.source.ClippingMediaPeriod this$0
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] mFonts
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: boolean hasDiscontinuitySequence
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache$1: com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache this$0
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: int fixedSampleSize
androidx.appcompat.graphics.drawable.DrawableContainer: boolean mHasAlpha
androidx.fragment.app.FragmentState: java.lang.String mClassName
tv.danmaku.ijk.media.player.IjkMediaPlayer: long mNativeMediaPlayer
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: boolean hasContentEncryption
com.google.android.exoplayer2.extractor.ts.Id3Reader: boolean writingSample
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets mTappableElementInsets
cn.jzvd.R$drawable: int jz_battery_level_50
com.bumptech.glide.provider.LoadPathCache: java.util.concurrent.atomic.AtomicReference keyRef
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor this$0
com.google.android.exoplayer2.ui.R$styleable: int[] ColorStateListItem
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] SPECIAL_CHARACTER_SET
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_HIDE_TOOLTIP
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.TrimmingAudioProcessor trimmingAudioProcessor
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton this$1
com.google.android.exoplayer2.audio.DefaultAudioSink: long submittedEncodedFrames
com.google.android.exoplayer2.C: java.util.UUID WIDEVINE_UUID
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean exceedRendererCapabilitiesIfNecessary
com.danikula.videocache.HttpUrlSource: java.io.InputStream inputStream
com.google.android.exoplayer2.extractor.MpegAudioHeader: int sampleRate
androidx.appcompat.view.menu.StandardMenuPopup: android.view.ViewTreeObserver$OnGlobalLayoutListener mGlobalLayoutListener
org.slf4j.event.SubstituteLoggingEvent: java.lang.Throwable throwable
android.support.v4.media.session.ParcelableVolumeInfo: int volumeType
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.ExoMediaDrm$ProvisionRequest currentProvisionRequest
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener: com.google.android.exoplayer2.audio.MediaCodecAudioRenderer this$0
com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion: int horizontalAddress
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: byte[] data
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_MAIN
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.load.engine.Engine engine
androidx.appcompat.app.AlertController: android.widget.ImageView mIconView
androidx.appcompat.R$styleable: int Toolbar_titleMarginTop
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.View mCustomView
com.google.android.exoplayer2.upstream.Allocation: byte[] data
androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceEndMethod
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: androidx.appcompat.widget.ListPopupWindow this$0
com.google.android.exoplayer2.text.ssa.SsaSubtitle: java.util.List cues
androidx.appcompat.R$styleable: int[] ViewBackgroundHelper
com.bumptech.glide.load.engine.ResourceCacheKey: com.bumptech.glide.load.Key sourceKey
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: int foregroundPixelCode
com.google.android.exoplayer2.ExoPlayerImpl: int maskingPeriodIndex
com.bumptech.glide.load.engine.EngineJob: boolean hasResource
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory DEFAULT_FACTORY
com.google.android.exoplayer2.util.TimedValueQueue: int first
androidx.appcompat.R$layout: int abc_action_menu_layout
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter mAdapter
com.google.android.exoplayer2.extractor.BinarySearchSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap seekMap
androidx.fragment.app.FragmentManagerViewModel: boolean mHasBeenCleared
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: long targetTime
androidx.appcompat.R$styleable: int AppCompatTheme_windowNoTitle
com.bumptech.glide.manager.RequestManagerFragment: java.util.Set childRequestManagerFragments
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdMp3 jzvdStdMp3
androidx.appcompat.widget.TooltipPopup: int[] mTmpAnchorPos
androidx.recyclerview.widget.RecyclerView: int mLastTouchY
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets mStableInsets
androidx.appcompat.app.AppCompatDialog$1: androidx.appcompat.app.AppCompatDialog this$0
androidx.recyclerview.widget.GapWorker: java.util.ArrayList mTasks
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.CascadingMenuPopup$3 this$1
androidx.viewpager.widget.ViewPager: android.os.Parcelable mRestoredAdapterState
com.google.android.exoplayer2.ui.SubtitlePainter: int foregroundColor
com.bumptech.glide.disklrucache.DiskLruCache: java.util.concurrent.ThreadPoolExecutor executorService
com.google.android.exoplayer2.extractor.wav.WavSeekMap: int framesPerBlock
androidx.appcompat.R$styleable: int ActionBar_backgroundSplit
androidx.recyclerview.widget.RecyclerView: boolean mLayoutWasDefered
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage FINISHED
com.google.android.exoplayer2.extractor.ts.PsDurationReader: boolean isDurationRead
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemId
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement: int elementId
com.google.android.exoplayer2.text.Cue: float textSize
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: boolean isCancelled
androidx.exifinterface.media.ExifInterface: java.util.regex.Pattern sNonZeroTimePattern
androidx.appcompat.widget.SearchView: int[] mTemp
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: long maxSize
androidx.core.widget.AutoScrollHelper: int DEFAULT_ACTIVATION_DELAY
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: com.google.android.exoplayer2.audio.AudioProcessor[] availableAudioProcessors
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: java.lang.String[] PROJECTION
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.util.TimedValueQueue formatQueue
androidx.appcompat.R$styleable: int[] ActionBar
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry mStart
androidx.appcompat.widget.ActionBarBackgroundDrawable: androidx.appcompat.widget.ActionBarContainer mContainer
com.google.android.exoplayer2.extractor.mkv.VarintReader: int state
com.google.android.exoplayer2.MediaPeriodQueue: boolean shuffleModeEnabled
androidx.exifinterface.media.ExifInterface$Rational: long denominator
com.google.android.exoplayer2.DefaultLoadControl: long maxBufferUs
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mChangingConfigurations
com.bumptech.glide.request.transition.NoTransition: com.bumptech.glide.request.transition.NoTransition NO_ANIMATION
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: boolean framingFlag
com.danikula.videocache.file.LruDiskUsage: java.util.concurrent.ExecutorService workerThread
androidx.loader.app.LoaderManagerImpl$LoaderInfo: android.os.Bundle mArgs
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long floorTimePosition
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean initDataLoadRequired
tv.danmaku.ijk.media.player.MediaPlayerProxy$6: tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener val$finalListener
com.google.android.exoplayer2.audio.DefaultAudioSink: int drainingAudioProcessorIndex
com.bumptech.glide.load.resource.UnitTransformation: com.bumptech.glide.load.Transformation TRANSFORMATION
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long bitrateEstimate
com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket: byte[] packetData
com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean readable
androidx.collection.MapCollections$MapIterator: androidx.collection.MapCollections this$0
com.google.android.exoplayer2.video.DummySurface: boolean secureModeInitialized
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mFillAlpha
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.app.LoaderManagerImpl$LoaderObserver mObserver
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int amrFlags
androidx.core.graphics.drawable.IconCompat: java.lang.Object mObj1
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$RecycleListView val$listView
com.bumptech.glide.RequestBuilder: android.content.Context context
androidx.activity.ImmLeaksCleaner: java.lang.reflect.Field sServedViewField
androidx.core.view.ViewCompat: boolean sMinWidthFieldFetched
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.PlaybackParameters playbackParameters
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int mode
com.bumptech.glide.manager.DefaultConnectivityMonitor: com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener listener
androidx.appcompat.widget.AppCompatSeekBar: androidx.appcompat.widget.AppCompatSeekBarHelper mAppCompatSeekBarHelper
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: java.lang.String language
cn.jzvd.JzvdStd: android.widget.TextView replayTextView
com.google.android.exoplayer2.extractor.ts.DtsReader: long sampleDurationUs
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long lastPlayheadSampleTimeUs
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_OFFSET
com.bumptech.glide.load.resource.transcode.UnitTranscoder: com.bumptech.glide.load.resource.transcode.UnitTranscoder UNIT_TRANSCODER
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.text.TextOutput output
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: android.util.SparseArray tracks
cn.jzvd.R$id: int battery_level
androidx.appcompat.R$color: int abc_tint_default
tv.danmaku.ijk.media.player.MediaPlayerProxy$4: tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener val$finalListener
androidx.appcompat.R$styleable: int AppCompatTextHelper_android_textAppearance
androidx.viewpager.widget.ViewPager: boolean mNeedCalculatePageOffsets
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder: java.io.DataOutputStream dataOutputStream
androidx.core.R$id: int tag_unhandled_key_event_manager
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentHostCallback mHost
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.extractor.mkv.VarintReader varintReader
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: android.os.Looper playbackLooper
com.google.android.exoplayer2.decoder.CryptoInfo: byte[] key
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState SUCCESS
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int mPosition
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format upstreamFormat
androidx.lifecycle.ReflectiveGenericLifecycleObserver: androidx.lifecycle.ClassesInfoCache$CallbackInfo mInfo
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: com.bumptech.glide.load.engine.LockedResource toEncode
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache diskCache
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mChildEnd
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.DecoderInputBuffer dequeuedInputBuffer
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: int trackType
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: long reservedBandwidth
com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader: com.google.android.exoplayer2.extractor.ts.TsExtractor this$0
androidx.exifinterface.media.ExifInterface$ExifAttribute: int numberOfComponents
com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy NONE
androidx.savedstate.Recreator: androidx.savedstate.SavedStateRegistryOwner mOwner
org.slf4j.event.Level: org.slf4j.event.Level INFO
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory mEdgeEffectFactory
com.google.android.exoplayer2.Format: byte[] projectionData
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.upstream.DataSource initDataSource
androidx.appcompat.R$id: int scrollIndicatorDown
androidx.fragment.app.FragmentManagerImpl: boolean mHavePendingDeferredStart
androidx.appcompat.view.menu.BaseMenuWrapper: androidx.collection.SimpleArrayMap mSubMenus
com.bumptech.glide.util.LruCache$Entry: java.lang.Object value
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: boolean released
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: int localeIndicator
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.Format inputFormat
com.google.android.exoplayer2.metadata.Metadata: android.os.Parcelable$Creator CREATOR
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: java.lang.String LOGTAG
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIconRefine
androidx.recyclerview.widget.ViewBoundsCheck: androidx.recyclerview.widget.ViewBoundsCheck$Callback mCallback
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: int preferredTextRoleFlags
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] WINDOW_STYLE_JUSTIFICATION
androidx.core.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_NAME
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: int gravity
androidx.appcompat.R$drawable: int abc_ratingbar_material
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.util.Clock clock
androidx.appcompat.app.AppCompatDelegateImpl: boolean mActivityHandlesUiMode
com.google.android.exoplayer2.metadata.flac.PictureFrame: java.lang.String description
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: float maxSizeMultiplier
com.google.android.exoplayer2.analytics.AnalyticsCollector: java.util.concurrent.CopyOnWriteArraySet listeners
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder: com.google.android.exoplayer2.source.chunk.Chunk chunk
com.google.android.exoplayer2.ExoPlaybackException: int type
org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder SINGLETON
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatImageHelper mImageHelper
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: androidx.appcompat.widget.AppCompatSpinner$DropdownPopup this$1
com.google.android.exoplayer2.source.UnrecognizedInputFormatException: android.net.Uri uri
com.google.android.exoplayer2.audio.Ac3Util: int[] BITRATE_BY_HALF_FRMSIZECOD
androidx.appcompat.widget.Toolbar$LayoutParams: int mViewType
com.google.android.exoplayer2.audio.AudioAttributes: int contentType
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean[] ODD_PARITY_BYTE_TABLE
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable fallbackDrawable
androidx.versionedparcelable.VersionedParcelParcel: int mOffset
android.support.v4.media.session.PlaybackStateCompat: float mSpeed
androidx.appcompat.view.menu.MenuBuilder: android.content.Context mContext
com.google.android.exoplayer2.extractor.mp4.Track: long movieTimescale
com.google.android.exoplayer2.text.cea.Cea708Decoder: java.util.List lastCues
com.google.android.exoplayer2.text.ssa.SsaDecoder: float screenHeight
com.bumptech.glide.load.model.stream.UrlLoader: com.bumptech.glide.load.model.ModelLoader glideUrlLoader
cn.jzvd.Jzvd: boolean mChangePosition
androidx.appcompat.app.AlertController: android.view.View mCustomTitleView
androidx.appcompat.R$styleable: int ActionMode_titleTextStyle
com.bumptech.glide.load.model.MultiModelLoaderFactory: java.util.List entries
androidx.appcompat.graphics.drawable.DrawableContainer: int mCurIndex
com.google.android.exoplayer2.extractor.ts.Id3Reader: int sampleSize
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver: java.lang.ref.WeakReference mMediaControllerImpl
com.google.android.exoplayer2.extractor.ts.PsExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
androidx.appcompat.widget.ActionBarContextView: int mCloseItemLayout
com.google.android.exoplayer2.trackselection.TrackSelection$Definition: java.lang.Object data
tv.danmaku.ijk.media.player.MediaPlayerProxy$2: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
androidx.appcompat.R$layout: int support_simple_spinner_dropdown_item
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: int mTrackType
androidx.appcompat.view.menu.ActionMenuItem: char mShortcutAlphabeticChar
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_BUFFERING_UPDATE
com.google.android.exoplayer2.source.TrackGroup: android.os.Parcelable$Creator CREATOR
cn.jzvd.demo.ActivityTinyWindowRecycleView: androidx.recyclerview.widget.RecyclerView recyclerView
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: int adIndexInAdGroup
com.google.android.exoplayer2.extractor.ts.Ac4Reader: int bytesRead
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int sampleRate
com.google.android.exoplayer2.extractor.mp4.Track: com.google.android.exoplayer2.Format format
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: int markPos
com.google.android.exoplayer2.decoder.SimpleDecoder: java.lang.Thread decodeThread
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String tag
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int count
com.bumptech.glide.load.resource.bitmap.Downsampler: java.util.List parsers
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: int audioFormat
androidx.fragment.app.Fragment: java.lang.String mTag
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener displayListener
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.MediaPeriodHolder next
com.google.android.exoplayer2.SimpleExoPlayer: boolean ownsSurface
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher eventDispatcher
androidx.appcompat.R$attr: int spinnerStyle
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider diskCacheProvider
com.bumptech.glide.load.engine.GlideException: java.lang.StackTraceElement[] EMPTY_ELEMENTS
com.bumptech.glide.load.model.LazyHeaders$Builder: java.lang.String DEFAULT_USER_AGENT
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.transition.TransitionFactory animationFactory
com.google.android.exoplayer2.util.SlidingPercentile: int maxWeight
com.bumptech.glide.gifdecoder.StandardGifDecoder: int downsampledHeight
com.google.android.exoplayer2.source.SampleQueue: boolean upstreamFormatRequired
androidx.appcompat.R$styleable: int SearchView_android_imeOptions
androidx.core.util.LogWriter: java.lang.String mTag
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Rect mTmpBounds
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder sampleNumberHolder
tv.danmaku.ijk.media.player.AndroidMediaPlayer: java.lang.Object mInitLock
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.engine.DiskCacheStrategy diskCacheStrategy
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
com.google.android.exoplayer2.metadata.id3.PrivFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mTmpInfo
androidx.recyclerview.widget.ViewBoundsCheck: androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags mBoundFlags
com.google.android.exoplayer2.Format: int hashCode
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: java.lang.Appendable appendable
androidx.fragment.app.FragmentManagerImpl: java.util.concurrent.CopyOnWriteArrayList mLifecycleCallbacks
androidx.lifecycle.LiveData: java.lang.Object NOT_SET
androidx.core.view.ViewPropertyAnimatorCompat: int mOldLayerType
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupStyleRes
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: com.google.android.exoplayer2.upstream.BandwidthMeter bandwidthMeter
com.google.android.exoplayer2.extractor.wav.WavExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
androidx.fragment.app.FragmentTransitionCompat21$1: androidx.fragment.app.FragmentTransitionCompat21 this$0
androidx.appcompat.widget.VectorEnabledTintResources: boolean sCompatVectorFromResourcesEnabled
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] ALPHA_8_IN_CONFIGS
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.Map overridingDrmInitData
androidx.savedstate.SavedStateRegistry: androidx.arch.core.internal.SafeIterableMap mComponents
com.bumptech.glide.load.engine.DataCacheGenerator: java.io.File cacheFile
cn.jzvd.Jzvd: float mGestureDownBrightness
cn.jzvd.demo.FragmentDemo: int index
androidx.appcompat.R$dimen: int abc_cascading_menus_min_smallest_width
androidx.appcompat.view.SupportActionModeWrapper: android.content.Context mContext
androidx.appcompat.view.menu.ActionMenuItemView: boolean mAllowTextWithIcon
com.bumptech.glide.request.BaseRequestOptions: boolean isAutoCloneEnabled
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mFpsNum
com.google.android.exoplayer2.audio.BaseAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat outputAudioFormat
com.google.android.exoplayer2.source.CompositeSequenceableLoader: com.google.android.exoplayer2.source.SequenceableLoader[] loaders
androidx.core.content.res.ComplexColorCompat: int mColor
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: android.view.animation.Animation animation
com.bumptech.glide.disklrucache.DiskLruCache: java.io.Writer journalWriter
androidx.core.graphics.PathParser$PathDataNode: float[] mParams
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK
com.google.android.exoplayer2.Timeline$Window: java.lang.Object SINGLE_WINDOW_UID
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int depth
com.google.android.exoplayer2.AudioBecomingNoisyManager: android.content.Context context
androidx.appcompat.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mFragmentManager
androidx.appcompat.R$attr: int actionDropDownStyle
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] mNodeArray
cn.jzvd.Jzvd: android.view.ViewGroup topContainer
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: long pageSequenceNumber
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: java.lang.String userAgent
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: com.google.android.exoplayer2.upstream.DataSource$Factory manifestDataSourceFactory
com.bumptech.glide.util.LruCache: long currentSize
androidx.appcompat.R$id: int action_mode_bar_stub
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode$Callback mDeferredModeDestroyCallback
com.google.android.exoplayer2.extractor.ts.DtsReader: java.lang.String formatId
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.executor.GlideExecutor sourceExecutor
androidx.exifinterface.media.ExifInterface$Rational: long numerator
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: boolean allowChunklessPreparation
com.danikula.videocache.HttpProxyCacheServerClients: com.danikula.videocache.CacheListener uiCacheListener
com.google.android.exoplayer2.extractor.amr.AmrExtractor: byte[] amrSignatureNb
tv.danmaku.ijk.media.player.IjkMediaPlayer: android.os.PowerManager$WakeLock mWakeLock
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: float bufferedFractionToLiveEdgeForQualityIncrease
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource dataSource
com.bumptech.glide.load.model.ModelCache$ModelKey: int height
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.Callable val$callable
androidx.collection.MapCollections: androidx.collection.MapCollections$ValuesCollection mValues
androidx.appcompat.widget.Toolbar: android.widget.ImageButton mNavButtonView
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.hls.HlsExtractorFactory extractorFactory
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: androidx.core.widget.AutoScrollHelper this$0
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupId
androidx.appcompat.R$styleable: int AlertDialog_multiChoiceItemLayout
androidx.appcompat.view.SupportMenuInflater$MenuState: android.graphics.PorterDuff$Mode itemIconTintMode
androidx.fragment.app.FragmentTransitionCompat21$3: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: boolean autoReturn
com.bumptech.glide.load.ImageHeaderParserUtils$5: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$byteArrayPool
com.google.android.exoplayer2.metadata.MetadataInputBuffer: long subsampleOffsetUs
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTint
cn.jzvd.demo.ActivityApi: android.hardware.SensorManager mSensorManager
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: android.util.SparseArray regions
com.google.android.exoplayer2.upstream.StatsDataSource: com.google.android.exoplayer2.upstream.DataSource dataSource
androidx.appcompat.view.menu.MenuPopupHelper: int mDropDownGravity
com.google.android.exoplayer2.ui.R$string: int exo_track_mono
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.Player player
com.google.android.exoplayer2.metadata.id3.CommentFrame: java.lang.String description
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader pesPayloadReader
org.slf4j.helpers.SubstituteLoggerFactory: java.util.concurrent.LinkedBlockingQueue eventQueue
androidx.appcompat.R$string: int abc_menu_space_shortcut_label
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.util.concurrent.atomic.AtomicReference skipBufferReference
com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource$ResourceListener listener
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList mItems
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: long positionUs
com.google.android.exoplayer2.metadata.id3.ApicFrame: int pictureType
androidx.appcompat.view.menu.MenuItemImpl: int mFlags
com.bumptech.glide.gifdecoder.StandardGifDecoder: int[] pct
com.google.android.exoplayer2.extractor.ts.AdtsReader: int matchState
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long floorBytePosition
com.google.android.exoplayer2.trackselection.TrackSelectorResult: com.google.android.exoplayer2.RendererConfiguration[] rendererConfigurations
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_SEEK_COMPLETE
androidx.appcompat.view.StandaloneActionMode: java.lang.ref.WeakReference mCustomView
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.upstream.DataSource dataSource
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: java.lang.StringBuilder textBuilder
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.MediaDrmCallback callback
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory dataSourceFactory
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction RETRY_RESET_ERROR_COUNT
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.util.ParsableByteArray ccData
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] ARGB_4444_IN_CONFIGS
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int mp4Flags
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.util.Clock clock
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean pendingSeekToStart
com.danikula.videocache.ProxyCacheUtils: org.slf4j.Logger LOG
com.bumptech.glide.load.engine.DecodeHelper: int width
androidx.exifinterface.media.ExifInterface: boolean mHasThumbnail
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int bitmapHeight
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.core.view.ActionProvider itemActionProvider
com.google.android.exoplayer2.metadata.MetadataRenderer: int pendingMetadataCount
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: int verticalPositionMinimum
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: java.util.ArrayDeque containerAtoms
com.google.android.exoplayer2.PlaybackInfo: boolean isLoading
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isVideo
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException: java.lang.String contentType
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: int frameSize
androidx.appcompat.R$attr: int actionModeStyle
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int matroskaFlags
com.google.android.exoplayer2.extractor.ogg.VorbisReader: com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader vorbisIdHeader
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_ANIM
com.google.android.exoplayer2.trackselection.TrackSelection$Definition: int[] tracks
androidx.fragment.app.Fragment$AnimationInfo: java.lang.Object mReenterTransition
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int[] colors
androidx.core.R$id: int accessibility_custom_action_9
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: androidx.core.view.AccessibilityDelegateCompat mCompat
androidx.appcompat.widget.SearchView: java.lang.Runnable mReleaseCursorRunnable
androidx.viewpager.widget.ViewPager: int mTouchSlop
androidx.appcompat.view.menu.BaseMenuWrapper: androidx.collection.SimpleArrayMap mMenuItems
androidx.appcompat.widget.ViewStubCompat: java.lang.ref.WeakReference mInflatedViewRef
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineKeyFactory keyFactory
com.bumptech.glide.gifdecoder.GifFrame: int transIndex
androidx.collection.ContainerHelpers: java.lang.Object[] EMPTY_OBJECTS
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: int alignment
androidx.appcompat.widget.SearchView$7: androidx.appcompat.widget.SearchView this$0
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long cuesContentPosition
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.data.DataFetcher delegate
tv.danmaku.ijk.media.player.BuildConfig: java.lang.String BUILD_TYPE
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.appcompat.app.TwilightManager: android.location.LocationManager mLocationManager
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: com.google.android.exoplayer2.util.ParsableByteArray parsableByteArray
com.bumptech.glide.RequestBuilder: java.lang.Object model
cn.jzvd.Jzvd: int screen
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmHandler: com.google.android.exoplayer2.drm.DefaultDrmSessionManager this$0
androidx.core.R$styleable: int FontFamily_fontProviderPackage
androidx.collection.ArraySet: java.lang.Object[] sTwiceBaseCache
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.exoplayer2.SimpleExoPlayer: android.view.TextureView textureView
androidx.appcompat.R$id: int shortcut
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle currentTrackBundle
com.bumptech.glide.load.engine.DecodeJob: boolean isCancelled
com.google.android.exoplayer2.source.hls.WebvttExtractor: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: int readTimeoutMillis
androidx.core.view.ViewCompat: int[] ACCESSIBILITY_ACTIONS_RESOURCE_IDS
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int inputSampleRate
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelStore mViewModelStore
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.MediaPeriod$Callback callback
androidx.core.R$styleable: int FontFamilyFont_android_font
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_GROUP_ID
androidx.core.graphics.drawable.WrappedDrawableApi14: int mCurrentColor
com.bumptech.glide.load.model.ModelCache: com.bumptech.glide.util.LruCache cache
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_EXTENDED
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] $VALUES
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: boolean val$isHardwareConfigAllowed
com.bumptech.glide.request.BaseRequestOptions: boolean isTransformationAllowed
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object mKey
androidx.appcompat.widget.ThemeUtils: int[] ACTIVATED_STATE_SET
androidx.appcompat.R$color: int abc_decor_view_status_guard
com.bumptech.glide.load.engine.DecodeJob: java.util.List throwables
androidx.core.widget.AutoScrollHelper: int mActivationDelay
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List mUnmodifiedPayloads
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData sliceHeader
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDisplayOpts
androidx.recyclerview.widget.RecyclerView: boolean FORCE_INVALIDATE_DISPLAY_LIST
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: boolean aspectRatioMismatch
com.bumptech.glide.gifdecoder.GifFrame: boolean transparency
com.bumptech.glide.load.resource.bitmap.Downsampler: java.util.Queue OPTIONS_QUEUE
androidx.core.R$styleable: int[] GradientColor
androidx.viewpager.widget.PagerAdapter: android.database.DataSetObserver mViewPagerObserver
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager deferredEncodeManager
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.ActionProvider mInner
cn.jzvd.R$string: int no_url
com.google.android.exoplayer2.audio.AudioTimestampPoller: long lastTimestampSampleTimeUs
com.google.android.exoplayer2.ExoPlayerImpl: int playbackSuppressionReason
com.google.android.exoplayer2.ui.R$string: int exo_track_selection_none
androidx.collection.SimpleArrayMap: int mSize
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: java.lang.Object trackSelectionData
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_TYPE_ARRAY
com.bumptech.glide.load.resource.bitmap.CenterInside: byte[] ID_BYTES
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup
com.bumptech.glide.load.engine.DecodeJob: boolean onlyRetrieveFromCache
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isHandled
androidx.collection.MapCollections$EntrySet: androidx.collection.MapCollections this$0
com.google.android.exoplayer2.util.MimeTypes$CustomMimeType: java.lang.String codecPrefix
androidx.appcompat.widget.ActionMenuPresenter: int mMinCellSize
com.bumptech.glide.GlideContext: com.bumptech.glide.request.RequestOptions defaultRequestOptions
androidx.appcompat.widget.SearchView: android.view.View mSubmitArea
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: android.content.res.Resources resources
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: boolean resetOnNetworkTypeChange
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.TrackOutput[] emsgTrackOutputs
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int captionRowCount
com.google.android.exoplayer2.extractor.ts.PesReader: int payloadSize
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag TAG_RAF_IMAGE_SIZE
com.google.android.exoplayer2.Format: java.lang.String language
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean mIsLibLoaded
androidx.appcompat.R$styleable: int[] ActionMenuView
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: long initialStartTimeUs
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.google.android.exoplayer2.PlayerMessage: boolean isDelivered
androidx.savedstate.SavedStateRegistry: boolean mRestored
androidx.appcompat.view.menu.MenuPopupHelper: int mPopupStyleRes
com.google.android.exoplayer2.audio.DefaultAudioSink$2: android.media.AudioTrack val$toRelease
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.extractor.PositionHolder DUMMY_POSITION_HOLDER
com.google.android.exoplayer2.metadata.id3.BinaryFrame: android.os.Parcelable$Creator CREATOR
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mAvailable
androidx.fragment.app.Fragment: boolean mDetached
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: int endTimeIndex
com.google.android.exoplayer2.source.hls.HlsMediaSource: boolean useSessionKeys
com.bumptech.glide.RequestBuilder: boolean isDefaultTransitionOptionsSet
androidx.core.app.RemoteActionCompat: java.lang.CharSequence mTitle
com.google.android.exoplayer2.source.ProgressiveMediaSource: boolean timelineIsLive
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mLayoutDirection
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: com.google.android.exoplayer2.video.DummySurface surface
com.google.android.exoplayer2.text.SimpleSubtitleOutputBuffer: com.google.android.exoplayer2.text.SimpleSubtitleDecoder owner
com.google.android.exoplayer2.util.FlacStreamMetadata: int sampleRate
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader: java.io.InputStream is
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean waitingForFirstSampleInFormat
com.bumptech.glide.RequestManager: com.bumptech.glide.request.RequestOptions DECODE_TYPE_GIF
androidx.appcompat.app.AlertController$AlertParams: android.content.Context mContext
com.google.android.exoplayer2.PlaybackInfo: long startPositionUs
com.bumptech.glide.load.engine.DecodeJob: int order
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.widget.TooltipPopup: android.content.Context mContext
com.google.android.exoplayer2.text.cea.Cea608Decoder: java.util.ArrayList cueBuilders
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int colorspace
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory payloadReaderFactory
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker trueHdSampleRechunker
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int maxAudioChannelCount
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: byte[] codecPrivate
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String mCodecLongName
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: byte[] ADAPTATION_WORKAROUND_BUFFER
com.google.android.exoplayer2.upstream.HttpDataSource: com.google.android.exoplayer2.util.Predicate REJECT_PAYWALL_TYPES
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$Recycler mScrapContainer
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter$TextViewHolder: cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter this$1
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: android.view.MenuItem val$item
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: android.graphics.Bitmap$Config config
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory: com.bumptech.glide.load.model.ModelCache modelCache
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: com.google.android.exoplayer2.util.ParsableByteArray scratch
androidx.appcompat.R$attr: int actionBarPopupTheme
com.google.android.exoplayer2.upstream.DataSourceInputStream: boolean opened
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sResourcesImplField
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.PathMeasure mPathMeasure
com.google.android.exoplayer2.SeekParameters: com.google.android.exoplayer2.SeekParameters EXACT
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int mWeight
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int maxVideoFrameRate
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.app.AlertDialog mDialog
androidx.core.widget.NestedScrollView: int mLastMotionY
androidx.appcompat.widget.SearchView: android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener
cn.jzvd.demo.AdapterRecyclerView: android.content.Context context
androidx.appcompat.app.WindowDecorActionBar$1: androidx.appcompat.app.WindowDecorActionBar this$0
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int currentSampleSize
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache$Factory diskCacheFactory
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: java.lang.ref.WeakReference mCallback
androidx.appcompat.widget.SearchView$SearchAutoComplete: java.lang.Runnable mRunShowSoftInputIfNecessary
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: int interestedThreads
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: com.google.android.exoplayer2.PlaybackInfo playbackInfo
androidx.appcompat.view.menu.MenuAdapter: boolean mForceShowIcon
androidx.core.widget.NestedScrollView: int[] mScrollOffset
com.google.android.exoplayer2.video.ColorInfo: android.os.Parcelable$Creator CREATOR
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_SIDE_LEFT
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme mTheme
androidx.appcompat.widget.AppCompatSpinner: int mDropDownWidth
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition defaultClutDefinition
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int sampleTrackIndex
com.google.android.exoplayer2.source.ProgressiveMediaSource: com.google.android.exoplayer2.extractor.ExtractorsFactory extractorsFactory
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_EXIF_TAGS
androidx.appcompat.R$id: int group_divider
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry: java.lang.Class toClass
androidx.fragment.app.FragmentState: int mMaxLifecycleState
androidx.appcompat.R$id: int contentPanel
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: boolean flagDefault
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
com.google.android.exoplayer2.audio.DefaultAudioSink: android.media.AudioTrack audioTrack
com.bumptech.glide.Registry: com.bumptech.glide.provider.LoadPathCache loadPathCache
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: com.google.android.exoplayer2.extractor.ogg.StreamReader streamReader
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_CODEC_LONG_NAME_UI
com.google.android.exoplayer2.source.SinglePeriodTimeline: long windowDurationUs
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBar
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.mp3.Seeker seeker
androidx.appcompat.R$styleable: int LinearLayoutCompat_measureWithLargestChild
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.LongArray cueTimesUs
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int mVisibleAnchorPosition
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mParentFragment
androidx.core.R$styleable: int GradientColor_android_startY
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: com.google.android.exoplayer2.PlaybackInfo lastPlaybackInfo
org.slf4j.event.SubstituteLoggingEvent: java.lang.String message
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_5POINT1
com.danikula.videocache.ProxyCache: com.danikula.videocache.Source source
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: long sampleTimeUs
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: int positionDiscontinuityReason
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean allowAudioMixedMimeTypeAdaptiveness
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long ceilingBytePosition
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: android.util.SparseArray selectionOverrides
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$SavedState mPendingSavedState
androidx.appcompat.R$styleable: int Toolbar_maxButtonHeight
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long[] pendingOutputStreamOffsetsUs
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int[] frameSizeBytesByTypeWb
com.bumptech.glide.Glide: com.bumptech.glide.MemoryCategory memoryCategory
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: int responseCode
androidx.appcompat.app.AlertController: android.graphics.drawable.Drawable mButtonNegativeIcon
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.lang.String mMimeType
androidx.viewpager.widget.ViewPager$ItemInfo: int position
androidx.core.widget.AutoScrollHelper$ClampedScroller: long mStartTime
com.google.android.exoplayer2.extractor.ts.LatmReader: com.google.android.exoplayer2.util.ParsableBitArray sampleBitArray
androidx.viewpager.widget.PagerAdapter: android.database.DataSetObservable mObservable
androidx.collection.SparseArrayCompat: boolean mGarbage
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_INSTREAM_ID
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMinor
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorCompat this$0
androidx.appcompat.widget.ActionMenuView: boolean mReserveOverflow
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.Fragment val$outFragment
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: int verticalPositionMaximum
androidx.appcompat.app.WindowDecorActionBar: androidx.core.view.ViewPropertyAnimatorUpdateListener mUpdateListener
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: android.net.Uri uri
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder extractorHolder
androidx.appcompat.R$styleable: int LinearLayoutCompat_divider
androidx.appcompat.app.AppCompatDelegateImpl: boolean IS_PRE_LOLLIPOP
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.TrackOutput additionalEmsgTrackOutput
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mState
androidx.appcompat.graphics.drawable.DrawableContainer: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback mBlockInvalidateCallback
androidx.appcompat.R$styleable: int ActionBar_elevation
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: boolean positionDiscontinuity
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuPresenter mPresenter
com.google.android.exoplayer2.audio.Sonic: float rate
cn.jzvd.R$id: int title
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment mTarget
androidx.appcompat.app.AlertController$AlertParams: android.view.LayoutInflater mInflater
androidx.appcompat.app.AppCompatDelegate: androidx.collection.ArraySet sActivityDelegates
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: long playbackPositionUs
com.bumptech.glide.load.engine.EngineKey: java.lang.Class transcodeClass
androidx.appcompat.R$styleable: int AppCompatTextView_lineHeight
androidx.core.widget.NestedScrollView: boolean mIsLaidOut
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback mAppCompatWindowCallback
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.ActionBarContextView mActionModeView
com.bumptech.glide.load.engine.GlideException: java.lang.String detailMessage
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: android.graphics.Bitmap$CompressFormat compressFormat
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long earliestNextLoadTimeMs
androidx.appcompat.app.AlertController$AlertParams$2: androidx.appcompat.app.AlertController$RecycleListView val$listView
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long dataSize
androidx.activity.OnBackPressedDispatcher: java.util.ArrayDeque mOnBackPressedCallbacks
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: byte[] data
androidx.core.R$id: int tag_accessibility_pane_title
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.SeiReader seiReader
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
androidx.appcompat.app.AlertController: android.view.View mView
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathOffset
com.google.android.exoplayer2.extractor.DefaultExtractorInput: com.google.android.exoplayer2.upstream.DataSource dataSource
com.google.android.exoplayer2.extractor.ts.AdtsReader: com.google.android.exoplayer2.extractor.TrackOutput currentOutput
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mExtraFillSpace
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: java.lang.Object id
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpRecords
androidx.core.view.ViewCompat: java.lang.reflect.Field sMinHeightField
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider diskCacheProvider
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet videoListeners
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: int index
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: int elementState
com.google.android.exoplayer2.source.SampleQueue: boolean pendingUpstreamFormatAdjustment
androidx.appcompat.widget.TooltipCompatHandler: androidx.appcompat.widget.TooltipPopup mPopup
androidx.appcompat.app.AlertController: android.widget.Button mButtonNegative
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: java.lang.String groupId
androidx.appcompat.R$id: int spacer
com.danikula.videocache.HttpProxyCacheServer: org.slf4j.Logger LOG
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult mLayoutChunkResult
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_FORWARD
com.bumptech.glide.load.engine.EngineResource: boolean isMemoryCacheable
com.bumptech.glide.load.engine.DataCacheKey: com.bumptech.glide.load.Key sourceKey
androidx.appcompat.R$styleable: int[] PopupWindow
com.google.android.exoplayer2.Timeline$Window: long positionInFirstPeriodUs
com.google.android.exoplayer2.metadata.flac.PictureFrame: int depth
androidx.viewpager.widget.ViewPager$SavedState: android.os.Parcelable adapterState
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: android.view.MenuItem$OnActionExpandListener mObject
androidx.fragment.app.BackStackRecord: boolean mCommitted
androidx.appcompat.R$id: int split_action_bar
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long totalElapsedTimeMs
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: float codecOperatingRate
android.support.v4.os.ResultReceiver$MyRunnable: android.os.Bundle mResultData
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int windowStyleId
com.google.android.exoplayer2.extractor.ts.PsExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput output
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.HttpURLConnection connection
com.google.android.exoplayer2.extractor.ts.AdtsReader: int bytesRead
androidx.core.R$styleable: int FontFamilyFont_android_fontWeight
androidx.fragment.app.Fragment: boolean mHidden
androidx.appcompat.app.TwilightManager$TwilightState: long todaySunrise
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_orientation
com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition: long windowPositionUs
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTint
com.google.android.exoplayer2.extractor.SeekPoint: long position
com.bumptech.glide.load.engine.DecodeHelper: boolean isTransformationRequired
androidx.appcompat.widget.TintInfo: boolean mHasTintMode
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedHeightMajor
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_NON_STANDARD
com.google.android.exoplayer2.upstream.UdpDataSource: java.net.DatagramSocket socket
androidx.appcompat.widget.DrawableUtils: int[] CHECKED_STATE_SET
com.google.android.exoplayer2.DefaultRenderersFactory: long allowedVideoJoiningTimeMs
androidx.appcompat.widget.AppCompatImageButton: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.exoplayer2.text.CaptionStyleCompat: android.graphics.Typeface typeface
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int levelIdc
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean mScreenOnWhilePlaying
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: java.util.concurrent.CopyOnWriteArrayList listenerSnapshot
androidx.appcompat.widget.AppCompatImageView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
cn.jzvd.R$drawable: int jz_backward_icon
cn.jzvd.R$drawable: int jz_close_volume
tv.danmaku.ijk.media.player.BuildConfig: boolean DEBUG
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode mActionMode
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId mediaPeriodId
com.google.android.exoplayer2.text.webvtt.CssParser: java.lang.StringBuilder stringBuilder
com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestManagerTreeNode treeNode
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mDoBeforeTextChanged
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState mPreparedPanel
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler
androidx.appcompat.view.StandaloneActionMode: boolean mFinished
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int codecMaxInputSize
com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition: com.google.android.exoplayer2.Timeline timeline
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_TESTED
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mAudioStream
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String mGroupName
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CODEC_LONG_NAME
androidx.appcompat.R$styleable: int Toolbar_navigationContentDescription
com.google.android.exoplayer2.ui.SubtitlePainter: android.graphics.Rect bitmapRect
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int COLOR_SOLID_WHITE
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
com.google.android.exoplayer2.ui.SubtitlePainter: float defaultTextSizePx
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTintMode
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioProcessor[] toIntPcmAvailableAudioProcessors
com.google.android.exoplayer2.extractor.ts.PsExtractor: long lastTrackPosition
com.google.android.exoplayer2.Timeline$Window: int lastPeriodIndex
cn.jzvd.demo.ActivityWebView: android.webkit.WebView mWebView
cn.jzvd.Jzvd: android.view.ViewGroup textureViewContainer
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup mPopup
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int maxContentLuminance
com.google.android.exoplayer2.source.ProgressiveMediaSource: java.lang.String customCacheKey
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: long nalUnitStartPosition
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: com.bumptech.glide.load.ResourceDecoder decoder
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: int[][] manifestUrlIndicesPerWrapper
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: int perSampleIvSize
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] mEntries
com.google.android.exoplayer2.source.TrackGroupArray: int length
androidx.appcompat.widget.SearchView: android.view.View$OnClickListener mOnClickListener
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean codecNeedsEosBufferTimestampWorkaround
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: boolean chunkOffsetsAreLongs
androidx.appcompat.R$styleable: int AppCompatImageView_tint
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.content.Context mActionModeContext
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: androidx.appcompat.widget.ListPopupWindow this$0
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_2_1
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: long samplesRead
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLastLayoutRTL
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: java.util.List listeners
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mConstantSize
com.bumptech.glide.gifdecoder.StandardGifDecoder: android.graphics.Bitmap$Config bitmapConfig
com.google.android.exoplayer2.audio.Sonic: int channelCount
androidx.core.R$id: int tag_unhandled_key_listeners
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int projectionType
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_CONSTRAINED_BASELINE
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
androidx.lifecycle.LiveData$ObserverWrapper: boolean mActive
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: boolean hasOutputFormat
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String text
androidx.core.provider.FontsContractCompat$1: int val$style
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_THUMBNAIL_TAGS
androidx.core.R$id: int accessibility_custom_action_24
androidx.fragment.app.BackStackState: int mTransition
com.google.android.exoplayer2.upstream.BaseDataSource: com.google.android.exoplayer2.upstream.DataSpec dataSpec
androidx.appcompat.R$styleable: int Toolbar_contentInsetStart
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: int[] pendingOutputChannels
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int MAX_FRAME_SIZE_BYTES
androidx.core.graphics.TypefaceCompat: androidx.collection.LruCache sTypefaceCache
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mContentDescription
com.bumptech.glide.load.model.Headers: com.bumptech.glide.load.model.Headers NONE
androidx.core.graphics.drawable.IconCompat: byte[] mData
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: com.google.android.exoplayer2.drm.DrmInitData drmInitData
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: int position
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.Engine engine
androidx.collection.MapCollections$ArrayIterator: int mIndex
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long seekPositionAfterBuildingCues
com.bumptech.glide.load.data.InputStreamRewinder: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream bufferedStream
androidx.fragment.app.FragmentTransition$3: android.graphics.Rect val$epicenter
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate mDelegate
cn.jzvd.demo.VideoConstant: java.lang.String[][] videoThumbs
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_AUDIO_RENDERING_START
cn.jzvd.Jzvd: boolean preloading
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener componentListener
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters DEFAULT
com.google.android.exoplayer2.ui.R$styleable: int[] DefaultTimeBar
androidx.core.graphics.TypefaceCompatBaseImpl$2: androidx.core.graphics.TypefaceCompatBaseImpl this$0
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.target.Target target
androidx.appcompat.R$styleable: int Toolbar_contentInsetEndWithActions
com.google.android.exoplayer2.DefaultMediaClock: boolean isUsingStandaloneClock
androidx.exifinterface.media.ExifInterface$ExifTag: java.lang.String name
androidx.appcompat.widget.ForwardingListener: java.lang.Runnable mDisallowIntercept
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] RGB_565_IN_CONFIGS
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler mEventHandler
cn.jzvd.R$string: int tips_not_wifi
androidx.fragment.app.FragmentTransition$4: androidx.fragment.app.FragmentTransitionImpl val$impl
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean loadingFinished
androidx.lifecycle.LiveData: boolean mDispatchingValue
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
cn.jzvd.R$id: int thumb
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.ExoPlaybackException playbackError
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_FAMILIY
com.google.android.exoplayer2.text.ttml.TtmlRegion: float line
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableStartTint
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Method sCreateFromFamiliesWithDefault
com.google.android.exoplayer2.metadata.icy.IcyInfo: java.lang.String title
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: int currentByte
androidx.fragment.app.Fragment$AnimationInfo: boolean mIsHideReplaced
androidx.appcompat.R$styleable: int[] ActionMode
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
cn.jzvd.JZDataSource: int currentUrlIndex
com.bumptech.glide.util.MarkEnforcingInputStream: int availableBytes
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode mButtonTintMode
androidx.core.widget.NestedScrollView: boolean mSmoothScrollingEnabled
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long sampleStartTimeMs
androidx.core.app.ActivityRecreator$3: java.lang.Object val$activityThread
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: int bytesPerFrame
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.concurrent.ExecutorService delegate
com.google.android.exoplayer2.util.TimestampAdjuster: long lastSampleTimestampUs
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource RESOURCE_DISK_CACHE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: androidx.core.content.res.ComplexColorCompat mStrokeColor
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: java.util.List containerChildren
com.bumptech.glide.load.model.UrlUriLoader: com.bumptech.glide.load.model.ModelLoader urlLoader
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.nio.ByteOrder LITTLE_ENDIAN
androidx.core.R$id: int accessibility_custom_action_10
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter mTintFilter
org.slf4j.event.EventRecodingLogger: java.util.Queue eventQueue
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2: java.nio.ByteBuffer buffer
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference: boolean isCacheable
com.google.android.exoplayer2.source.SampleQueue: boolean pendingSplice
com.google.android.exoplayer2.extractor.ts.AdtsReader: java.lang.String formatId
com.google.android.exoplayer2.audio.Ac3Util: int[] CHANNEL_COUNT_BY_ACMOD
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1: com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory this$0
com.bumptech.glide.load.data.ExifOrientationStream: int position
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: long maxSize
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.text.SubtitleInputBuffer nextInputBuffer
com.google.android.exoplayer2.ui.TrackSelectionView: int selectableItemBackgroundResourceId
androidx.appcompat.R$styleable: int SearchView_voiceIcon
androidx.exifinterface.media.ExifInterface: byte[] IDENTIFIER_EXIF_APP1
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable$ConstantState mDrawableState
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuBuilder menu
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: long mDuration
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] COLUMN_INDICES
com.google.android.exoplayer2.extractor.MpegAudioHeader: int bitrate
com.google.android.exoplayer2.source.IcyDataSource: int bytesUntilMetadata
androidx.core.R$id: int accessibility_custom_action_25
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$sharedElementsIn
com.google.android.exoplayer2.metadata.icy.IcyInfo: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.request.target.ViewTarget: android.view.View$OnAttachStateChangeListener attachStateListener
com.google.android.exoplayer2.decoder.DecoderCounters: int droppedToKeyframeCount
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: long firstFrameOffset
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType JPEG
androidx.appcompat.R$dimen: int tooltip_y_offset_touch
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: int mFinalVisibility
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: android.support.v4.media.session.MediaSessionCompat$Token mSessionToken
com.google.android.exoplayer2.source.BaseMediaSource: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher eventDispatcher
com.google.android.exoplayer2.Timeline$Window: long defaultPositionUs
com.google.android.exoplayer2.C: java.util.UUID COMMON_PSSH_UUID
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder eventMessageEncoder
androidx.appcompat.R$id: int action_context_bar
androidx.fragment.app.Fragment: boolean mIsCreated
com.google.android.exoplayer2.upstream.Loader: java.io.IOException fatalError
com.google.android.exoplayer2.ui.TrackSelectionView: com.google.android.exoplayer2.ui.TrackNameProvider trackNameProvider
com.google.android.exoplayer2.trackselection.TrackSelection$Definition: int reason
com.bumptech.glide.load.engine.EngineJob: androidx.core.util.Pools$Pool pool
androidx.appcompat.R$id: int search_button
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_OPEN_INPUT
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.PorterDuff$Mode mTintMode
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int atomType
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mItem
com.google.android.exoplayer2.text.Cue: boolean windowColorSet
com.google.android.exoplayer2.extractor.ts.PsDurationReader: com.google.android.exoplayer2.util.TimestampAdjuster scrTimestampAdjuster
androidx.viewpager.widget.ViewPager$SavedState: java.lang.ClassLoader loader
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mCachedStart
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: com.google.android.exoplayer2.util.ParsableByteArray data
com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup: com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader commentHeader
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_BYTERANGE
androidx.appcompat.widget.DropDownListView: androidx.core.widget.ListViewAutoScrollHelper mScrollHelper
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver: android.os.Handler eventHandler
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ActionMenuItemView this$0
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] $VALUES
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int pendingMetadataSampleBytes
com.bumptech.glide.load.resource.bitmap.Downsampler: java.util.Set TYPES_THAT_USE_POOL_PRE_KITKAT
cn.jzvd.R$drawable: int jz_click_pause_selector
com.google.android.exoplayer2.SeekParameters: com.google.android.exoplayer2.SeekParameters DEFAULT
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.PlaybackParameters afterDrainPlaybackParameters
com.bumptech.glide.load.resource.bitmap.TransformationUtils: java.util.Set MODELS_REQUIRING_BITMAP_LOCK
com.google.android.exoplayer2.text.ttml.TtmlNode: long endTimeUs
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.content.Context mContext
androidx.appcompat.widget.SearchView: android.content.Intent mVoiceAppSearchIntent
androidx.appcompat.R$color: int abc_tint_btn_checkable
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: boolean frameMbsOnlyFlag
androidx.appcompat.app.ResourcesFlusher: boolean sDrawableCacheFieldFetched
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: byte[] SSA_PREFIX
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean nalUnitHasKeyframeData
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbShortTitleText
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int mCachedEnd
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROPV_DECODER_UNKNOWN
com.google.android.exoplayer2.BaseRenderer: int trackType
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: int mode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: int[] TINT_ATTRS
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.ActionMode$Callback mCallback
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File[] dirtyFiles
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: android.content.res.Resources resources
androidx.appcompat.widget.ActionBarOverlayLayout$1: androidx.appcompat.widget.ActionBarOverlayLayout this$0
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: com.google.android.exoplayer2.text.webvtt.WebvttCueParser cueParser
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo: java.lang.String language
com.google.android.exoplayer2.extractor.ts.TsDurationReader: boolean isLastPcrValueRead
androidx.exifinterface.media.ExifInterface: java.io.FileDescriptor mSeekableFileDescriptor
com.google.android.exoplayer2.drm.FrameworkMediaCrypto: boolean WORKAROUND_DEVICE_NEEDS_KEYS_TO_CONFIGURE_CODEC
com.google.android.exoplayer2.RendererConfiguration: com.google.android.exoplayer2.RendererConfiguration DEFAULT
com.google.android.exoplayer2.PlayerMessage: long positionMs
androidx.appcompat.widget.ScrollingTabContainerView$TabView: int[] BG_ATTRS
androidx.loader.app.LoaderManagerImpl: androidx.lifecycle.LifecycleOwner mLifecycleOwner
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int sampleCurrentNalBytesRemaining
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean mHasPresetAutoSizeValues
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int outputChannelConfig
androidx.core.R$styleable: int GradientColor_android_centerX
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.OrientationHelper mPrimaryOrientation
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.Set optionalTrackGroups
androidx.recyclerview.widget.RecyclerView: java.util.ArrayList mItemDecorations
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnCloseListener mOnCloseListener
tv.danmaku.ijk.media.player.IjkMediaPlayer: int mVideoSarNum
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.RendererCapabilities[] rendererCapabilities
com.google.android.exoplayer2.source.SampleQueue: long[] timesUs
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$UpdatableTouchDelegate mTouchDelegate
androidx.recyclerview.widget.GridLayoutManager: boolean mPendingSpanCountChange
androidx.fragment.app.FragmentTransaction$Op: int mCmd
androidx.core.content.res.ComplexColorCompat: android.content.res.ColorStateList mColorStateList
com.google.android.exoplayer2.ui.SubtitleView: com.google.android.exoplayer2.text.CaptionStyleCompat style
com.google.android.exoplayer2.DefaultLoadControl: boolean isBuffering
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: java.lang.String codecId
androidx.appcompat.widget.LinearLayoutCompat: int mDividerHeight
androidx.appcompat.widget.ActionMenuPresenter: boolean mReserveOverflow
com.google.android.exoplayer2.ui.R$styleable: int[] PlayerControlView
com.bumptech.glide.load.engine.ActiveResources: boolean isShutdown
androidx.recyclerview.widget.RecyclerView: android.view.animation.Interpolator sQuinticInterpolator
androidx.appcompat.R$layout: int abc_screen_simple
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mPrefetchMaxObservedInInitialPrefetch
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: float position
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineResource$ResourceListener resourceListener
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder errorBuilder
android.support.v4.os.ResultReceiver: android.support.v4.os.IResultReceiver mReceiver
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.lifecycle.ViewModelProvider$Factory FACTORY
com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket: int sequenceNumber
com.bumptech.glide.load.resource.gif.GifDrawable$GifState: com.bumptech.glide.load.resource.gif.GifFrameLoader frameLoader
com.google.android.exoplayer2.ui.R$styleable: int[] GradientColorItem
androidx.appcompat.app.AlertDialog$Builder: int mTheme
androidx.viewpager.widget.ViewPager$LayoutParams: int position
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.Timeline$Period period
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int background
androidx.fragment.app.FragmentTransition$3: android.view.View val$epicenterView
org.slf4j.helpers.FormattingTuple: java.lang.String message
androidx.exifinterface.media.ExifInterface: byte[] ORF_MAKER_NOTE_HEADER_1
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType PNG
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup mSpanSizeLookup
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: boolean mIgnoreConsumed
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter mAdapter
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mOps
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.Option TARGET_FRAME
com.google.android.exoplayer2.extractor.ts.TsDurationReader: com.google.android.exoplayer2.util.ParsableByteArray packetBuffer
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int sampleCurrentNalBytesRemaining
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent mIntent
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockTrackNumberLength
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory dataSourceFactory
androidx.appcompat.R$styleable: int Toolbar_collapseIcon
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowNonSeamlessAdaptiveness
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_5POINT0
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy: com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy IGNORE
androidx.fragment.app.FragmentManagerImpl$6: androidx.fragment.app.FragmentManagerImpl this$0
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int viewportHeight
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_NOP
androidx.appcompat.R$styleable: int View_android_theme
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_FRONT_LEFT
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable
com.bumptech.glide.request.BaseRequestOptions: android.graphics.drawable.Drawable placeholderDrawable
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mIsRecyclableCount
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.TextView mText1
androidx.exifinterface.media.ExifInterface: boolean mHasThumbnailStrips
androidx.core.R$styleable: int FontFamilyFont_android_fontStyle
androidx.appcompat.widget.ActionBarContextView: boolean mTitleOptional
androidx.viewpager.widget.ViewPager: boolean mIsBeingDragged
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl mImpl
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher$ListenerAndHandler: com.google.android.exoplayer2.source.MediaSourceEventListener listener
com.google.android.exoplayer2.metadata.MetadataRenderer: long subsampleOffsetUs
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean playbackErrorChanged
com.google.android.exoplayer2.text.webvtt.CssParser: com.google.android.exoplayer2.util.ParsableByteArray styleInput
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.load.engine.cache.SafeKeyGenerator safeKeyGenerator
androidx.exifinterface.media.ExifInterface: java.text.SimpleDateFormat sFormatter
androidx.fragment.app.Fragment: boolean mMenuVisible
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem$OnActionExpandListener mOnActionExpandListener
cn.jzvd.demo.ActivityTinyWindowRecycleView$1: cn.jzvd.demo.ActivityTinyWindowRecycleView this$0
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.SparseIntArray MP4A_AUDIO_OBJECT_TYPE_TO_PROFILE
com.google.android.exoplayer2.text.ttml.TtmlRegion: float width
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ChildHelper mChildHelper
com.google.android.exoplayer2.ui.R$string: int exo_track_role_alternate
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: boolean selectUndeterminedTextLanguage
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: java.util.List closedCaptionFormats
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: boolean mCanceled
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: int index
androidx.fragment.app.Fragment: java.lang.Boolean mSavedUserVisibleHint
androidx.appcompat.R$string: int abc_menu_meta_shortcut_label
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long durationTimecode
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader mShader
com.google.android.exoplayer2.source.hls.HlsMediaChunk: int nextLoadPosition
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1: com.bumptech.glide.load.engine.Engine$EngineJobFactory this$0
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory NORMAL
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$3: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: float currentPixelWidthHeightRatio
tv.danmaku.ijk.media.player.MediaPlayerProxy: tv.danmaku.ijk.media.player.IMediaPlayer mBackEndMediaPlayer
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder playing
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int scalingMode
com.bumptech.glide.util.ExceptionPassthroughInputStream: java.util.Queue POOL
androidx.appcompat.widget.TooltipCompatHandler: int mAnchorY
androidx.fragment.app.FragmentManagerImpl$5: androidx.fragment.app.FragmentManagerImpl this$0
com.bumptech.glide.load.model.GlideUrl: byte[] cacheKeyBytes
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: java.util.Queue keyPool
com.bumptech.glide.load.model.ModelCache$ModelKey: int width
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: java.lang.Error initError
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecyclerListener mRecyclerListener
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementTargetNames
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.util.ParsableByteArray defaultInitializationVector
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.ResourceManagerInternal mResourceManager
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: boolean lastByteWasFF
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_NO_SENSE
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean sentSeekMap
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.ViewBoundsCheck$Callback mHorizontalBoundCheckCallback
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$OnPageChangeListener mOnPageChangeListener
androidx.appcompat.app.AppCompatDelegateImpl$5: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: java.lang.Object currentlyRecreatingToken
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int mSpanIndex
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: java.lang.String mimeType
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: int defaultFontFace
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.Set MAPPABLE_TYPES
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int enabledTrackGroupCount
androidx.fragment.app.FragmentTransaction: int mTransition
com.google.android.exoplayer2.text.ttml.TtmlRegion: float position
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: android.content.Context context
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: java.util.List mPendingCallbacks
androidx.appcompat.app.AlertController: android.widget.ListAdapter mAdapter
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Bundle mSessionToken2Bundle
androidx.recyclerview.widget.LayoutState: int mItemDirection
androidx.collection.SparseArrayCompat: int[] mKeys
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: java.lang.String description
com.bumptech.glide.load.engine.EngineJob: boolean hasLoadFailed
com.danikula.videocache.IgnoreHostProxySelector: java.util.List NO_PROXY_LIST
androidx.appcompat.R$string: int abc_menu_enter_shortcut_label
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.MediaPeriodInfo info
androidx.appcompat.widget.ActionBarContextView: int mSubtitleStyleRes
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: int mSlop
androidx.appcompat.R$attr: int actionOverflowButtonStyle
androidx.exifinterface.media.ExifInterface: boolean mAreThumbnailStripsConsecutive
androidx.appcompat.widget.ScrollingTabContainerView: boolean mAllowCollapse
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: int mOffset
androidx.appcompat.R$styleable: int Toolbar_collapseContentDescription
androidx.cursoradapter.widget.CursorFilter: androidx.cursoradapter.widget.CursorFilter$CursorFilterClient mClient
cn.jzvd.R$id: int duration_image_tip
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mOrientation
cn.jzvd.R$drawable: int jz_battery_level_90
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.Boolean mIsStateful
com.google.android.exoplayer2.audio.DefaultAudioSink: int bytesUntilNextAvSync
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean hardwareAccelerated
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: long threadTimeoutMillis
androidx.core.app.ActivityRecreator: java.lang.reflect.Method performStopActivity2ParamsMethod
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem$OnMenuItemClickListener mClickListener
androidx.collection.ArraySet: java.lang.Object[] OBJECT
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_UNSUPPORTED
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: int arrayPoolSizeBytes
androidx.appcompat.view.menu.MenuBuilder: boolean mQwertyMode
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean exceedAudioConstraintsIfNecessary
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray subtitleSample
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: java.nio.ByteBuffer data
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseBooleanArray trackPids
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist playlist
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: java.util.concurrent.CopyOnWriteArrayList listenerAndHandlers
androidx.appcompat.R$styleable: int[] AppCompatTextView
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
android.support.v4.media.MediaMetadataCompat: java.lang.String[] PREFERRED_DESCRIPTION_ORDER
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ContentFrameLayout mContent
com.bumptech.glide.load.engine.SourceGenerator: int loadDataListIndex
com.bumptech.glide.TransitionOptions: com.bumptech.glide.request.transition.TransitionFactory transitionFactory
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder nextChunkHolder
cn.jzvd.JZMediaInterface: android.os.HandlerThread mMediaHandlerThread
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean loadCompleted
androidx.activity.ImmLeaksCleaner: android.app.Activity mActivity
androidx.fragment.app.Fragment: int mTargetRequestCode
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_INFO
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: androidx.appcompat.view.ActionMode$Callback mWrapped
androidx.appcompat.R$styleable: int ActionBar_titleTextStyle
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry: java.lang.Class resourceClass
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.DefaultAudioSink$AudioProcessorChain audioProcessorChain
com.google.android.exoplayer2.source.hls.HlsMediaChunk: java.util.List muxedCaptionFormats
androidx.core.graphics.Insets: androidx.core.graphics.Insets NONE
androidx.appcompat.R$styleable: int ActionBar_logo
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_2POINT1
com.danikula.videocache.IgnoreHostProxySelector: int portToIgnore
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean hasSliceType
androidx.appcompat.app.AlertController$5: android.view.View val$top
com.google.android.exoplayer2.extractor.ts.PsExtractor: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR_SET
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: int headerSize
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHasNonEmbeddedTabs
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int samplePartitionCount
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: int frameType
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int[] frameSizeBytesByTypeNb
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.List cbs
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentActivity: boolean mCreated
com.google.android.exoplayer2.upstream.Loader$LoadTask: com.google.android.exoplayer2.upstream.Loader$Loadable loadable
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean isExtractorReusable
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: java.lang.Object resolvedPeriodUid
android.support.v4.media.MediaBrowserCompat$MediaItem: android.support.v4.media.MediaDescriptionCompat mDescription
com.bumptech.glide.load.resource.gif.GifBitmapProvider: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
com.google.android.exoplayer2.source.chunk.Chunk: com.google.android.exoplayer2.Format trackFormat
com.google.android.exoplayer2.extractor.mp4.TrackFragment: int trunCount
androidx.exifinterface.media.ExifInterface: int mThumbnailLength
com.bumptech.glide.load.engine.Engine$DecodeJobFactory: androidx.core.util.Pools$Pool pool
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: float assumedMinimumCodecOperatingRate
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: int styleIndex
com.google.android.exoplayer2.text.ssa.SsaStyle$Format: int length
androidx.fragment.app.Fragment: boolean mInLayout
com.google.android.exoplayer2.source.chunk.MediaChunkIterator: com.google.android.exoplayer2.source.chunk.MediaChunkIterator EMPTY
androidx.appcompat.widget.AppCompatImageHelper: androidx.appcompat.widget.TintInfo mTmpInfo
com.google.android.exoplayer2.PlayerMessage: boolean isProcessed
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mFileName
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: long mediaEndTimeMs
com.google.android.exoplayer2.extractor.ts.LatmReader: int sampleSize
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: java.util.List exceptions
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.drm.FrameworkMediaCrypto: boolean forceAllowInsecureDecoderComponents
androidx.core.provider.FontRequest: java.lang.String mProviderPackage
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment lastIn
com.bumptech.glide.provider.EncoderRegistry: java.util.List encoders
com.bumptech.glide.util.pool.FactoryPools$FactoryPool: com.bumptech.glide.util.pool.FactoryPools$Factory factory
com.google.android.exoplayer2.text.Cue: android.graphics.Bitmap bitmap
com.google.android.exoplayer2.upstream.UdpDataSource: byte[] packetBuffer
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_FATAL
com.bumptech.glide.load.engine.DataCacheWriter: com.bumptech.glide.load.Options options
androidx.fragment.app.FragmentTransaction: int mBreadCrumbShortTitleRes
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: long outputFrameCount
com.danikula.videocache.ProxyCache: int percentsAvailable
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_MOVE_WINDOW
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: int lineType
com.bumptech.glide.request.SingleRequest: int height
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: boolean isWithinConstraints
androidx.fragment.app.FragmentTransaction: java.lang.String mName
com.bumptech.glide.request.SingleRequest: java.lang.Object model
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_TO_POSITION
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] $VALUES
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: java.nio.ByteBuffer encryptionSubsampleDataBuffer
cn.jzvd.R$id: int brightness_progressbar
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AlertController$AlertParams: int mViewLayoutResId
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_IV
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float whitePointChromaticityX
com.bumptech.glide.request.ErrorRequestCoordinator: com.bumptech.glide.request.RequestCoordinator parent
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: com.google.android.exoplayer2.Format muxedAudioFormat
androidx.appcompat.R$styleable: int SearchView_suggestionRowLayout
android.support.v4.media.MediaDescriptionCompat: android.graphics.Bitmap mIcon
android.support.v4.media.MediaDescriptionCompat: android.os.Bundle mExtras
com.google.android.exoplayer2.text.dvb.DvbParser: byte[] defaultMap2To4
androidx.fragment.app.FragmentTransition$2: androidx.fragment.app.Fragment val$inFragment
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.util.List provisioningSessions
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: java.lang.String[] STANDARD_GENRES
androidx.core.widget.PopupWindowCompat: java.lang.reflect.Field sOverlapAnchorField
androidx.core.graphics.TypefaceCompat: androidx.core.graphics.TypefaceCompatBaseImpl sTypefaceCompatImpl
com.google.android.exoplayer2.upstream.DefaultAllocator: int individualAllocationSize
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: android.view.View createdPanelView
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: long initialMaxSize
com.google.android.exoplayer2.ui.SubtitleView: java.util.List cues
androidx.appcompat.R$drawable: int abc_ic_menu_share_mtrl_alpha
androidx.activity.ImmLeaksCleaner: int sReflectedFieldsInitialized
com.google.android.exoplayer2.upstream.DefaultAllocator: com.google.android.exoplayer2.upstream.Allocation[] singleAllocationReleaseHolder
com.google.android.exoplayer2.ui.TrackSelectionView: boolean isDisabled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCachedAutoMirrored
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: android.content.Context context
tv.danmaku.ijk.media.player.AndroidMediaPlayer: android.media.MediaDataSource mMediaDataSource
androidx.appcompat.widget.ForwardingListener: int[] mTmpLocation
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float mTrimPathEnd
com.google.android.exoplayer2.ExoPlaybackException: java.lang.Throwable cause
androidx.appcompat.app.AlertController: java.lang.CharSequence mButtonNeutralText
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_422_INTRA
com.google.android.exoplayer2.text.ttml.TtmlStyle: int fontSizeUnit
androidx.recyclerview.R$styleable: int[] RecyclerView
androidx.cursoradapter.widget.ResourceCursorAdapter: int mLayout
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next
com.google.android.exoplayer2.text.cea.Cea708Cue: int priority
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean isLive
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData$SchemeData[] schemeDatas
com.bumptech.glide.load.resource.gif.GifFrameLoader: android.graphics.Bitmap firstFrame
androidx.appcompat.app.AppCompatDelegateImpl: boolean sInstalledExceptionHandler
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: com.google.android.exoplayer2.decoder.DecoderInputBuffer buffer
androidx.fragment.app.FragmentManagerImpl$4: android.view.ViewGroup val$container
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DefaultDrmSession placeholderDrmSession
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: android.util.SparseArray ancillaryCluts
androidx.core.view.KeyEventDispatcher: boolean sActionBarFieldsFetched
com.google.android.exoplayer2.metadata.icy.IcyHeaders: java.lang.String url
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean codecNeedsSetOutputSurfaceWorkaround
com.google.android.exoplayer2.ui.SubtitleView: java.util.List painters
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.lang.ref.WeakReference mLastDispatchedPreViewKeyEvent
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_TCP_SPEED
androidx.appcompat.view.menu.MenuPopupHelper: boolean mOverflowOnly
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mDither
tv.danmaku.ijk.media.player.TextureMediaPlayer: android.graphics.SurfaceTexture mSurfaceTexture
cn.jzvd.JZUtils: int SYSTEM_UI
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: android.os.Handler handler
androidx.fragment.app.FragmentManagerViewModel: java.util.HashMap mViewModelStores
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: com.google.android.exoplayer2.util.Predicate contentTypePredicate
androidx.fragment.app.BackStackState: java.lang.CharSequence mBreadCrumbTitleText
tv.danmaku.ijk.media.player.MediaPlayerProxy$7: tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener val$finalListener
com.google.android.exoplayer2.upstream.DataSourceInputStream: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: int windowIndex
com.google.android.exoplayer2.RendererConfiguration: int tunnelingAudioSessionId
com.bumptech.glide.load.engine.DiskCacheStrategy: com.bumptech.glide.load.engine.DiskCacheStrategy RESOURCE
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: boolean isScheduled
cn.jzvd.R$drawable: int jz_battery_level_10
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmHandler mediaDrmHandler
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: boolean fillFlag
com.google.android.exoplayer2.text.cea.CeaDecoder: java.util.ArrayDeque availableOutputBuffers
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery: java.lang.String[] PATH_PROJECTION
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat mVectorDrawable
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.AppCompatDrawableManager mDrawableManager
com.google.android.exoplayer2.audio.AudioAttributes: int usage
androidx.appcompat.widget.ThemeUtils: int[] NOT_PRESSED_OR_FOCUSED_STATE_SET
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: long mediaTimeOffsetMs
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mTargetBounds
cn.jzvd.JzvdStd: android.widget.ImageView mDialogIcon
com.bumptech.glide.load.engine.DecodePath: java.util.List decoders
androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPositionOffset
com.google.android.exoplayer2.text.cea.Cea608Decoder: com.google.android.exoplayer2.util.ParsableByteArray ccData
androidx.viewpager.widget.ViewPager: int mChildWidthMeasureSpec
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: androidx.appcompat.view.menu.MenuBuilder menu
androidx.appcompat.widget.DropDownListView: int mSelectionRightPadding
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean refreshDecorView
androidx.media.AudioAttributesImplBase: int mUsage
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.Option FIX_BITMAP_SIZE_TO_REQUESTED_DIMENSIONS
com.google.android.exoplayer2.util.CodecSpecificDataUtil: int[] AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.regex.Pattern PROFILE_PATTERN
com.google.android.exoplayer2.extractor.ts.H265Reader: long totalBytesWritten
androidx.core.widget.NestedScrollView: int mMaximumVelocity
com.bumptech.glide.disklrucache.StrictLineReader: int pos
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int pendingRotationDegrees
androidx.core.provider.FontsContractCompat$2: androidx.core.content.res.ResourcesCompat$FontCallback val$fontCallback
com.google.android.exoplayer2.text.TextRenderer: boolean outputStreamEnded
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int idrPicId
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_MAKER_NOTE_TAGS
tv.danmaku.ijk.media.player.IjkMediaMeta: tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta mAudioStream
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mRequestedSimpleAnimations
com.bumptech.glide.load.engine.SourceGenerator$1: com.bumptech.glide.load.engine.SourceGenerator this$0
com.bumptech.glide.request.target.CustomTarget: int height
androidx.fragment.app.FragmentManagerImpl$4: androidx.fragment.app.Fragment val$fragment
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: int startTimeIndex
com.google.android.exoplayer2.util.Util: java.lang.String DEVICE_DEBUG_INFO
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.SparseIntArray AVC_PROFILE_NUMBER_TO_CONST
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution DEFAULT_CELL_RESOLUTION
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: java.lang.reflect.Method sRebaseMethod
androidx.appcompat.app.AlertController: boolean mShowTitle
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: int networkTypeOverride
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView mOwnerRecyclerView
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues defaultSampleValues
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet audioListeners
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: boolean customVerticalPlacement
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int peekBufferLength
com.bumptech.glide.load.engine.DataCacheGenerator: com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback cb
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mSampleRate
cn.jzvd.Jzvd: boolean SAVE_PROGRESS
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$AdapterRecyclerView: cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder this$0
com.google.android.exoplayer2.text.ssa.SsaDecoder: com.google.android.exoplayer2.text.ssa.SsaDialogueFormat dialogueFormatFromInitializationData
androidx.recyclerview.widget.RecyclerView: boolean mPostedAnimatorRunner
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockFlags
com.google.android.exoplayer2.text.subrip.SubripDecoder: java.util.regex.Pattern SUBRIP_TAG_PATTERN
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.PopupWindow$OnDismissListener mOnDismissListener
org.slf4j.impl.AndroidLoggerFactory: java.util.concurrent.ConcurrentMap loggerMap
androidx.appcompat.R$drawable: int abc_btn_check_material
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mInflater
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int rendererCount
cn.jzvd.Jzvd: long seekToInAdvance
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: com.google.android.exoplayer2.video.VideoFrameMetadataListener frameMetadataListener
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: long[] offsets
androidx.fragment.app.FragmentTransitionImpl$3: androidx.fragment.app.FragmentTransitionImpl this$0
androidx.arch.core.executor.DefaultTaskExecutor: java.util.concurrent.ExecutorService mDiskIO
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.LayoutState mLayoutState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int[] mThemeAttrs
com.google.android.exoplayer2.ui.SubtitlePainter: float cueSize
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable$ConstantState mDelegateState
androidx.appcompat.view.menu.MenuBuilder: boolean mOverrideVisibleItems
androidx.appcompat.resources.R$styleable: int[] FontFamilyFont
com.google.android.exoplayer2.text.ssa.SsaDecoder: float screenWidth
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsPayloadReader id3Reader
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator this$0
com.google.android.exoplayer2.source.chunk.Chunk: long endTimeUs
com.google.android.exoplayer2.ui.R$string: int exo_track_resolution
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mSharedElementTargetNames
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.LayoutInflater mSystemInflater
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String formatIdPrefix
com.bumptech.glide.provider.ResourceDecoderRegistry: java.util.List bucketPriorityList
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int mCachedRootAlpha
com.google.android.exoplayer2.upstream.UdpDataSource: java.net.InetSocketAddress socketAddress
com.google.android.exoplayer2.text.ttml.TtmlNode: java.util.List children
androidx.appcompat.app.ActionBar$LayoutParams: int gravity
com.google.android.exoplayer2.video.DummySurface: boolean secure
androidx.appcompat.view.SupportMenuInflater$MenuState: androidx.appcompat.view.SupportMenuInflater this$0
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View mAnchorView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_ON_SCREEN
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List variants
androidx.appcompat.widget.LinearLayoutCompat: int mTotalLength
androidx.appcompat.R$attr: int seekBarStyle
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_SAR_NUM
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mDestroyed
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: tv.danmaku.ijk.media.player.AndroidMediaPlayer this$0
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean mediaCryptoRequiresSecureDecoder
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: java.util.ArrayList mAnimationCallbacks
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$Callback callback
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuBuilder mMenu
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.graphics.Rect mVisibleRect
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: int payloadReaderFactoryFlags
com.google.android.exoplayer2.decoder.SimpleDecoder: int availableInputBufferCount
androidx.core.graphics.drawable.IconCompat: int mInt1
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.TintInfo: boolean mHasTintList
cn.jzvd.R$drawable: int jz_battery_level_30
com.google.android.exoplayer2.util.SlidingPercentile: int currentSortOrder
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
androidx.appcompat.view.menu.CascadingMenuPopup: int mPopupStyleRes
androidx.appcompat.widget.AppCompatTextHelper: boolean mAsyncFontPending
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mHasColorFilter
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List mediaPlaylistUrls
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.util.concurrent.ConcurrentHashMap sTextViewMethodByNameCache
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: int size
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.reflect.Method mSetExclusiveCheckableMethod
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: int manualOverrideMaxFdCount
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: boolean isFilling
com.google.android.exoplayer2.PlayerMessage: boolean isCanceled
com.google.android.exoplayer2.text.CaptionStyleCompat: com.google.android.exoplayer2.text.CaptionStyleCompat DEFAULT
androidx.appcompat.widget.SuggestionsAdapter: int mIconName1Col
androidx.appcompat.R$attr: int buttonStyle
com.google.android.exoplayer2.Timeline$Window: java.lang.Object tag
com.google.android.exoplayer2.extractor.ts.LatmReader: int channelCount
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: int val$requestedWidth
com.google.android.exoplayer2.extractor.wav.WavSeekMap: long durationUs
cn.jzvd.demo.ActivityMain: cn.jzvd.demo.CustomJzvd.MyJzvdStd myJzvdStd
com.bumptech.glide.load.engine.EngineResource: com.bumptech.glide.load.Key key
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsEosFlushWorkaround
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int maxFrameAverageLuminance
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: int numCues
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: com.google.android.exoplayer2.SimpleExoPlayer this$0
cn.jzvd.R$style: int jz_style_dialog_progress
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: android.util.SparseArray initialBitrateEstimates
androidx.appcompat.R$styleable: int ActionBar_backgroundStacked
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: long elementContentSize
androidx.appcompat.widget.ActionBarContainer: android.view.View mActionBarView
androidx.recyclerview.widget.RecyclerView: int[] NESTED_SCROLLING_ATTRS
androidx.appcompat.app.AppCompatViewInflater: java.lang.Class[] sConstructorSignature
androidx.appcompat.app.AppCompatDelegateImpl: boolean mLongPressBackDown
com.google.android.exoplayer2.Format: java.lang.Class exoMediaCryptoType
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Rendition: android.net.Uri url
androidx.appcompat.R$id: int textSpacerNoTitle
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_4POINT1
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int[] mSpanOffsets
com.bumptech.glide.load.model.MultiModelLoaderFactory: androidx.core.util.Pools$Pool throwableListPool
com.google.android.exoplayer2.metadata.MetadataRenderer: com.google.android.exoplayer2.metadata.MetadataDecoder decoder
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: boolean allowCrossProtocolRedirects
com.google.android.exoplayer2.metadata.id3.GeobFrame: byte[] data
androidx.core.widget.ListViewAutoScrollHelper: android.widget.ListView mTarget
com.bumptech.glide.load.resource.bitmap.BitmapResource: android.graphics.Bitmap bitmap
androidx.core.R$styleable: int ColorStateListItem_android_color
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: com.google.android.exoplayer2.util.ParsableNalUnitBitArray bitArray
androidx.appcompat.resources.R$styleable: int[] GradientColor
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason DECODE_DATA
androidx.lifecycle.LiveData$LifecycleBoundObserver: androidx.lifecycle.LifecycleOwner mOwner
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_CHECKABLE_BUTTON_LIST
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_ACCEPTABLE
com.google.android.exoplayer2.text.Cue: float bitmapHeight
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATOR
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_VECTOR_DRAWABLE_GROUP
com.bumptech.glide.manager.RequestTracker: java.util.Set requests
cn.jzvd.R$layout: int jz_layout_std
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.GlideContext glideContext
androidx.fragment.app.FragmentManagerState: java.util.ArrayList mActive
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateY
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.extractor.ts.SeiReader seiReader
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: int elementId
com.google.android.exoplayer2.decoder.OutputBuffer: long timeUs
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsDurationReader durationReader
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: java.util.Map globalStyles
org.slf4j.LoggerFactory: java.lang.String[] API_COMPATIBILITY_LIST
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$Factory: com.google.android.exoplayer2.upstream.DataSource$Factory dataSourceFactory
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesNonTouch
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: android.util.SparseArray regionObjects
androidx.core.graphics.drawable.IconCompat: int mInt2
androidx.appcompat.view.menu.MenuItemImpl: int mShortcutNumericModifiers
com.danikula.videocache.HttpProxyCacheServer$Builder: com.danikula.videocache.file.FileNameGenerator fileNameGenerator
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry: java.lang.Class modelClass
androidx.core.widget.CompoundButtonCompat: boolean sButtonDrawableFieldFetched
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_422
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper this$0
com.danikula.videocache.ProxyCache: java.lang.Thread sourceReaderThread
androidx.fragment.app.Fragment$AnimationInfo: android.animation.Animator mAnimator
com.bumptech.glide.util.pool.FactoryPools$FactoryPool: androidx.core.util.Pools$Pool pool
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory factory
com.google.android.exoplayer2.extractor.ts.LatmReader: int numSubframes
com.google.android.exoplayer2.util.LongArray: long[] values
androidx.collection.LongSparseArray: java.lang.Object[] mValues
com.google.android.exoplayer2.ui.SubtitleView: boolean applyEmbeddedFontSizes
com.bumptech.glide.load.resource.gif.GifDrawable: int loopCount
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: boolean isCompleted
androidx.core.R$styleable: int GradientColor_android_centerColor
com.google.android.exoplayer2.Format: java.lang.String label
cn.jzvd.Jzvd: boolean TOOL_BAR_EXIST
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_RIGHT
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DefaultDrmSessionManager$ProvisioningManagerImpl provisioningManagerImpl
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: java.lang.String mMethodName
org.slf4j.helpers.FormattingTuple: org.slf4j.helpers.FormattingTuple NULL
androidx.appcompat.app.AppCompatViewInflater: java.lang.String[] sClassPrefixList
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROPV_DECODER_AVCODEC
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long lastFramePresentationTimeUs
com.danikula.videocache.HttpProxyCache: com.danikula.videocache.file.FileCache cache
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mTranslateX
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.io.InputStream inputStream
com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader: boolean formatDeclared
androidx.appcompat.view.menu.MenuAdapter: int mExpandedIndex
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: java.util.concurrent.atomic.AtomicReference parametersReference
tv.danmaku.ijk.media.player.MediaInfo: java.lang.String mAudioDecoderImpl
com.bumptech.glide.load.engine.LoadPath: java.lang.Class dataClass
com.google.android.exoplayer2.audio.SonicAudioProcessor: java.nio.ByteBuffer outputBuffer
com.google.android.exoplayer2.source.ProgressiveMediaSource: int continueLoadingCheckIntervalBytes
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder$CueStyle: int style
androidx.recyclerview.widget.LinearLayoutManager: int mInitialPrefetchItemCount
androidx.cursoradapter.widget.CursorAdapter: int mRowIDColumn
com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup: byte[] setupHeaderData
androidx.appcompat.widget.Toolbar: java.lang.CharSequence mTitleText
androidx.appcompat.widget.Toolbar: int mButtonGravity
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: int maxH264DecodableFrameSize
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable sampleTable
com.bumptech.glide.load.engine.ActiveResources: java.util.Map activeEngineResources
androidx.core.provider.FontsContractCompat$FontInfo: int mWeight
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int enabledTrackCount
androidx.appcompat.R$styleable: int ActionMenuItemView_android_minWidth
androidx.appcompat.R$dimen: int tooltip_y_offset_non_touch
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect val$epicenter
androidx.appcompat.view.menu.ListMenuItemView: boolean mPreserveIconSpacing
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mFreeze
androidx.appcompat.R$styleable: int MenuItem_actionLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: androidx.appcompat.app.AlertDialog mPopup
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long forceResetWorkaroundTimeMs
com.google.android.exoplayer2.extractor.amr.AmrExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors cbs
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$DvbSubtitleInfo: java.lang.String language
com.bumptech.glide.load.engine.ResourceCacheKey: com.bumptech.glide.load.Key signature
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: int mOriginalClickableSpanId
cn.jzvd.Jzvd: boolean WIFI_TIP_DIALOG_SHOWED
com.google.android.exoplayer2.audio.Ac4Util: int[] SAMPLE_COUNT
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: long durationUs
com.bumptech.glide.gifdecoder.StandardGifDecoder: android.graphics.Bitmap previousImage
com.google.android.exoplayer2.util.ParsableByteArray: int limit
androidx.fragment.app.FragmentState: int mContainerId
com.bumptech.glide.util.ByteBufferUtil$SafeArray: int limit
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mGapStrategy
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean isPlayingChanged
androidx.appcompat.R$styleable: int[] PopupWindowBackgroundState
com.google.android.exoplayer2.source.SinglePeriodTimeline: boolean isDynamic
com.google.android.exoplayer2.offline.StreamKey: android.os.Parcelable$Creator CREATOR
androidx.exifinterface.media.ExifInterface$ExifAttribute: long bytesOffset
com.google.android.exoplayer2.metadata.id3.PrivFrame: byte[] privateData
androidx.appcompat.app.AppCompatDelegateImpl: boolean mFeatureIndeterminateProgress
androidx.appcompat.view.StandaloneActionMode: boolean mFocusable
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: float reportedPixelWidthHeightRatio
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.extractor.TrackOutput icyTrackOutput
com.google.android.exoplayer2.metadata.emsg.EventMessage: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: long startTimeUs
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: int nalUnitLengthFieldLength
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper frameReleaseTimeHelper
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sIOThreadExecutor
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: int observerCount
androidx.core.graphics.Insets: int top
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: int flags
com.google.android.exoplayer2.text.webvtt.WebvttCue: long startTime
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: float pendingPixelWidthHeightRatio
cn.jzvd.demo.VideoConstant: java.lang.String[][] videoUrls
androidx.appcompat.R$attr: int colorControlHighlight
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.util.ArrayList mChildren
com.google.android.exoplayer2.audio.AudioAttributes$Builder: int usage
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage DATA_CACHE
androidx.viewpager.widget.ViewPager: int mFlingDistance
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseArray tsPayloadReaders
androidx.appcompat.R$styleable: int SearchView_searchIcon
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.metadata.Metadata metadata
com.google.android.exoplayer2.extractor.DefaultExtractorInput: long position
com.bumptech.glide.Registry: com.bumptech.glide.provider.ResourceEncoderRegistry resourceEncoderRegistry
androidx.viewpager.widget.ViewPager$ItemInfo: float offset
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: android.view.View mChild
com.bumptech.glide.RequestManager: com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor
androidx.appcompat.view.menu.ListMenuItemView: android.content.Context mTextAppearanceContext
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int number
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy TRANSFORMED
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mAnimatingForFling
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbShortTitleText
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long durationUs
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: boolean mInvalidateOffsets
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.load.engine.Engine$LoadStatus loadStatus
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Rect destRect
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float[] VALUES
com.google.android.exoplayer2.trackselection.TrackSelectionArray: int hashCode
androidx.appcompat.R$styleable: int[] FontFamilyFont
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_LEFT
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: com.google.android.exoplayer2.util.EventDispatcher eventDispatcher
com.google.android.exoplayer2.decoder.DecoderInputBuffer: java.nio.ByteBuffer data
cn.jzvd.Jzvd: float mDownY
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource DATA_DISK_CACHE
androidx.core.provider.SelfDestructiveThread$2: androidx.core.provider.SelfDestructiveThread$ReplyCallback val$reply
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition displayDefinition
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: com.google.android.exoplayer2.extractor.TrackOutput$CryptoData cryptoData
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float[] VALUES
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.core.view.WindowInsetsCompat mBaseInnerInsets
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable mDrawable
com.google.android.exoplayer2.extractor.mkv.VarintReader: int length
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.util.Map sFormatterMap
androidx.appcompat.widget.SearchView$SearchAutoComplete: int mThreshold
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: java.lang.String language
com.google.android.exoplayer2.text.Cue: float position
androidx.appcompat.app.WindowDecorActionBar: boolean mShowHideAnimationEnabled
androidx.appcompat.app.AlertController$AlertParams: java.lang.String mLabelColumn
androidx.appcompat.widget.SearchView: int mSuggestionCommitIconResId
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: long componentSplicePts
androidx.appcompat.R$styleable: int AlertDialog_listLayout
androidx.appcompat.widget.LinearLayoutCompat: int mDividerPadding
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: java.util.HashMap playlistBundles
androidx.fragment.app.BackStackState: boolean mReorderingAllowed
androidx.recyclerview.widget.RecyclerView: android.view.accessibility.AccessibilityManager mAccessibilityManager
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean disableSeeking
com.google.android.exoplayer2.util.MimeTypes$CustomMimeType: int trackType
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: int mChangingConfigurations
com.bumptech.glide.load.engine.DataCacheGenerator: com.bumptech.glide.load.engine.DecodeHelper helper
com.google.android.exoplayer2.audio.AudioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities DEFAULT_AUDIO_CAPABILITIES
com.google.android.exoplayer2.extractor.ts.SeiReader: com.google.android.exoplayer2.extractor.TrackOutput[] outputs
androidx.appcompat.view.menu.StandardMenuPopup: int mPopupMaxWidth
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage ENCODE
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: int resizeMode
androidx.appcompat.R$styleable: int SearchView_android_maxWidth
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory: android.content.res.AssetManager assetManager
androidx.core.app.ActivityRecreator$3: java.lang.Object val$token
com.bumptech.glide.request.ErrorRequestCoordinator: com.bumptech.glide.request.RequestCoordinator$RequestState errorState
androidx.exifinterface.media.ExifInterface: java.util.List FLIPPED_ROTATION_ORDER
com.google.android.exoplayer2.ExoPlayerImpl: int pendingSetPlaybackParametersAcks
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: int maximumPoolSize
com.google.android.exoplayer2.source.hls.Aes128DataSource: byte[] encryptionIv
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcel mParcel
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$Stage stage
androidx.appcompat.R$styleable: int Toolbar_navigationIcon
com.google.android.exoplayer2.extractor.mp4.Track: int nalUnitLengthFieldLength
tv.danmaku.ijk.media.player.pragma.Pragma: boolean ENABLE_VERBOSE
com.google.android.exoplayer2.metadata.id3.MlltFrame: int[] millisecondsDeviations
cn.jzvd.Jzvd: int FULLSCREEN_ORIENTATION
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: java.lang.String elementId
com.google.android.exoplayer2.source.ads.AdPlaybackState: com.google.android.exoplayer2.source.ads.AdPlaybackState NONE
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mWidthMode
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestTask: int errorCount
androidx.core.widget.AutoSizeableTextView: boolean PLATFORM_SUPPORTS_AUTOSIZE
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean mMutated
androidx.core.widget.AutoScrollHelper: java.lang.Runnable mRunnable
androidx.appcompat.app.AlertController: android.os.Message mButtonPositiveMessage
androidx.appcompat.widget.SearchView: boolean mSubmitButtonEnabled
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: com.google.android.exoplayer2.extractor.SeekPoint first
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_START_US
androidx.appcompat.app.AppCompatDelegateImpl: boolean mHandleNativeActionModes
com.bumptech.glide.provider.ResourceDecoderRegistry: java.util.Map decoders
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1: int[] $SwitchMap$android$graphics$Bitmap$Config
com.google.android.exoplayer2.audio.Ac3Util: int[] BLOCKS_PER_SYNCFRAME_BY_NUMBLKSCOD
androidx.appcompat.R$id: int action_bar_activity_content
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long blockTimeUs
androidx.fragment.app.FragmentTransitionCompat21$3: java.util.ArrayList val$enteringViews
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$ListSelectorHider mHideSelector
tv.danmaku.ijk.media.player.IjkMediaPlayer: int OPT_CATEGORY_PLAYER
androidx.appcompat.widget.ActionMenuView$LayoutParams: int extraPixels
androidx.appcompat.app.AppCompatDelegateImpl$2: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableTransition
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen jzvdStdWithShareButton
androidx.fragment.app.FragmentTransaction$Op: int mPopEnterAnim
androidx.appcompat.app.WindowDecorActionBar: int mSavedTabPosition
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mDensity
androidx.core.widget.TextViewCompat$OreoCallback: java.lang.reflect.Method mMenuBuilderRemoveItemAtMethod
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mCheckedConstantState
androidx.appcompat.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockAdditionalId
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: int sampleCount
androidx.appcompat.R$drawable: int abc_ratingbar_indicator_material
com.google.android.exoplayer2.text.ttml.TtmlStyle: int fontColor
androidx.exifinterface.media.ExifInterface: int mExifOffset
androidx.core.R$styleable: int ColorStateListItem_alpha
android.support.v4.media.session.ParcelableVolumeInfo: int controlType
androidx.viewpager.widget.ViewPager: float mInitialMotionY
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioAttributes audioAttributes
androidx.exifinterface.media.ExifInterface: byte[] JPEG_SIGNATURE
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.graphics.SurfaceTexture texture
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: byte[] SUBRIP_PREFIX
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: int firstTrackId
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: long samplePosition
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long atomSize
com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler: java.util.List listeners
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl mPrefetchRegistry
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int CTRL_WILL_LIVE_OPEN
androidx.core.widget.AutoScrollHelper: float[] mRelativeVelocity
com.bumptech.glide.request.BaseRequestOptions: int overrideHeight
android.support.v4.media.session.ParcelableVolumeInfo: int maxVolume
com.google.android.exoplayer2.metadata.id3.GeobFrame: java.lang.String description
com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader: java.lang.String vendor
com.google.android.exoplayer2.extractor.ts.H264Reader: boolean detectAccessUnits
com.bumptech.glide.load.model.LazyHeaders$Builder: java.util.Map headers
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence mTitle
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.HashMap decoderInfosCache
androidx.collection.ArraySet: int sTwiceBaseCacheSize
com.google.android.exoplayer2.util.Util: java.util.regex.Pattern XS_DURATION_PATTERN
androidx.appcompat.widget.AppCompatSpinner: android.graphics.Rect mTempRect
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.AudioFocusManager audioFocusManager
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[][] EXIF_TAGS
com.google.android.exoplayer2.FormatHolder: com.google.android.exoplayer2.drm.DrmSession drmSession
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long totalBytesTransferred
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.regex.Pattern CLOCK_TIME
com.google.android.exoplayer2.upstream.ContentDataSource: android.content.res.AssetFileDescriptor assetFileDescriptor
com.bumptech.glide.load.engine.LockedResource: com.bumptech.glide.load.engine.Resource toWrap
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: long largestQueuedPresentationTimeUs
com.bumptech.glide.load.engine.DataCacheKey: com.bumptech.glide.load.Key signature
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: long nalUnitStartPosition
com.bumptech.glide.request.BaseRequestOptions: boolean useAnimationPool
com.google.android.exoplayer2.source.TrackGroupArray: com.google.android.exoplayer2.source.TrackGroupArray EMPTY
androidx.appcompat.view.menu.MenuBuilder: boolean mOptionalIconsVisible
com.google.android.exoplayer2.util.Util: java.lang.String MANUFACTURER
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.Option FRAME_OPTION
androidx.appcompat.widget.SearchView$8: androidx.appcompat.widget.SearchView this$0
androidx.appcompat.widget.Toolbar: int mTitleMarginEnd
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int buffersInCodecCount
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: int remainingSamplesPerChunkChanges
com.google.android.exoplayer2.text.TextRenderer: boolean inputStreamEnded
com.bumptech.glide.GlideBuilder: com.bumptech.glide.GlideExperiments$Builder glideExperimentsBuilder
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap this$0
com.google.android.exoplayer2.upstream.UdpDataSource: int socketTimeoutMillis
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mShouldReverseLayout
androidx.core.provider.FontsContractCompat: androidx.collection.SimpleArrayMap sPendingReplies
com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution: int rows
com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator: long fromIndex
com.bumptech.glide.load.resource.SimpleResource: java.lang.Object data
androidx.appcompat.app.WindowDecorActionBar: boolean mShowingForMode
androidx.appcompat.R$styleable: int ActionBar_hideOnContentScroll
androidx.recyclerview.widget.RecyclerView$LayoutParams: androidx.recyclerview.widget.RecyclerView$ViewHolder mViewHolder
androidx.fragment.app.FragmentTransaction$Op: int mEnterAnim
androidx.appcompat.widget.AppCompatSeekBarHelper: android.graphics.PorterDuff$Mode mTickMarkTintMode
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int extractedSamplesCountAtStartOfLoad
tv.danmaku.ijk.media.player.MediaPlayerProxy$5: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
androidx.core.widget.NestedScrollView: float mVerticalScrollFactor
com.google.android.exoplayer2.source.ProgressiveMediaSource: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: boolean haveSync
androidx.appcompat.R$styleable: int ActionBar_height
org.slf4j.event.SubstituteLoggingEvent: long timeStamp
androidx.fragment.app.FragmentManagerImpl: boolean mExecutingActions
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: int frameStartMarker
androidx.core.view.NestedScrollingParentHelper: int mNestedScrollAxesTouch
org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger _delegate
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mPivotX
com.danikula.videocache.ProxyCache: org.slf4j.Logger LOG
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.lang.Integer maxDisplayLength
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] ARGB_8888_IN_CONFIGS
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMAT
com.google.android.exoplayer2.util.ParsableByteArray: byte[] data
com.google.android.exoplayer2.ui.TrackSelectionView: android.util.SparseArray overrides
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker binarySearchSeeker
com.google.android.exoplayer2.upstream.FileDataSource: android.net.Uri uri
com.bumptech.glide.load.engine.DecodeJob: androidx.core.util.Pools$Pool pool
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_DEFAULT
androidx.lifecycle.LiveData: java.lang.Runnable mPostValueRunnable
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
androidx.appcompat.view.menu.StandardMenuPopup: boolean mOverflowOnly
com.google.android.exoplayer2.WakeLockManager: boolean enabled
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int fragmentedMp4Flags
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PageTransformer mPageTransformer
com.google.android.exoplayer2.util.ColorParser: java.util.regex.Pattern RGB_PATTERN
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] IFD_TIFF_TAGS
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist masterPlaylist
cn.jzvd.JzvdStd: long LAST_GET_BATTERYLEVEL_TIME
androidx.core.view.LayoutInflaterCompat: java.lang.reflect.Field sLayoutInflaterFactory2Field
com.bumptech.glide.load.engine.ResourceCacheGenerator: com.bumptech.glide.load.engine.ResourceCacheKey currentKey
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.Key key
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: com.google.android.exoplayer2.drm.DrmInitData protectionSchemes
com.bumptech.glide.Glide: boolean isInitializing
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: long granulePosition
androidx.recyclerview.widget.RecyclerView: boolean mHasFixedSize
androidx.core.view.WindowInsetsCompat$BuilderImpl29: android.view.WindowInsets$Builder mPlatBuilder
androidx.appcompat.widget.ScrollingTabContainerView$TabView: android.widget.ImageView mIconView
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean isPlaceholderSession
androidx.appcompat.widget.SearchView: android.widget.ImageView mSearchButton
androidx.fragment.app.FragmentTransitionImpl$1: java.util.ArrayList val$inNames
org.slf4j.event.SubstituteLoggingEvent: java.lang.Object[] argArray
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int[] rendererMixedMimeTypeAdaptiveSupports
com.google.android.exoplayer2.audio.BaseAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat inputAudioFormat
androidx.appcompat.view.menu.MenuItemImpl: androidx.appcompat.view.menu.MenuBuilder mMenu
cn.jzvd.Jzvd: android.widget.TextView totalTimeTextView
com.google.android.exoplayer2.extractor.ts.AdtsReader: byte[] ID3_IDENTIFIER
com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties: java.util.Map requestPropertiesSnapshot
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: boolean isWithinRendererCapabilities
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: byte[] SSA_DIALOGUE_FORMAT
androidx.appcompat.view.menu.MenuItemImpl: boolean mHasIconTintMode
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState mAnimatedVectorState
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder extractorHolder
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantMinimumWidth
androidx.appcompat.widget.ActionMenuView$LayoutParams: boolean isOverflowButton
androidx.recyclerview.widget.RecyclerView$ViewHolder: android.view.View itemView
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_FOCUS
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: long windowSequenceNumber
com.google.android.exoplayer2.extractor.ts.AdtsReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1: com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory this$0
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: int averageFrameSize
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int mAutoSizeTextType
android.support.v4.media.session.PlaybackStateCompat: long mActions
com.google.android.exoplayer2.BaseRenderer: boolean throwRendererExceptionIsExecuting
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean tracksEnded
com.google.android.exoplayer2.audio.BaseAudioProcessor: boolean inputEnded
androidx.recyclerview.widget.GridLayoutManager: android.util.SparseIntArray mPreLayoutSpanIndexCache
com.google.android.exoplayer2.extractor.ts.Ac3Reader: int state
tv.danmaku.ijk.media.player.misc.ITrackInfo: int MEDIA_TRACK_TYPE_VIDEO
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer initializer
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: long durationUs
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_UNKNOWN
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: java.lang.String responseMessage
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1: android.content.Context val$context
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mBackgroundTint
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mItemPrefetchEnabled
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.Typeface mFontTypeface
com.google.android.exoplayer2.Format: int maxInputSize
androidx.appcompat.R$styleable: int SearchView_queryHint
org.slf4j.impl.StaticLoggerBinder: java.lang.String loggerFactoryClassStr
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int anchorId
com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition: int[] clutEntries4Bit
androidx.appcompat.widget.TooltipPopup: android.view.WindowManager$LayoutParams mLayoutParams
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$DvbSubtitleInfo: byte[] initializationData
com.google.android.exoplayer2.source.SinglePeriodTimeline: long presentationStartTimeMs
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: int operationAcks
com.google.android.exoplayer2.metadata.emsg.EventMessage: long id
com.danikula.videocache.HttpProxyCacheServerClients: java.util.List listeners
com.google.android.exoplayer2.extractor.mkv.Sniffer: com.google.android.exoplayer2.util.ParsableByteArray scratch
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_WARN
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status RUNNING
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PAGE_DOWN
com.bumptech.glide.load.model.GlideUrl: java.net.URL url
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$Listener listener
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLSurface surface
androidx.collection.ArraySet$1: androidx.collection.ArraySet this$0
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: java.lang.Class arrayClass
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.RequestListener targetListener
com.bumptech.glide.load.data.DataRewinderRegistry: java.util.Map rewinders
androidx.appcompat.view.menu.MenuPopupHelper: android.widget.PopupWindow$OnDismissListener mOnDismissListener
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker playlistTracker
com.google.android.exoplayer2.source.hls.HlsChunkSource$InitializationTrackSelection: int selectedIndex
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_NEXT_HTML_ELEMENT
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: long codecDelayNs
com.google.android.exoplayer2.extractor.ts.LatmReader: int bytesRead
com.google.android.exoplayer2.audio.SonicAudioProcessor: java.nio.ByteBuffer buffer
com.bumptech.glide.load.engine.ResourceCacheKey: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestManager requestManager
com.google.android.exoplayer2.offline.FilteringManifestParser: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser parser
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long[] timesUs
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManagerImpl mChildFragmentManager
com.google.android.exoplayer2.audio.DefaultAudioSink: long writtenPcmBytes
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int EVENT_WILL_HTTP_OPEN
com.google.android.exoplayer2.text.dvb.DvbParser: android.graphics.Paint fillRegionPaint
com.bumptech.glide.load.model.LazyHeaders: java.util.Map headers
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable mCollapseIcon
androidx.fragment.app.FragmentTransaction: java.lang.CharSequence mBreadCrumbTitleText
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: java.lang.String[] PROJECTION
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableBottomTint
androidx.lifecycle.LifecycleRegistry: boolean mNewEventOccurred
com.google.android.exoplayer2.extractor.MpegAudioHeader: int channels
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.RendererCapabilities[] rendererCapabilities
androidx.appcompat.widget.ActionBarContextView: android.widget.TextView mTitleView
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableRightTint
com.google.android.exoplayer2.util.MimeTypes$CustomMimeType: java.lang.String mimeType
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.BackStackRecord firstOutTransaction
com.bumptech.glide.RequestBuilder: com.bumptech.glide.TransitionOptions transitionOptions
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.lang.String customCacheKey
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer vps
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: int selectedAudioLanguageScore
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: android.view.WindowManager windowManager
androidx.appcompat.graphics.drawable.DrawableContainer$1: androidx.appcompat.graphics.drawable.DrawableContainer this$0
com.google.android.exoplayer2.source.hls.HlsMediaSource: android.net.Uri manifestUri
androidx.appcompat.view.ActionMode: boolean mTitleOptionalHint
com.google.android.exoplayer2.Timeline$Window: long windowStartTimeMs
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] BASIC_CHARACTER_SET
com.google.android.exoplayer2.text.Cue: com.google.android.exoplayer2.text.Cue EMPTY
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: int pendingPrepareCount
androidx.core.os.TraceCompat: java.lang.reflect.Method sIsTagEnabledMethod
com.google.android.exoplayer2.source.hls.Aes128DataSource: javax.crypto.CipherInputStream cipherInputStream
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.drm.DrmSession currentDrmSession
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_AUDIO_CACHED_PACKETS
androidx.fragment.app.BackStackState: int[] mOps
androidx.appcompat.widget.SearchView: android.widget.ImageView mCloseButton
androidx.appcompat.R$styleable: int Spinner_android_prompt
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.animation.AnimatorSet mAnimatorSet
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: long targetDurationUs
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
androidx.appcompat.R$styleable: int Toolbar_contentInsetEnd
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.appcompat.R$styleable: int AppCompatTextView_drawableEndCompat
com.google.android.exoplayer2.Format: int sampleRate
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: boolean isSeeking
androidx.viewpager.widget.ViewPager$LayoutParams: float widthFactor
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: android.content.ContentResolver contentResolver
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue: java.util.Map overridingDrmInitData
com.google.android.exoplayer2.extractor.VorbisUtil$Mode: int transformType
androidx.appcompat.R$styleable: int ButtonBarLayout_allowStacking
androidx.appcompat.view.SupportMenuInflater$MenuState: int itemCheckable
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: int synchronizedHeaderData
androidx.recyclerview.R$styleable: int RecyclerView_stackFromEnd
androidx.appcompat.R$id: int custom
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String mCodecName
androidx.appcompat.view.menu.MenuItemWrapperICS: androidx.core.internal.view.SupportMenuItem mWrappedObject
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] $VALUES
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray mCapturedKeys
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: androidx.appcompat.widget.DropDownListView this$0
tv.danmaku.ijk.media.player.IjkMediaPlayer: int PROP_FLOAT_VIDEO_OUTPUT_FRAMES_PER_SECOND
androidx.fragment.app.Fragment$AnimationInfo: int mStateAfterAnimating
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long segmentIndexEarliestPresentationTimeUs
com.bumptech.glide.load.model.UriLoader: com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory factory
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: long startOffsetUs
androidx.core.app.ActivityRecreator$2: android.app.Application val$application
androidx.appcompat.widget.ThemeUtils: java.lang.ThreadLocal TL_TYPED_VALUE
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_BT601
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.RequestManagerTreeNode requestManagerTreeNode
androidx.core.R$id: int accessibility_custom_action_19
androidx.appcompat.view.menu.MenuPopupHelper: android.view.View mAnchorView
com.bumptech.glide.load.data.HttpUrlFetcher: com.bumptech.glide.load.model.GlideUrl glideUrl
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int[] STANDARD_LONG_EDGE_VIDEO_PX
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: int selectedIndex
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mAnchorLayoutFromEnd
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.source.SampleQueue$UpstreamFormatChangedListener upstreamFormatChangeListener
com.google.android.exoplayer2.audio.AudioAttributes$Builder: int flags
androidx.fragment.app.FragmentState: boolean mRetainInstance
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mPositiveButtonText
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mOldPosition
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment mParent
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean forceHighestSupportedBitrate
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate DEFAULT_DELEGATE
com.google.android.exoplayer2.text.SubtitleInputBuffer: long subsampleOffsetUs
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: android.media.MediaCodec codec
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: boolean pendingExtractorSeek
androidx.appcompat.view.menu.MenuItemImpl: char mShortcutNumericChar
androidx.appcompat.R$attr: int editTextStyle
androidx.fragment.app.Fragment: int mContentLayoutId
androidx.appcompat.widget.AppCompatRatingBar: androidx.appcompat.widget.AppCompatProgressBarHelper mAppCompatProgressBarHelper
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$8: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
androidx.recyclerview.widget.LayoutState: int mStartLine
com.google.android.exoplayer2.util.EGLSurfaceTexture: com.google.android.exoplayer2.util.EGLSurfaceTexture$TextureImageListener callback
tv.danmaku.ijk.media.player.MediaPlayerProxy$4: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
androidx.appcompat.R$styleable: int ActionMode_closeItemLayout
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mHideOnContentScroll
androidx.fragment.app.FragmentState: int mFragmentId
androidx.appcompat.widget.SearchView: android.app.SearchableInfo mSearchable
com.google.android.exoplayer2.ui.R$string: int exo_track_role_supplementary
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.FragmentTransaction mCurTransaction
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.widget.AppCompatPopupWindow: boolean mOverlapAnchor
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int[] INDEX_TABLE
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SHOW_TOOLTIP
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: int mOffset
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$DecodeJobFactory decodeJobFactory
androidx.fragment.app.FragmentActivity: boolean mResumed
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.ResultReceiver mResultReceiver
com.bumptech.glide.load.model.FileLoader$FileFetcher: java.io.File file
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration configuration
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List FULLUPDATE_PAYLOADS
com.google.android.exoplayer2.Format: java.lang.String codecs
com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues: int flags
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean mMeasurementCacheEnabled
com.danikula.videocache.HttpProxyCacheServerClients: com.danikula.videocache.Config config
com.google.android.exoplayer2.BaseRenderer: int index
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: boolean enabled
androidx.core.app.ActivityRecreator: java.lang.Class activityThreadClass
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues codecMaxValues
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom: int version
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean mFullSpan
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.util.ParsableBitArray serviceBlockPacket
com.bumptech.glide.load.data.mediastore.ThumbFetcher: java.io.InputStream inputStream
androidx.appcompat.R$styleable: int[] ListPopupWindow
com.google.android.exoplayer2.text.cea.CeaDecoder: long queuedInputBufferCount
com.google.android.exoplayer2.decoder.DecoderCounters: int decoderInitCount
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutNumericModifiers
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mLastLayoutRTL
androidx.appcompat.widget.ActionMenuPresenter: boolean mPendingOverflowIconSet
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: androidx.appcompat.widget.ActionMenuPresenter this$0
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: int streamCount
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: android.content.Context context
cn.jzvd.JzvdStd: android.widget.ImageView thumbImageView
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: long seekPreRollNs
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.widget.ListAdapter mListAdapter
cn.jzvd.demo.FragmentDemo$1: cn.jzvd.demo.FragmentDemo this$0
com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate: int tickRate
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] mAttributes
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_TBR_DEN
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.ActivityFragmentLifecycle lifecycle
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track[] tracks
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int sampleRate
com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.util.pool.StateVerifier stateVerifier
androidx.appcompat.view.ContextThemeWrapper: android.view.LayoutInflater mInflater
com.bumptech.glide.GlideBuilder: int logLevel
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters parameters
com.bumptech.glide.signature.ObjectKey: java.lang.Object object
com.bumptech.glide.load.engine.DataCacheWriter: com.bumptech.glide.load.Encoder encoder
androidx.core.app.RemoteActionCompat: boolean mEnabled
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: android.view.Choreographer choreographer
androidx.fragment.app.FragmentManagerImpl$5: android.view.ViewGroup val$container
com.danikula.videocache.SourceInfo: long length
cn.jzvd.Jzvd: android.widget.SeekBar progressBar
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mPostponedTransactions
com.google.android.exoplayer2.SeekParameters: com.google.android.exoplayer2.SeekParameters PREVIOUS_SYNC
androidx.appcompat.view.menu.BaseMenuPresenter: int mItemLayoutRes
com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution: int columns
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader videoReader
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment mInstance
androidx.appcompat.widget.ActionBarOverlayLayout: boolean mOverlayMode
androidx.core.provider.SelfDestructiveThread: int mGeneration
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.Timeline$Period period
androidx.appcompat.widget.ActionBarOverlayLayout: android.widget.OverScroller mFlingEstimator
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist: boolean hasIndependentSegments
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: boolean mStarted
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.util.EventDispatcher eventDispatcher
com.google.android.exoplayer2.extractor.ogg.OggExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput output
androidx.appcompat.app.AlertController$AlertParams: android.widget.ListAdapter mAdapter
com.google.android.exoplayer2.decoder.CryptoInfo: int clearBlocks
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.Key currentSourceKey
androidx.exifinterface.media.ExifInterface: java.util.List ROTATION_ORDER
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mConstantHeight
com.bumptech.glide.RequestBuilder: java.lang.Class transcodeClass
com.google.android.exoplayer2.util.CodecSpecificDataUtil: byte[] NAL_START_CODE
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: long firstFrameOffset
androidx.fragment.app.FragmentState: android.os.Bundle mArguments
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate mOriginalDelegate
androidx.appcompat.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int primarySampleQueueType
com.google.android.exoplayer2.upstream.Loader: java.util.concurrent.ExecutorService downloadExecutorService
androidx.fragment.app.FragmentTransaction: java.util.ArrayList mCommitRunnables
com.google.android.exoplayer2.extractor.mp4.TrackFragment: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox trackEncryptionBox
com.bumptech.glide.load.resource.gif.GifFrameLoader: boolean isCleared
androidx.fragment.app.FragmentTransitionCompat21$2: androidx.fragment.app.FragmentTransitionCompat21 this$0
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view
androidx.appcompat.app.AlertController$AlertParams: int mIconAttrId
com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.Format rendererFormat
com.bumptech.glide.load.engine.Engine$LoadStatus: com.bumptech.glide.request.ResourceCallback cb
tv.danmaku.ijk.media.player.BuildConfig: java.lang.String VERSION_NAME
com.google.android.exoplayer2.audio.Sonic: int pitchFrameCount
androidx.appcompat.widget.SearchView: int mMaxWidth
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.Configuration configuration
androidx.appcompat.view.menu.SubMenuWrapperICS: androidx.core.internal.view.SupportSubMenu mSubMenu
com.google.android.exoplayer2.DefaultMediaClock: com.google.android.exoplayer2.DefaultMediaClock$PlaybackParameterListener listener
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: int connectTimeoutMillis
androidx.appcompat.widget.DropDownListView: androidx.appcompat.widget.DropDownListView$GateKeeperDrawable mSelector
androidx.recyclerview.widget.StaggeredGridLayoutManager: int mFullSizeSpec
com.google.android.exoplayer2.extractor.ts.TsExtractor: int bytesSinceLastSync
androidx.recyclerview.widget.RecyclerView: android.view.VelocityTracker mVelocityTracker
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: com.google.android.exoplayer2.util.TimestampAdjuster scrTimestampAdjuster
com.danikula.videocache.HttpProxyCacheServer: java.util.Map clientsMap
androidx.fragment.app.FragmentTransition$2: android.view.View val$nonExistentView
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean seekProcessed
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: androidx.appcompat.widget.AppCompatBackgroundHelper mBackgroundTintHelper
com.google.android.exoplayer2.upstream.DefaultAllocator: com.google.android.exoplayer2.upstream.Allocation[] availableAllocations
com.google.android.exoplayer2.source.hls.Aes128DataSource: byte[] encryptionKey
com.google.android.exoplayer2.text.ttml.TtmlNode: long startTimeUs
com.bumptech.glide.load.ImageHeaderParserUtils$3: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$byteArrayPool
androidx.fragment.app.FragmentManagerImpl: boolean mStateSaved
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener mOnSeekCompleteListener
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory: boolean preventNetworkOperations
com.google.android.exoplayer2.util.Log: boolean logStackTraces
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: int evictions
androidx.appcompat.R$string: int abc_menu_ctrl_shortcut_label
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: com.google.android.exoplayer2.source.ProgressiveMediaPeriod this$0
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.CharSequence itemTitleCondensed
androidx.appcompat.R$string: int abc_menu_shift_shortcut_label
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_HEXAGONAL
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate sDelegate
com.google.android.exoplayer2.ExoPlaybackException: int rendererIndex
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_VIDEO_DECODER
com.google.android.exoplayer2.Timeline$Period: long positionInWindowUs
com.bumptech.glide.load.model.UriLoader: java.util.Set SCHEMES
androidx.appcompat.widget.LinearLayoutCompat: float mWeightSum
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar mActionBar
com.danikula.videocache.file.FileCache: com.danikula.videocache.file.DiskUsage diskUsage
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long vsyncDurationNs
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: java.lang.reflect.Method mEnsureImeVisible
com.google.android.exoplayer2.upstream.AssetDataSource: long bytesRemaining
com.google.android.exoplayer2.source.chunk.Chunk: java.lang.Object trackSelectionData
com.bumptech.glide.load.engine.cache.SafeKeyGenerator: com.bumptech.glide.util.LruCache loadIdToSafeHash
androidx.core.R$styleable: int FontFamilyFont_fontVariationSettings
cn.jzvd.demo.ActivityTinyWindowRecycleView: cn.jzvd.demo.AdapterRecyclerViewTiny adapterVideoList
androidx.appcompat.view.menu.MenuItemImpl$1: androidx.appcompat.view.menu.MenuItemImpl this$0
com.google.android.exoplayer2.text.cea.Cea608Decoder: int packetLength
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: int width
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioCapabilities audioCapabilities
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator: java.util.Queue extraLines
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.Map variableDefinitions
com.bumptech.glide.util.ContentLengthInputStream: int readSoFar
com.google.android.exoplayer2.upstream.UdpDataSource: int packetRemaining
com.google.android.exoplayer2.audio.Sonic: int prevMinDiff
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: androidx.recyclerview.widget.RecyclerView recyclerView
com.google.android.exoplayer2.util.NalUnitUtil: java.lang.Object scratchEscapePositionsLock
androidx.fragment.app.FragmentHostCallback: android.content.Context mContext
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_VIDEO_ROTATION_CHANGED
android.support.v4.os.ResultReceiver: boolean mLocal
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey: boolean secure
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: boolean sentEos
com.google.android.exoplayer2.extractor.ts.SectionReader: com.google.android.exoplayer2.util.ParsableByteArray sectionData
androidx.appcompat.view.menu.ListMenuItemView: boolean mHasListDivider
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long blockDurationUs
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlagPresent
androidx.appcompat.view.menu.ListMenuPresenter: int mThemeRes
cn.jzvd.demo.ActivityListViewMultiHolder$1: cn.jzvd.demo.ActivityListViewMultiHolder this$0
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker this$0
androidx.appcompat.R$styleable: int MenuItem_numericModifiers
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: long version
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: java.lang.String name
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle inheritableStyle
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int data
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int[] trackGroupToSampleQueueIndex
com.google.android.exoplayer2.upstream.DataSourceException: int reason
tv.danmaku.ijk.media.player.R$string: int ijkplayer_dummy
androidx.appcompat.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo readingMediaPeriod
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_STEREO_DOWNMIX
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mOpacity
com.google.android.exoplayer2.AudioFocusManager: com.google.android.exoplayer2.audio.AudioAttributes audioAttributes
com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.load.resource.gif.GifDrawable$GifState state
androidx.core.provider.SelfDestructiveThread$2: android.os.Handler val$callingHandler
com.bumptech.glide.request.ThumbnailRequestCoordinator: com.bumptech.glide.request.Request thumb
cn.jzvd.Jzvd: android.media.AudioManager mAudioManager
androidx.exifinterface.media.ExifInterface: int mRw2JpgFromRawOffset
androidx.lifecycle.LiveData$ObserverWrapper: int mLastVersion
tv.danmaku.ijk.media.player.IjkMediaPlayer: long mNativeMediaDataSource
androidx.recyclerview.widget.RecyclerView: java.util.List mOnChildAttachStateListeners
androidx.recyclerview.widget.RecyclerView: int mScrollState
androidx.appcompat.content.res.AppCompatResources: java.lang.ThreadLocal TL_TYPED_VALUE
androidx.lifecycle.LifecycleRegistry$1: int[] $SwitchMap$androidx$lifecycle$Lifecycle$Event
com.google.android.exoplayer2.extractor.flac.FlacExtractor: byte[] streamMarkerAndInfoBlock
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter$TextViewHolder: android.widget.TextView textView
com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory: com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties defaultRequestProperties
com.bumptech.glide.util.Executors: java.util.concurrent.Executor DIRECT_EXECUTOR
androidx.appcompat.view.menu.MenuDialogHelper: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources mResources
com.google.android.exoplayer2.audio.SonicAudioProcessor: java.nio.ShortBuffer shortBuffer
com.danikula.videocache.HttpProxyCacheServerClients: com.danikula.videocache.HttpProxyCache proxyCache
tv.danmaku.ijk.media.player.MediaPlayerProxy$3: tv.danmaku.ijk.media.player.MediaPlayerProxy this$0
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: com.bumptech.glide.load.ResourceEncoder encoder
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.util.ParsableByteArray seiWrapper
com.google.android.exoplayer2.extractor.DefaultExtractorInput: byte[] peekBuffer
com.google.android.exoplayer2.ui.TrackSelectionView: com.google.android.exoplayer2.ui.TrackSelectionView$TrackSelectionListener listener
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.PlaybackInfo playbackInfo
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: long lastBufferInStreamPresentationTimeUs
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: long droppedFrameAccumulationStartTimeMs
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int atomHeaderBytesRead
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: java.lang.String schemeType
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForWriting
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int seekEntryId
com.bumptech.glide.RequestBuilder: boolean isModelSet
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_weightSum
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput emsgUnwrappingTrackOutput
cn.jzvd.R$id: int retry_btn
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: java.lang.String mRootName
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$PagerObserver mObserver
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.trackselection.TrackSelectorResult trackSelectorResult
androidx.appcompat.view.menu.StandardMenuPopup: int mContentWidth
androidx.appcompat.view.menu.CascadingMenuPopup$3: androidx.appcompat.view.menu.CascadingMenuPopup this$0
androidx.appcompat.R$styleable: int[] AppCompatTextHelper
com.google.android.exoplayer2.trackselection.TrackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectionArray selections
androidx.appcompat.widget.ActionBarContainer: android.graphics.drawable.Drawable mBackground
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.google.android.exoplayer2.ui.R$styleable: int[] FontFamily
androidx.recyclerview.widget.RecyclerView: int[] mNestedOffsets
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: int chunkSampleCount
androidx.appcompat.widget.ThemeUtils: int[] TEMP_ARRAY
cn.jzvd.JzvdStd: android.widget.ProgressBar mDialogVolumeProgressBar
androidx.core.view.ViewPropertyAnimatorCompat$1: androidx.core.view.ViewPropertyAnimatorListener val$listener
androidx.lifecycle.LiveData: int mActiveCount
com.bumptech.glide.GlideBuilder: com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory requestManagerFactory
com.google.android.exoplayer2.text.ssa.SsaStyle: java.lang.String name
androidx.recyclerview.R$styleable: int[] ColorStateListItem
com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook: boolean isOrdered
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet audioDebugListeners
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: com.google.android.exoplayer2.extractor.ts.Ac4Reader reader
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.ArrayList mediaChunks
com.bumptech.glide.disklrucache.DiskLruCache$Value: long[] lengths
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State CREATED
androidx.recyclerview.R$styleable: int[] GradientColor
androidx.appcompat.R$layout: int abc_screen_simple_overlay_action_mode
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: boolean stackFromEnd
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int sClickableSpanId
tv.danmaku.ijk.media.player.MediaPlayerProxy$1: tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener val$finalListener
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_AUDIO_CACHED_BYTES
com.danikula.videocache.file.LruDiskUsage$TouchCallable: com.danikula.videocache.file.LruDiskUsage this$0
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_DEBUG
com.bumptech.glide.load.model.ResourceLoader$StreamFactory: android.content.res.Resources resources
com.google.android.exoplayer2.source.BaseMediaSource: java.util.HashSet enabledMediaSourceCallers
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int parserState
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int[] tracks
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenBySystem
com.google.android.exoplayer2.util.NalUnitUtil: byte[] NAL_START_CODE
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String TAG
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: androidx.fragment.app.Fragment firstOut
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback mWrapped
com.google.android.exoplayer2.extractor.mkv.VarintReader: long[] VARINT_LENGTH_MASKS
com.bumptech.glide.load.resource.gif.GifFrameLoader: int width
cn.jzvd.R$layout: int jz_layout_clarity_item
com.google.android.exoplayer2.SimpleExoPlayer: float audioVolume
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage RESOURCE_CACHE
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: com.google.android.exoplayer2.util.ParsableByteArray headerScratch
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: long timeUs
androidx.appcompat.app.AlertController$RecycleListView: int mPaddingTopNoTitle
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$Callback callback
androidx.appcompat.app.AlertController$AlertParams$3: androidx.appcompat.app.AlertController$AlertParams this$0
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$1: cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder this$0
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.ActionMode$Callback mCallback
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks: com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream bufferedStream
com.bumptech.glide.load.Option: byte[] keyBytes
androidx.appcompat.widget.ScrollingTabContainerView: int mSelectedTabIndex
androidx.appcompat.widget.SearchView$9: androidx.appcompat.widget.SearchView this$0
com.google.android.exoplayer2.DefaultLoadControl: long minBufferVideoUs
com.bumptech.glide.load.resource.gif.StreamGifDecoder: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
com.bumptech.glide.gifdecoder.StandardGifDecoder: com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider bitmapProvider
cn.jzvd.R$id: int fullscreen
androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_1
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.upstream.DataSource mediaDataSource
androidx.appcompat.R$styleable: int SearchView_queryBackground
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: androidx.appcompat.widget.ActionMenuPresenter this$0
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.core.view.ViewPropertyAnimatorListenerAdapter mProxyListener
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo mAnchorInfo
androidx.core.R$id: int accessibility_custom_action_3
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean allowAudioMixedMimeTypeAdaptiveness
androidx.core.app.ActivityRecreator: java.lang.reflect.Field tokenField
androidx.exifinterface.media.ExifInterface: android.content.res.AssetManager$AssetInputStream mAssetInputStream
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int currentWidth
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: android.media.MediaPlayer mediaPlayer
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedDispatcher this$0
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader sampleReader
com.google.android.exoplayer2.source.SampleQueue: int length
androidx.exifinterface.media.ExifInterface: byte[] HEIF_BRAND_HEIC
com.bumptech.glide.request.SingleRequest: java.util.concurrent.Executor callbackExecutor
com.google.android.exoplayer2.upstream.FileDataSource: java.io.RandomAccessFile file
androidx.collection.LruCache: int evictionCount
androidx.appcompat.widget.ListPopupWindow: android.content.Context mContext
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.upstream.Loader loader
com.google.android.exoplayer2.extractor.ts.Ac3Reader: java.lang.String trackFormatId
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: byte[] projectionData
com.bumptech.glide.load.engine.SourceGenerator: com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback cb
com.google.android.exoplayer2.MediaPeriodHolder: boolean prepared
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int nalUnitLengthFieldLength
com.google.android.exoplayer2.audio.DefaultAudioSink: float volume
androidx.appcompat.content.res.AppCompatResources: java.util.WeakHashMap sColorStateCaches
androidx.appcompat.widget.ListPopupWindow: boolean mModal
androidx.appcompat.R$styleable: int MenuGroup_android_checkableBehavior
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: com.bumptech.glide.manager.RequestTracker requestTracker
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType GIF
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_VP8
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource MEMORY_CACHE
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean isFailed
com.bumptech.glide.request.BaseRequestOptions: boolean isLocked
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_BIT_RATE
com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver: com.google.android.exoplayer2.AudioBecomingNoisyManager this$0
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float primaryGChromaticityX
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: androidx.fragment.app.BackStackRecord mRecord
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist playlistSnapshot
com.google.android.exoplayer2.BasePlayer$ListenerHolder: com.google.android.exoplayer2.Player$EventListener listener
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.Runnable mRemoveActionBarHideOffset
androidx.vectordrawable.graphics.drawable.AndroidResources: int[] STYLEABLE_ANIMATED_VECTOR_DRAWABLE
androidx.activity.OnBackPressedCallback: java.util.concurrent.CopyOnWriteArrayList mCancellables
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_BACK_CENTER
androidx.viewpager.widget.ViewPager: java.util.ArrayList mDrawingOrderedChildren
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId: boolean isIcyTrack
androidx.core.provider.FontsContractCompat$FontInfo: int mTtcIndex
androidx.core.view.ViewPropertyAnimatorCompat$1: android.view.View val$view
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.CharSequence mName
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean exceedVideoConstraintsIfNecessary
androidx.recyclerview.widget.RecyclerView: java.util.List mScrollListeners
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.ExoPlayerImplInternal internalPlayer
com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder: java.io.ByteArrayOutputStream byteArrayOutputStream
androidx.viewpager.widget.ViewPager$ItemInfo: boolean scrolling
com.bumptech.glide.gifdecoder.GifHeader: int width
android.support.v4.os.ResultReceiver$MyResultReceiver: android.support.v4.os.ResultReceiver this$0
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: int currentSize
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache$Factory factory
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mHasButtonTint
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher eventDispatcher
androidx.appcompat.R$styleable: int AlertDialog_showTitle
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: java.util.List parsers
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: android.util.SparseArray trackBundles
com.google.android.exoplayer2.extractor.ogg.OggPacket: com.google.android.exoplayer2.util.ParsableByteArray packetArray
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: com.google.android.exoplayer2.trackselection.TrackSelectionParameters DEFAULT
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sThemedResourceCache_mUnthemedEntriesField
com.bumptech.glide.manager.RequestManagerRetriever: androidx.collection.ArrayMap tempViewToFragment
com.google.android.exoplayer2.text.ttml.TtmlDecoder$TtsExtent: int height
com.google.android.exoplayer2.decoder.SimpleDecoder: java.util.ArrayDeque queuedOutputBuffers
androidx.core.R$id: int accessibility_action_clickable_span
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportWidth
androidx.core.widget.AutoScrollHelper$ClampedScroller: int mDeltaX
cn.jzvd.Jzvd: boolean mChangeBrightness
com.bumptech.glide.load.engine.EngineResource: int acquired
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AVERAGE_BANDWIDTH
com.google.android.exoplayer2.decoder.Buffer: int flags
androidx.appcompat.R$dimen: int abc_dropdownitem_text_padding_left
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: byte sampleSignalByte
androidx.appcompat.widget.ListPopupWindow: android.view.View mPromptView
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int COLOR_SOLID_BLACK
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.DefaultDrmSession$ReleaseCallback releaseCallback
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry mNext
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader audioReader
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder loading
com.bumptech.glide.gifdecoder.GifHeader: int bgIndex
com.google.android.exoplayer2.extractor.ts.Ac4Reader: int state
com.google.android.exoplayer2.extractor.MpegAudioHeader: java.lang.String[] MIME_TYPE_BY_LAYER
com.google.android.exoplayer2.text.cea.Cea708Decoder: int selectedServiceNumber
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: boolean isEncrypted
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: long forcedFirstSampleTimestampUs
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder$CueStyle: int start
com.bumptech.glide.load.data.LocalUriFetcher: java.lang.Object data
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_METADATA_UPDATE
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget pendingTarget
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: android.os.HandlerThread choreographerOwnerThread
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: com.bumptech.glide.load.engine.Resource bitmapResource
androidx.appcompat.app.AlertController$AlertParams$1: androidx.appcompat.app.AlertController$AlertParams this$0
androidx.core.R$styleable: int GradientColor_android_endY
tv.danmaku.ijk.media.player.IjkMediaMeta: long mBitrate
com.bumptech.glide.load.ImageHeaderParserUtils$5: com.bumptech.glide.load.data.ParcelFileDescriptorRewinder val$parcelFileDescriptorRewinder
androidx.appcompat.R$drawable: int abc_textfield_search_material
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int sampleBytesWritten
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: com.google.android.exoplayer2.extractor.TrackOutput$CryptoData cryptoData
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean bottomFieldFlag
androidx.appcompat.R$styleable: int Toolbar_titleMargin
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState mCachedConstantStateDelegate
androidx.recyclerview.widget.RecyclerView$LayoutManager: int mPrefetchMaxCountObserved
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long[] sampleDecodingTimeTable
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.audio.SonicAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat outputAudioFormat
androidx.appcompat.app.AppCompatDelegateImpl: boolean mEnableDefaultActionBarUp
androidx.appcompat.app.WindowDecorActionBar: boolean mLastMenuVisibility
com.bumptech.glide.load.engine.EngineResource: boolean isRecyclable
com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder: com.google.android.exoplayer2.util.ParsableByteArray sectionData
androidx.core.R$id: int accessibility_custom_action_2
androidx.fragment.app.FragmentTransition$1: java.util.ArrayList val$exitingViews
com.bumptech.glide.load.model.Headers: com.bumptech.glide.load.model.Headers DEFAULT
android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.IMediaControllerCallback mIControllerCallback
com.bumptech.glide.load.engine.LockedResource: com.bumptech.glide.util.pool.StateVerifier stateVerifier
androidx.fragment.app.Fragment: boolean mRestored
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: boolean hasCalculatedAverageFrameSize
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean enableDecoderFallback
tv.danmaku.ijk.media.player.BuildConfig: int VERSION_CODE
androidx.appcompat.R$styleable: int Toolbar_subtitleTextAppearance
com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate: float effectiveFrameRate
androidx.appcompat.R$drawable: int abc_btn_check_material_anim
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.ref.WeakReference mNestedRecyclerView
androidx.collection.ArrayMap$1: androidx.collection.ArrayMap this$0
androidx.appcompat.widget.LinearLayoutCompat: int mShowDividers
androidx.recyclerview.widget.RecyclerView: int[] mReusableIntPair
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: boolean lastInIsPop
androidx.loader.app.LoaderManagerImpl: androidx.loader.app.LoaderManagerImpl$LoaderViewModel mLoaderViewModel
com.google.android.exoplayer2.audio.AudioTimestampPoller: long initializeSystemTimeUs
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.Renderer[] renderers
com.google.android.exoplayer2.util.LongArray: int size
com.bumptech.glide.load.engine.executor.GlideExecutor: int bestThreadCount
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.executor.GlideExecutor animationExecutor
androidx.appcompat.R$drawable: int abc_btn_radio_material_anim
com.google.android.exoplayer2.upstream.Loader$LoadTask: int defaultMinRetryCount
com.google.android.exoplayer2.extractor.SeekPoint: com.google.android.exoplayer2.extractor.SeekPoint START
com.google.android.exoplayer2.util.SystemHandlerWrapper: android.os.Handler handler
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener primaryPlaylistListener
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: android.media.AudioTrack audioTrack
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView mDropDownList
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: int prepareCallsCount
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.os.Handler handler
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdSpeed jzvdStdSpeed
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCache_mUnthemedEntriesFieldFetched
com.bumptech.glide.load.engine.DecodeJob: int width
com.bumptech.glide.disklrucache.DiskLruCache: int valueCount
com.google.android.exoplayer2.metadata.id3.ChapterFrame: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: int corePoolSize
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: com.google.android.exoplayer2.PlaybackParameters playbackParameters
com.bumptech.glide.request.target.ImageViewTarget: android.graphics.drawable.Animatable animatable
androidx.appcompat.R$id: int content
com.google.android.exoplayer2.upstream.DefaultAllocator: byte[] initialAllocationBlock
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray selectionOverrides
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean mValid
androidx.fragment.app.FragmentTransitionCompat21$2: java.util.ArrayList val$exitingViews
androidx.appcompat.widget.ThemeUtils: int[] CHECKED_STATE_SET
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Class sFontFamily
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.Format downstreamTrackFormat
androidx.core.widget.NestedScrollView: boolean mIsLayoutDirty
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.resource.bitmap.HardwareConfigState hardwareConfigState
androidx.appcompat.app.AppCompatDelegateImpl$6: androidx.appcompat.app.AppCompatDelegateImpl this$0
androidx.appcompat.R$styleable: int MenuItem_contentDescription
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState mVectorState
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Rendition: com.google.android.exoplayer2.Format format
androidx.appcompat.R$styleable: int ActionBar_background
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_3POINT1
androidx.core.widget.NestedScrollView: int mTouchSlop
androidx.fragment.app.Fragment: java.lang.String mTargetWho
com.google.android.exoplayer2.upstream.ParsingLoadable: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.danikula.videocache.ProxyCache: java.lang.Object wc
com.google.android.exoplayer2.drm.DefaultDrmSession: byte[] sessionId
com.google.android.exoplayer2.util.Util: byte[] EMPTY_BYTE_ARRAY
androidx.appcompat.widget.SearchView: android.view.View$OnKeyListener mTextKeyListener
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable seekTable
com.google.android.exoplayer2.source.CompositeMediaSource: java.util.HashMap childSources
androidx.core.view.OneShotPreDrawListener: android.view.ViewTreeObserver mViewTreeObserver
androidx.collection.SimpleArrayMap: java.lang.Object[] mTwiceBaseCache
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint mPaint
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.executor.GlideExecutor animationExecutor
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object key
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_FRONT_CENTER
com.bumptech.glide.load.model.FileLoader$FileFetcher: java.lang.Object data
com.google.android.exoplayer2.source.IcyDataSource: int metadataIntervalBytes
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: android.util.SparseArray ancillaryObjects
androidx.appcompat.R$styleable: int LinearLayoutCompat_android_gravity
androidx.core.R$id: int accessibility_custom_action_22
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
androidx.activity.ComponentActivity$NonConfigurationInstances: java.lang.Object custom
com.bumptech.glide.manager.DefaultConnectivityMonitor: android.content.Context context
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_444_INTRA
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_RETRY_COUNTER
androidx.recyclerview.widget.RecyclerView: boolean mFirstLayoutComplete
com.bumptech.glide.request.ThumbnailRequestCoordinator: com.bumptech.glide.request.RequestCoordinator$RequestState fullState
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_RIGHT
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate DEFAULT_FRAME_AND_TICK_RATE
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String CODEC_NAME_H264
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long[] DEFAULT_INITIAL_BITRATE_ESTIMATES_3G
com.google.android.exoplayer2.WakeLockManager: android.os.PowerManager$WakeLock wakeLock
androidx.recyclerview.widget.RecyclerView: int mDispatchScrollCounter
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: boolean isWithinConstraints
androidx.appcompat.view.menu.CascadingMenuPopup$1: androidx.appcompat.view.menu.CascadingMenuPopup this$0
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.JzvdStd jzvdStd_16_9
com.google.android.exoplayer2.text.Cue: android.text.Layout$Alignment textAlignment
cn.jzvd.R$id: int layout_bottom
com.google.android.exoplayer2.metadata.flac.VorbisComment: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ListPopupWindow: android.graphics.Rect mTempRect
androidx.appcompat.view.menu.ListMenuPresenter: android.view.LayoutInflater mInflater
com.google.android.exoplayer2.upstream.AssetDataSource: android.content.res.AssetManager assetManager
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback mChildDrawingOrderCallback
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: float playbackSpeed
androidx.appcompat.widget.ResourceManagerInternal: java.util.WeakHashMap mDrawableCaches
androidx.fragment.app.FragmentTransaction: boolean mAllowAddToBackStack
com.google.android.exoplayer2.extractor.ts.Ac4Reader: boolean hasCRC
com.google.android.exoplayer2.SimpleExoPlayer: int videoScalingMode
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap mStrokeLineCap
cn.jzvd.JZDataSource: java.util.HashMap headerMap
android.support.v4.media.session.PlaybackStateCompat: long mBufferedPosition
com.google.android.exoplayer2.source.hls.WebvttExtractor: java.util.regex.Pattern LOCAL_TIMESTAMP
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdShowTextureViewAfterAutoComplete jzvdStdShowTextureViewAfterAutoComplete
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl mExpandedItem
androidx.core.view.WindowInsetsCompat$BuilderImpl20: boolean sConsumedFieldFetched
com.google.android.exoplayer2.trackselection.BaseTrackSelection: long[] blacklistUntilTimes
com.google.android.exoplayer2.text.SubtitleDecoderFactory: com.google.android.exoplayer2.text.SubtitleDecoderFactory DEFAULT
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks mHooks
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint mTempPaint
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int EVENT_DID_HTTP_SEEK
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: java.lang.reflect.Method getLatencyMethod
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor: com.bumptech.glide.request.ResourceCallback cb
androidx.appcompat.widget.ToolbarWidgetWrapper$2: int val$visibility
androidx.appcompat.widget.SearchView$6: androidx.appcompat.widget.SearchView this$0
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: com.bumptech.glide.load.data.ParcelFileDescriptorRewinder dataRewinder
com.google.android.exoplayer2.util.Util: int[] CRC32_BYTES_MSBF
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean mEnded
com.google.android.exoplayer2.util.StandaloneMediaClock: com.google.android.exoplayer2.PlaybackParameters playbackParameters
com.google.android.exoplayer2.extractor.ts.LatmReader: long otherDataLenBits
com.bumptech.glide.load.data.ExifOrientationStream: byte[] EXIF_SEGMENT
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: java.lang.String value
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int state
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.ListPopupWindow$PopupScrollListener mScrollListener
androidx.core.graphics.PathParser$ExtractFloatResult: int mEndPosition
cn.jzvd.JZTextureView: int currentVideoWidth
androidx.appcompat.R$id: int action_bar_title
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: java.lang.String videoGroupId
com.google.android.exoplayer2.audio.AudioSink$WriteException: int errorCode
androidx.core.R$id: int accessibility_custom_action_23
androidx.core.provider.FontsContractCompat$2: android.os.Handler val$handler
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.analytics.AnalyticsCollector analyticsCollector
androidx.exifinterface.media.ExifInterface: java.util.HashSet sTagSetForCompatibility
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SCROLL_BACKWARD
androidx.viewpager.widget.ViewPager: int mCurItem
com.google.android.exoplayer2.ui.R$string: int exo_track_stereo
com.bumptech.glide.gifdecoder.StandardGifDecoder: java.lang.String TAG
com.bumptech.glide.GlideContext: com.bumptech.glide.Glide$RequestOptionsFactory defaultRequestOptionsFactory
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.lang.Runnable onTracksEndedRunnable
androidx.core.view.NestedScrollingChildHelper: android.view.View mView
androidx.fragment.app.FragmentActivity: androidx.collection.SparseArrayCompat mPendingFragmentActivityResults
androidx.appcompat.R$styleable: int CompoundButton_buttonCompat
androidx.core.R$styleable: int GradientColor_android_endX
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy AT_MOST
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] STYLE_COLORS
com.google.android.exoplayer2.AudioFocusManager: int audioFocusState
androidx.appcompat.view.menu.StandardMenuPopup: boolean mHasContentWidth
cn.jzvd.demo.FragmentDemo: android.widget.ListView listView
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int firstSampleSize
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long length
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int framesPerBlock
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int bitOffset
com.bumptech.glide.request.BaseRequestOptions: int placeholderId
androidx.appcompat.app.AlertController$AlertParams: boolean mIsMultiChoice
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: com.google.android.exoplayer2.audio.AudioRendererEventListener listener
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: int preferredRoleFlagsScore
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROPV_DECODER_VIDEOTOOLBOX
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: com.google.android.exoplayer2.util.ParsableByteArray parsableWebvttData
androidx.appcompat.R$styleable: int RecycleListView_paddingTopNoTitle
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: float fontSize
com.google.android.exoplayer2.source.chunk.Chunk: int type
com.google.android.exoplayer2.ui.SubtitleView: float bottomPaddingFraction
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State INITIALIZED
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int codecDrainState
com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition: int windowIndex
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long stopPlaybackHeadPosition
com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.upstream.DataSource encryptionDataSource
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean adaptive
com.google.android.exoplayer2.util.ColorParser: java.util.regex.Pattern RGBA_PATTERN_INT_ALPHA
com.bumptech.glide.load.resource.gif.GifDrawable: java.util.List animationCallbacks
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.bumptech.glide.GlideContext: com.bumptech.glide.GlideExperiments experiments
androidx.appcompat.R$drawable: int abc_spinner_mtrl_am_alpha
com.google.android.exoplayer2.PlayerMessage: int type
org.slf4j.LoggerFactory: int INITIALIZATION_STATE
com.google.android.exoplayer2.Format: int channelCount
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int gravity
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.audio.AudioProcessor[] audioProcessors
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long firstScrValue
com.google.android.exoplayer2.extractor.amr.AmrExtractor: long firstSamplePosition
com.bumptech.glide.load.ImageHeaderParserUtils$2: java.nio.ByteBuffer val$buffer
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: boolean isCancelled
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean mStayAwake
androidx.appcompat.view.SupportMenuInflater: java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE
androidx.appcompat.R$layout: int abc_popup_menu_header_item_layout
androidx.recyclerview.widget.LinearLayoutManager: boolean mRecycleChildrenOnDetach
com.google.android.exoplayer2.Format: int height
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_SECURE
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_SAR_DEN
com.bumptech.glide.request.BaseRequestOptions: boolean isScaleOnlyOrNoTransform
androidx.fragment.app.FragmentFactory: androidx.collection.SimpleArrayMap sClassMap
androidx.appcompat.app.AlertController$AlertParams: android.view.View mView
androidx.fragment.app.FragmentTransitionCompat21$2: android.view.View val$fragmentView
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.RequestCoordinator requestCoordinator
com.bumptech.glide.disklrucache.StrictLineReader: int end
com.google.android.exoplayer2.source.hls.HlsMediaChunk: int discontinuitySequenceNumber
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler vsyncSampler
com.bumptech.glide.GlideExperiments: java.util.Map experiments
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.Format EMSG_FORMAT
androidx.viewpager.widget.ViewPager: android.graphics.Rect mTempRect
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.TrackOutput trackOutput
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int primarySampleQueueIndex
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector PRE_API_29_HIDDEN_METHOD_INVOKER
androidx.core.widget.NestedScrollView: int mMinimumVelocity
com.google.android.exoplayer2.source.ProgressiveMediaSource: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadableLoadErrorHandlingPolicy
com.google.android.exoplayer2.MediaPeriodQueue: java.lang.Object oldFrontPeriodUid
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.lifecycle.Lifecycle mLifecycle
com.bumptech.glide.gifdecoder.GifHeader: int pixelAspect
androidx.appcompat.R$styleable: int ViewStubCompat_android_id
com.google.android.exoplayer2.extractor.ts.H262Reader: java.lang.String formatId
com.google.android.exoplayer2.upstream.DataSpec: long length
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: java.util.List mScrapList
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.trackselection.TrackSelector trackSelector
com.bumptech.glide.load.engine.ResourceCacheGenerator: java.util.List modelLoaders
com.google.android.exoplayer2.audio.SonicAudioProcessor: long inputBytes
tv.danmaku.ijk.media.player.IjkTimedText: java.lang.String mTextChars
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: byte[] inputData
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: int timelineChangeReason
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.Options options
androidx.appcompat.view.menu.MenuBuilder: boolean mIsActionItemsStale
com.google.android.exoplayer2.extractor.ts.PesReader: boolean dtsFlag
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableEndTint
cn.jzvd.demo.ActivityApiCustomMedia: cn.jzvd.JzvdStd jzvdStd
com.google.android.exoplayer2.ui.SubtitleView: boolean applyEmbeddedStyles
com.google.android.exoplayer2.util.SlidingPercentile: java.util.ArrayList samples
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: androidx.appcompat.view.menu.MenuItemWrapperICS this$0
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AuxEffectInfo auxEffectInfo
com.google.android.exoplayer2.util.StandaloneMediaClock: long baseUs
com.google.android.exoplayer2.util.EGLSurfaceTexture: int[] textureIdHolder
com.google.android.exoplayer2.metadata.id3.InternalFrame: java.lang.String text
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: long[] sortedCueTimesUs
com.bumptech.glide.disklrucache.Util: java.nio.charset.Charset US_ASCII
com.google.android.exoplayer2.source.TrackGroupArray: com.google.android.exoplayer2.source.TrackGroup[] trackGroups
com.google.android.exoplayer2.ui.R$string: int exo_track_bitrate
androidx.appcompat.R$drawable: int abc_seekbar_thumb_material
com.google.android.exoplayer2.video.ColorInfo: int hashCode
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.RequestManagerTreeNode requestManagerTreeNode
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback mCallback
com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.ActiveResources$DequeuedResourceCallback cb
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy: tv.danmaku.ijk.media.player.misc.IMediaDataSource mMediaDataSource
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.lang.Runnable maybeFinishPrepareRunnable
com.bumptech.glide.Priority: com.bumptech.glide.Priority LOW
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory DEFAULT_FACTORY
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_7POINT1
androidx.appcompat.widget.SuggestionsAdapter: androidx.appcompat.widget.SearchView mSearchView
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int planeWidth
androidx.appcompat.R$styleable: int SearchView_closeIcon
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long clusterTimecodeUs
tv.danmaku.ijk.media.player.IjkMediaPlayer: int mVideoWidth
androidx.appcompat.R$styleable: int Toolbar_subtitle
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_CACHE_STATISTIC_PHYSICAL_POS
com.google.android.exoplayer2.IllegalSeekPositionException: int windowIndex
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.animation.ArgbEvaluator mArgbEvaluator
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long smoothedPlayheadOffsetUs
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleX
com.bumptech.glide.request.ThumbnailRequestCoordinator: com.bumptech.glide.request.Request full
com.google.android.exoplayer2.upstream.Loader$LoadTask: boolean released
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Matrix mTmpMatrix
com.google.android.exoplayer2.metadata.emsg.EventMessage: int hashCode
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo mTempItem
com.google.android.exoplayer2.metadata.id3.ChapterFrame: long startOffset
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.ArrayList hlsSampleStreams
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: android.os.Handler mainHandler
com.bumptech.glide.load.engine.ResourceCacheGenerator: com.bumptech.glide.load.Key sourceKey
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource dataSchemeDataSource
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel mNonConfig
androidx.appcompat.view.menu.MenuPopupHelper: boolean mForceShowIcon
com.google.android.exoplayer2.extractor.ts.SectionReader: boolean sectionSyntaxIndicator
com.bumptech.glide.load.data.HttpUrlFetcher: com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory connectionFactory
androidx.viewpager.widget.ViewPager: android.view.VelocityTracker mVelocityTracker
com.google.android.exoplayer2.util.Log: int logLevel
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: long[] pendingStreamChangeTimesUs
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mGroupDivider
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.JzvdStd jzvdStd_1_1
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mIndex
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: boolean mReverseLayout
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory mFragmentFactory
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: int readTimeoutMillis
com.bumptech.glide.request.SingleRequest: android.content.Context context
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int maxBlockAdditionId
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery: android.content.ContentResolver contentResolver
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: long currentSize
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long bytesToSkip
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: java.util.UUID uuid
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuPresenter$Callback mPresenterCallback
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long ceilingTimePosition
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.AudioFocusManager: android.media.AudioManager audioManager
com.google.android.exoplayer2.ExoPlayerImplInternal: android.os.HandlerThread internalPlaybackThread
com.google.android.exoplayer2.text.CaptionStyleCompat: int backgroundColor
androidx.appcompat.R$drawable: int abc_btn_default_mtrl_shape
com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition: int version
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: int hashCode
com.google.android.exoplayer2.upstream.DefaultDataSource: java.util.List transferListeners
com.google.android.exoplayer2.extractor.ts.Id3Reader: long sampleTimeUs
org.slf4j.helpers.SubstituteLoggerFactory: java.util.Map loggers
androidx.fragment.app.BackStackState: java.util.ArrayList mSharedElementSourceNames
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate mAccessibilityDelegate
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int colorTransfer
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.trackselection.TrackSelector trackSelector
com.bumptech.glide.util.LogTime: double MILLIS_MULTIPLIER
androidx.appcompat.R$styleable: int MenuItem_android_numericShortcut
androidx.fragment.app.BackStackState: java.util.ArrayList mFragmentWhos
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.source.MediaSource mediaSource
cn.jzvd.Jzvd: cn.jzvd.JZDataSource jzDataSource
com.google.android.exoplayer2.audio.SonicAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat inputAudioFormat
androidx.fragment.app.FragmentManagerImpl: int mNextFragmentIndex
com.bumptech.glide.load.model.ResourceLoader: android.content.res.Resources resources
androidx.recyclerview.widget.GapWorker: java.lang.ThreadLocal sGapWorker
androidx.appcompat.view.menu.ListMenuItemView: android.widget.LinearLayout mContent
com.bumptech.glide.gifdecoder.StandardGifDecoder: boolean savePrevious
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int[] mData
cn.jzvd.JZDataSource: boolean looping
com.google.android.exoplayer2.metadata.id3.InternalFrame: java.lang.String domain
androidx.appcompat.app.AlertController: int mViewSpacingRight
com.bumptech.glide.load.engine.DecodeJob: java.lang.Thread currentThread
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.upstream.ParsingLoadable mediaPlaylistLoadable
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.widget.ActionMenuPresenter val$this$0
com.bumptech.glide.Glide: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mLastDrawable
com.bumptech.glide.disklrucache.DiskLruCache: java.io.File directory
com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder: com.google.android.exoplayer2.extractor.TrackOutput$CryptoData cryptoData
com.bumptech.glide.load.data.BufferedOutputStream: java.io.OutputStream out
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_LAST_CHANCE
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean enablePreV21AudioSessionWorkaround
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$BuilderImpl mImpl
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: int[] mColors
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.metadata.Metadata metadata
com.bumptech.glide.load.engine.DecodeHelper: int height
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet videoDebugListeners
cn.jzvd.demo.AdapterListView: java.lang.String[] videoUrls
androidx.appcompat.widget.AppCompatSpinner: int[] ATTRS_ANDROID_SPINNERMODE
cn.jzvd.Jzvd: int mGestureDownVolume
com.google.android.exoplayer2.extractor.BinarySearchSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams seekOperationParams
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState: com.google.android.exoplayer2.source.TrackGroupArray tracks
com.google.android.exoplayer2.extractor.ts.PesReader: com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader reader
androidx.appcompat.widget.ActionBarContainer: android.view.View mTabContainer
com.google.android.exoplayer2.metadata.flac.PictureFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.source.hls.HlsSampleStream: int trackGroupIndex
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.source.hls.HlsSampleStream: int sampleQueueIndex
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: boolean hasParsedAudioDataHeader
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatCallback mAppCompatCallback
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int foregroundColorStartPosition
androidx.appcompat.view.menu.ActionMenuItemView: boolean mExpandedFormat
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mTintMode
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long rawPlaybackHeadWrapCount
com.bumptech.glide.GlideBuilder$1: com.bumptech.glide.GlideBuilder this$0
androidx.appcompat.R$string: int abc_menu_delete_shortcut_label
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: java.lang.String licenseServerUrl
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: java.util.List parsers
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder$CueStyle: boolean underline
com.bumptech.glide.gifdecoder.GifHeader: int frameCount
androidx.appcompat.R$dimen: int abc_action_bar_stacked_tab_max_width
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int pendingInputBytes
com.google.android.exoplayer2.text.ttml.TtmlDecoder$TtsExtent: int width
androidx.appcompat.widget.SearchView$1: androidx.appcompat.widget.SearchView this$0
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean blockHasReferenceBlock
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.content.Context mContext
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: int[] sizes
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mTbrDen
com.google.android.exoplayer2.audio.SonicAudioProcessor: boolean inputEnded
com.google.android.exoplayer2.text.cea.Cea608Decoder: byte repeatableControlCc1
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue mMinWidthMinor
androidx.appcompat.R$styleable: int AppCompatTheme_windowActionBarOverlay
com.google.android.exoplayer2.text.subrip.SubripSubtitle: com.google.android.exoplayer2.text.Cue[] cues
com.bumptech.glide.disklrucache.DiskLruCache: java.io.File journalFileBackup
com.google.android.exoplayer2.util.TimestampAdjuster: long firstSampleTimestampUs
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: java.util.ArrayDeque masterElementsStack
androidx.lifecycle.LifecycleRegistry$ObserverWithState: androidx.lifecycle.Lifecycle$State mState
androidx.fragment.app.FragmentTransaction: int mExitAnim
com.google.android.exoplayer2.extractor.ts.Ac4Reader: long timeUs
com.bumptech.glide.load.model.ModelLoader$LoadData: com.bumptech.glide.load.data.DataFetcher fetcher
com.google.android.exoplayer2.FormatHolder: com.google.android.exoplayer2.Format format
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.widget.ListAdapter mListAdapter
androidx.activity.ComponentActivity$3: androidx.activity.ComponentActivity this$0
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: byte[] data
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy val$strategy
com.google.android.exoplayer2.trackselection.FixedTrackSelection: java.lang.Object data
androidx.viewpager.widget.ViewPager: boolean mCalledSuper
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long durationUs
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: com.google.android.exoplayer2.util.FlacStreamMetadata flacStreamMetadata
androidx.appcompat.R$layout: int abc_list_menu_item_radio
androidx.collection.MapCollections$MapIterator: int mIndex
com.google.android.exoplayer2.source.ClippingMediaPeriod: com.google.android.exoplayer2.source.MediaPeriod mediaPeriod
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.SequenceableLoader compositeSequenceableLoader
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: android.util.SparseArray trackIdToReaderScratch
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_TINT_COLOR_CONTROL_NORMAL
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.util.ParsableBitArray scratchBits
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray nalStartCode
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int maybeSilenceBufferSize
androidx.exifinterface.media.ExifInterface: int mOrfThumbnailOffset
androidx.appcompat.R$drawable: int abc_switch_track_mtrl_alpha
android.support.v4.media.session.PlaybackStateCompat: android.os.Bundle mExtras
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray encryptionSubsampleData
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class mFontFamily
com.google.android.exoplayer2.upstream.DataSpec: android.net.Uri uri
com.google.android.exoplayer2.extractor.mp4.Track: long timescale
cn.jzvd.demo.ActivityPreloading: cn.jzvd.JzvdStd jzvdStd
androidx.core.graphics.drawable.DrawableCompat: java.lang.reflect.Method sSetLayoutDirectionMethod
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean secure
com.google.android.exoplayer2.WakeLockManager: boolean stayAwake
com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder: com.google.android.exoplayer2.util.ParsableBitArray sectionHeader
androidx.lifecycle.Lifecycling: java.util.Map sCallbackCache
com.google.android.exoplayer2.text.ttml.TtmlRegion: java.lang.String id
androidx.appcompat.view.menu.ActionMenuItem: int mGroup
com.google.android.exoplayer2.extractor.ts.Ac4Reader: int sampleSize
com.google.android.exoplayer2.metadata.MetadataRenderer: com.google.android.exoplayer2.metadata.Metadata[] pendingMetadata
com.google.android.exoplayer2.ExoPlayerLibraryInfo: java.lang.String registeredModulesString
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: int bitmapX
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float projectionPoseRoll
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: java.util.List leafChildren
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder: android.net.Uri playlistUrl
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: boolean startedPacket
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray nalStartCode
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int displayWidth
cn.jzvd.R$id: int replay_text
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_IO
androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean mAnchorLayoutFromEnd
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long payloadEndPosition
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: long ptsTime
androidx.fragment.app.Fragment: boolean mAdded
cn.jzvd.R$id: int current
androidx.appcompat.R$drawable: int abc_cab_background_top_mtrl_alpha
androidx.appcompat.widget.SearchView: android.text.TextWatcher mTextWatcher
androidx.fragment.app.Fragment$4: androidx.fragment.app.Fragment this$0
androidx.appcompat.R$string: int abc_menu_function_shortcut_label
com.google.android.exoplayer2.source.hls.HlsMediaChunk: android.net.Uri playlistUrl
androidx.core.view.ViewCompat$AccessibilityViewProperty: int mTagKey
com.bumptech.glide.load.resource.bitmap.TransformationUtils: java.util.concurrent.locks.Lock BITMAP_DRAWABLE_LOCK
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int penStyleId
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.decoder.DecoderInputBuffer flagsOnlyBuffer
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder: android.content.res.Resources resources
androidx.recyclerview.widget.RecyclerView: int mTouchSlop
androidx.core.provider.FontRequest: int mCertificatesArray
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState: com.google.android.exoplayer2.extractor.SeekMap seekMap
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: int sampleCount
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long targetGranule
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineChildTop
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int CTRL_WILL_CONCAT_RESOLVE_SEGMENT
androidx.savedstate.SavedStateRegistry: android.os.Bundle mRestoredState
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean exceedVideoConstraintsIfNecessary
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.util.HandlerWrapper handler
com.bumptech.glide.load.data.mediastore.ThumbFetcher: android.net.Uri mediaStoreImageUri
com.bumptech.glide.load.engine.executor.GlideExecutor: long KEEP_ALIVE_TIME_MS
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.graphics.Rect mActualBounds
androidx.lifecycle.LiveData: java.lang.Object mDataLock
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_PREVIOUS_HTML_ELEMENT
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: boolean isUnsynchronized
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.RtlSpacingHelper mContentInsets
com.bumptech.glide.load.model.LazyHeaders: java.util.Map combinedHeaders
com.bumptech.glide.manager.ActivityFragmentLifecycle: java.util.Set lifecycleListeners
androidx.appcompat.widget.ViewUtils: java.lang.reflect.Method sComputeFitSystemWindowsMethod
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler playlistRefreshHandler
androidx.appcompat.view.SupportMenuInflater: android.content.Context mContext
com.bumptech.glide.load.engine.EngineJob: boolean useUnlimitedSourceGeneratorPool
androidx.appcompat.R$styleable: int ActionBar_popupTheme
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper mScrollingChildHelper
androidx.core.os.TraceCompat: java.lang.reflect.Method sAsyncTraceBeginMethod
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean haveAudioVideoTracks
com.google.android.exoplayer2.decoder.CryptoInfo: int[] numBytesOfEncryptedData
com.danikula.videocache.Pinger: org.slf4j.Logger LOG
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_ACCESSIBILITY_FOCUS
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.Track sideloadedTrack
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: int sampleBytesWritten
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnScrollListener mScrollListener
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int mNumChildren
com.bumptech.glide.provider.ImageHeaderParserRegistry: java.util.List parsers
com.bumptech.glide.provider.LoadPathCache: androidx.collection.ArrayMap cache
com.google.android.exoplayer2.ExoPlaybackException: long timestampMs
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: com.bumptech.glide.load.data.mediastore.ThumbnailQuery query
androidx.appcompat.view.menu.StandardMenuPopup: androidx.appcompat.view.menu.MenuAdapter mAdapter
androidx.appcompat.widget.ForwardingListener: android.view.View mSrc
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.Format EMSG_FORMAT
androidx.appcompat.widget.SearchView: androidx.appcompat.widget.SearchView$OnQueryTextListener mOnQueryChangeListener
androidx.appcompat.widget.TooltipCompatHandler: java.lang.Runnable mHideRunnable
androidx.recyclerview.widget.GapWorker$Task: boolean immediate
androidx.appcompat.widget.SuggestionsAdapter: int mCommitIconResId
androidx.appcompat.R$id: int decor_content_parent
androidx.appcompat.R$attr: int actionBarTabStyle
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean isReleased
com.bumptech.glide.load.data.LocalUriFetcher: android.content.ContentResolver contentResolver
tv.danmaku.ijk.media.player.misc.ITrackInfo: int MEDIA_TRACK_TYPE_SUBTITLE
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.TextPaint mTempTextPaint
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean mTitleSet
org.slf4j.helpers.SubstituteLogger: java.lang.Boolean delegateEventAware
androidx.appcompat.widget.ListPopupWindow: boolean mForceIgnoreOutsideTouch
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: android.os.Parcelable$Creator CREATOR
androidx.appcompat.app.AppCompatDelegateImpl: boolean mWindowNoTitle
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistStuckException: android.net.Uri url
androidx.appcompat.view.SupportMenuInflater: java.lang.Object[] mActionProviderConstructorArguments
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.util.EventDispatcher eventDispatcher
androidx.appcompat.app.AlertController: android.os.Handler mHandler
cn.jzvd.JzvdStd: android.widget.PopupWindow clarityPopWindow
androidx.recyclerview.widget.LayoutState: boolean mRecycle
com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder: com.google.android.exoplayer2.util.ParsableByteArray sampleData
androidx.core.view.ViewPropertyAnimatorCompat: java.lang.Runnable mEndAction
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: boolean canApplyPlaybackParameters
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: com.google.android.exoplayer2.util.ParsableByteArray stsc
com.google.android.exoplayer2.metadata.icy.IcyDecoder: java.util.regex.Pattern METADATA_ELEMENT
androidx.exifinterface.media.ExifInterface: int mMimeType
com.google.android.exoplayer2.extractor.MpegAudioHeader: int[] BITRATE_V2
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int sliceType
com.google.android.exoplayer2.source.ads.AdPlaybackState: long[] adGroupTimesUs
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status PENDING
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl PLATFORM_IMPL
com.danikula.videocache.ProxyCache: com.danikula.videocache.Cache cache
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData: com.google.android.exoplayer2.Format format
androidx.appcompat.view.menu.StandardMenuPopup: boolean mShowTitle
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState RUNNING
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean mInsetsDirty
com.google.android.exoplayer2.metadata.id3.CommentFrame: android.os.Parcelable$Creator CREATOR
androidx.core.app.ActivityRecreator$2: androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks val$callbacks
com.google.android.exoplayer2.extractor.ChunkIndex: long[] timesUs
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean defined
com.bumptech.glide.gifdecoder.StandardGifDecoder: int downsampledWidth
com.google.android.exoplayer2.drm.DefaultDrmSession: int referenceCount
com.google.android.exoplayer2.util.Util: int[] CRC8_BYTES_MSBF
androidx.appcompat.app.AlertController$AlertParams$4: androidx.appcompat.app.AlertController val$dialog
com.google.android.exoplayer2.extractor.amr.AmrExtractor: com.google.android.exoplayer2.extractor.SeekMap seekMap
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: java.lang.String voice
com.google.android.exoplayer2.extractor.ts.PsDurationReader: boolean isLastScrValueRead
com.google.android.exoplayer2.extractor.mp4.Track: long durationUs
com.google.android.exoplayer2.extractor.ts.AdtsReader: int firstFrameVersion
com.bumptech.glide.util.pool.FactoryPools: com.bumptech.glide.util.pool.FactoryPools$Resetter EMPTY_RESETTER
androidx.collection.ArraySet: int[] INT
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_NETWORK_BANDWIDTH
androidx.appcompat.view.menu.MenuBuilder: boolean mIsClosing
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long inputLength
androidx.appcompat.view.menu.MenuBuilder: boolean mPreventDispatchingItemsChanged
androidx.versionedparcelable.VersionedParcel: androidx.collection.ArrayMap mReadCache
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.decoder.DecoderCounters audioDecoderCounters
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: com.google.android.exoplayer2.extractor.mkv.EbmlProcessor processor
com.bumptech.glide.load.model.AssetUriLoader: com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory factory
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int x
androidx.recyclerview.widget.RecyclerView: boolean mDispatchItemsChangedEvent
androidx.appcompat.app.ResourcesFlusher: boolean sThemedResourceCacheClazzFetched
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int outputIndex
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: float line
androidx.appcompat.app.AppCompatDelegate: java.lang.Object sActivityDelegatesLock
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap: com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker this$0
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence mTitleCondensed
com.google.android.exoplayer2.ExoPlayerImplInternal: int pendingPrepareCount
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_PREPARED
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: int revision
androidx.recyclerview.widget.GapWorker$Task: int distanceToItem
com.bumptech.glide.load.Option: java.lang.String key
com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition: int[] clutEntries8Bit
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_FRONT_RIGHT
androidx.appcompat.R$styleable: int AppCompatTheme_viewInflaterClass
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_6POINT1
com.bumptech.glide.load.model.LazyHeaders$Builder: boolean isUserAgentDefault
androidx.recyclerview.widget.RecyclerView: boolean ALLOW_SIZE_IN_UNSPECIFIED_SPEC
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean relativePositioning
androidx.viewpager.widget.ViewPager: java.util.ArrayList mItems
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
com.google.android.exoplayer2.extractor.ts.PsExtractor: com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker psBinarySearchSeeker
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager sInstance
androidx.viewpager.widget.ViewPager: java.lang.Runnable mEndScrollRunnable
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.util.SparseArray mDrawableFutures
androidx.appcompat.R$attr: int searchViewStyle
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: long[] referencePositions
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence mTitle
androidx.appcompat.R$attr: int radioButtonStyle
androidx.appcompat.R$color: int abc_tint_edittext
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.load.engine.SourceGenerator$1: com.bumptech.glide.load.model.ModelLoader$LoadData val$toStart
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int length
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: java.util.WeakHashMap mPanesToVisible
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: android.view.View mDelegateView
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: boolean allowAudioMixedSampleRateAdaptiveness
com.bumptech.glide.manager.RequestTracker: java.util.List pendingRequests
androidx.collection.SparseArrayCompat: java.lang.Object[] mValues
androidx.appcompat.R$styleable: int MenuItem_iconTint
com.bumptech.glide.GlideExperiments$Builder: java.util.Map experiments
com.bumptech.glide.GlideBuilder: java.util.List defaultRequestListeners
com.bumptech.glide.provider.LoadPathCache: com.bumptech.glide.load.engine.LoadPath NO_PATHS_SIGNAL
androidx.core.widget.NestedScrollView: int mLastScrollerY
com.google.android.exoplayer2.upstream.DataSourceInputStream: long totalBytesRead
com.google.android.exoplayer2.ExoPlayerImpl: android.os.Handler internalPlayerHandler
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence mTitle
androidx.appcompat.app.AlertController: int mViewSpacingLeft
androidx.appcompat.app.AppCompatDelegateImpl$4: androidx.appcompat.app.AppCompatDelegateImpl this$0
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.List readOnlyMediaChunks
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_FILE_SIZE
androidx.appcompat.view.menu.ActionMenuItem: int mFlags
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupVisible
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int mVirtualDescendantId
com.google.android.exoplayer2.metadata.id3.ChapterFrame: java.lang.String chapterId
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor sInstance
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Paint CIRCLE_CROP_SHAPE_PAINT
tv.danmaku.ijk.media.player.pragma.DebugLog: boolean ENABLE_VERBOSE
androidx.fragment.app.Fragment$2: androidx.fragment.app.Fragment this$0
androidx.core.widget.AutoScrollHelper: boolean mAnimating
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List videos
androidx.appcompat.widget.ForwardingListener: int mActivePointerId
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mForceShowIcon
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat mAvd
com.google.android.exoplayer2.DefaultRenderersFactory: com.google.android.exoplayer2.mediacodec.MediaCodecSelector mediaCodecSelector
android.support.v4.media.MediaDescriptionCompat$Builder: java.lang.CharSequence mTitle
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.upstream.StatsDataSource dataSource
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException preferredDecoderInitializationException
androidx.appcompat.widget.ListPopupWindow: int mDropDownWidth
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int CTRL_WILL_HTTP_OPEN
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: java.lang.String formatId
com.google.android.exoplayer2.audio.AudioAttributes: com.google.android.exoplayer2.audio.AudioAttributes DEFAULT
com.google.android.exoplayer2.extractor.mp4.TrackFragment: int[] sampleCompositionTimeOffsetTable
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: int COLORSPACE_BT2020
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModelProvider$Factory mFactory
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionProviderClassName
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: android.animation.ObjectAnimator mAnim
androidx.appcompat.view.menu.ActionMenuItem: int mShortcutAlphabeticModifiers
androidx.fragment.app.FragmentTransition$4: java.lang.Object val$enterTransition
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: int channelCount
com.bumptech.glide.disklrucache.DiskLruCache: long size
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseInnerInsetsRect
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: long sampledVsyncTimeNs
com.bumptech.glide.request.SingleRequest: java.lang.Class transcodeClass
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.audio.AudioAttributes audioAttributes
com.google.android.exoplayer2.text.cea.CeaDecoder: java.util.PriorityQueue queuedInputBuffers
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState mLayoutState
androidx.appcompat.widget.LinearLayoutCompat: int mOrientation
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper[] enabledSampleStreamWrappers
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.upstream.TransferListener mediaTransferListener
com.google.android.exoplayer2.trackselection.TrackSelectorResult: java.lang.Object info
com.google.android.exoplayer2.extractor.ts.H264Reader: boolean hasOutputFormat
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long minDurationForQualityIncreaseUs
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean allowChunklessPreparation
androidx.core.provider.SelfDestructiveThread$3: java.util.concurrent.atomic.AtomicReference val$holder
com.google.android.exoplayer2.extractor.MpegAudioHeader: int[] BITRATE_V1_L2
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean initSegmentEncrypted
com.google.android.exoplayer2.text.webvtt.WebvttCue: long endTime
com.google.android.exoplayer2.text.ttml.TtmlNode: java.util.HashMap nodeStartsByRegion
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: boolean processingEnabled
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: android.graphics.Path mPath
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: com.google.android.exoplayer2.drm.DrmInitData drmInitData
cn.jzvd.Jzvd: int heightRatio
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean isOpen
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_TOP_BACK_LEFT
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList mIconTintList
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.extractor.PositionHolder positionHolder
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_LATEST_SEEK_LOAD_DURATION
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources mResources
androidx.lifecycle.LiveData$ObserverWrapper: androidx.lifecycle.Observer mObserver
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int backgroundColorStartPosition
androidx.viewpager.widget.ViewPager: boolean mIsScrollStarted
androidx.appcompat.widget.SearchView: java.lang.CharSequence mUserQuery
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: int lineAnchor
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: int sampleRate
com.google.android.exoplayer2.util.Util: java.util.HashMap languageTagReplacementMap
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: byte[] sampleStrippedBytes
com.google.android.exoplayer2.text.ttml.TtmlStyle: boolean hasFontColor
androidx.appcompat.view.StandaloneActionMode: androidx.appcompat.view.menu.MenuBuilder mMenu
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.Format[] streamFormats
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int row
com.google.android.exoplayer2.text.ssa.SsaDecoder: boolean haveInitializationData
android.support.v4.media.session.ParcelableVolumeInfo: int audioStream
com.google.android.exoplayer2.extractor.ChunkIndex: long[] offsets
androidx.appcompat.widget.AbsActionBarView: boolean mEatingHover
androidx.appcompat.widget.ListPopupWindow: int mPromptPosition
com.google.android.exoplayer2.metadata.id3.CommentFrame: java.lang.String text
androidx.fragment.app.FragmentTransition$2: java.lang.Object val$exitTransition
androidx.appcompat.widget.Toolbar: int mTitleMarginTop
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long pendingResetPositionUs
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: int state
com.google.android.exoplayer2.extractor.ts.H265Reader: boolean[] prefixFlags
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.widget.ForwardingListener mForwardingListener
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.graphics.Rect mTmpRect
androidx.appcompat.view.menu.MenuBuilder: int mDefaultShowAsAction
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnKeyListener mOnKeyListener
androidx.viewpager.widget.ViewPager: boolean mFirstLayout
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadTask currentTask
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: com.google.android.exoplayer2.trackselection.TrackSelectionParameters DEFAULT_WITHOUT_CONTEXT
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_SURROUND_DIRECT_RIGHT
com.google.android.exoplayer2.MediaPeriodInfo: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId id
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.util.UUID uuid
com.bumptech.glide.load.engine.SourceGenerator: com.bumptech.glide.load.engine.DecodeHelper helper
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: android.view.Surface surface
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup mRootGroup
androidx.appcompat.app.AlertController$AlertParams: int mIconId
com.google.android.exoplayer2.ui.SubtitleView: int textSizeType
androidx.appcompat.widget.SuggestionsAdapter: android.content.res.ColorStateList mUrlColor
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.ResourceRecycler resourceRecycler
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SET_TEXT
androidx.core.widget.NestedScrollView: android.graphics.Rect mTempRect
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.Renderer[] renderers
com.google.android.exoplayer2.audio.Sonic: int prevPeriod
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long dataPosition
tv.danmaku.ijk.media.player.pragma.DebugLog: boolean ENABLE_INFO
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory: android.content.ContentResolver contentResolver
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long totalGranules
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: byte[] defaultInitializationVector
androidx.appcompat.view.menu.ListMenuPresenter: int mItemLayoutRes
androidx.appcompat.R$color: int abc_tint_seek_thumb
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: android.widget.ListAdapter mAdapter
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.drm.DrmInitData drmInitData
androidx.recyclerview.widget.LinearLayoutManager: boolean mReverseLayout
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_FRONT_LEFT_OF_CENTER
com.google.android.exoplayer2.ui.TrackSelectionView: android.widget.CheckedTextView[][] trackViews
androidx.appcompat.R$id: int search_edit_frame
androidx.appcompat.widget.AppCompatBackgroundHelper: int mBackgroundResId
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long bytesSkipped
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCnt1
tv.danmaku.ijk.media.player.BuildConfig: java.lang.String FLAVOR
android.support.v4.media.MediaBrowserCompat$ItemReceiver: android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback
com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider: android.util.SparseArray timestampAdjusters
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState preparedState
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.IjkMediaPlayer$OnControlMessageListener mOnControlMessageListener
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: boolean exposeCea608WhenMissingDeclarations
androidx.appcompat.widget.SuggestionsAdapter: int mText1Col
com.google.android.exoplayer2.video.ColorInfo: int colorRange
com.google.android.exoplayer2.source.CompositeMediaSource$MediaSourceAndListener: com.google.android.exoplayer2.source.MediaSource mediaSource
cn.jzvd.R$id: int start
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: boolean mAnimEndCalled
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: int channelCount
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason SWITCH_TO_SOURCE_SERVICE
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: int type
androidx.core.graphics.Insets: int right
com.google.android.exoplayer2.source.SampleQueue: int[] sourceIds
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] $VALUES
com.google.android.exoplayer2.ExoPlayerImpl: java.util.concurrent.CopyOnWriteArrayList listeners
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_SELECT
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.audio.DefaultAudioSink$1: android.media.AudioTrack val$toRelease
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int pendingStreamChangeCount
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId[] sampleQueueTrackIds
com.google.android.exoplayer2.extractor.ts.H265Reader: boolean hasOutputFormat
androidx.fragment.app.FragmentActivity: boolean mStopped
com.google.android.exoplayer2.extractor.mp4.Track: int type
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean notifyDiscontinuity
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean mEnabled
androidx.recyclerview.widget.LinearLayoutManager: int mPendingScrollPosition
com.google.android.exoplayer2.audio.DefaultAudioSink: java.nio.ByteBuffer[] outputBuffers
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Paint paint
androidx.appcompat.R$drawable: int abc_btn_colored_material
androidx.fragment.app.FragmentPagerAdapter: androidx.fragment.app.Fragment mCurrentPrimaryItem
com.google.android.exoplayer2.SimpleExoPlayer: android.os.Handler eventHandler
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int italicsStartPosition
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long passthroughWorkaroundPauseOffset
com.google.android.exoplayer2.source.SampleQueue: int readPosition
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestTask: long startTimeMs
com.bumptech.glide.request.SingleRequest: java.lang.String tag
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool NO_RECYCLE_BITMAP_POOL
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: java.lang.String name
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: int id
androidx.lifecycle.MethodCallsLogger: java.util.Map mCalledMethods
androidx.recyclerview.widget.OrientationHelper: android.graphics.Rect mTmpRect
com.google.android.exoplayer2.extractor.flac.FlacExtractor: int state
tv.danmaku.ijk.media.player.AbstractMediaPlayer: tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener mOnBufferingUpdateListener
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: int CTRL_DID_TCP_OPEN
com.google.android.exoplayer2.Format: int pcmEncoding
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_10
androidx.core.R$id: int tag_screen_reader_focusable
android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder mRemote
com.google.android.exoplayer2.upstream.Loader$LoadTask: com.google.android.exoplayer2.upstream.Loader this$0
androidx.appcompat.widget.RtlSpacingHelper: int mEnd
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean renderedFirstFrame
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mAvailBackStackIndices
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isHardwareConfigAllowedByDeviceModel
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: com.bumptech.glide.RequestManager this$0
com.google.android.exoplayer2.ui.TrackSelectionView: android.widget.CheckedTextView defaultView
androidx.appcompat.widget.SearchView: boolean mClearingFocus
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher eventDispatcher
com.google.android.exoplayer2.extractor.wav.WavExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder[] cueBuilders
tv.danmaku.ijk.media.player.MediaPlayerProxy$5: tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener val$finalListener
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.util.List values
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long pendingAdjustedFrameTimeNs
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean tunneling
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery: java.lang.String[] PATH_PROJECTION
com.google.android.exoplayer2.text.Cue: java.lang.CharSequence text
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: com.google.android.exoplayer2.upstream.DataSpec dataSpec
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int maxVideoBitrate
com.google.android.exoplayer2.extractor.mp4.Track: int sampleTransformation
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.ViewInfoStore mViewInfoStore
com.google.android.exoplayer2.extractor.flv.FlvExtractor: int tagType
com.bumptech.glide.RequestBuilder$1: int[] $SwitchMap$com$bumptech$glide$Priority
com.bumptech.glide.load.ImageHeaderParserUtils$4: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool val$byteArrayPool
com.google.android.exoplayer2.drm.ErrorStateDrmSession: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException error
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker playlistTracker
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer videoDecoderOutputBufferRenderer
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long lastScrValue
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: int misses
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean pendingOutputEndOfStream
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: int trimEndFrames
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int fontColor
com.bumptech.glide.gifdecoder.StandardGifDecoder: java.nio.ByteBuffer rawData
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int sampleBytesRead
androidx.fragment.app.Fragment: boolean mRetainInstanceChangedWhileDetached
androidx.appcompat.app.AlertController: int mListLayout
com.google.android.exoplayer2.source.ProgressiveMediaSource: boolean timelineIsSeekable
com.bumptech.glide.load.Options: androidx.collection.ArrayMap values
androidx.appcompat.widget.TintContextWrapper: java.util.ArrayList sCache
androidx.appcompat.R$styleable: int TextAppearance_android_textFontWeight
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int preferredLanguageScore
com.google.android.exoplayer2.ui.SubtitlePainter: float cuePosition
com.google.android.exoplayer2.text.CaptionStyleCompat: int foregroundColor
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: float bitmapPoolScreens
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.RequestManager requestManager
com.google.android.exoplayer2.extractor.mp4.TrackFragment: int[] trunLength
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int mRootAlpha
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_FRAME_RATE
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean isOutputPcm
com.google.android.exoplayer2.source.SampleDataQueue: int allocationLength
androidx.customview.view.AbsSavedState: android.os.Parcelable mSuperState
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.util.Map adapters
androidx.appcompat.view.menu.ActionMenuItemView: android.graphics.drawable.Drawable mIcon
androidx.fragment.app.Fragment$3: androidx.fragment.app.Fragment this$0
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool
androidx.core.R$styleable: int GradientColor_android_tileMode
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: int bitstreamVersion
androidx.appcompat.widget.AppCompatBackgroundHelper: android.view.View mView
com.google.android.exoplayer2.text.ttml.TtmlNode: java.lang.String regionId
androidx.appcompat.app.AlertController$2: android.view.View val$top
androidx.appcompat.R$drawable: int abc_textfield_default_mtrl_alpha
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: androidx.appcompat.app.TwilightManager mTwilightManager
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.source.MediaPeriod mediaPeriod
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.Format delegateFormat
com.google.android.exoplayer2.SimpleExoPlayer: java.util.List currentCues
androidx.core.app.RemoteActionCompat: androidx.core.graphics.drawable.IconCompat mIcon
androidx.recyclerview.widget.RecyclerView: int[] mMinMaxLayoutPositions
androidx.core.R$styleable: int FontFamilyFont_font
androidx.appcompat.app.AlertController: java.lang.CharSequence mMessage
com.google.android.exoplayer2.extractor.ts.TsDurationReader: boolean isFirstPcrValueRead
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.Transformation transformation
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.viewpager.widget.ViewPager: int mGutterSize
com.google.android.exoplayer2.audio.Sonic: int maxRequiredFrameCount
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: long pageChecksum
cn.jzvd.R$id: int total
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: boolean startedPacket
androidx.appcompat.R$styleable: int AppCompatImageView_tintMode
com.google.android.exoplayer2.extractor.flv.FlvExtractor: int state
androidx.appcompat.app.AlertDialog: androidx.appcompat.app.AlertController mAlert
com.google.android.exoplayer2.metadata.id3.MlltFrame: android.os.Parcelable$Creator CREATOR
androidx.appcompat.widget.ActionBarOverlayLayout: android.graphics.Rect mBaseContentInsets
androidx.appcompat.widget.ThemeUtils: int[] DISABLED_STATE_SET
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: boolean autoReturn
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_FPS_NUM
cn.jzvd.R$drawable: int jz_add_volume
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence mHeaderTitle
com.google.android.exoplayer2.extractor.ogg.StreamReader: com.google.android.exoplayer2.extractor.ogg.OggSeeker oggSeeker
com.google.android.exoplayer2.extractor.ts.PesReader: com.google.android.exoplayer2.util.TimestampAdjuster timestampAdjuster
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat mInsets
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.String itemActionViewClassName
androidx.core.widget.AutoScrollHelper: android.view.View mTarget
androidx.lifecycle.LifecycleRegistry: int mAddingObserverCounter
com.google.android.exoplayer2.extractor.ChunkIndex: int[] sizes
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: com.bumptech.glide.load.data.InputStreamRewinder dataRewinder
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher eventDispatcher
com.bumptech.glide.request.RequestCoordinator$RequestState: boolean isComplete
androidx.core.app.RemoteActionCompat: android.app.PendingIntent mActionIntent
androidx.appcompat.app.AlertController$AlertParams: boolean mCancelable
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.extractor.ts.AdtsReader: int currentFrameVersion
com.google.android.exoplayer2.metadata.flac.PictureFrame: byte[] pictureData
cn.jzvd.R$id: int tv_current
tv.danmaku.ijk.media.player.misc.ITrackInfo: int MEDIA_TRACK_TYPE_TIMEDTEXT
cn.jzvd.Jzvd: int widthRatio
androidx.recyclerview.widget.LayoutState: int mCurrentPosition
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.collection.SparseArrayCompat mLoaders
com.google.android.exoplayer2.SimpleExoPlayer: android.view.Surface surface
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_AUDIO
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: java.util.ArrayList mViews
androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream val$in
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_DISMISS
androidx.appcompat.R$styleable: int[] SearchView
androidx.appcompat.app.AppCompatDelegateImpl: boolean mCreated
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int mId
androidx.appcompat.R$id: int action_menu_presenter
androidx.savedstate.SavedStateRegistry: boolean mAllowingSavingState
com.bumptech.glide.load.engine.GlideException: com.bumptech.glide.load.DataSource dataSource
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: int adtsFlags
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DataFetcherGenerator currentGenerator
com.google.android.exoplayer2.upstream.ContentDataSource: java.io.FileInputStream inputStream
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: androidx.recyclerview.widget.OrientationHelper mOrientationHelper
com.google.android.exoplayer2.extractor.flac.FlacExtractor: int frameStartMarker
androidx.recyclerview.widget.StaggeredGridLayoutManager: java.lang.Runnable mCheckForGapsRunnable
com.google.android.exoplayer2.drm.DefaultDrmSession: java.util.HashMap keyRequestParameters
androidx.lifecycle.LiveData: int mVersion
com.google.android.exoplayer2.upstream.AssetDataSource: java.io.InputStream inputStream
androidx.appcompat.widget.ActionBarOverlayLayout: int mWindowVisibility
androidx.core.widget.NestedScrollView: android.widget.EdgeEffect mEdgeGlowBottom
com.google.android.exoplayer2.ui.TrackSelectionView: int rendererIndex
androidx.fragment.app.FragmentTransaction: int mBreadCrumbTitleRes
com.google.android.exoplayer2.offline.StreamKey: int trackIndex
androidx.recyclerview.widget.LinearLayoutManager: int mOrientation
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo mAnimationInfo
com.bumptech.glide.load.engine.ResourceCacheKey: com.bumptech.glide.load.Transformation transformation
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean notifiedReadingStarted
androidx.collection.ArrayMap: androidx.collection.MapCollections mCollections
androidx.core.provider.FontsContractCompat: java.util.Comparator sByteArrayComparator
com.bumptech.glide.Registry: com.bumptech.glide.provider.EncoderRegistry encoderRegistry
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: java.lang.String ARG_IP
androidx.appcompat.widget.LinearLayoutCompat: int mBaselineAlignedChildIndex
androidx.fragment.app.BackStackState: int mBreadCrumbTitleRes
androidx.appcompat.widget.ListPopupWindow: boolean mDropDownVerticalOffsetSet
androidx.fragment.app.FragmentTransition$4: androidx.collection.ArrayMap val$nameOverrides
com.google.android.exoplayer2.audio.AudioAttributes$Builder: int contentType
com.google.android.exoplayer2.ui.R$styleable: int AspectRatioFrameLayout_resize_mode
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues: int width
com.google.android.exoplayer2.extractor.ts.PsDurationReader: boolean isFirstScrValueRead
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_LANGUAGE
com.bumptech.glide.load.model.ModelCache$ModelKey: java.lang.Object model
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long stopTimestampUs
com.google.android.exoplayer2.upstream.BaseDataSource: boolean isNetwork
com.danikula.videocache.HttpProxyCacheServer$SocketProcessorRunnable: com.danikula.videocache.HttpProxyCacheServer this$0
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int parserState
androidx.appcompat.view.menu.MenuItemImpl: int mCategoryOrder
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: java.util.List componentSpliceList
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.DataSource dataSource
com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate: int subFrameRate
com.bumptech.glide.load.data.BufferedOutputStream: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool arrayPool
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: int mNumPostponed
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.ActionBarContainer mContainerView
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_SET_VIDEO_SAR
androidx.core.view.ViewCompat: java.util.WeakHashMap sViewPropertyAnimatorMap
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: int BITMAP_POOL_TARGET_SCREENS
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long syncFramePresentationTimeNs
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mRotate
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int priority
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder: boolean endOfStream
androidx.core.R$id: int accessibility_custom_action_7
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList mButtonTintList
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: android.widget.ImageView mIcon2
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_TYPE
com.google.android.exoplayer2.extractor.ts.AdtsReader: long timeUs
androidx.appcompat.R$id: int search_close_btn
androidx.fragment.app.Fragment: boolean mHiddenChanged
com.google.android.exoplayer2.BaseRenderer: int state
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: boolean wasInitialized
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.widget.DecorContentParent mDecorContentParent
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.MediaPeriodHolder: boolean hasEnabledTracks
androidx.appcompat.app.AlertController: int mCheckedItem
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifTag[] ORF_IMAGE_PROCESSING_TAGS
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor mCursor
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean mColorFilterSet
androidx.appcompat.R$attr: int actionBarTabTextStyle
com.bumptech.glide.RequestBuilder: java.lang.Float thumbSizeMultiplier
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.ForwardingListener mForwardingListener
androidx.appcompat.R$styleable: int SearchView_searchHintIcon
androidx.appcompat.R$styleable: int AppCompatSeekBar_tickMark
androidx.recyclerview.R$styleable: int RecyclerView_android_orientation
tv.danmaku.ijk.media.player.AndroidMediaPlayer: java.lang.String mDataSource
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper$ClampedScroller mScroller
com.google.android.exoplayer2.ui.R$string: int exo_track_selection_auto
androidx.appcompat.widget.Toolbar: int mSubtitleTextAppearance
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_SET_VIDEO_SIZE
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat mHost
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowedHolder
androidx.appcompat.widget.DropDownListView: int mSelectionBottomPadding
androidx.core.graphics.PathParser$PathDataNode: char mType
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback
androidx.appcompat.widget.SearchView: int mSuggestionRowLayout
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecReconfigured
com.google.android.exoplayer2.MediaPeriodHolder: boolean[] mayRetainStreamFlags
androidx.appcompat.R$styleable: int MenuItem_android_enabled
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: int y
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: androidx.core.view.ViewPropertyAnimatorCompat mVpa
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: int deltaPicOrderCntBottom
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mPreLayoutPosition
com.danikula.videocache.file.Files: org.slf4j.Logger LOG
com.bumptech.glide.load.engine.LoadPath: java.util.List decodePaths
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.util.ParsableByteArray tagData
com.google.android.exoplayer2.extractor.ogg.OggExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
androidx.fragment.app.FragmentState: boolean mFromLayout
com.google.android.exoplayer2.text.TextRenderer: com.google.android.exoplayer2.FormatHolder formatHolder
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: java.util.List variantInfos
androidx.appcompat.widget.SearchView: boolean mIconified
androidx.fragment.app.Fragment: int mBackStackNesting
androidx.fragment.app.Fragment$1: androidx.fragment.app.Fragment this$0
androidx.core.R$id: int tag_accessibility_heading
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray atomHeader
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: float memoryCacheScreens
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int maxDroppedFramesToNotify
androidx.appcompat.R$styleable: int SearchView_goIcon
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder: java.nio.ByteBuffer buffer
com.danikula.videocache.HttpProxyCacheServer$SocketProcessorRunnable: java.net.Socket socket
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format downstreamFormat
com.google.android.exoplayer2.upstream.DataSpec: int httpMethod
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: int discontinuitySequence
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap groupedMap
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: android.view.MenuItem mHoveredMenuItem
cn.jzvd.demo.ActivityApiOrientation: cn.jzvd.JzvdStd mJzvdStd
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_KEYFORMATVERSIONS
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int flags
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_BACK_LEFT
cn.jzvd.R$string: int tips_not_wifi_confirm
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: androidx.arch.core.internal.SafeIterableMap$Entry mCurrent
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean tunneling
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
cn.jzvd.Jzvd: long mSeekTimePosition
androidx.appcompat.widget.ActionBarContextView$1: androidx.appcompat.widget.ActionBarContextView this$0
com.google.android.exoplayer2.util.FlacStreamMetadata: int bitsPerSampleLookupKey
androidx.appcompat.app.AlertController: int mViewSpacingTop
com.danikula.videocache.SourceInfo: java.lang.String url
androidx.exifinterface.media.ExifInterface$1: androidx.exifinterface.media.ExifInterface this$0
androidx.fragment.app.FragmentManagerImpl: java.util.ArrayList mTmpIsPop
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.reflect.Constructor sFontFamilyCtor
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1$1: com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1 this$1
androidx.appcompat.app.TwilightManager$TwilightState: long yesterdaySunset
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: int mMaxVolume
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String KEY_IJK_SAMPLE_RATE_UI
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[] trackEncryptionBoxes
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: com.google.android.exoplayer2.extractor.ogg.OggPageHeader pageHeader
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] TINT_COLOR_CONTROL_NORMAL
com.bumptech.glide.gifdecoder.StandardGifDecoder: short[] prefix
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: java.lang.String[] NO_CLASSES
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float mViewportHeight
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mSmoothScrollbarEnabled
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String mVariationSettings
cn.jzvd.JZDataSource: java.lang.Object[] objects
com.google.android.exoplayer2.text.ttml.TtmlStyle: android.text.Layout$Alignment textAlign
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mVariablePadding
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: long durationUs
androidx.appcompat.view.menu.CascadingMenuPopup: boolean mShouldCloseImmediately
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: long sampleTimeUs
androidx.appcompat.app.ResourcesFlusher: boolean sResourcesImplFieldFetched
com.bumptech.glide.RequestManager$1: com.bumptech.glide.RequestManager this$0
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: int resolvedPeriodIndex
androidx.appcompat.widget.AppCompatBackgroundHelper: androidx.appcompat.widget.TintInfo mInternalBackgroundTint
androidx.appcompat.widget.SearchView: android.graphics.drawable.Drawable mSearchHintIcon
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean mMutated
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: int maxDurationForQualityDecreaseMs
com.google.android.exoplayer2.text.cea.Cea708Decoder: int currentWindow
cn.jzvd.demo.ActivityListViewNormal: android.widget.ListView listView
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: androidx.appcompat.widget.AppCompatSpinner val$this$0
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: boolean hasOutputSeekMap
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentContainer mContainer
androidx.fragment.app.FragmentTransition: int[] INVERSE_OPS
cn.jzvd.demo.CustomMedia.JZMediaExo: long previousSeek
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: java.util.Set allowedConfigs
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: boolean mProxyStarted
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: android.view.Surface dummySurface
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionBar
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean exceedAudioConstraintsIfNecessary
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: long duration
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: int minDurationForQualityIncreaseMs
androidx.lifecycle.ClassesInfoCache$MethodReference: java.lang.reflect.Method mMethod
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: int defaultSampleDurationNs
tv.danmaku.ijk.media.player.IjkMediaMeta: int FF_PROFILE_H264_HIGH_10_INTRA
com.google.android.exoplayer2.extractor.MpegAudioHeader: int samplesPerFrame
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer pps
androidx.collection.ArraySet: java.lang.Object[] mArray
androidx.appcompat.widget.RtlSpacingHelper: boolean mIsRtl
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method mAbortCreation
androidx.appcompat.widget.AppCompatSeekBarHelper: android.widget.SeekBar mView
androidx.exifinterface.media.ExifInterface: byte[] HEIF_TYPE_FTYP
com.google.android.exoplayer2.extractor.mp4.TrackFragment: int sampleEncryptionDataLength
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemEnabled
com.bumptech.glide.gifdecoder.GifFrame: int iw
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: int availNum
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long lastBufferEvaluationMs
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.ExoMediaCrypto mediaCrypto
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float projectionPosePitch
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo mAnchorInfo
com.google.android.exoplayer2.ui.TrackSelectionView: boolean allowMultipleOverrides
com.google.android.exoplayer2.metadata.emsg.EventMessage: byte[] messageData
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] WINDOW_STYLE_PRINT_DIRECTION
androidx.appcompat.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
androidx.appcompat.app.AlertController$AlertParams: android.content.DialogInterface$OnDismissListener mOnDismissListener
com.google.android.exoplayer2.util.Util: java.lang.String[] additionalIsoLanguageReplacements
com.danikula.videocache.HttpProxyCacheServer$WaitRequestsRunnable: com.danikula.videocache.HttpProxyCacheServer this$0
androidx.appcompat.widget.Toolbar: int mMaxButtonHeight
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState[] mPanels
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mRightEdge
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter cacheDirectoryGetter
androidx.appcompat.R$styleable: int Toolbar_logoDescription
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_DEFAULT
androidx.appcompat.app.AlertController: int mButtonPanelLayoutHint
androidx.core.provider.SelfDestructiveThread$3: androidx.core.provider.SelfDestructiveThread this$0
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: android.content.Context context
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long durationUs
androidx.appcompat.widget.ToolbarWidgetWrapper: int mNavigationMode
androidx.collection.MapCollections$ArrayIterator: int mSize
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable placeholderDrawable
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray seekEntryIdBytes
org.slf4j.impl.StaticLoggerBinder: java.lang.String REQUESTED_API_VERSION
androidx.fragment.app.FragmentState: boolean mDetached
androidx.core.provider.FontRequest: java.util.List mCertificates
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray mWrapped
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.ArrayList sViewsWithListeners
com.google.android.exoplayer2.text.cea.CeaSubtitle: java.util.List cues
com.google.android.exoplayer2.video.AvcConfig: int nalUnitLengthFieldLength
com.google.android.exoplayer2.util.NalUnitUtil$PpsData: int picParameterSetId
com.google.android.exoplayer2.SimpleExoPlayer: int audioSessionId
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
androidx.appcompat.widget.ActionMenuPresenter: int mOpenSubMenuId
androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder mExifByteOrder
androidx.arch.core.internal.SafeIterableMap: java.util.WeakHashMap mIterators
androidx.appcompat.view.ActionMode: java.lang.Object mTag
androidx.fragment.app.FragmentTransaction: boolean mAddToBackStack
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: android.os.Handler handler
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] $VALUES
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache: java.util.Map cachedModelLoaders
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean mIsPreLayout
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupOrder
com.google.android.exoplayer2.Format: int roleFlags
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_ASYNC_STATISTIC_BUF_CAPACITY
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.util.ParsableBitArray: int bitOffset
com.danikula.videocache.ProxyCache: java.lang.Object stopLock
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: int height
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: float[] mTmpFloats
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int currentHeight
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: float bandwidthFraction
com.bumptech.glide.request.BaseRequestOptions: boolean onlyRetrieveFromCache
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect mTempRect2
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.google.android.exoplayer2.extractor.mkv.VarintReader: byte[] scratch
androidx.appcompat.R$styleable: int AppCompatTextView_drawableTopCompat
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: int type
androidx.appcompat.R$styleable: int PopupWindow_android_popupBackground
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.util.Map sKnownCodecList
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_FLOAT_DROP_FRAME_RATE
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity this$0
androidx.appcompat.R$drawable: int abc_spinner_textfield_background_material
cn.jzvd.Jzvd: float mDownX
com.google.android.exoplayer2.text.subrip.SubripDecoder: java.lang.StringBuilder textBuilder
com.google.android.exoplayer2.upstream.ParsingLoadable: com.google.android.exoplayer2.upstream.StatsDataSource dataSource
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.DefaultDrmSession$ProvisioningManager provisioningManager
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: com.google.android.exoplayer2.util.ParsableBitArray pesScratch
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder$Callback mCallback
com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator memorySizeCalculator
com.bumptech.glide.load.engine.DecodePath: androidx.core.util.Pools$Pool listPool
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache COLOR_FILTER_CACHE
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.PorterDuff$Mode mCachedTintMode
androidx.core.widget.PopupWindowCompat: boolean sOverlapAnchorFieldAttempted
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.Timeline$Window window
androidx.core.provider.FontsContractCompat$FontInfo: int mResultCode
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist EMPTY
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.trackselection.TrackSelectorResult trackSelectorResult
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: boolean hasEndTag
androidx.fragment.app.Fragment: boolean mIsNewlyAdded
com.google.android.exoplayer2.extractor.ts.PsDurationReader: com.google.android.exoplayer2.util.ParsableByteArray packetBuffer
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int[] blockSampleSizes
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: java.lang.String dataUri
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: int adGroupIndex
androidx.appcompat.resources.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
com.bumptech.glide.gifdecoder.GifHeader: int bgColor
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.decoder.DecoderInputBuffer buffer
androidx.appcompat.R$styleable: int MenuGroup_android_orderInCategory
com.google.android.exoplayer2.text.SubtitleOutputBuffer: long subsampleOffsetUs
androidx.appcompat.app.AlertController$4: android.view.View val$top
androidx.appcompat.R$styleable: int ActionBar_customNavigationLayout
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int mAdvanceKey
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: boolean deltaPicOrderAlwaysZeroFlag
com.bumptech.glide.load.engine.LockedResource: boolean isLocked
com.google.android.exoplayer2.util.SlidingPercentile: int nextSampleIndex
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State STARTED
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: float weight
androidx.appcompat.R$id: int search_plate
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: android.content.Context mResolvedContext
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: int length
androidx.appcompat.widget.SuggestionsAdapter: android.content.Context mProviderContext
tv.danmaku.ijk.media.player.misc.ITrackInfo: int MEDIA_TRACK_TYPE_AUDIO
com.bumptech.glide.load.engine.executor.RuntimeCompat$1: java.util.regex.Pattern val$cpuNamePattern
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: android.os.Handler handler
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNeutralButtonText
androidx.fragment.app.FragmentTransition$2: java.util.ArrayList val$exitingViews
androidx.appcompat.widget.SearchView$5: androidx.appcompat.widget.SearchView this$0
com.google.android.exoplayer2.source.SinglePeriodTimeline: long periodDurationUs
androidx.appcompat.widget.RtlSpacingHelper: int mLeft
com.google.android.exoplayer2.ExoPlayerImplInternal$MediaSourceRefreshInfo: com.google.android.exoplayer2.Timeline timeline
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long bytesRead
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean timelineChanged
androidx.appcompat.view.menu.CascadingMenuPopup: java.util.List mShowingMenus
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatTextHelper mTextHelper
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean itemAdded
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy loadErrorHandlingPolicy
com.google.android.exoplayer2.audio.AudioTimestampPoller: long initialTimestampPositionFrames
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ViewPositionComparator sPositionComparator
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.TaskExecutor mDelegate
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: java.nio.ByteBuffer supplementalData
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long[] trunDataPosition
androidx.fragment.app.FragmentManagerImpl$3: androidx.fragment.app.Fragment val$fragment
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int height
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.audio.BaseAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat pendingOutputAudioFormat
com.google.android.exoplayer2.audio.Sonic: int newRatePosition
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: android.os.Handler handler
androidx.appcompat.widget.AppCompatDrawableManager$1: int[] COLORFILTER_COLOR_CONTROL_ACTIVATED
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int mWidth
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean sampleQueuesBuilt
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: androidx.recyclerview.widget.RecyclerView$LayoutManager this$0
com.google.android.exoplayer2.extractor.ts.PsExtractor: android.util.SparseArray psPayloadReaders
androidx.core.provider.SelfDestructiveThread$2: androidx.core.provider.SelfDestructiveThread this$0
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.ParsableByteArray vorbisNumPageSamples
androidx.fragment.app.FragmentManagerImpl: android.util.SparseArray mStateArray
androidx.appcompat.view.menu.ListMenuItemView: android.widget.ImageView mSubMenuArrowView
com.danikula.videocache.ProxyCache$SourceReaderRunnable: com.danikula.videocache.ProxyCache this$0
com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isRegistered
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int mRvEnd
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: float videoAspectRatio
com.google.android.exoplayer2.text.cea.CeaDecoder: com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer dequeuedInputBuffer
com.google.android.exoplayer2.extractor.ts.TsDurationReader: long firstPcrValue
cn.jzvd.R$dimen: int jz_start_button_w_h_fullscreen
com.google.android.exoplayer2.audio.DtsUtil: int[] TWICE_BITRATE_KBPS_BY_RATE
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int pixelCode4Bit
androidx.appcompat.widget.ListPopupWindow: int mDropDownHorizontalOffset
com.google.android.exoplayer2.PlayerMessage: boolean deleteAfterDelivery
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: com.bumptech.glide.load.data.DataFetcher$DataCallback callback
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: boolean colorsSet
androidx.appcompat.R$drawable: int abc_seekbar_tick_mark_material
com.google.android.exoplayer2.ui.SubtitlePainter: float shadowOffset
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: byte[] encryptionKey
com.bumptech.glide.RequestManager: android.content.Context context
com.google.android.exoplayer2.extractor.ts.H264Reader: com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer sps
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager mAutoTimeNightModeManager
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder webvttCueBuilder
androidx.appcompat.widget.ActionBarContextView: android.widget.LinearLayout mTitleLayout
androidx.core.widget.AutoScrollHelper: boolean mNeedsReset
com.bumptech.glide.request.ErrorRequestCoordinator: com.bumptech.glide.request.Request primary
androidx.appcompat.R$layout: int abc_list_menu_item_layout
androidx.core.view.WindowInsetsCompat$Impl20: android.view.WindowInsets mPlatformInsets
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Configuration mOverrideConfiguration
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_FRONT_RIGHT_OF_CENTER
tv.danmaku.ijk.media.player.MediaInfo: java.lang.String mAudioDecoder
com.google.android.exoplayer2.util.Util: java.util.regex.Pattern XS_DATE_TIME_PATTERN
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: float mAutoSizeMinTextSizeInPx
androidx.recyclerview.widget.LayoutState: boolean mStopInFocusable
androidx.appcompat.widget.SuggestionsAdapter: int mIconName2Col
com.google.android.exoplayer2.source.SampleQueue: long[] offsets
com.google.android.exoplayer2.audio.DefaultAudioSink: long writtenEncodedFrames
androidx.appcompat.widget.DrawableUtils: android.graphics.Rect INSETS_NONE
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: android.content.Context context
androidx.appcompat.widget.SearchView: java.lang.CharSequence mDefaultQueryHint
androidx.appcompat.R$styleable: int ActionMode_background
androidx.viewpager.widget.ViewPager: android.widget.EdgeEffect mLeftEdge
com.bumptech.glide.RequestManager: com.bumptech.glide.request.RequestOptions DOWNLOAD_ONLY_OPTIONS
androidx.exifinterface.media.ExifInterface: byte[] WEBP_CHUNK_TYPE_XMP
androidx.fragment.app.Fragment: androidx.lifecycle.MutableLiveData mViewLifecycleOwnerLiveData
androidx.appcompat.app.AppCompatDelegateImpl: boolean mOverlayActionMode
com.google.android.exoplayer2.DefaultLoadControl: com.google.android.exoplayer2.upstream.DefaultAllocator allocator
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: boolean mCreatingLoader
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: int outputPcmFrameSize
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$SmoothScroller mSmoothScroller
androidx.fragment.app.FragmentManagerImpl$1: androidx.fragment.app.FragmentManagerImpl this$0
com.bumptech.glide.request.SingleRequest: int overrideWidth
androidx.appcompat.R$styleable: int ActionBar_contentInsetEnd
com.danikula.videocache.Config: com.danikula.videocache.file.DiskUsage diskUsage
com.google.android.exoplayer2.Timeline$Window: int firstPeriodIndex
cn.jzvd.R$string: int tips_not_wifi_cancel
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker mediaPeriodQueueTracker
com.google.android.exoplayer2.extractor.BinarySearchSeeker: int minimumSearchRange
com.google.android.exoplayer2.util.Util: java.lang.String DEVICE
androidx.appcompat.view.menu.MenuItemImpl: java.lang.Runnable mItemCallback
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_VIDEO_STREAM
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable mDropDownListHighlight
com.google.android.exoplayer2.extractor.ts.H262Reader: boolean hasOutputFormat
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist: java.lang.String baseUri
com.bumptech.glide.load.engine.ResourceCacheGenerator: com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback cb
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int mFrames
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: int codecKind
org.slf4j.LoggerFactory: java.lang.String STATIC_LOGGER_BINDER_PATH
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: java.lang.String value
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: com.google.android.exoplayer2.Format format
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean failOnSpuriousAudioTimestamp
androidx.arch.core.executor.ArchTaskExecutor: java.util.concurrent.Executor sMainThreadExecutor
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist: java.util.List tags
androidx.appcompat.widget.ActionMenuPresenter: int mMaxItems
androidx.core.R$id: int accessibility_custom_action_12
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput extractorOutput
com.bumptech.glide.load.model.UnitModelLoader: com.bumptech.glide.load.model.UnitModelLoader INSTANCE
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_6POINT0_FRONT
androidx.appcompat.widget.DropDownListView: boolean mListSelectionHidden
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: byte[] scratchBytes
com.bumptech.glide.load.model.AssetUriLoader: int ASSET_PREFIX_LENGTH
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int maxVideoHeight
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: java.util.List definedStyles
androidx.appcompat.view.ActionBarPolicy: android.content.Context mContext
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean mLastLayoutFromEnd
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment initializationSegment
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: java.lang.String targetTag
cn.jzvd.Jzvd: int state
androidx.appcompat.widget.TooltipCompatHandler$2: androidx.appcompat.widget.TooltipCompatHandler this$0
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int codecDrainAction
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator: java.io.BufferedReader reader
com.google.android.exoplayer2.util.ParsableBitArray: int byteLimit
cn.jzvd.R$id: int tv_duration
androidx.recyclerview.widget.RecyclerView: int mMaxFlingVelocity
androidx.appcompat.widget.AppCompatCompoundButtonHelper: boolean mSkipNextApply
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: java.lang.String codecMimeType
androidx.appcompat.widget.ForwardingListener: float mScaledTouchSlop
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_SURROUND
androidx.appcompat.widget.ResourceManagerInternal: androidx.collection.SparseArrayCompat mKnownDrawableIdTags
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.trackselection.TrackSelectorResult emptyTrackSelectorResult
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$MetadataSampleInfo: int size
com.google.android.exoplayer2.audio.DefaultAudioSink: int startMediaTimeState
com.google.android.exoplayer2.extractor.VorbisBitArray: int byteOffset
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: android.os.Parcelable$Creator CREATOR
com.google.android.exoplayer2.text.cea.CeaDecoder: long playbackPositionUs
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long dataEndPosition
androidx.lifecycle.ClassesInfoCache$CallbackInfo: java.util.Map mHandlerToEvent
androidx.core.R$styleable: int GradientColor_android_startColor
com.google.android.exoplayer2.ExoPlayerImplInternal: long rendererPositionUs
androidx.appcompat.R$styleable: int[] AnimatedStateListDrawableCompat
com.bumptech.glide.load.engine.Jobs: java.util.Map jobs
androidx.appcompat.app.AlertController$ButtonHandler: java.lang.ref.WeakReference mDialog
com.google.android.exoplayer2.extractor.ts.LatmReader: java.lang.String language
androidx.appcompat.widget.SearchView: android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener
androidx.appcompat.app.AppCompatDelegateImpl$6$1: androidx.appcompat.app.AppCompatDelegateImpl$6 this$1
androidx.appcompat.widget.SearchView: android.widget.ImageView mGoButton
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CLEAR_ACCESSIBILITY_FOCUS
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
cn.jzvd.demo.CustomMedia.JZMediaIjk: tv.danmaku.ijk.media.player.IjkMediaPlayer ijkMediaPlayer
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory: java.lang.Class dataClass
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: int flags
com.bumptech.glide.load.model.StreamEncoder: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: androidx.recyclerview.widget.StaggeredGridLayoutManager this$0
com.bumptech.glide.load.engine.LoadPath: androidx.core.util.Pools$Pool listPool
androidx.appcompat.app.AlertController$AlertParams: boolean mIsSingleChoice
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder: com.google.android.exoplayer2.extractor.Extractor extractor
androidx.core.app.ActivityRecreator$1: java.lang.Object val$token
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: int sampleBytesRemaining
com.google.android.exoplayer2.util.NalUnitUtil$PpsData: int seqParameterSetId
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo mDrawableLeftTint
androidx.core.provider.FontsContractCompat: java.lang.Object sLock
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: int RANK_SOFTWARE
androidx.appcompat.widget.ActionMenuPresenter: boolean mStrictWidthLimit
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int mAnchorOffset
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder emsgDecoder
com.google.android.exoplayer2.ui.SubtitlePainter: float shadowRadius
tv.danmaku.ijk.media.player.IjkMediaPlayer: int FFP_PROP_INT64_AUDIO_CACHED_DURATION
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int row
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: int sampleCount
cn.jzvd.Jzvd: java.util.Timer UPDATE_PROGRESS_TIMER
com.google.android.exoplayer2.source.SinglePeriodTimeline: long windowDefaultStartPositionUs
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId mediaPeriodId
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long seekTimeUs
androidx.exifinterface.media.ExifInterface: byte[] WEBP_SIGNATURE_2
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: boolean hasOutputKeyframe
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int inputPcmFrameSize
com.google.android.exoplayer2.extractor.mp4.TrackFragment: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues header
androidx.fragment.app.FragmentTransitionCompat21$3: java.lang.Object val$exitTransition
androidx.recyclerview.widget.RecyclerView: boolean mItemsAddedOrRemoved
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_INFO_BUFFERING_END
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_SUBTITLES
com.google.android.exoplayer2.upstream.DataSpec: long position
androidx.core.R$id: int accessibility_custom_action_17
com.google.android.exoplayer2.ExoPlayerImpl: java.util.ArrayDeque pendingListenerNotifications
android.support.v4.media.session.MediaControllerCompat$Callback: android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup mOverflowPopup
androidx.appcompat.R$layout: int abc_cascading_menu_item_layout
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern REGEX_CHANNELS
androidx.appcompat.view.menu.CascadingMenuPopup: int mMenuMaxWidth
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean viewportOrientationMayChange
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.drm.DrmSessionManager drmSessionManager
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: byte[] paddingBuffer
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean groupEnabled
tv.danmaku.ijk.media.player.IMediaPlayer: int MEDIA_ERROR_UNKNOWN
com.google.android.exoplayer2.source.hls.HlsManifest: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist masterPlaylist
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$6: tv.danmaku.ijk.media.player.misc.IjkMediaFormat this$0
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.disklrucache.DiskLruCache diskLruCache
com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition: int state
com.google.android.exoplayer2.audio.Ac3Util: int[] SAMPLE_RATE_BY_FSCOD
androidx.appcompat.widget.ToolbarWidgetWrapper$2: boolean mCanceled
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.Format outputFormat
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer: com.bumptech.glide.util.pool.StateVerifier stateVerifier
com.danikula.videocache.Config: com.danikula.videocache.file.FileNameGenerator fileNameGenerator
androidx.viewpager.widget.ViewPager$LayoutParams: boolean needsMeasure
androidx.appcompat.app.AlertController$AlertParams: int mViewSpacingLeft
androidx.appcompat.widget.ScrollingTabContainerView: int mMaxTabWidth
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: int framesSize
androidx.appcompat.R$styleable: int MenuGroup_android_menuCategory
androidx.core.content.ContextCompat: android.util.TypedValue sTempValue
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: java.lang.String diagnosticInfo
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider timestampAdjusterProvider
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] $VALUES
androidx.exifinterface.media.ExifInterface: boolean DEBUG
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: boolean isFirstParameterSet
com.google.android.exoplayer2.source.BaseMediaSource: java.util.ArrayList mediaSourceCallers
androidx.versionedparcelable.VersionedParcelParcel: int mNextRead
tv.danmaku.ijk.media.player.misc.ITrackInfo: int MEDIA_TRACK_TYPE_METADATA
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean passthroughEnabled
androidx.core.text.PrecomputedTextCompat$Params: android.text.PrecomputedText$Params mWrapped
com.google.android.exoplayer2.ui.SubtitlePainter: android.text.TextPaint textPaint
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: long endTime
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: int width
androidx.core.view.WindowInsetsCompat$BuilderImpl20: java.lang.reflect.Constructor sConstructor
com.google.android.exoplayer2.PlaybackInfo: long positionUs
androidx.appcompat.widget.SearchView: android.view.View mSearchPlate
androidx.recyclerview.widget.RecyclerView: boolean mItemsChanged
androidx.appcompat.app.AlertController: android.widget.TextView mTitleView
org.slf4j.event.SubstituteLoggingEvent: java.lang.String threadName
com.google.android.exoplayer2.upstream.ParsingLoadable: java.lang.Object result
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.util.ParsableByteArray nalLength
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: long breakDurationUs
com.bumptech.glide.load.engine.ResourceCacheGenerator: int resourceClassIndex
com.google.android.exoplayer2.text.ttml.TtmlStyle: int linethrough
cn.jzvd.JzvdStd: android.widget.ProgressBar bottomProgressBar
androidx.appcompat.R$drawable: int abc_popup_background_mtrl_mult
com.google.android.exoplayer2.extractor.ogg.VorbisReader: int previousPacketBlockSize
com.google.android.exoplayer2.extractor.mp4.Track: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[] sampleDescriptionEncryptionBoxes
androidx.appcompat.widget.VectorEnabledTintResources: java.lang.ref.WeakReference mContextRef
com.bumptech.glide.request.SingleRequest: java.lang.RuntimeException requestOrigin
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.LayoutInflater mInflater
androidx.appcompat.R$styleable: int MenuGroup_android_visible
com.danikula.videocache.GetRequest: java.util.regex.Pattern RANGE_HEADER_PATTERN
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int maxAudioChannelCount
androidx.appcompat.R$attr: int dialogTheme
androidx.fragment.app.FragmentTransition$3: androidx.collection.ArrayMap val$inSharedElements
com.google.android.exoplayer2.BaseRenderer: long readingPositionUs
com.google.android.exoplayer2.ui.R$layout: int exo_list_divider
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: int flags
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
androidx.core.provider.FontsContractCompat$TypefaceResult: android.graphics.Typeface mTypeface
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean seekForCuesEnabled
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks: com.bumptech.glide.util.ExceptionPassthroughInputStream exceptionStream
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean hasCrc
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long endGranule
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_6POINT1_FRONT
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: android.media.MediaFormat passthroughMediaFormat
com.google.android.exoplayer2.extractor.BinarySearchSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSeeker timestampSeeker
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: androidx.activity.OnBackPressedCallback mOnBackPressedCallback
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long lastSnapshotChangeMs
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: boolean playClearSamplesWithoutKeys
com.google.android.exoplayer2.extractor.VorbisBitArray: byte[] data
androidx.appcompat.R$styleable: int ActionBar_contentInsetStart
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: long lastTimestampPositionFrames
com.danikula.videocache.HttpProxyCacheServer: int port
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: java.lang.String preferredTextLanguage
com.google.android.exoplayer2.audio.SonicAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat pendingInputAudioFormat
cn.jzvd.Jzvd: boolean mChangeVolume
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: java.lang.String preferredTextLanguage
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
cn.jzvd.demo.ActivityApiUISmallChange: cn.jzvd.demo.CustomJzvd.JzvdStdShowTitleAfterFullscreen jzvdStdShowTitleAfterFullscreen
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder currentCueBuilder
androidx.recyclerview.widget.GapWorker: long mPostTimeNs
tv.danmaku.ijk.media.player.exceptions.IjkMediaException: long serialVersionUID
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int sampleBytesWritten
androidx.appcompat.R$layout: int abc_list_menu_item_icon
com.google.android.exoplayer2.PlaybackInfo: long bufferedPositionUs
tv.danmaku.ijk.media.player.AndroidMediaPlayer: boolean mIsReleased
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int blockState
androidx.core.view.ViewCompat: java.lang.reflect.Field sAccessibilityDelegateField
com.google.android.exoplayer2.text.cea.Cea608Decoder: com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder currentCueBuilder
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.upstream.Allocator allocator
com.google.android.exoplayer2.source.SampleDataQueue: com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode writeAllocationNode
com.google.android.exoplayer2.extractor.ogg.StreamReader: long targetGranule
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: androidx.collection.LongSparseArray mTransitions
com.google.android.exoplayer2.text.dvb.DvbParser: byte[] defaultMap4To8
androidx.core.view.ViewCompat$UnhandledKeyEventManager: java.util.WeakHashMap mViewsContainingListeners
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int mIcon
androidx.fragment.app.FragmentState: java.lang.String mTag
androidx.core.view.OneShotPreDrawListener: android.view.View mView
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter$VideoHolder: cn.jzvd.JzvdStd jzvdStd
com.bumptech.glide.gifdecoder.GifFrame: int dispose
androidx.appcompat.widget.AppCompatProgressBarHelper: int[] TINT_ATTRS
androidx.appcompat.view.SupportMenuInflater$MenuState: int groupCheckable
androidx.appcompat.widget.SearchView$SavedState: boolean isIconified
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mNegativeButtonText
androidx.appcompat.app.WindowDecorActionBar: android.view.animation.Interpolator sShowInterpolator
androidx.fragment.app.FragmentTransitionImpl$2: java.util.Map val$nameOverrides
androidx.core.provider.FontsContractCompat: androidx.core.provider.SelfDestructiveThread sBackgroundThread
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_7POINT0_FRONT
androidx.appcompat.widget.SearchView: android.view.View mDropDownAnchor
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: int clutId
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat ACTION_CUT
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer: long queuedInputBufferCount
android.support.v4.media.MediaMetadataCompat: java.lang.Object mMetadataObj
androidx.appcompat.app.WindowDecorActionBar: boolean mHiddenByApp
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: java.util.List cues
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.io.DataInputStream mDataInputStream
androidx.collection.SparseArrayCompat: int mSize
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.extractor.TrackOutput output
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatCompoundButtonHelper mCompoundButtonHelper
androidx.appcompat.app.ResourcesFlusher: java.lang.reflect.Field sDrawableCacheField
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_HEIGHT
com.google.android.exoplayer2.util.FlacStreamMetadata: int channels
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: java.util.Set sampleQueueMappingDoneByType
androidx.core.R$id: int tag_accessibility_clickable_spans
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean mCacheDirty
com.google.android.exoplayer2.extractor.ts.DtsReader: com.google.android.exoplayer2.extractor.TrackOutput output
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry: com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder
tv.danmaku.ijk.media.player.IjkMediaPlayer: int MEDIA_INFO
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: android.content.res.ColorStateList value
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int bitrate
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float mScaleY
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int inputIndex
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long payloadStartPosition
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int[] WINDOW_STYLE_SCROLL_DIRECTION
com.google.android.exoplayer2.audio.AuxEffectInfo: int effectId
com.bumptech.glide.request.BaseRequestOptions: android.graphics.drawable.Drawable errorPlaceholder
androidx.appcompat.widget.TooltipPopup: android.widget.TextView mMessageView
androidx.recyclerview.widget.LinearLayoutManager: boolean mLastStackFromEnd
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: java.util.HashMap mediaPeriodIdToInfo
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: int tunnelingAudioSessionId
com.google.android.exoplayer2.source.hls.DefaultHlsDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource$Factory dataSourceFactory
com.google.android.exoplayer2.metadata.id3.ApicFrame: android.os.Parcelable$Creator CREATOR
tv.danmaku.ijk.media.player.IjkMediaPlayer: int IJK_LOG_ERROR
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int flags
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long bytesToRead
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: com.google.android.exoplayer2.Format format
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: int pageSegmentCount
androidx.recyclerview.widget.RecyclerView: boolean mAdapterUpdateDuringMeasure
com.bumptech.glide.RequestManager: com.bumptech.glide.request.RequestOptions DECODE_TYPE_BITMAP
com.bumptech.glide.RequestManager: boolean pauseAllRequestsOnTrimMemoryModerate
androidx.appcompat.R$dimen: int abc_config_prefDialogWidth
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.SparseIntArray AV1_LEVEL_NUMBER_TO_CONST
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: long offsetUs
androidx.appcompat.app.AppCompatDelegateImpl: boolean mStarted
com.danikula.videocache.HttpUrlSource: com.danikula.videocache.sourcestorage.SourceInfoStorage sourceInfoStorage
androidx.appcompat.widget.AppCompatSpinner: boolean mPopupSet
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int[][] mStateSets
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean haveOutputSeekMap
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: java.util.Map regionMap
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: boolean startedPacket
androidx.appcompat.view.ContextThemeWrapper: int mThemeResource
androidx.appcompat.R$drawable: int abc_text_select_handle_left_mtrl_dark
com.bumptech.glide.load.resource.gif.GifFrameLoader: boolean isLoadPending
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: java.util.ArrayDeque pendingMetadataSampleInfos
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuPresenter$Callback mActionMenuPresenterCallback
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy: com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy LOG
androidx.appcompat.widget.ListPopupWindow: int mDropDownWindowLayoutType
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean forceLowestBitrate
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.Format muxedAudioFormat
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
com.google.android.exoplayer2.PlaybackInfo: long contentPositionUs
org.slf4j.LoggerFactory: org.slf4j.helpers.SubstituteLoggerFactory SUBST_FACTORY
com.bumptech.glide.request.ThumbnailRequestCoordinator: com.bumptech.glide.request.RequestCoordinator$RequestState thumbState
androidx.appcompat.app.AlertController$AlertParams: java.lang.CharSequence mMessage
com.google.android.exoplayer2.video.DolbyVisionConfig: java.lang.String codecs
tv.danmaku.ijk.media.player.IjkMediaMeta: long mDurationUS
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: int maximumSize
com.google.android.exoplayer2.upstream.StatsDataSource: android.net.Uri lastOpenedUri
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: com.google.android.exoplayer2.extractor.ExtractorsFactory FACTORY
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.util.Map ICY_METADATA_HEADERS
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.bumptech.glide.request.SingleRequest: long startTime
com.google.android.exoplayer2.SimpleExoPlayer: int surfaceWidth
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory: android.content.ContentResolver contentResolver
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor silenceSkippingAudioProcessor
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsReconfigureWorkaround
com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader: int id
com.bumptech.glide.RequestBuilder: boolean isThumbnailBuilt
com.google.android.exoplayer2.text.ttml.TtmlNode: boolean isTextNode
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool byteArrayPool
com.bumptech.glide.load.engine.EngineKey: java.lang.Class resourceClass
androidx.appcompat.app.WindowDecorActionBar: boolean mNowShowing
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.util.ParsableByteArray scratch
com.bumptech.glide.disklrucache.DiskLruCache: java.io.File journalFileTmp
androidx.activity.ComponentActivity$2: androidx.activity.ComponentActivity this$0
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.util.LongArray cueClusterPositions
com.bumptech.glide.disklrucache.StrictLineReader: java.nio.charset.Charset charset
com.google.android.exoplayer2.util.PriorityTaskManager: int highestPriority
com.google.android.exoplayer2.extractor.ts.LatmReader: boolean otherDataPresent
androidx.appcompat.R$styleable: int TextAppearance_android_textSize
com.google.android.exoplayer2.audio.Sonic: int oldRatePosition
com.google.android.exoplayer2.audio.SonicAudioProcessor: long outputBytes
androidx.appcompat.R$styleable: int SearchView_layout
com.google.android.exoplayer2.ui.SubtitlePainter: int parentTop
androidx.appcompat.R$styleable: int AppCompatTheme_windowFixedWidthMinor
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_VAL_TYPE__VIDEO
com.google.android.exoplayer2.source.TrackGroup: com.google.android.exoplayer2.Format[] formats
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: boolean trackSelectorResultChanged
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean allowNonIdrKeyframes
androidx.recyclerview.widget.RecyclerView$ViewHolder: androidx.recyclerview.widget.RecyclerView$ViewHolder mShadowingHolder
androidx.appcompat.view.menu.CascadingMenuPopup: int mXOffset
androidx.appcompat.app.AlertController: int mIconId
androidx.appcompat.R$styleable: int RecycleListView_paddingBottomNoButtons
androidx.core.R$id: int accessibility_custom_action_30
com.google.android.exoplayer2.ExoPlayerImpl: boolean playWhenReady
androidx.recyclerview.widget.LinearLayoutManager: boolean mSmoothScrollbarEnabled
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: android.view.LayoutInflater mInflater
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: int frameBytesRead
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] mNodes
androidx.viewpager.widget.ViewPager: int mDrawingOrder
com.google.android.exoplayer2.Format: java.lang.String id
com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.Transformation wrapped
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: int targetSampleSizeBytes
androidx.core.widget.NestedScrollView: android.widget.OverScroller mScroller
androidx.appcompat.widget.ToolbarWidgetWrapper: int mDefaultNavigationContentDescription
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.widget.ScrollingTabContainerView this$0
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: int dataType
androidx.appcompat.R$dimen: int tooltip_precise_anchor_threshold
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: long rawTimestampFramePositionWrapCount
com.google.android.exoplayer2.extractor.PositionHolder: long position
androidx.appcompat.R$styleable: int MenuItem_android_onClick
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.lifecycle.LifecycleOwner mLifecycleOwner
com.google.android.exoplayer2.text.TextRenderer: int nextSubtitleEventIndex
com.google.android.exoplayer2.Timeline$Period: java.lang.Object id
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: int sampleIndex
cn.jzvd.demo.CustomMedia.JZMediaExo: com.google.android.exoplayer2.SimpleExoPlayer simpleExoPlayer
com.bumptech.glide.Glide: com.bumptech.glide.manager.ConnectivityMonitorFactory connectivityMonitorFactory
androidx.viewpager.widget.ViewPager: int mExpectedAdapterCount
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_CODEC_PIXEL_FORMAT
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int memoryCacheSize
com.bumptech.glide.load.engine.ActiveResources: java.lang.ref.ReferenceQueue resourceReferenceQueue
androidx.viewpager.widget.ViewPager: int mChildHeightMeasureSpec
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: androidx.appcompat.view.menu.MenuBuilder val$menu
cn.jzvd.demo.ActivityMain: boolean is
androidx.appcompat.view.menu.ListMenuItemView: android.widget.TextView mTitleView
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: boolean programSpliceFlag
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int mChangingConfigurations
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput output
com.google.android.exoplayer2.extractor.ts.Ac4Reader: java.lang.String trackFormatId
androidx.appcompat.R$styleable: int MenuItem_android_checkable
androidx.core.view.ActionProvider: androidx.core.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: com.google.android.exoplayer2.source.dash.DashChunkSource$Factory chunkSourceFactory
com.google.android.exoplayer2.source.ProgressiveMediaSource: android.net.Uri uri
androidx.exifinterface.media.ExifInterface: java.util.HashMap[] sExifTagMapsForReading
com.google.android.exoplayer2.audio.DefaultAudioSink: long lastFeedElapsedRealtimeMs
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: int trimStartFrames
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder mParentMenu
androidx.fragment.app.Fragment$AnimationInfo: android.view.View mAnimatingAway
androidx.appcompat.app.AlertController: android.os.Message mButtonNegativeMessage
androidx.versionedparcelable.ParcelImpl: androidx.versionedparcelable.VersionedParcelable mParcel
cn.jzvd.JZMediaInterface: cn.jzvd.Jzvd jzvd
androidx.appcompat.R$styleable: int MenuItem_iconTintMode
com.bumptech.glide.Registry: com.bumptech.glide.load.resource.transcode.TranscoderRegistry transcoderRegistry
com.google.android.exoplayer2.util.TimedValueQueue: long[] timestamps
com.bumptech.glide.load.engine.DataCacheGenerator: java.util.List cacheKeys
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int length
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.OrientationHelper mOrientationHelper
com.google.android.exoplayer2.extractor.ts.H264Reader: long totalBytesWritten
com.google.android.exoplayer2.util.FlacStreamMetadata: int sampleRateLookupKey
com.google.android.exoplayer2.trackselection.MappingTrackSelector: com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo currentMappedTrackInfo
cn.jzvd.Jzvd: int videoRotation
androidx.fragment.app.FragmentTransition$3: androidx.fragment.app.Fragment val$outFragment
com.google.android.exoplayer2.text.subrip.SubripDecoder: java.util.ArrayList tags
com.google.android.exoplayer2.extractor.ogg.OggPacket: int currentSegmentIndex
org.slf4j.helpers.SubstituteLogger: boolean createdPostInitialization
com.google.android.exoplayer2.upstream.UdpDataSource: java.net.InetAddress address
tv.danmaku.ijk.media.player.IjkMediaMeta: long AV_CH_LAYOUT_6POINT0
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String IJKM_KEY_STREAMS
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable mDivider
androidx.fragment.app.FragmentTransaction$Op: androidx.fragment.app.Fragment mFragment
com.google.android.exoplayer2.source.SampleQueue: int[] flags
com.google.android.exoplayer2.text.CaptionStyleCompat: int edgeType
com.google.android.exoplayer2.text.dvb.DvbParser: byte[] defaultMap2To8
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.util.ParsableByteArray packetBuffer
androidx.appcompat.R$id: int action_bar
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: java.lang.String name
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: java.lang.Object resource
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: float primaryRChromaticityX
androidx.core.app.ActivityRecreator: java.lang.reflect.Field mainThreadField
com.google.android.exoplayer2.text.pgs.PgsDecoder: com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder cueBuilder
com.google.android.exoplayer2.extractor.ts.SectionReader: int totalSectionLength
com.bumptech.glide.provider.ModelToResourceClassCache: androidx.collection.ArrayMap registeredResourceClassCache
com.google.android.exoplayer2.SimpleExoPlayer: boolean playerReleased
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: int pendingOutputBytes
androidx.appcompat.R$styleable: int MenuItem_android_checked
com.google.android.exoplayer2.source.SampleDataQueue: com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode firstAllocationNode
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: long totalBufferedDurationMs
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: long durationUs
androidx.recyclerview.widget.RecyclerView$ViewHolder: int mFlags
androidx.appcompat.view.menu.MenuItemImpl: int mId
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.extractor.TrackOutput delegate
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket currentDtvCcPacket
com.danikula.videocache.Pinger$PingCallable: com.danikula.videocache.Pinger this$0
com.bumptech.glide.load.engine.EngineJob: boolean useAnimationPool
androidx.appcompat.widget.ActionMenuPresenter: int mActionItemWidthLimit
com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever requestManagerRetriever
com.google.android.exoplayer2.source.SampleQueue: int relativeFirstIndex
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: int channelCount
androidx.core.R$styleable: int GradientColorItem_android_color
com.google.android.exoplayer2.extractor.ts.H262Reader: boolean sampleHasPicture
androidx.lifecycle.LiveData: java.lang.Object mData
com.bumptech.glide.load.engine.ActiveResources$2: com.bumptech.glide.load.engine.ActiveResources this$0
com.bumptech.glide.gifdecoder.StandardGifDecoder: int[] act
com.google.android.exoplayer2.SeekParameters: long toleranceBeforeUs
cn.jzvd.R$id: int clarity
androidx.fragment.app.FragmentFactory: java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String)
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.source.SampleQueue: void discardToEnd()
com.google.android.exoplayer2.audio.AudioSink$ConfigurationException: AudioSink$ConfigurationException(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.WakeLockManager access$2000(com.google.android.exoplayer2.SimpleExoPlayer)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: int getElementType(int)
cn.jzvd.demo.CustomMedia.JZMediaExo: long getDuration()
com.google.android.exoplayer2.source.MediaSourceEventListener: void onLoadCanceled(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handleSourceInfoRefreshEndedPlayback()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void seek()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: android.text.Layout$Alignment getTextAlign()
androidx.appcompat.widget.ScrollingTabContainerView: void performCollapse()
com.bumptech.glide.load.engine.Engine$LoadStatus: Engine$LoadStatus(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void packetFinished()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onMediaPeriodCreated(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: long getDuration()
com.bumptech.glide.request.SingleRequest: java.lang.Object getLock()
cn.jzvd.JzvdStd: void changeUiToNormal()
androidx.appcompat.view.menu.MenuWrapperICS: void clear()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: void applyWorkarounds(java.lang.String,java.util.List)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.collection.LruCache: LruCache(int)
androidx.recyclerview.widget.GridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
com.google.android.exoplayer2.Format: Format(android.os.Parcel)
androidx.lifecycle.ClassesInfoCache: java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updatePeriods()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean isReady(int)
com.google.android.exoplayer2.metadata.emsg.EventMessage$1: com.google.android.exoplayer2.metadata.emsg.EventMessage createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SearchView: void dismissSuggestions()
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadTask access$100(com.google.android.exoplayer2.upstream.Loader)
androidx.fragment.app.FragmentTransition: void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
androidx.appcompat.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()
androidx.core.view.MenuItemCompat: void setAlphabeticShortcut(android.view.MenuItem,char,int)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToPauseShow()
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void setSpeed(float)
androidx.collection.ArrayMap: boolean retainAll(java.util.Collection)
tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler: IjkMediaPlayer$EventHandler(tv.danmaku.ijk.media.player.IjkMediaPlayer,android.os.Looper)
org.slf4j.helpers.Util: <clinit>()
android.support.v4.media.session.ParcelableVolumeInfo: <clinit>()
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: void setScreenNormal()
androidx.appcompat.view.ActionBarPolicy: int getStackedTabMaxWidth()
com.bumptech.glide.request.target.ViewTarget: <clinit>()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isAudioSampleRateSupportedV21(int)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: void parseMetadata(org.xmlpull.v1.XmlPullParser,java.util.Map)
androidx.appcompat.app.AppCompatDelegate: void setTheme(int)
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithTrackInfo(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
com.bumptech.glide.load.model.FileLoader$StreamFactory$1: java.lang.Class getDataClass()
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String logBitmap(android.graphics.Bitmap)
com.google.android.exoplayer2.util.ParsableBitArray: ParsableBitArray(byte[],int)
cn.jzvd.demo.ActivityTinyWindowRecycleView$1: ActivityTinyWindowRecycleView$1(cn.jzvd.demo.ActivityTinyWindowRecycleView)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
android.support.v4.media.session.PlaybackStateCompat: int describeContents()
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: <clinit>()
com.google.android.exoplayer2.metadata.id3.MlltFrame: MlltFrame(int,int,int,int[],int[])
com.google.android.exoplayer2.extractor.ts.AdtsReader: void findNextSample(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.cursoradapter.widget.CursorFilter: CursorFilter(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient)
com.bumptech.glide.request.BaseRequestOptions: boolean isTransformationRequired()
com.bumptech.glide.request.BaseRequestOptions: boolean getOnlyRetrieveFromCache()
com.google.android.exoplayer2.util.ConditionVariable: boolean close()
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.source.EmptySampleStream: boolean isReady()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean codecNeedsEosBufferTimestampWorkaround(java.lang.String)
com.google.android.exoplayer2.drm.DefaultDrmSession: void provision()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getHevcProfileAndLevel(java.lang.String,java.lang.String[])
androidx.fragment.app.FragmentManagerImpl: void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int)
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder: HlsChunkSource$HlsChunkHolder()
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory: UrlUriLoader$StreamFactory()
androidx.appcompat.view.menu.MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
cn.jzvd.demo.CustomMedia.JZMediaExo: void pause()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
org.slf4j.impl.AndroidLoggerAdapter: boolean isLoggable(int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int canKeepCodec(android.media.MediaCodec,com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setLooping(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void stopSmoothScroller()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
com.bumptech.glide.provider.LoadPathCache: <clinit>()
com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver: void onReceive(android.content.Context,android.content.Intent)
com.bumptech.glide.disklrucache.DiskLruCache: int access$1900(com.bumptech.glide.disklrucache.DiskLruCache)
androidx.core.app.BundleCompat$BundleCompatBaseImpl: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
androidx.appcompat.widget.ListPopupWindow: void setOverlapAnchor(boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onLoadCompleted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: java.lang.String access$202(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void setTitle(java.lang.CharSequence)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: <clinit>()
com.danikula.videocache.HttpProxyCache: boolean isUseCache(com.danikula.videocache.GetRequest)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float)
com.google.android.exoplayer2.metadata.icy.IcyHeaders: IcyHeaders(android.os.Parcel)
cn.jzvd.JZDataSource: boolean containsTheUrl(java.lang.Object)
androidx.collection.LongSparseArray: <clinit>()
com.google.android.exoplayer2.SimpleExoPlayer: SimpleExoPlayer(android.content.Context,com.google.android.exoplayer2.RenderersFactory,com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.BandwidthMeter,com.google.android.exoplayer2.analytics.AnalyticsCollector,com.google.android.exoplayer2.util.Clock,android.os.Looper)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isDecodeOnlyBuffer(long)
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory: StringLoader$AssetFileDescriptorFactory()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View)
com.bumptech.glide.load.model.LazyHeaders: java.util.Map getHeaders()
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.shapes.Shape getDrawableShape()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int)
com.bumptech.glide.load.resource.gif.GifDrawable: void stop()
com.google.android.exoplayer2.extractor.ogg.OggExtractor: void release()
androidx.recyclerview.widget.RecyclerView: boolean isPreferredNextFocus(android.view.View,android.view.View,int)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.RecyclerView: void stopScrollersInternal()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveGroup(int)
com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder,com.bumptech.glide.GeneratedAppGlideModule)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setVariablePadding(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.extractor.ts.SeiReader: SeiReader(java.util.List)
cn.jzvd.Jzvd: void onStateNormal()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder: boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options)
android.support.v4.media.session.PlaybackStateCompat$1: PlaybackStateCompat$1()
androidx.core.content.res.TypedArrayUtils: float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float)
com.google.android.exoplayer2.audio.DefaultAudioSink: void reset()
androidx.appcompat.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)
androidx.exifinterface.media.ExifInterface: void setThumbnailData(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
android.support.v4.media.RatingCompat: <clinit>()
com.bumptech.glide.load.model.StringLoader$StreamFactory: StringLoader$StreamFactory()
androidx.appcompat.widget.ListPopupWindow: void setHorizontalOffset(int)
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: java.lang.Object getProvider()
androidx.core.util.Pools$SynchronizedPool: Pools$SynchronizedPool(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: android.text.SpannableString buildSpannableString()
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(int,int)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
androidx.appcompat.widget.SearchView: android.os.Parcelable onSaveInstanceState()
com.bumptech.glide.load.data.ExifOrientationStream: void reset()
androidx.recyclerview.widget.OrientationHelper$1: int getTotalSpace()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: <clinit>()
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction: int getIcon(java.lang.Object)
com.google.android.exoplayer2.upstream.StatsDataSource: StatsDataSource(com.google.android.exoplayer2.upstream.DataSource)
androidx.collection.MapCollections$ValuesCollection: boolean retainAll(java.util.Collection)
androidx.versionedparcelable.VersionedParcel: int readInt(int,int)
androidx.appcompat.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)
com.bumptech.glide.load.data.mediastore.FileService: long length(java.io.File)
tv.danmaku.ijk.media.player.TextureMediaPlayer: TextureMediaPlayer(tv.danmaku.ijk.media.player.IMediaPlayer)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter)
android.support.v4.media.MediaMetadataCompat$1: android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel)
cn.jzvd.demo.ActivityDirectPlay: void onBackPressed()
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.ChapterTocFrame decodeChapterTOCFrame(com.google.android.exoplayer2.util.ParsableByteArray,int,int,boolean,int,com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.extractor.mp3.Seeker$UnseekableSeeker: Seeker$UnseekableSeeker()
com.google.android.exoplayer2.source.BaseMediaSource: void releaseSource(com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller)
com.google.android.exoplayer2.DefaultLoadControl: void onStopped()
android.support.v4.os.IResultReceiver$Stub$Proxy: android.os.IBinder asBinder()
androidx.fragment.app.FragmentController: void dispatchConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int writeToOutput(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.TrackOutput,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean isPlaying()
com.danikula.videocache.Pinger$PingCallable: Pinger$PingCallable(com.danikula.videocache.Pinger)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: long skip(long)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: VideoDecoderOutputBuffer(com.google.android.exoplayer2.video.VideoDecoderOutputBuffer$Owner)
androidx.fragment.app.Fragment: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.bumptech.glide.load.resource.gif.GifDrawable: int getIntrinsicWidth()
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand$1: TimeSignalCommand$1()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onVideoSizeChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,int,int,float)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry eldest()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: boolean handles(java.lang.Object)
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory: java.net.HttpURLConnection build(java.net.URL)
com.bumptech.glide.load.model.AssetUriLoader: boolean handles(java.lang.Object)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.source.SampleQueue: void maybeThrowError()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$MetadataSampleInfo: FragmentedMp4Extractor$MetadataSampleInfo(long,int)
androidx.fragment.app.FragmentManagerViewModel: boolean removeRetainedFragment(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.audio.Ac4Util: int readVariableBits(com.google.android.exoplayer2.util.ParsableBitArray,int)
com.google.android.exoplayer2.text.ttml.TtmlNode: TtmlNode(java.lang.String,java.lang.String,long,long,com.google.android.exoplayer2.text.ttml.TtmlStyle,java.lang.String[],java.lang.String,java.lang.String)
com.bumptech.glide.GlideContext: <clinit>()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions clone()
androidx.appcompat.app.AlertController: AlertController(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window)
androidx.appcompat.widget.AppCompatTextHelper: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onPlaylistRefreshRequired(android.net.Uri)
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.AudioFocusManager: AudioFocusManager(android.content.Context,android.os.Handler,com.google.android.exoplayer2.AudioFocusManager$PlayerControl)
androidx.fragment.app.FragmentFactory: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
androidx.core.app.ComponentActivity: ComponentActivity()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: boolean equals(java.lang.Object)
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.DecoderInputBuffer dequeueInputBuffer()
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher: android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void setIsTimestampMaster(boolean)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void skipInternal()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: void recalcViewsWithUnhandled()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerAfter()
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: java.lang.String toString()
androidx.core.view.ViewConfigurationCompat: int getScaledHoverSlop(android.view.ViewConfiguration)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
com.google.android.exoplayer2.source.ads.AdPlaybackState: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.DefaultMediaClock: void stop()
com.google.android.exoplayer2.util.Util: <clinit>()
com.google.android.exoplayer2.util.Util: long constrainValue(long,long,long)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.load.resource.bitmap.FitCenter: android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean deviceNeedsNoPostProcessWorkaround()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: void skipSampleEncryptionData()
android.support.v4.media.session.MediaSessionCompat$Token: boolean equals(java.lang.Object)
com.bumptech.glide.load.resource.transcode.UnitTranscoder: UnitTranscoder()
androidx.core.content.res.ComplexColorCompat: void setColor(int)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
com.google.android.exoplayer2.AudioBecomingNoisyManager: boolean access$000(com.google.android.exoplayer2.AudioBecomingNoisyManager)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()
androidx.appcompat.widget.AppCompatTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.fragment.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)
androidx.appcompat.widget.LinearLayoutCompat: boolean hasDividerBeforeChildAt(int)
androidx.core.view.AccessibilityDelegateCompat: <clinit>()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setOrientation(int)
android.support.v4.os.ResultReceiver$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isAutoMirrored()
cn.jzvd.Jzvd: void startFullscreenDirectly(android.content.Context,java.lang.Class,cn.jzvd.JZDataSource)
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadTask access$102(com.google.android.exoplayer2.upstream.Loader,com.google.android.exoplayer2.upstream.Loader$LoadTask)
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry: boolean handles(java.lang.Class,java.lang.Class)
com.google.android.exoplayer2.util.SlidingPercentile: void addSample(int,float)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: boolean canSelectFormat(com.google.android.exoplayer2.Format,int,float,long)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void onTransferEnd(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class)
com.bumptech.glide.manager.SupportRequestManagerFragment: void onDestroy()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void seekTo(long)
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void setup()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getActionItems()
androidx.appcompat.app.ResourcesFlusher: void flushLollipops(android.content.res.Resources)
androidx.appcompat.widget.ResourcesWrapper: android.util.DisplayMetrics getDisplayMetrics()
androidx.appcompat.view.menu.CascadingMenuPopup: int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.upstream.StatsDataSource: long getBytesRead()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setResizeMode(int)
androidx.viewpager.widget.ViewPager: void recomputeScrollPosition(int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager: int convertFocusDirectionToLayoutDirection(int)
androidx.appcompat.app.AlertDialog: void setTitle(java.lang.CharSequence)
com.bumptech.glide.load.data.HttpUrlFetcher: <clinit>()
androidx.collection.SparseArrayCompat: int keyAt(int)
androidx.fragment.app.FragmentManager: androidx.fragment.app.FragmentFactory getFragmentFactory()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRecyclable()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void stop()
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onClickUiToggle()
com.bumptech.glide.util.LruCache: java.lang.Object remove(java.lang.Object)
com.bumptech.glide.util.Util: int getBytesPerPixel(android.graphics.Bitmap$Config)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: long access$100(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)
androidx.appcompat.view.menu.SubMenuWrapperICS: void clearHeader()
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.app.Activity)
com.google.android.exoplayer2.drm.DrmInitData: int compare(com.google.android.exoplayer2.drm.DrmInitData$SchemeData,com.google.android.exoplayer2.drm.DrmInitData$SchemeData)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object remove(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void setBackStackIndex(int,androidx.fragment.app.BackStackRecord)
androidx.appcompat.widget.Toolbar$2: Toolbar$2(androidx.appcompat.widget.Toolbar)
com.bumptech.glide.load.model.ByteBufferEncoder: boolean encode(java.nio.ByteBuffer,java.io.File,com.bumptech.glide.load.Options)
org.slf4j.helpers.MessageFormatter: void booleanArrayAppend(java.lang.StringBuilder,boolean[])
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.exoplayer2.Format: boolean initializationDataEquals(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getAvcProfileAndLevel(java.lang.String,java.lang.String[])
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean isStateful()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void checkPaneVisibility(android.view.View,boolean)
com.bumptech.glide.Glide: com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void access$000(com.google.android.exoplayer2.video.MediaCodecVideoRenderer)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean,int,int)
com.google.android.exoplayer2.audio.AudioRendererEventListener: void onAudioEnabled(com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator: java.lang.String next()
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader)
androidx.viewpager.widget.ViewPager: void setScrollingCacheEnabled(boolean)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions priority(com.bumptech.glide.Priority)
androidx.appcompat.view.menu.ActionMenuItemView: void onClick(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setChangingConfigurations(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getFocusedChild()
com.bumptech.glide.load.model.DataUrlLoader: DataUrlLoader(com.bumptech.glide.load.model.DataUrlLoader$DataDecoder)
androidx.core.view.DisplayCutoutCompat: DisplayCutoutCompat(java.lang.Object)
com.bumptech.glide.load.Option: com.bumptech.glide.load.Option memory(java.lang.String,java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String getBitmapString(android.graphics.Bitmap)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: LruArrayPool(int)
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource: com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.ts.TsExtractor: void maybeOutputSeekMap(long)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: void onPrepared(android.media.MediaPlayer)
com.danikula.videocache.HttpProxyCacheServer: void waitForRequest()
android.support.v4.media.session.MediaSessionCompat$Token: void setExtraBinder(android.support.v4.media.session.IMediaSession)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void prependToSpan(android.view.View)
androidx.lifecycle.ClassesInfoCache$MethodReference: ClassesInfoCache$MethodReference(int,java.lang.reflect.Method)
com.bumptech.glide.disklrucache.DiskLruCache$Editor: void abortUnlessCommitted()
com.bumptech.glide.request.target.CustomTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
androidx.collection.LongSparseArray: java.lang.String toString()
androidx.fragment.app.FragmentManagerImpl: void completeShowHideFragment(androidx.fragment.app.Fragment)
com.danikula.videocache.HttpUrlSource: HttpUrlSource(java.lang.String)
androidx.core.widget.NestedScrollView: boolean dispatchNestedScroll(int,int,int,int,int[])
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean configureRetry(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
com.google.android.exoplayer2.metadata.flac.VorbisComment: int hashCode()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: PsBinarySearchSeeker$PsScrSeeker(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$1)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast: float getScaleFactor(int,int,int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder enqueueNextMediaPeriodHolder(com.google.android.exoplayer2.RendererCapabilities[],com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.MediaPeriodInfo,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
com.danikula.videocache.HttpProxyCache: void responseWithCache(java.io.OutputStream,long)
com.bumptech.glide.load.engine.Engine$DecodeJobFactory: com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.metadata.id3.CommentFrame: CommentFrame(java.lang.String,java.lang.String,java.lang.String)
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter: FirstFrameAndAfterTrimMemoryWaiter()
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int)
androidx.recyclerview.widget.RecyclerView$SavedState: <clinit>()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap)
cn.jzvd.JZMediaSystem: void onVideoSizeChanged(android.media.MediaPlayer,int,int)
com.google.android.exoplayer2.util.SlidingPercentile: <clinit>()
com.google.android.exoplayer2.source.ClippingMediaPeriod: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups()
androidx.fragment.app.FragmentActivity: void onResume()
androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTransitionImpl: java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList)
androidx.appcompat.app.AlertController$AlertParams$2: void bindView(android.view.View,android.content.Context,android.database.Cursor)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: void ensureMediaCodecInfosInitialized()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleG1Character(int)
com.bumptech.glide.load.model.AssetUriLoader: AssetUriLoader(android.content.res.AssetManager,com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: long durationUsToFrames(long)
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int,int)
com.google.android.exoplayer2.text.ssa.SsaSubtitle: long getEventTime(int)
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long getDataEndPosition()
com.google.android.exoplayer2.source.chunk.DataChunk: DataChunk(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,int,com.google.android.exoplayer2.Format,int,java.lang.Object,byte[])
com.google.android.exoplayer2.upstream.Loader: Loader(java.lang.String)
cn.jzvd.Jzvd: void dismissBrightnessDialog()
cn.jzvd.Jzvd$ProgressTimerTask: void run()
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: int getSampleCount()
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.Options getOptions()
androidx.appcompat.widget.ActionBarBackgroundDrawable: void draw(android.graphics.Canvas)
com.google.android.exoplayer2.upstream.AssetDataSource: android.net.Uri getUri()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
com.bumptech.glide.RequestManager: RequestManager(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context)
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: void onReset()
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: WebvttDecoder()
com.bumptech.glide.load.data.BufferedOutputStream: void write(byte[],int,int)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
cn.jzvd.demo.CustomJzvd.JzvdStdShowTextureViewAfterAutoComplete: JzvdStdShowTextureViewAfterAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void adjustDropDownSizeAndPosition()
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTint(int)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isProjected()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewInLimitedList(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: android.graphics.drawable.Drawable getBackground()
androidx.versionedparcelable.VersionedParcelParcel: int readInt()
androidx.core.provider.SelfDestructiveThread: java.lang.Object postAndWait(java.util.concurrent.Callable,int)
com.google.android.exoplayer2.MediaPeriodHolder: long applyTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelectorResult,long,boolean)
com.bumptech.glide.gifdecoder.StandardGifDecoder: void clear()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: <clinit>()
com.bumptech.glide.load.engine.Engine: <clinit>()
androidx.appcompat.view.menu.MenuItemImpl: boolean isVisible()
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.source.IcyDataSource: void close()
androidx.core.graphics.TypefaceCompatApi24Impl: boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean)
androidx.collection.MapCollections$MapIterator: void remove()
androidx.core.widget.NestedScrollView: <clinit>()
androidx.appcompat.app.AlertController: void setView(android.view.View,int,int,int,int)
androidx.fragment.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.lifecycle.Lifecycling: boolean isLifecycleParent(java.lang.Class)
cn.jzvd.demo.ActivityListViewFragmentViewPager$MyAdapter: androidx.fragment.app.Fragment getItem(int)
com.google.android.exoplayer2.video.AvcConfig: AvcConfig(java.util.List,int,int,int,float)
com.bumptech.glide.provider.ModelToResourceClassCache: void put(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List)
com.bumptech.glide.load.Options: void putAll(com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.TrackGroup$1: com.google.android.exoplayer2.source.TrackGroup createFromParcel(android.os.Parcel)
androidx.core.widget.AutoScrollHelper: <clinit>()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDecoderInputFormatChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.video.ColorInfo: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.util.Util: java.util.List getSnapshot(java.util.Collection)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId resolveMediaPeriodIdForAds(java.lang.Object,long,long)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setRepeatModeInternal(int)
com.google.android.exoplayer2.upstream.Loader$LoadTask: void finish()
com.danikula.videocache.file.Files: void makeDir(java.io.File)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation)
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder(androidx.core.view.WindowInsetsCompat)
androidx.core.view.ViewCompat$3: java.lang.Boolean frameworkGet(android.view.View)
androidx.core.graphics.PathParser$PathDataNode: void addCommand(android.graphics.Path,float[],char,char,float[])
com.google.android.exoplayer2.metadata.id3.ApicFrame$1: com.google.android.exoplayer2.metadata.id3.ApicFrame createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentViewLifecycleOwner: androidx.lifecycle.Lifecycle getLifecycle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean onStateChanged(int[])
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool: ByteBufferGifDecoder$GifHeaderParserPool()
com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder: byte[] encode(com.google.android.exoplayer2.metadata.emsg.EventMessage)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean onStateChanged(int[])
androidx.appcompat.graphics.drawable.DrawableWrapper: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
androidx.core.view.NestedScrollingParentHelper: NestedScrollingParentHelper(android.view.ViewGroup)
tv.danmaku.ijk.media.player.IMediaPlayer: void setDisplay(android.view.SurfaceHolder)
com.google.android.exoplayer2.source.BaseMediaSource: BaseMediaSource()
androidx.appcompat.app.AppCompatDelegateImpl: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.util.ParsableByteArray: java.lang.String readNullTerminatedString(int)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.util.SystemHandlerWrapper: boolean sendEmptyMessageAtTime(int,long)
androidx.appcompat.view.ContextThemeWrapper: int getThemeResId()
com.bumptech.glide.load.engine.ResourceCacheGenerator: void cancel()
com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int)
cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen: void setScreenNormal()
androidx.collection.MapCollections: MapCollections()
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void maybeUpdateLatency(long)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: DefaultHlsExtractorFactory()
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: int hashCode()
androidx.lifecycle.ViewModel: void onCleared()
androidx.fragment.app.FragmentManagerState$1: FragmentManagerState$1()
com.bumptech.glide.load.engine.DiskCacheStrategy$2: DiskCacheStrategy$2()
androidx.fragment.app.BackStackState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentManagerViewModel: FragmentManagerViewModel(boolean)
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcelable)
com.google.android.exoplayer2.audio.Sonic: void removePitchFrames(int)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: java.lang.String toString()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)
androidx.appcompat.widget.ActionBarOverlayLayout: void dismissPopups()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onLoadCanceled(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.metadata.id3.CommentFrame: CommentFrame(android.os.Parcel)
androidx.appcompat.view.SupportActionModeWrapper: boolean getTitleOptionalHint()
tv.danmaku.ijk.media.player.MediaPlayerProxy: MediaPlayerProxy(tv.danmaku.ijk.media.player.IMediaPlayer)
androidx.appcompat.app.AlertController$AlertParams: AlertController$AlertParams(android.content.Context)
com.google.android.exoplayer2.text.cea.Cea608Decoder: char getExtendedEsFrChar(byte)
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback: GifFrameLoader$FrameLoaderCallback(com.bumptech.glide.load.resource.gif.GifFrameLoader)
com.bumptech.glide.request.target.ViewTarget: void onLoadStarted(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfKeyframe(int[])
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View)
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,long,long,java.lang.String,int)
com.google.android.exoplayer2.metadata.icy.IcyHeaders: IcyHeaders(int,java.lang.String,java.lang.String,java.lang.String,boolean,int)
com.google.android.exoplayer2.metadata.flac.VorbisComment: <clinit>()
com.google.android.exoplayer2.extractor.ts.LatmReader: long latmGetValue(com.google.android.exoplayer2.util.ParsableBitArray)
com.google.android.exoplayer2.upstream.Loader$LoadTask: long getRetryDelayMillis()
com.google.android.exoplayer2.text.cea.Cea708Decoder: Cea708Decoder(int,java.util.List)
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setIconUri(java.lang.Object,android.net.Uri)
com.google.android.exoplayer2.util.EventDispatcher: void addListener(android.os.Handler,java.lang.Object)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData$1: com.google.android.exoplayer2.drm.DrmInitData$SchemeData createFromParcel(android.os.Parcel)
androidx.appcompat.widget.TooltipPopup: void show(android.view.View,int,int,boolean,java.lang.CharSequence)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: void putSps(com.google.android.exoplayer2.util.NalUnitUtil$SpsData)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.load.engine.DiskCacheStrategy$1: boolean decodeCachedData()
androidx.cursoradapter.widget.CursorAdapter: long getItemId(int)
cn.jzvd.Jzvd: void onProgressChanged(android.widget.SeekBar,int,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDrmSessionAcquired()
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: TrackEncryptionBox(boolean,java.lang.String,int,byte[],int,int,byte[])
androidx.fragment.app.FragmentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.bumptech.glide.request.BaseRequestOptions: BaseRequestOptions()
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedStart(android.view.View)
androidx.fragment.app.Fragment: void performOptionsMenuClosed(android.view.Menu)
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: int access$000(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setScreenOnWhilePlaying(boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isAdaptiveV19(android.media.MediaCodecInfo$CodecCapabilities)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean isPendingReset()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: void createChoreographerInstanceInternal()
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1: com.bumptech.glide.load.engine.DecodeJob create()
com.google.android.exoplayer2.audio.DefaultAudioSink: void handleDiscontinuity()
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void close()
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainTypedArray(int)
com.google.android.exoplayer2.drm.DefaultDrmSession: void postKeyRequest(byte[],int,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isStateful()
com.bumptech.glide.gifdecoder.StandardGifDecoder: <clinit>()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
androidx.core.widget.TextViewCompat$OreoCallback: void recomputeProcessTextMenuItems(android.view.Menu)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: BinarySearchSeeker$BinarySearchSeekMap(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekTimestampConverter,long,long,long,long,long,long)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setFilterBitmap(boolean)
tv.danmaku.ijk.media.player.MediaPlayerProxy: long getDuration()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long getInitialBitrateEstimateForNetworkType(int)
org.slf4j.helpers.SubstituteLogger: void log(org.slf4j.event.LoggingEvent)
androidx.appcompat.app.TwilightManager: androidx.appcompat.app.TwilightManager getInstance(android.content.Context)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void prepareAsync()
androidx.appcompat.widget.AppCompatSeekBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void drainAndUpdateCodecDrmSession()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: boolean notifyOnInfo(int,int)
com.google.android.exoplayer2.text.TextRenderer: void onStreamChanged(com.google.android.exoplayer2.Format[],long)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOriginalOffset(int)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setLinethrough(boolean)
com.google.android.exoplayer2.extractor.ts.PesReader: void parseHeaderExtension()
androidx.fragment.app.FragmentTransaction: void addOp(androidx.fragment.app.FragmentTransaction$Op)
cn.jzvd.Jzvd: void setBufferProgress(int)
cn.jzvd.demo.ActivityApiRotationVideoSize: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: Ac3Util$SyncFrameInfo(java.lang.String,int,int,int,int,int)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: void assertValidOffset()
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getFirstMediaPeriodInfo(com.google.android.exoplayer2.PlaybackInfo)
androidx.fragment.app.FragmentController: void dispatchResume()
android.support.v4.media.MediaBrowserCompat$MediaItem$1: android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.util.Assertions: void checkState(boolean)
androidx.appcompat.app.TwilightCalculator: void calculateTwilight(long,double,double)
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: void parseHeaderExtension()
com.bumptech.glide.load.model.UrlUriLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: MediaSource$MediaPeriodId(java.lang.Object,int,int,long)
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1: GlideExecutor$UncaughtThrowableStrategy$1()
androidx.appcompat.app.AppCompatDelegateImpl: boolean updateForNightMode(int,boolean)
com.google.android.exoplayer2.drm.DefaultDrmSession: void onProvisionResponse(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.Intent getIntent()
cn.jzvd.JZMediaSystem: void onCompletion(android.media.MediaPlayer)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState: ProgressiveMediaPeriod$PreparedState(com.google.android.exoplayer2.extractor.SeekMap,com.google.android.exoplayer2.source.TrackGroupArray,boolean[])
androidx.appcompat.widget.DropDownListView: DropDownListView(android.content.Context,boolean)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: void filterAdaptiveVideoTrackCountForMimeType(com.google.android.exoplayer2.source.TrackGroup,int[],int,java.lang.String,int,int,int,int,java.util.List)
com.google.android.exoplayer2.source.SampleQueue: void sampleData(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.collection.MapCollections$ArrayIterator: boolean hasNext()
com.google.android.exoplayer2.source.BaseMediaSource: void disableInternal()
com.bumptech.glide.load.resource.bitmap.TransformationUtils: void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap)
com.google.android.exoplayer2.util.Log: void e(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.google.android.exoplayer2.metadata.MetadataRenderer: void invokeRendererInternal(com.google.android.exoplayer2.metadata.Metadata)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist getMasterPlaylist()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem)
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.google.android.exoplayer2.source.hls.HlsSampleStream: void unbindSampleQueue()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void completeTransaction()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeThrowPrepareError()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[])
androidx.appcompat.widget.SuggestionsAdapter: void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.fragment.app.FragmentManagerImpl$4: void onAnimationEnd(android.animation.Animator)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: void writeToParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long access$1300(com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap)
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedEnd(android.view.View)
com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientation(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: com.google.android.exoplayer2.text.cea.Cea708Cue build()
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: boolean handles(java.lang.Object)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void cancelTransaction()
com.bumptech.glide.util.Util: boolean bothNullOrEqual(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.upstream.ParsingLoadable: android.net.Uri getUri()
androidx.appcompat.widget.ResourcesWrapper: void getValueForDensity(int,int,android.util.TypedValue,boolean)
com.google.android.exoplayer2.metadata.icy.IcyDecoder: IcyDecoder()
com.google.android.exoplayer2.PlaybackParameters: PlaybackParameters(float,float)
androidx.core.graphics.drawable.IconCompat: void onPostParceling()
com.bumptech.glide.disklrucache.DiskLruCache: com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: ViewPropertyAnimatorListenerAdapter()
com.bumptech.glide.util.Util: android.os.Handler getUiThreadHandler()
tv.danmaku.ijk.media.player.IMediaPlayer: void setScreenOnWhilePlaying(boolean)
com.bumptech.glide.disklrucache.DiskLruCache: DiskLruCache(java.io.File,int,int,long)
com.google.android.exoplayer2.source.ProgressiveMediaSource: void prepareSourceInternal(com.google.android.exoplayer2.upstream.TransferListener)
com.danikula.videocache.HttpProxyCacheServer: HttpProxyCacheServer(com.danikula.videocache.Config)
cn.jzvd.Jzvd: void setCurrentJzvd(cn.jzvd.Jzvd)
androidx.appcompat.widget.AppCompatTextHelper: void setAllCaps(boolean)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean isWideBandValidFrameType(int)
com.bumptech.glide.util.ExceptionPassthroughInputStream: com.bumptech.glide.util.ExceptionPassthroughInputStream obtain(java.io.InputStream)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateNavigationIcon()
com.google.android.exoplayer2.audio.WavUtil: int getPcmEncodingForType(int,int)
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
com.google.android.exoplayer2.upstream.DefaultDataSource: android.net.Uri getUri()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: void startMasterElement(int,long,long)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: FragmentManagerImpl$StartEnterTransitionListener(androidx.fragment.app.BackStackRecord,boolean)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: int getAacAudioObjectType(com.google.android.exoplayer2.util.ParsableBitArray)
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition parseRegionComposition(com.google.android.exoplayer2.util.ParsableBitArray,int)
com.google.android.exoplayer2.text.SubtitleInputBuffer: SubtitleInputBuffer()
com.bumptech.glide.RequestBuilder: void initRequestListeners(java.util.List)
cn.jzvd.demo.ActivityMain: void clickApi(android.view.View)
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.os.Bundle getExtras()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onShuffleModeChangedRemoved(boolean)
tv.danmaku.ijk.media.player.MediaPlayerProxy$8: MediaPlayerProxy$8(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2: VideoDecoder$2()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getNextLoadPositionUs()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long _getPropertyLong(int,long)
com.bumptech.glide.util.ByteBufferUtil: java.nio.ByteBuffer fromFile(java.io.File)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: void setBackgroundResource(int)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void assignCoordinateFromPadding()
com.google.android.exoplayer2.util.ParsableByteArray: int bytesLeft()
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: void release()
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory: MediaStoreVideoThumbLoader$Factory(android.content.Context)
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isPassword()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setEnterFadeDuration(int)
androidx.core.graphics.ColorUtils: int setAlphaComponent(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: int compareTo(java.lang.Long)
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: void run()
androidx.appcompat.view.menu.BaseMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.fragment.app.FragmentTransitionCompat21: void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int updateScoreForMatch(int,java.lang.String,java.lang.String,int)
androidx.appcompat.widget.ResourceManagerInternal: void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks)
com.google.android.exoplayer2.util.TimedValueQueue: void clearBufferOnTimeDiscontinuity(long)
androidx.appcompat.widget.AppCompatTextHelper: int[] getAutoSizeTextAvailableSizes()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void maybeRenotifyVideoSizeChanged()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$1: com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.text.dvb.DvbParser: int[] generateDefault4BitClutEntries()
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: tv.danmaku.ijk.media.player.misc.IMediaFormat getFormat()
com.bumptech.glide.manager.NullConnectivityMonitor: void onDestroy()
com.bumptech.glide.request.target.ViewTarget: void maybeRemoveAttachStateListener()
com.google.android.exoplayer2.extractor.wav.WavExtractor: <clinit>()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult underestimatedResult(long,long)
androidx.lifecycle.ViewModelStore: void put(java.lang.String,androidx.lifecycle.ViewModel)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep1()
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollHorizontally(int)
org.slf4j.LoggerFactory: void emitReplayOrSubstituionWarning(org.slf4j.event.SubstituteLoggingEvent,int)
com.google.android.exoplayer2.extractor.ts.PsExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.bumptech.glide.load.engine.LoadPath: com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)
com.google.android.exoplayer2.audio.DtsUtil: boolean isLittleEndianFrameHeader(byte[])
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void handleBlockAdditionalData(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track,int,com.google.android.exoplayer2.extractor.ExtractorInput,int)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: int getArrayLength(byte[])
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: float getCodecOperatingRateV23(float,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format[])
com.google.android.exoplayer2.source.MediaSourceEventListener: void onLoadCompleted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.exoplayer2.trackselection.TrackSelectionArray: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: int findItemIndex(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: void dumpProfileLevels(java.lang.String)
androidx.appcompat.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()
androidx.appcompat.app.AlertController: void setupView()
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.ogg.OggExtractor: <clinit>()
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: android.graphics.Bitmap removeLast()
com.google.android.exoplayer2.upstream.DataSchemeDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.bumptech.glide.load.data.ExifOrientationStream: long skip(long)
androidx.core.graphics.drawable.WrappedDrawableApi14: void updateLocalState(android.content.res.Resources)
com.google.android.exoplayer2.source.CompositeMediaSource$MediaSourceAndListener: CompositeMediaSource$MediaSourceAndListener(com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller,com.google.android.exoplayer2.source.MediaSourceEventListener)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getOpacity()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean removeCallbacks(java.lang.Runnable)
com.google.android.exoplayer2.Timeline$Period: long getAdGroupTimeUs(int)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.ts.TsUtil: long readPcrValueFromPcrBytes(byte[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShowAsActionFlags(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char,int,int)
com.danikula.videocache.file.TotalSizeLruDiskUsage: boolean accept(java.io.File,long,int)
androidx.arch.core.executor.DefaultTaskExecutor$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.appcompat.app.AppCompatDelegateImpl: boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
androidx.recyclerview.widget.LinearLayoutManager: void setReverseLayout(boolean)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelection$Definition selectVideoTrack(com.google.android.exoplayer2.source.TrackGroupArray,int[][],int,com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters,boolean)
com.google.android.exoplayer2.metadata.icy.IcyInfo: int hashCode()
com.google.android.exoplayer2.upstream.FileDataSource: java.io.RandomAccessFile openLocalFile(android.net.Uri)
com.bumptech.glide.load.resource.SimpleResource: java.lang.Object get()
androidx.appcompat.widget.SearchView: boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent)
androidx.fragment.app.Fragment: boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: void setupAnimatorSet()
com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler: void handleMessage(android.os.Message)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: <clinit>()
com.google.android.exoplayer2.ExoPlayerImplInternal: void sendMessageToTarget(com.google.android.exoplayer2.PlayerMessage)
androidx.core.view.ActionProvider: void reset()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: android.util.Pair selectAudioTrack(com.google.android.exoplayer2.source.TrackGroupArray,int[][],int,com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationStart(android.view.View)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: void setTargetTagName(java.lang.String)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory: QMediaStoreUriLoader$Factory(android.content.Context,java.lang.Class)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
com.google.android.exoplayer2.audio.AudioTimestampPoller: boolean isTimestampAdvancing()
com.google.android.exoplayer2.drm.DefaultDrmSession: void access$000(com.google.android.exoplayer2.drm.DefaultDrmSession,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleSetPenAttributes()
com.bumptech.glide.RequestManager: <clinit>()
com.google.android.exoplayer2.decoder.SimpleDecoder: java.lang.Object dequeueOutputBuffer()
com.google.android.exoplayer2.extractor.SeekPoint: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: float getInterpolation(float)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder: UnitBitmapDecoder()
androidx.core.view.ViewCompat: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void handleEndOfStream(long)
androidx.appcompat.view.menu.CascadingMenuPopup: void show()
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.HttpURLConnection openConnection(java.net.URL)
androidx.customview.view.AbsSavedState: AbsSavedState(androidx.customview.view.AbsSavedState$1)
androidx.fragment.app.FragmentTransitionCompat21: boolean hasSimpleTarget(android.transition.Transition)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2: void update(byte[],java.lang.Integer,java.security.MessageDigest)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
com.bumptech.glide.gifdecoder.StandardGifDecoder: android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame)
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.google.android.exoplayer2.text.ttml.TtmlNode: void getEventTimes(java.util.TreeSet,boolean)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.core.widget.NestedScrollView$SavedState$1: NestedScrollView$SavedState$1()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void readFrameRemainder(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.text.pgs.PgsSubtitle: int getNextEventTimeIndex(long)
androidx.appcompat.view.menu.BaseMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.recyclerview.widget.OrientationHelper$2: int getEndPadding()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnBufferingUpdateListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener)
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generatePlayingMediaPeriodEventTime()
androidx.appcompat.widget.TintTypedArray: int getResourceId(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View)
androidx.appcompat.view.menu.ListMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.bumptech.glide.manager.EmptyRequestManagerTreeNode: EmptyRequestManagerTreeNode()
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(androidx.fragment.app.FragmentActivity)
org.slf4j.helpers.Util: void report(java.lang.String,java.lang.Throwable)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.util.Util: java.lang.String getLocaleLanguageTagV21(java.util.Locale)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData: AtomParsers$StsdData(int)
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: void cleanup()
com.google.android.exoplayer2.metadata.Metadata$1: java.lang.Object createFromParcel(android.os.Parcel)
cn.jzvd.demo.ActivityApi: ActivityApi()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: java.lang.String getString(java.lang.String)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: void calculateAverageFrameSize(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.engine.ActiveResources: void activate(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: RecyclableBufferedInputStream(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getLayoutPosition()
com.google.android.exoplayer2.extractor.VorbisUtil: void readFloors(com.google.android.exoplayer2.extractor.VorbisBitArray)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTint(int)
com.google.android.exoplayer2.audio.BaseAudioProcessor: java.nio.ByteBuffer getOutput()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isAutoMirrored()
cn.jzvd.JzvdStd: void setScreenNormal()
com.google.android.exoplayer2.audio.DefaultAudioSink: long getWrittenFrames()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: long access$300(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable)
androidx.arch.core.executor.ArchTaskExecutor$2: ArchTaskExecutor$2()
com.bumptech.glide.load.resource.gif.GifFrameLoader: int getHeight()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcelable)
androidx.lifecycle.Lifecycling: java.lang.String getAdapterName(java.lang.String)
androidx.lifecycle.Lifecycle: Lifecycle()
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int getFirstAdIndexToPlay()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleDefineWindow(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isMeasurementUpToDate(int,int,int)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getDecoratedHint(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)
com.bumptech.glide.load.Option: com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater()
com.google.android.exoplayer2.SimpleExoPlayer: void access$1700(com.google.android.exoplayer2.SimpleExoPlayer,boolean,int)
androidx.fragment.app.FragmentManagerImpl: boolean isStateSaved()
com.google.android.exoplayer2.DefaultRenderersFactory: DefaultRenderersFactory(android.content.Context)
com.google.android.exoplayer2.decoder.SimpleDecoder: void run()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDrmSessionManagerError(java.lang.Exception)
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: void onStreamChanged(com.google.android.exoplayer2.Format[],long)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: int determineIdealSelectedIndex(long)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStarted()
androidx.core.view.ActionProvider: boolean isVisible()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: AppCompatDelegateImpl$AutoNightModeManager$1(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator,int)
androidx.fragment.app.FragmentController: void dispatchDestroy()
androidx.fragment.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment)
com.google.android.exoplayer2.util.ParsableByteArray: long readUnsignedInt()
com.google.android.exoplayer2.source.SinglePeriodTimeline: int getIndexOfPeriod(java.lang.Object)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStatePlaying()
tv.danmaku.ijk.media.player.IMediaPlayer: void setLooping(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet,int)
androidx.cursoradapter.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: java.util.List getViewportFilteredTrackIndices(com.google.android.exoplayer2.source.TrackGroup,int,int,boolean)
com.google.android.exoplayer2.source.ClippingMediaPeriod: boolean continueLoading(long)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean peekAmrSignature(com.google.android.exoplayer2.extractor.ExtractorInput,byte[])
tv.danmaku.ijk.media.player.misc.IMediaDataSource: long getSize()
com.google.android.exoplayer2.mediacodec.MediaFormatUtil: void setCsdBuffers(android.media.MediaFormat,java.util.List)
androidx.core.view.ViewParentCompat: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent)
androidx.appcompat.view.menu.StandardMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener: boolean onPreDraw()
androidx.core.graphics.TypefaceCompatApi28Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer: void initialize(android.media.MediaMetadataRetriever,java.nio.ByteBuffer)
androidx.appcompat.widget.RtlSpacingHelper: void setAbsolute(int,int)
androidx.fragment.app.FragmentState: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SearchView$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.metadata.id3.MlltFrame: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.SampleDataQueue: void postAppend(int)
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1: InternalCacheDiskCacheFactory$1(android.content.Context,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupColorAnimator(android.animation.Animator)
com.google.android.exoplayer2.extractor.FlacFrameReader: int readFrameBlockSizeSamplesFromKey(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.disklrucache.DiskLruCache: void processJournal()
com.google.android.exoplayer2.metadata.flac.VorbisComment$1: com.google.android.exoplayer2.metadata.flac.VorbisComment createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int getMaxInputSize(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.appcompat.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.bumptech.glide.util.LruCache: void evict()
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.collection.MapCollections$ValuesCollection: void clear()
androidx.appcompat.widget.AppCompatSeekBar: void jumpDrawablesToCurrentState()
com.google.android.exoplayer2.extractor.ts.DtsReader: DtsReader(java.lang.String)
com.google.android.exoplayer2.decoder.DecoderInputBuffer: void ensureSpaceForWrite(int)
androidx.fragment.app.Fragment$1: Fragment$1(androidx.fragment.app.Fragment)
androidx.lifecycle.LifecycleRegistry: void moveToState(androidx.lifecycle.Lifecycle$State)
com.bumptech.glide.load.resource.gif.GifDrawableTransformation: int hashCode()
com.google.android.exoplayer2.source.UnrecognizedInputFormatException: UnrecognizedInputFormatException(java.lang.String,android.net.Uri)
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.core.app.NavUtils: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onSeekStarted(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: DefaultTrackSelector(com.google.android.exoplayer2.trackselection.TrackSelection$Factory)
com.google.android.exoplayer2.extractor.mkv.VarintReader: void reset()
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isMidrowCtrlCode(byte,byte)
androidx.appcompat.widget.SearchView$9: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void popStart()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity getActivity()
org.slf4j.impl.StaticLoggerBinder: org.slf4j.impl.StaticLoggerBinder getSingleton()
androidx.fragment.app.FragmentManagerImpl: void dispatchPause()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void readStreamMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void dismiss()
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setExtras(java.lang.Object,android.os.Bundle)
com.google.android.exoplayer2.util.PriorityTaskManager: void remove(int)
cn.jzvd.Jzvd: void addTextureView()
tv.danmaku.ijk.media.player.IjkMediaPlayer$1: IjkMediaPlayer$1()
tv.danmaku.ijk.media.player.pragma.DebugLog: void printStackTrace(java.lang.Throwable)
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String onSelectCodec(java.lang.Object,java.lang.String,int,int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: void logNoSupport(java.lang.String)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: java.lang.String decodeStringIfValid(byte[],int,int,java.lang.String)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideSubMenus()
androidx.recyclerview.widget.OrientationHelper$1: int getTransformedEndWithDecoration(android.view.View)
androidx.appcompat.widget.SearchView: void rewriteQueryFromSuggestion(int)
com.google.android.exoplayer2.util.EventDispatcher: EventDispatcher()
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToPlayingShow()
androidx.fragment.app.Fragment: <clinit>()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: long adjustMediaTime(long)
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: AudioTimestampPoller$AudioTimestampV19(android.media.AudioTrack)
androidx.recyclerview.widget.GridLayoutManager: void setSpanCount(int)
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: void audioTrackUnderrun(int,long,long)
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: void maybeThrowUninitializedError()
androidx.lifecycle.ReportFragment: void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader: short getUInt8()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumHeight()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd()
com.bumptech.glide.load.model.ModelCache$ModelKey: void release()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: void sortByScore(java.util.List,com.google.android.exoplayer2.mediacodec.MediaCodecUtil$ScoreProvider)
com.bumptech.glide.RequestBuilder: boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1: void update(byte[],java.lang.Object,java.security.MessageDigest)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener access$100(com.google.android.exoplayer2.ui.AspectRatioFrameLayout)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: java.lang.Class getDataClass()
com.bumptech.glide.manager.DefaultConnectivityMonitor: boolean isConnected(android.content.Context)
com.google.android.exoplayer2.extractor.ts.H265Reader: void startNalUnit(long,int,int,long)
androidx.fragment.app.BackStackState$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void updateDroppedBufferCounters(int)
com.danikula.videocache.HttpProxyCacheServer$SocketProcessorRunnable: HttpProxyCacheServer$SocketProcessorRunnable(com.danikula.videocache.HttpProxyCacheServer,java.net.Socket)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTooltipText(java.lang.CharSequence)
com.google.android.exoplayer2.Format$1: com.google.android.exoplayer2.Format[] newArray(int)
com.google.android.exoplayer2.util.TimedValueQueue: void add(long,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void ensureExecReady(boolean)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.drm.ErrorStateDrmSession: int getState()
androidx.versionedparcelable.VersionedParcelParcel: void closeField()
androidx.core.graphics.drawable.DrawableCompat: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.google.android.exoplayer2.extractor.mkv.VarintReader: int parseUnsignedVarintLength(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
com.google.android.exoplayer2.Format: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ActionMenuView: void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onQueueInputBuffer(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: int hashCode()
androidx.appcompat.widget.ContentFrameLayout: void dispatchFitSystemWindows(android.graphics.Rect)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$4: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
android.support.v4.media.MediaBrowserCompat$MediaItem: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)
com.google.android.exoplayer2.source.BehindLiveWindowException: BehindLiveWindowException()
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkAndReadSampleRate(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.FlacStreamMetadata,int)
androidx.recyclerview.widget.OrientationHelper$2: int getTotalSpace()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long getSeekTimeUs()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void updateMenuView(boolean)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseSenc(com.google.android.exoplayer2.util.ParsableByteArray,int,com.google.android.exoplayer2.extractor.mp4.TrackFragment)
androidx.core.graphics.drawable.IconCompat: java.lang.String toString()
com.google.android.exoplayer2.video.AvcConfig: byte[] buildNalUnitForChild(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.Option: <clinit>()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isHardwareConfigDisallowedByB147430447()
com.google.android.exoplayer2.util.TimestampAdjuster: long getFirstSampleTimestampUs()
com.bumptech.glide.load.data.BufferedOutputStream: BufferedOutputStream(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.fragment.app.FragmentManagerImpl: void dispatchPrimaryNavigationFragmentChanged()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onTracksChanged(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectionArray)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View)
com.bumptech.glide.load.resource.bitmap.FitCenter: boolean equals(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.Downsampler: void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int)
com.bumptech.glide.load.resource.bitmap.Downsampler: Downsampler(java.util.List,android.util.DisplayMetrics,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.widget.ActionBarContextView: void closeMode()
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode: java.util.Set getDescendants()
com.google.android.exoplayer2.DefaultLoadControl: int getDefaultBufferSize(int)
com.google.android.exoplayer2.util.ParsableByteArray: java.lang.String readNullTerminatedString()
androidx.fragment.app.Fragment: android.content.res.Resources getResources()
com.google.android.exoplayer2.source.chunk.Chunk: long bytesLoaded()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: int getBitrateFromFrameSize(int,long)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isTmpDetached()
androidx.fragment.app.FragmentController: void dispatchPause()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.core.widget.NestedScrollView: boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean)
com.google.android.exoplayer2.util.ParsableByteArray: int readInt24()
com.bumptech.glide.util.Util: java.lang.String bytesToHex(byte[],char[])
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.metadata.emsg.EventMessage: byte[] getWrappedMetadataBytes()
com.bumptech.glide.request.SingleRequest: int maybeApplySizeMultiplier(int,float)
androidx.core.provider.FontsContractCompat$FontFamilyResult: int getStatusCode()
androidx.appcompat.widget.AppCompatCheckedTextView: <clinit>()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: java.lang.Object create()
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: boolean isSafeToMultiply(int,int)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: android.content.Context findContextForPackage(android.net.Uri,java.lang.String)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1$1: ImageDecoderResourceDecoder$1$1(com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1: <clinit>()
com.bumptech.glide.util.CachedHashCodeArrayMap: int hashCode()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: java.util.List getDecoderInfos(com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.Format,boolean,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.core.text.PrecomputedTextCompat: java.lang.String toString()
androidx.appcompat.widget.ScrollingTabContainerView: void onAttachedToWindow()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setActivationDelay(int)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.core.util.LogWriter: void close()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void onTransferStart(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)
com.google.android.exoplayer2.source.SampleQueue: void releaseDrmSessionReferences()
com.google.android.exoplayer2.SimpleExoPlayer: void setVideoSurfaceInternal(android.view.Surface,boolean)
com.bumptech.glide.request.BaseRequestOptions: android.graphics.drawable.Drawable getErrorPlaceholder()
com.google.android.exoplayer2.audio.ResamplingAudioProcessor: ResamplingAudioProcessor()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$FileDescriptorFactory: QMediaStoreUriLoader$FileDescriptorFactory(android.content.Context)
com.google.android.exoplayer2.decoder.OutputBuffer: void release()
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$1: void onChildViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.SearchView$SavedState: java.lang.String toString()
androidx.appcompat.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: void order(java.nio.ByteOrder)
com.google.android.exoplayer2.source.SampleDataQueue: void clearAllocationNodes(com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: DropDownListView$GateKeeperDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.RequestManager: boolean untrack(com.bumptech.glide.request.target.Target)
androidx.appcompat.widget.SearchView$2: SearchView$2(androidx.appcompat.widget.SearchView)
androidx.core.text.PrecomputedTextCompat: <clinit>()
com.google.android.exoplayer2.SimpleExoPlayer: void setVideoDecoderOutputBufferRendererInternal(com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.mp3.Seeker getConstantBitrateSeeker(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.audio.AudioRendererEventListener: void onAudioInputFormatChanged(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.Options: void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int getSelectedIndexInTrackGroup()
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: boolean isEnded()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getOrder()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void clearColorFilter()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: long getLong(java.lang.String,long)
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: <clinit>()
androidx.appcompat.widget.AppCompatTextHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.widget.ListPopupWindow: boolean isModal()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean isCodecSupported(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void removeFragment(androidx.fragment.app.Fragment)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setOnControlMessageListener(tv.danmaku.ijk.media.player.IjkMediaPlayer$OnControlMessageListener)
androidx.appcompat.view.menu.SubMenuBuilder: SubMenuBuilder(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle: int getEventTimeCount()
com.bumptech.glide.manager.DefaultConnectivityMonitor: void unregister()
androidx.appcompat.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)
com.bumptech.glide.request.BaseRequestOptions: java.util.Map getTransformations()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void renderToEndOfStream()
com.google.android.exoplayer2.upstream.UdpDataSource: UdpDataSource(int,int)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getLayout(int)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: int getLayoutId()
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: float parsePercentage(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void updateDrmSessionOrReinitializeCodecV23()
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor()
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: JzvdStdShowShareButtonAfterFullscreen(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getStartLine(int)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: java.lang.Object getItem(int)
com.google.android.exoplayer2.extractor.ts.H262Reader: void packetStarted(long,int)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo getPlayingMediaPeriod()
androidx.fragment.app.Fragment$3: Fragment$3(androidx.fragment.app.Fragment)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampUpDuration(int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void release()
com.bumptech.glide.Glide: void clearMemory()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: int hashCode()
cn.jzvd.JZMediaSystem: void onBufferingUpdate(android.media.MediaPlayer,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onLayoutDirectionChanged(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isQwertyMode()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void getApplicableStyles(java.util.List,java.lang.String,com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag,java.util.List)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: void maybeCreateMediaDrmHandler(android.os.Looper)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void maybeThrowError()
androidx.recyclerview.widget.RecyclerView: void cancelScroll()
androidx.core.widget.TextViewCompat: int getTextDirection(android.text.TextDirectionHeuristic)
com.google.android.exoplayer2.source.hls.Aes128DataSource: java.util.Map getResponseHeaders()
com.bumptech.glide.load.engine.ResourceRecycler: ResourceRecycler()
androidx.core.view.ViewCompat: boolean isAccessibilityHeading(android.view.View)
com.google.android.exoplayer2.util.ParsableBitArray: void setPosition(int)
org.slf4j.event.SubstituteLoggingEvent: void setMessage(java.lang.String)
com.google.android.exoplayer2.metadata.emsg.EventMessage: com.google.android.exoplayer2.Format getWrappedMetadataFormat()
com.google.android.exoplayer2.drm.DefaultDrmSession: void onMediaDrmEvent(int)
com.bumptech.glide.disklrucache.DiskLruCache$1: java.lang.Object call()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: char readChar()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.viewpager.widget.ViewPager: int getCurrentItem()
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isISlice()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,java.io.IOException,int)
com.bumptech.glide.load.model.ModelLoaderRegistry: java.util.List getDataClasses(java.lang.Class)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.source.chunk.DataChunk: void maybeExpandData(int)
com.bumptech.glide.request.target.BaseTarget: void onLoadFailed(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController: void setIcon(int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher access$100(com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: void addObserverInternal()
androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)
com.google.android.exoplayer2.AudioFocusManager: void access$000(com.google.android.exoplayer2.AudioFocusManager,int)
androidx.appcompat.widget.ScrollingTabContainerView: boolean performExpand()
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(android.app.Activity,android.content.Context,android.os.Handler,int)
com.bumptech.glide.load.model.GlideUrl: int hashCode()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean areSelectionOverridesEqual(java.util.Map,java.util.Map)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: void cancel()
cn.jzvd.JZUtils: androidx.appcompat.app.AppCompatActivity getAppCompActivity(android.content.Context)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
androidx.core.content.PermissionChecker: int checkSelfPermission(android.content.Context,java.lang.String)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void invalidate()
androidx.fragment.app.FragmentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: java.util.UUID access$400()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.TrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
androidx.recyclerview.widget.RecyclerView: void resetFocusInfo()
androidx.appcompat.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)
tv.danmaku.ijk.media.player.misc.ITrackInfo: java.lang.String getLanguage()
com.google.android.exoplayer2.extractor.ogg.StreamReader: void init(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.TrackOutput)
com.bumptech.glide.load.resource.gif.GifBitmapProvider: int[] obtainIntArray(int)
androidx.fragment.app.FragmentManagerImpl: void makeRemovedFragmentsInvisible(androidx.collection.ArraySet)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getHorizontalOffset()
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: ActionMenuPresenter$OverflowPopup(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: SimpleSubtitleDecoder(java.lang.String)
androidx.viewpager.widget.ViewPager: boolean canScrollHorizontally(int)
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkAndReadBlockSizeSamples(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.FlacStreamMetadata,int)
androidx.appcompat.widget.ActionMenuPresenter: android.graphics.drawable.Drawable getOverflowIcon()
com.google.android.exoplayer2.text.ttml.TtmlStyle: int getBackgroundColor()
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.drawable.Drawable$Callback findCallback()
android.support.v4.media.RatingCompat$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.util.Util: int getPcmEncoding(int)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setId(java.lang.String)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter getSingletonInstance(android.content.Context)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.signature.ObjectKey: ObjectKey(java.lang.Object)
com.google.android.exoplayer2.PlayerMessage: long getPositionMs()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: ActionMenuPresenter$PopupPresenterCallback(androidx.appcompat.widget.ActionMenuPresenter)
com.bumptech.glide.load.model.ModelLoaderRegistry: java.lang.Class getClass(java.lang.Object)
com.google.android.exoplayer2.upstream.DataSchemeDataSource: android.net.Uri getUri()
androidx.appcompat.view.menu.MenuBuilder: void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View)
com.google.android.exoplayer2.DefaultLoadControl: boolean hasVideo(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.trackselection.TrackSelectionArray)
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: Loader$LoadErrorAction(int,long)
androidx.core.widget.NestedScrollView: void onMeasure(int,int)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void setCodecDrmSession(com.google.android.exoplayer2.drm.DrmSession)
com.google.android.exoplayer2.audio.DefaultAudioSink: long applySkipping(long)
com.google.android.exoplayer2.source.SampleQueue: SampleQueue(com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.drm.DrmSessionManager)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean isEmpty()
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(com.google.android.exoplayer2.extractor.ExtractorInput,long)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: void init(int,int,android.graphics.Bitmap$Config)
cn.jzvd.Jzvd: void onClick(android.view.View)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean readAtomHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: boolean advancePeekPosition(int,boolean)
com.bumptech.glide.gifdecoder.GifHeaderParser: void readContents()
com.bumptech.glide.load.resource.gif.GifDrawable: GifDrawable(com.bumptech.glide.load.resource.gif.GifDrawable$GifState)
androidx.recyclerview.widget.GridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.app.AlertController: void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int)
androidx.appcompat.widget.SearchView: boolean hasVoiceSearch()
tv.danmaku.ijk.media.player.pragma.DebugLog: void dfmt(java.lang.String,java.lang.String,java.lang.Object[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.content.res.ColorStateList getIconTintList()
androidx.appcompat.view.menu.CascadingMenuPopup: void setAnchorView(android.view.View)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onReset()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.fragment.app.Fragment: java.lang.Object getExitTransition()
com.google.android.exoplayer2.util.TraceUtil: void beginSection(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.offline.StreamKey$1: com.google.android.exoplayer2.offline.StreamKey createFromParcel(android.os.Parcel)
cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen: void gotoScreenFullscreen()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void reset()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isBound()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.source.BaseMediaSource: void prepareSource(com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller,com.google.android.exoplayer2.upstream.TransferListener)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: void onVideoSizeChanged(android.media.MediaPlayer,int,int)
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry: boolean handles(java.lang.Class)
androidx.appcompat.widget.ForwardingListener: void onLongPress()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
cn.jzvd.Jzvd: void setVideoImageDisplayType(int)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: long getCurrentTimestampUs()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelection$Definition selectAdaptiveVideoTrack(com.google.android.exoplayer2.source.TrackGroupArray,int[][],int,com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)
androidx.collection.MapCollections$KeySet: boolean add(java.lang.Object)
androidx.appcompat.app.WindowDecorActionBar: android.content.Context getThemedContext()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void maybeInitCodecWithFallback(android.media.MediaCrypto,boolean)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onBandwidthEstimate(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,long,long)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void updateSampleStreams(com.google.android.exoplayer2.source.SampleStream[])
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: FontResourcesParserCompat$FontFileResourceEntry(java.lang.String,int,boolean,java.lang.String,int,int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean dispatchKeyEvent(android.view.KeyEvent)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setStreamSelected(int,boolean)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
com.danikula.videocache.ProxyCache: void closeSource()
com.google.android.exoplayer2.source.hls.HlsMediaChunk: HlsMediaChunk(com.google.android.exoplayer2.source.hls.HlsExtractorFactory,com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.Format,boolean,com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean,android.net.Uri,java.util.List,int,java.lang.Object,long,long,long,int,boolean,boolean,com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.Extractor,com.google.android.exoplayer2.metadata.id3.Id3Decoder,com.google.android.exoplayer2.util.ParsableByteArray,boolean)
com.google.android.exoplayer2.util.MimeTypes: java.lang.String getAudioMediaMimeType(java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: boolean checkPlaylistHeader(java.io.BufferedReader)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
androidx.lifecycle.LiveData: void setValue(java.lang.Object)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory,com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.android.exoplayer2.SimpleExoPlayer: void updatePlayWhenReady(boolean,int)
com.google.android.exoplayer2.extractor.ts.H264Reader: H264Reader(com.google.android.exoplayer2.extractor.ts.SeiReader,boolean,boolean)
androidx.collection.MapCollections$KeySet: boolean isEmpty()
androidx.core.content.res.ResourcesCompat: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.media.AudioAttributesCompat: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: void setChildFrame(android.view.View,int,int,int,int)
androidx.viewpager.widget.ViewPager: void smoothScrollTo(int,int,int)
com.google.android.exoplayer2.metadata.MetadataRenderer: int supportsFormat(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.resource.bitmap.Downsampler: java.lang.String getBitmapString(android.graphics.Bitmap)
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory: com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean)
tv.danmaku.ijk.media.player.IjkMediaMeta: int getInt(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean shouldInitCodec(com.google.android.exoplayer2.mediacodec.MediaCodecInfo)
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed: EngineJob$CallLoadFailed(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2: void update(byte[],java.lang.Object,java.security.MessageDigest)
com.google.android.exoplayer2.text.TextRenderer: void replaceDecoder()
com.bumptech.glide.Glide: com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules(android.content.Context)
androidx.core.view.MarginLayoutParamsCompat: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: float getInterpolation(float)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void start()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getVideoCachedBytes()
android.support.v4.media.session.MediaControllerCompat$Callback: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void maybeSetPreMultiplied(android.graphics.Bitmap)
androidx.core.view.ViewCompat: java.lang.String getTransitionName(android.view.View)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1: void update(byte[],java.lang.Long,java.security.MessageDigest)
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int getInt(java.lang.String,int)
com.bumptech.glide.load.model.ModelCache$ModelKey: void init(java.lang.Object,int,int)
com.google.android.exoplayer2.util.TimedValueQueue: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.extractor.VorbisUtil: boolean verifyVorbisHeaderCapturePattern(int,com.google.android.exoplayer2.util.ParsableByteArray,boolean)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long getTargetTimePosition()
com.google.android.exoplayer2.source.hls.HlsSampleStream: void maybeThrowError()
com.bumptech.glide.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.exoplayer2.text.ssa.SsaDecoder: void parseEventBody(com.google.android.exoplayer2.util.ParsableByteArray,java.util.List,java.util.List)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelSize(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onScrollStateChanged(int)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.upstream.DataSource buildDataSource(com.google.android.exoplayer2.upstream.DataSource,byte[],byte[])
tv.danmaku.ijk.media.player.pragma.DebugLog: void efmt(java.lang.String,java.lang.String,java.lang.Object[])
androidx.core.app.CoreComponentFactory: android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.core.content.res.ComplexColorCompat: boolean willDraw()
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: void cleanup()
com.google.android.exoplayer2.BaseRenderer: void resetPosition(long)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: WebvttCueParser$StartTag(java.lang.String,int,java.lang.String,java.lang.String[])
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker: void acquire(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context attachBaseContext2(android.content.Context)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setAdapter(android.widget.ListAdapter)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int supportsFormat(com.google.android.exoplayer2.Format)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.exoplayer2.Timeline$Period: long getAdDurationUs(int,int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long getCeilingBytePosition()
com.bumptech.glide.load.model.GlideUrl: boolean equals(java.lang.Object)
com.google.android.exoplayer2.trackselection.MappingTrackSelector: int findRenderer(com.google.android.exoplayer2.RendererCapabilities[],com.google.android.exoplayer2.source.TrackGroup,int[],boolean)
com.google.android.exoplayer2.trackselection.TrackSelector: com.google.android.exoplayer2.upstream.BandwidthMeter getBandwidthMeter()
androidx.appcompat.widget.ListPopupWindow: int getHorizontalOffset()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityPaused(android.app.Activity)
com.bumptech.glide.util.ByteBufferUtil: <clinit>()
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean isAnyResourceSet()
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: Engine$LazyDiskCacheProvider(com.bumptech.glide.load.engine.cache.DiskCache$Factory)
com.bumptech.glide.util.pool.FactoryPools$3: void reset(java.util.List)
android.support.v4.media.session.MediaSessionCompat$Token: void setSessionToken2Bundle(android.os.Bundle)
com.google.android.exoplayer2.upstream.DataSpec: int inferHttpMethod(byte[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isScrollable()
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: AudioProcessor$AudioFormat(int,int,int)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: void seek(long,long)
com.google.android.exoplayer2.util.ParsableByteArray: java.lang.String readString(int)
androidx.fragment.app.FragmentTransition: void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap)
com.google.android.exoplayer2.SimpleExoPlayer: int access$802(com.google.android.exoplayer2.SimpleExoPlayer,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int)
com.bumptech.glide.load.engine.EngineResource: java.lang.Object get()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: tv.danmaku.ijk.media.player.MediaInfo getMediaInfo()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: DrmInitData$SchemeData(java.util.UUID,java.lang.String,java.lang.String,byte[])
com.bumptech.glide.load.model.FileLoader$FileFetcher: void cancel()
androidx.appcompat.view.menu.StandardMenuPopup: void onDismiss()
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: <clinit>()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: MediaCodecRenderer$DecoderInitializationException(com.google.android.exoplayer2.Format,java.lang.Throwable,boolean,com.google.android.exoplayer2.mediacodec.MediaCodecInfo)
androidx.core.widget.NestedScrollView: void onNestedScrollInternal(int,int,int[])
androidx.core.view.ViewCompat$5: java.lang.Boolean frameworkGet(android.view.View)
com.bumptech.glide.util.pool.StateVerifier: StateVerifier(com.bumptech.glide.util.pool.StateVerifier$1)
com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader parseHeader()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanGroupIndexCache()
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: java.lang.Object access$000(com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: int getInt32(int)
androidx.collection.SparseArrayCompat: java.lang.Object valueAt(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.drawable.Drawable getIcon()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(int)
com.google.android.exoplayer2.util.TimedValueQueue: void clear()
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: GridLayoutManager$SpanSizeLookup()
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onVideoEnabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.core.content.ContextCompat: int checkSelfPermission(android.content.Context,java.lang.String)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onVideoSizeChanged(int,int,int,float)
com.google.android.exoplayer2.SimpleExoPlayer: boolean access$1902(com.google.android.exoplayer2.SimpleExoPlayer,boolean)
cn.jzvd.demo.ActivityApiOrientation: boolean onOptionsItemSelected(android.view.MenuItem)
androidx.appcompat.widget.ActionBarContextView: boolean onHoverEvent(android.view.MotionEvent)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void distributeKeyframes(android.animation.Keyframe[],float,int,int)
androidx.fragment.app.Fragment: void performAttach()
com.bumptech.glide.load.model.UriLoader: boolean handles(android.net.Uri)
androidx.appcompat.app.AlertController$3: void run()
com.google.android.exoplayer2.ExoPlayerImplInternal: java.lang.Object resolveSubsequentPeriod(java.lang.Object,com.google.android.exoplayer2.Timeline,com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.video.ColorInfo$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.SeekParameters: SeekParameters(long,long)
com.google.android.exoplayer2.metadata.id3.ApicFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.LoadPath: com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List)
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.view.View)
com.bumptech.glide.load.Options: java.lang.String toString()
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: void queueInput(java.nio.ByteBuffer)
cn.jzvd.JZMediaSystem: void onPrepared(android.media.MediaPlayer)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isChecked()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: void reset()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingTop()
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: void maybeThrowError()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.widget.ActionMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.google.android.exoplayer2.video.ColorInfo: int describeContents()
com.bumptech.glide.provider.ImageHeaderParserRegistry: void add(com.bumptech.glide.load.ImageHeaderParser)
com.google.android.exoplayer2.util.SystemHandlerWrapper: android.os.Message obtainMessage(int,int,int)
androidx.appcompat.widget.AppCompatTextHelper$1: AppCompatTextHelper$1(androidx.appcompat.widget.AppCompatTextHelper,int,int,java.lang.ref.WeakReference)
com.bumptech.glide.load.resource.gif.GifFrameLoader: int getWidth()
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet,int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getAudioCachedBytes()
androidx.media.AudioAttributesImplApi21: int hashCode()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setOnNativeInvokeListener(tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: DefaultTrackSelector$ParametersBuilder()
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: void skipToNextPage(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.data.InputStreamRewinder$Factory: InputStreamRewinder$Factory(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.fragment.app.Fragment: android.view.View getView()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getViewIdResourceName()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost: float getScaleFactor(int,int,int,int)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)
com.google.android.exoplayer2.RendererConfiguration: <clinit>()
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: Tx3gSubtitle(com.google.android.exoplayer2.text.Cue)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.TrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
androidx.recyclerview.widget.GridLayoutManager: int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
org.slf4j.impl.AndroidLoggerFactory: java.lang.String loggerNameToTag(java.lang.String)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.exoplayer2.source.ClippingMediaPeriod: long readDiscontinuity()
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
cn.jzvd.demo.ActivityListViewNormal: void onBackPressed()
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackFailAsync(int,android.os.Handler)
androidx.appcompat.widget.DropDownListView: void clickPressedItem(android.view.View,int)
androidx.appcompat.graphics.drawable.DrawableContainer$1: DrawableContainer$1(androidx.appcompat.graphics.drawable.DrawableContainer)
com.google.android.exoplayer2.text.ssa.SsaDecoder: java.util.Map parseStyles(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.view.menu.StandardMenuPopup$2: StandardMenuPopup$2(androidx.appcompat.view.menu.StandardMenuPopup)
com.google.android.exoplayer2.DefaultMediaClock: DefaultMediaClock(com.google.android.exoplayer2.DefaultMediaClock$PlaybackParameterListener,com.google.android.exoplayer2.util.Clock)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: DefaultTrackSelector$SelectionOverride(int,int[])
com.bumptech.glide.load.resource.bitmap.Downsampler: boolean handles(java.io.InputStream)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawablesTints()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: boolean hasJpegExifPreamble(byte[],int)
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: java.lang.String getLanguage()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
com.danikula.videocache.ProxyCache: void readSourceAsync()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: int[] getCountryGroupIndices(java.lang.String)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onDroppedFrames(int,long)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnInfoListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener)
androidx.recyclerview.widget.RecyclerView: boolean onTouchEvent(android.view.MotionEvent)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: MediaSessionCompat$ResultReceiverWrapper(android.os.Parcel)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long access$800(com.google.android.exoplayer2.source.ProgressiveMediaPeriod)
com.google.android.exoplayer2.util.ParsableByteArray: void reset(int)
androidx.appcompat.app.AppCompatViewInflater: void verifyNotNull(android.view.View,java.lang.String)
com.bumptech.glide.Glide: com.bumptech.glide.Registry getRegistry()
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onMediaPeriodReleased(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.appcompat.view.StandaloneActionMode: void finish()
com.google.android.exoplayer2.source.CompositeMediaSource: boolean shouldDispatchCreateOrReleaseEvent(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.appcompat.app.AppCompatDelegateImpl$4: AppCompatDelegateImpl$4(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.android.exoplayer2.text.ttml.TtmlRegion: TtmlRegion(java.lang.String,float,float,int,int,float,float,int,float)
com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.DropDownListView: boolean hasWindowFocus()
com.google.android.exoplayer2.metadata.scte35.PrivateCommand$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.ogg.StreamReader: void onSeekEnd(long)
com.google.android.exoplayer2.video.VideoListener: void onVideoSizeChanged(int,int,int,float)
com.google.android.exoplayer2.ExoPlayerImplInternal: void doSomeWork()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getAacCodecProfileAndLevel(java.lang.String,java.lang.String[])
cn.jzvd.Jzvd: void onStartTrackingTouch(android.widget.SeekBar)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getDisplayOptions()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkForGaps()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int getBackgroundColor()
com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider: TimestampAdjusterProvider()
androidx.core.graphics.ColorUtils: int compositeAlpha(int,int)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: VideoDecoder(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getCurrentState()
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.concurrent.Future submit(java.lang.Runnable)
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.SimpleResource: java.lang.Class getResourceClass()
com.google.android.exoplayer2.util.Util: long resolveSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters,long,long)
com.google.android.exoplayer2.audio.Ac4Util: com.google.android.exoplayer2.Format parseAc4AnnexEFormat(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.String,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onQueueChanged(java.util.List)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList()
androidx.core.content.res.ComplexColorCompat: boolean isGradient()
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: java.lang.Class getDataClass()
com.google.android.exoplayer2.mediacodec.MediaCodecSelector$1: com.google.android.exoplayer2.mediacodec.MediaCodecInfo getPassthroughDecoderInfo()
com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.core.view.DisplayCutoutCompat: int hashCode()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setDataSource(java.lang.String)
androidx.lifecycle.Lifecycle$State: <clinit>()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getChangingConfigurations()
androidx.appcompat.widget.ResourceManagerInternal: boolean isVectorDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canApplyTheme()
cn.jzvd.JzvdStd: void startDismissControlViewTimer()
androidx.fragment.app.FragmentTransitionImpl: void findNamedViews(java.util.Map,android.view.View)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
cn.jzvd.Jzvd: void onStateError()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void updateSampleIndices(long)
com.google.android.exoplayer2.util.NalUnitUtil: int unescapeStream(byte[],int)
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory: DataUrlLoader$StreamFactory()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: AppCompatSpinner$DropdownPopup$2(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
org.slf4j.helpers.MessageFormatter: boolean isDoubleEscaped(java.lang.String,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeStartDeferredRetry(int)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.recyclerview.widget.LinearLayoutManager: boolean isLayoutRTL()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.bumptech.glide.request.SingleRequest: boolean isEquivalentTo(com.bumptech.glide.request.Request)
com.google.android.exoplayer2.extractor.VorbisBitArray: boolean readBit()
com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker: ConstantBitrateSeeker(long,long,com.google.android.exoplayer2.extractor.MpegAudioHeader)
androidx.appcompat.widget.AppCompatDrawableManager: <clinit>()
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory: StringLoader$FileDescriptorFactory()
org.slf4j.helpers.FormattingTuple: FormattingTuple(java.lang.String)
com.bumptech.glide.load.resource.gif.GifBitmapProvider: byte[] obtainByteArray(int)
androidx.core.graphics.drawable.DrawableCompat: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onAttachFragment(androidx.fragment.app.Fragment)
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: void release()
androidx.core.widget.NestedScrollView: void initVelocityTrackerIfNotExists()
androidx.appcompat.view.menu.MenuPopup: int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int)
android.support.v4.media.MediaBrowserCompat$ItemReceiver: void onReceiveResult(int,android.os.Bundle)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: int getAacSamplingFrequency(com.google.android.exoplayer2.util.ParsableBitArray)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
androidx.appcompat.app.AppCompatDelegateImpl: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long getDurationUs()
com.google.android.exoplayer2.source.hls.HlsMediaChunk: boolean isLoadCompleted()
com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle: int getNextEventTimeIndex(long)
androidx.appcompat.widget.ActionBarContainer: void jumpDrawablesToCurrentState()
com.google.android.exoplayer2.extractor.wav.WavSeekMap: long getDurationUs()
com.bumptech.glide.load.engine.cache.LruResourceCache: com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelOffset(int,int)
androidx.appcompat.widget.ActionMenuView: boolean hasSupportDividerBeforeChildAt(int)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: int getCount()
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState[] newArray(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void init()
com.bumptech.glide.util.Executors: java.util.concurrent.Executor directExecutor()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void processAtomEnded(long)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void postOrRun(android.os.Handler,java.lang.Runnable)
androidx.fragment.app.FragmentTransition$3: FragmentTransition$3(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect)
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1: FileLoader$FileDescriptorFactory$1()
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor()
androidx.collection.ContainerHelpers: boolean equal(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat: void setBackground(android.view.View,android.graphics.drawable.Drawable)
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo()
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: VideoTagPayloadReader(com.google.android.exoplayer2.extractor.TrackOutput)
androidx.arch.core.executor.DefaultTaskExecutor: boolean isMainThread()
org.slf4j.impl.StaticLoggerBinder: <clinit>()
androidx.fragment.app.BackStackRecord: void runOnCommitRunnables()
com.google.android.exoplayer2.audio.DefaultAudioSink: void setVolumeInternalV21(android.media.AudioTrack,float)
com.google.android.exoplayer2.source.SampleQueue: int advanceToEnd()
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: SafeIterableMap$IteratorWithAdditions(androidx.arch.core.internal.SafeIterableMap)
com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: java.lang.String getDiagnosticInfoV21(java.lang.Throwable)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: MediaCodecVideoRenderer(android.content.Context,com.google.android.exoplayer2.mediacodec.MediaCodecSelector,long,com.google.android.exoplayer2.drm.DrmSessionManager,boolean,boolean,android.os.Handler,com.google.android.exoplayer2.video.VideoRendererEventListener,int)
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: int getArrayLength(java.lang.Object)
com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory: com.google.android.exoplayer2.upstream.HttpDataSource createDataSource()
com.google.android.exoplayer2.metadata.emsg.EventMessage$1: java.lang.Object[] newArray(int)
androidx.core.widget.AutoScrollHelper: int constrain(int,int,int)
com.bumptech.glide.util.ExceptionPassthroughInputStream: void mark(int)
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory: ByteArrayLoader$ByteBufferFactory()
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: GlideException$IndentedAppendable(java.lang.Appendable)
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache$1: boolean removeEldestEntry(java.util.Map$Entry)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void start()
cn.jzvd.demo.ActivityDirectPlay: void clickFullScreen(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getHorizontalDirection()
androidx.core.graphics.TypefaceCompatBaseImpl: long getUniqueKey(android.graphics.Typeface)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.Format access$700()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseTraf(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,android.util.SparseArray,int,byte[])
com.google.android.exoplayer2.metadata.flac.PictureFrame: java.lang.String toString()
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean isVisible()
androidx.appcompat.widget.AppCompatPopupWindow: void update(android.view.View,int,int,int,int)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: float parsePaspFromParent(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.util.MultiClassKey: java.lang.String toString()
com.google.android.exoplayer2.util.Log: void i(java.lang.String,java.lang.String)
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: int getEventTimeCount()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues getDefaultSampleValues(android.util.SparseArray,int)
androidx.core.text.PrecomputedTextCompat: int getSpanFlags(java.lang.Object)
androidx.appcompat.widget.TintTypedArray: java.lang.String getString(int)
com.google.android.exoplayer2.metadata.flac.VorbisComment: int describeContents()
androidx.appcompat.view.menu.StandardMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
com.bumptech.glide.load.engine.LoadPath: LoadPath(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,androidx.core.util.Pools$Pool)
tv.danmaku.ijk.media.player.pragma.DebugLog: void d(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.core.view.ViewCompat: void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int)
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()
androidx.lifecycle.LiveData$ObserverWrapper: void activeStateChanged(boolean)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onVideoInputFormatChanged(com.google.android.exoplayer2.Format)
androidx.exifinterface.media.ExifInterface$1: ExifInterface$1(androidx.exifinterface.media.ExifInterface,androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: android.util.Pair parseMdhd(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.text.dvb.DvbParser: java.util.List decode(byte[],int)
com.google.android.exoplayer2.ExoPlayerImplInternal: java.lang.String getExoPlaybackExceptionMessage(com.google.android.exoplayer2.ExoPlaybackException)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isSecure(android.media.MediaCodecInfo$CodecCapabilities)
org.slf4j.event.SubstituteLoggingEvent: void setArgumentArray(java.lang.Object[])
com.bumptech.glide.GeneratedAppGlideModule: com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory getRequestManagerFactory()
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: ActivityTinyWindowRecycleViewMultiHolder()
androidx.appcompat.view.menu.MenuItemImpl: android.content.Intent getIntent()
cn.jzvd.demo.ActivityApiUIBigChange: boolean onOptionsItemSelected(android.view.MenuItem)
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher: java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver)
androidx.savedstate.SavedStateRegistry: SavedStateRegistry()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
com.bumptech.glide.request.target.BitmapImageViewTarget: void setResource(android.graphics.Bitmap)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: void enable()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seekToUs(long,boolean)
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setFontFamily(java.lang.String)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: int getNextEvent(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.collection.ArrayMap$1: void colRemoveAt(int)
androidx.appcompat.app.AlertController: void manageScrollIndicators(android.view.View,android.view.View,android.view.View)
androidx.arch.core.internal.SafeIterableMap: int size()
androidx.collection.ContainerHelpers: int idealIntArraySize(int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions selfOrThrowIfLocked()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1: VideoDecoder$1()
com.bumptech.glide.load.data.HttpUrlFetcher: java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(androidx.core.provider.FontsContractCompat$FontInfo)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1: SpliceInsertCommand$1()
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawTickMarks(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.exoplayer2.util.LongArray: long get(int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups()
com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: boolean equals(java.lang.Object)
com.bumptech.glide.load.ImageHeaderParserUtils$1: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.ImageHeaderParser)
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: DefaultHttpDataSourceFactory(java.lang.String,com.google.android.exoplayer2.upstream.TransferListener,int,int,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAlpha(int)
androidx.recyclerview.widget.RecyclerView: void saveFocusInfo()
cn.jzvd.demo.CustomMedia.JZMediaExo: void onSeekProcessed()
com.google.android.exoplayer2.ui.SubtitleView: void setFractionalTextSize(float)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue: com.google.android.exoplayer2.metadata.Metadata getAdjustedMetadata(com.google.android.exoplayer2.metadata.Metadata)
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: DefaultDataSourceFactory(android.content.Context,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.upstream.DataSource$Factory)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean areHardwareBitmapsBlockedByAppState()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long getFloorBytePosition()
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.text.SubtitleInputBuffer dequeueInputBuffer()
androidx.fragment.app.FragmentManagerViewModel: java.lang.String toString()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onVolumeChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,float)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy: AndroidMediaPlayer$MediaDataSourceProxy(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
org.slf4j.helpers.MessageFormatter: void byteArrayAppend(java.lang.StringBuilder,byte[])
com.google.android.exoplayer2.Player$EventListener: void onTracksChanged(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectionArray)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.audio.Ac4Util: void getAc4SampleHeader(int,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.danikula.videocache.HttpProxyCache: HttpProxyCache(com.danikula.videocache.HttpUrlSource,com.danikula.videocache.file.FileCache)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getVerticalDirection()
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition)
com.bumptech.glide.load.engine.DecodeJob: void setNotifiedOrThrow()
com.bumptech.glide.load.engine.ActiveResources: com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void startLoading()
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
com.bumptech.glide.util.ByteBufferUtil: void toFile(java.nio.ByteBuffer,java.io.File)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(int,int)
com.google.android.exoplayer2.metadata.emsg.EventMessage: java.lang.String toString()
com.bumptech.glide.request.target.ImageViewTarget: void onStop()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options)
androidx.collection.SimpleArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
androidx.arch.core.internal.SafeIterableMap$ListIterator: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
com.bumptech.glide.load.engine.executor.GlideExecutor: GlideExecutor(java.util.concurrent.ExecutorService)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
androidx.appcompat.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel)
cn.jzvd.Jzvd: void gotoScreenFullscreen()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: android.os.ParcelFileDescriptor rewind()
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: ActionMenuView$ActionMenuPresenterCallback()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findLastPartiallyVisibleItemPosition()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinEnd(int)
androidx.appcompat.graphics.drawable.DrawableContainer: void updateDensity(android.content.res.Resources)
com.google.android.exoplayer2.source.TrackGroup: TrackGroup(com.google.android.exoplayer2.Format[])
cn.jzvd.demo.ActivityApiOrientation: void onPause()
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: void setMediaMeta(tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onAudioSessionId(int)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder getLoadingPeriod()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void resetPeekPosition()
androidx.appcompat.app.AppCompatActivity: void onDestroy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.view.menu.MenuPopup: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.Timeline$Period: int getAdGroupIndexAfterPositionUs(long)
android.support.v4.media.RatingCompat: RatingCompat(int,float)
androidx.core.view.ViewCompat: void setElevation(android.view.View,float)
androidx.appcompat.view.menu.MenuBuilder: void onItemsChanged(boolean)
cn.jzvd.Jzvd: void startPreloading()
com.google.android.exoplayer2.extractor.wav.WavExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.source.hls.HlsSampleStream: boolean hasValidSampleQueueIndex()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle setUnderline(boolean)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: void clear()
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: void onDataReady(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void cacheReferenceLineAndClear(boolean,int)
cn.jzvd.JzvdStd: void onAutoCompletion()
androidx.appcompat.widget.ActionMenuView: void dismissPopupMenus()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void onOffset(int)
android.support.v4.media.session.PlaybackStateCompatApi21: float getPlaybackSpeed(java.lang.Object)
androidx.collection.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: <clinit>()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder: void release()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseSaio(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.extractor.mp4.TrackFragment)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void startMasterElement(int,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter)
com.google.android.exoplayer2.extractor.ts.PesReader: void seek()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$1: TrackSelectionParameters$1()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicHeight()
com.bumptech.glide.util.MultiClassKey: void set(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int[] getState()
androidx.collection.ArrayMap$1: ArrayMap$1(androidx.collection.ArrayMap)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: void reset(byte[],int,int)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int durationUsToFrames(long)
androidx.appcompat.view.menu.MenuItemImpl: void setCheckedInt(boolean)
androidx.appcompat.widget.DropDownListView: void onDetachedFromWindow()
androidx.appcompat.app.AppCompatDelegateImpl: void doInvalidatePanelMenu(int)
androidx.appcompat.widget.AppCompatSpinner: boolean performClick()
com.bumptech.glide.load.engine.EngineResource: com.bumptech.glide.load.engine.Resource getResource()
androidx.arch.core.executor.ArchTaskExecutor: <clinit>()
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String getTrackName(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.engine.DataCacheGenerator: void onDataReady(java.lang.Object)
com.bumptech.glide.manager.ActivityFragmentLifecycle: void onDestroy()
androidx.appcompat.widget.Toolbar: int layoutChildLeft(android.view.View,int,int[],int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap)
com.bumptech.glide.load.engine.GlideException: void printStackTrace()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: boolean notifyOnError(int,int)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle getTrackBundle(android.util.SparseArray,int)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToNormal()
com.google.android.exoplayer2.metadata.emsg.EventMessage: boolean equals(java.lang.Object)
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: java.lang.Object copy(java.util.List)
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.util.PriorityTaskManager access$1800(com.google.android.exoplayer2.SimpleExoPlayer)
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int,int)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseInputBufferInternal(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
cn.jzvd.demo.CustomMedia.JZMediaExo: void setSpeed(float)
com.bumptech.glide.load.resource.gif.GifDrawable$GifState: GifDrawable$GifState(com.bumptech.glide.load.resource.gif.GifFrameLoader)
androidx.fragment.app.FragmentState: <clinit>()
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager get(android.content.Context)
androidx.core.view.ViewCompat$4: java.lang.Object frameworkGet(android.view.View)
androidx.appcompat.view.menu.ExpandedMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.TintContextWrapper: <clinit>()
androidx.savedstate.SavedStateRegistryController: void performRestore(android.os.Bundle)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,int,int,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long,long,long,long)
androidx.core.util.Pools$SimplePool: boolean release(java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager: boolean isSmoothScrollbarEnabled()
androidx.fragment.app.BackStackState: <clinit>()
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: void disabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.core.widget.NestedScrollView$SavedState: java.lang.String toString()
androidx.core.provider.FontRequest: java.lang.String getIdentifier()
androidx.appcompat.widget.AppCompatTextView: void setTextSize(int,float)
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcel)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int sizeForPosition(int)
androidx.appcompat.widget.TintTypedArray: int getInteger(int,int)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.fragment.app.FragmentManagerImpl: void startPendingDeferredFragments()
androidx.appcompat.widget.ActionBarOverlayLayout: void onMeasure(int,int)
androidx.core.provider.FontsContractCompat: java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.CharSequence readCharSequence()
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: java.lang.String getInfoInline()
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory: AssetUriLoader$FileDescriptorFactory(android.content.res.AssetManager)
com.google.android.exoplayer2.util.EGLSurfaceTexture: EGLSurfaceTexture(android.os.Handler,com.google.android.exoplayer2.util.EGLSurfaceTexture$TextureImageListener)
com.danikula.videocache.ProxyCache: void access$100(com.danikula.videocache.ProxyCache)
com.google.android.exoplayer2.drm.DefaultDrmSession: void onKeyResponse(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextHelper: void onLayout(boolean,int,int,int,int)
com.bumptech.glide.load.model.MultiModelLoaderFactory: java.util.List build(java.lang.Class)
androidx.core.widget.TextViewCompat: android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback)
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.collection.SimpleArrayMap: int indexOfValue(java.lang.Object)
com.google.android.exoplayer2.SimpleExoPlayer: void clearVideoDecoderOutputBufferRenderer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
com.google.android.exoplayer2.extractor.amr.AmrExtractor: com.google.android.exoplayer2.extractor.SeekMap getConstantBitrateSeekMap(long)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: void parseFontSize(java.lang.String,com.google.android.exoplayer2.text.ttml.TtmlStyle)
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: CascadingMenuPopup$3$1(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setContentDescription(java.lang.CharSequence)
com.google.android.exoplayer2.util.Util: long scaleLargeTimestamp(long,long,long)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist parseMediaPlaylist(com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator,java.lang.String)
com.bumptech.glide.load.model.ResourceLoader$StreamFactory: ResourceLoader$StreamFactory(android.content.res.Resources)
com.google.android.exoplayer2.util.ConditionVariable: void block()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int read(byte[],int,int)
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format getUpstreamFormat()
com.bumptech.glide.load.data.InputStreamRewinder: java.lang.Object rewindAndGet()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: <clinit>()
com.bumptech.glide.load.resource.bitmap.Downsampler$1: void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: boolean equals(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside: DownsampleStrategy$CenterOutside()
com.bumptech.glide.load.engine.GlideException: void setOrigin(java.lang.Exception)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedStart(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void invalidateSpanInfo()
com.google.android.exoplayer2.PlayerMessage: int getWindowIndex()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: ByteBufferGifDecoder(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.google.android.exoplayer2.extractor.ts.DtsReader: boolean continueRead(com.google.android.exoplayer2.util.ParsableByteArray,byte[],int)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder: BitmapImageDecoderResourceDecoder()
com.bumptech.glide.request.transition.NoTransition: <clinit>()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.widget.DropDownListView: void setPressedItem(android.view.View,int,float,float)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setTextAlign(android.text.Layout$Alignment)
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
tv.danmaku.ijk.media.player.IMediaPlayer: int getVideoSarNum()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAlpha(int)
androidx.appcompat.widget.AppCompatTextClassifierHelper: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.source.MediaPeriod createMediaPeriod(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.upstream.Allocator,long,long)
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
androidx.collection.SimpleArrayMap: int hashCode()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: void reset()
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1: java.lang.Class getDataClass()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void notifyOnCompletion()
com.google.android.exoplayer2.metadata.icy.IcyHeaders$1: com.google.android.exoplayer2.metadata.icy.IcyHeaders[] newArray(int)
com.bumptech.glide.load.engine.cache.DiskCacheAdapter: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)
cn.jzvd.Jzvd: void showVolumeDialog(float,int)
androidx.appcompat.widget.SearchView$5: void onClick(android.view.View)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getText()
androidx.lifecycle.Lifecycling: int getObserverConstructorType(java.lang.Class)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: AppCompatCompoundButtonHelper(android.widget.CompoundButton)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: void run()
androidx.core.util.LogWriter: void flush()
androidx.appcompat.widget.AppCompatBackgroundHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
com.google.android.exoplayer2.PlaybackParameters: <clinit>()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean drainOutputBuffer(long,long)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager$LayoutParams)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void maybeNotifyVideoSizeChanged()
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry: TranscoderRegistry$Entry(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: int access$100(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)
com.google.android.exoplayer2.source.chunk.DataChunk: byte[] getDataHolder()
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
cn.jzvd.demo.ActivityApi: void clickExtendsNormalActivity(android.view.View)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationEnd(android.animation.Animator)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void setBounds(int,int,int,int)
androidx.lifecycle.Lifecycling: androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void createCachedBitmapIfNeeded(int,int)
com.google.android.exoplayer2.util.Util: java.lang.Object[] castNonNullTypeArray(java.lang.Object[])
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1: java.lang.Object convert(byte[])
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: boolean containsTrack(int)
com.bumptech.glide.disklrucache.DiskLruCache: void renameTo(java.io.File,java.io.File,boolean)
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher: android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String)
androidx.core.view.NestedScrollingChildHelper: android.view.ViewParent getNestedScrollingParentForType(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)
androidx.fragment.app.FragmentManagerImpl: void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,long,long,java.lang.String)
org.slf4j.LoggerFactory: void failedBinding(java.lang.Throwable)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.TrackGroupArray: <clinit>()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$5: IjkMediaFormat$5(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void invalidateCache()
com.bumptech.glide.provider.ResourceDecoderRegistry: java.util.List getDecoders(java.lang.Class,java.lang.Class)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
com.bumptech.glide.disklrucache.DiskLruCache: int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int)
com.bumptech.glide.request.BaseRequestOptions: int getFallbackId()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTint(int)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean isValidFrameType(int)
androidx.fragment.app.FragmentTransition: void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId: int hashCode()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllStartsEqual()
androidx.core.provider.FontsContractCompat$1: androidx.core.provider.FontsContractCompat$TypefaceResult call()
androidx.core.content.ContextCompat: boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
com.bumptech.glide.request.ThumbnailRequestCoordinator: void clear()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int supportsFormat(com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.source.SampleQueue: long discardSamples(int)
androidx.appcompat.view.menu.MenuAdapter: void setForceShowIcon(boolean)
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: void endNalUnit(long,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: AndroidMediaPlayer()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void loadLibrariesOnce(tv.danmaku.ijk.media.player.IjkLibLoader)
com.bumptech.glide.util.pool.FactoryPools: androidx.core.util.Pools$Pool threadSafeList(int)
com.bumptech.glide.module.ManifestParser: com.bumptech.glide.module.GlideModule parseModule(java.lang.String)
com.google.android.exoplayer2.metadata.MetadataRenderer: void render(long,long)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.PrivFrame decodePrivFrame(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.load.resource.bitmap.BitmapResource: com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: android.util.SparseArray getInitialBitrateEstimatesForCountry(java.lang.String)
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: int[] newArray(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context)
com.google.android.exoplayer2.source.EmptySampleStream: int readData(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLDisplay getDefaultDisplay()
androidx.appcompat.view.StandaloneActionMode: void setTitleOptionalHint(boolean)
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: DataUrlLoader$DataUriFetcher(java.lang.String,com.bumptech.glide.load.model.DataUrlLoader$DataDecoder)
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: java.lang.String getTag()
com.google.android.exoplayer2.ui.TrackSelectionView: boolean shouldEnableAdaptiveSelection(int)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener: void onPositionDiscontinuity()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: HlsMediaPeriod(com.google.android.exoplayer2.source.hls.HlsExtractorFactory,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker,com.google.android.exoplayer2.source.hls.HlsDataSourceFactory,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,boolean,int,boolean)
com.google.android.exoplayer2.audio.Ac3Util: com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo parseAc3SyncframeInfo(com.google.android.exoplayer2.util.ParsableBitArray)
androidx.appcompat.widget.ScrollingTabContainerView: android.widget.Spinner createSpinner()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
com.bumptech.glide.load.model.GlideUrl: java.lang.String toString()
com.google.android.exoplayer2.extractor.ts.H265Reader: void packetStarted(long,int)
androidx.appcompat.view.SupportMenuInflater$MenuState: void setItem(android.view.MenuItem)
androidx.appcompat.widget.ActionBarOverlayLayout: void init(android.content.Context)
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: int getNextEventTimeIndex(long)
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getEnterTransitionCallback()
tv.danmaku.ijk.media.player.exceptions.IjkMediaException: IjkMediaException()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEvent(android.view.View,int)
androidx.appcompat.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)
org.slf4j.helpers.MessageFormatter: void longArrayAppend(java.lang.StringBuilder,long[])
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: com.google.android.exoplayer2.text.SubtitleInputBuffer createInputBuffer()
androidx.fragment.app.FragmentHostCallback: boolean onHasView()
com.google.android.exoplayer2.extractor.ts.Ac4Reader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.google.android.exoplayer2.text.subrip.SubripSubtitle: java.util.List getCues(long)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onCompletion(tv.danmaku.ijk.media.player.IMediaPlayer)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.collection.MapCollections$ValuesCollection: boolean contains(java.lang.Object)
com.google.android.exoplayer2.extractor.GaplessInfoHolder: boolean hasGaplessInfo()
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setVisible(boolean,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()
com.google.android.exoplayer2.ExoPlayerImpl: void updatePlaybackInfo(com.google.android.exoplayer2.PlaybackInfo,boolean,int,int,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.exoplayer2.SimpleExoPlayer: boolean access$1900(com.google.android.exoplayer2.SimpleExoPlayer)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onPlayerStateChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,boolean,int)
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,java.util.UUID[],byte[])
com.google.android.exoplayer2.extractor.ts.TsExtractor: TsExtractor(int,com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
com.google.android.exoplayer2.Format: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransitionImpl: void getBoundsOnScreen(android.view.View,android.graphics.Rect)
com.google.android.exoplayer2.extractor.ts.Ac3Reader: boolean skipToNextSync(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.recyclerview.widget.OrientationHelper$2: int getEndAfterPadding()
com.google.android.exoplayer2.util.Log: java.lang.String appendThrowableMessage(java.lang.String,java.lang.Throwable)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean maybeDropBuffersToKeyframe(android.media.MediaCodec,int,long,long,boolean)
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: IjkTrackInfo(tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta)
androidx.activity.ComponentActivity$2: ComponentActivity$2(androidx.activity.ComponentActivity)
com.google.android.exoplayer2.upstream.StatsDataSource: java.util.Map getLastResponseHeaders()
com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource$Factory: DefaultSsChunkSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.viewpager.widget.ViewPager$1: int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo)
com.google.android.exoplayer2.util.TimestampAdjuster: long getLastAdjustedTimestampUs()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setOption(int,java.lang.String,long)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleC1Command(int)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.Id3Frame parseInternalAttribute(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.fragment.app.Fragment: void startPostponedEnterTransition()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.bumptech.glide.util.Executors$1: void execute(java.lang.Runnable)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean shouldUseDummySurface(com.google.android.exoplayer2.mediacodec.MediaCodecInfo)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,com.google.android.exoplayer2.source.chunk.MediaChunkIterator[])
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.util.MediaClock getMediaClock()
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode: java.util.Set getDescendants()
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int readUnsignedExpGolombCodedInt()
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon2(android.database.Cursor)
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.util.FlacStreamMetadata copyWithPictureFrames(java.util.List)
com.google.android.exoplayer2.text.ssa.SsaStyle: SsaStyle(java.lang.String,int)
com.google.android.exoplayer2.Format$1: Format$1()
cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen: void setScreenFullscreen()
com.google.android.exoplayer2.audio.AudioSink$ConfigurationException: AudioSink$ConfigurationException(java.lang.Throwable)
tv.danmaku.ijk.media.player.IMediaPlayer: boolean isLooping()
tv.danmaku.ijk.media.player.pragma.DebugLog: void e(java.lang.String,java.lang.String)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.Track parseTrak(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom,long,com.google.android.exoplayer2.drm.DrmInitData,boolean,boolean)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,java.io.InputStream)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onLoadError(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData,java.io.IOException,boolean)
androidx.appcompat.widget.ListPopupWindow: void setContentWidth(int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isMiscCode(byte,byte)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.collection.MapCollections$MapIterator: java.lang.Object getValue()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.core.widget.NestedScrollView: void addView(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
androidx.viewpager.widget.ViewPager: void populate()
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onSeekComplete(tv.danmaku.ijk.media.player.IMediaPlayer)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistParserFactory: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser createPlaylistParser(com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle setBackgroundColor(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: MenuItemWrapperICS$ActionProviderWrapperJB(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationStart(android.animation.Animator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getMatrixScale(android.graphics.Matrix)
androidx.viewpager.widget.ViewPager: void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
tv.danmaku.ijk.media.player.ffmpeg.FFmpegApi: FFmpegApi()
androidx.core.view.ViewPropertyAnimatorCompat$2: ViewPropertyAnimatorCompat$2(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView: boolean isCollapsed()
androidx.collection.ArrayMap: java.util.Set entrySet()
com.google.android.exoplayer2.ExoPlayerImplInternal: void sendPlaybackParametersChangedInternal(com.google.android.exoplayer2.PlaybackParameters,boolean)
androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: boolean isClipPath()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.interpolator.view.animation.FastOutSlowInInterpolator: FastOutSlowInInterpolator()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)
android.support.v4.media.session.ParcelableVolumeInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: android.graphics.PointF parsePosition(java.lang.String)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker: LruBitmapPool$NullBitmapTracker()
com.google.android.exoplayer2.util.Assertions: void checkArgument(boolean)
androidx.appcompat.widget.RtlSpacingHelper: int getStart()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
com.bumptech.glide.load.model.FileLoader$StreamFactory$1: FileLoader$StreamFactory$1()
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: boolean isReady()
com.bumptech.glide.Registry$NoModelLoaderAvailableException: Registry$NoModelLoaderAvailableException(java.lang.Class,java.lang.Class)
com.google.android.exoplayer2.text.cea.CeaSubtitle: java.util.List getCues(long)
androidx.collection.ContainerHelpers: int idealByteArraySize(int)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: boolean markSupported()
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel)
androidx.collection.LruCache: java.lang.Object create(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char,int)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void getOutline(android.graphics.Outline)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void setCaptionMode(int)
com.google.android.exoplayer2.text.ssa.SsaStyle$Format: SsaStyle$Format(int,int,int)
com.bumptech.glide.load.resource.gif.StreamGifDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ResourceManagerInternal: void onConfigurationChanged(android.content.Context)
org.slf4j.helpers.SubstituteLogger: void debug(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean flushOrReleaseCodec()
cn.jzvd.JzvdStd: void dismissProgressDialog()
androidx.viewpager.widget.ViewPager: void onDetachedFromWindow()
androidx.arch.core.internal.FastSafeIterableMap: boolean contains(java.lang.Object)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: void cancel()
com.google.android.exoplayer2.extractor.ogg.StreamReader: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
cn.jzvd.JzvdStd: void reset()
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: boolean isEnded()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getAsyncStatisticBufForwards()
androidx.viewpager.widget.ViewPager: boolean pageRight()
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.widget.SearchView: void updateSearchAutoComplete()
com.google.android.exoplayer2.metadata.id3.ApicFrame: <clinit>()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: int readData(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()
androidx.appcompat.app.AppCompatDialog$1: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.google.android.exoplayer2.extractor.ogg.OpusReader: void reset(boolean)
com.google.android.exoplayer2.util.ConditionVariable: boolean open()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onContentChanged()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: void appendNumberOfSamples(com.google.android.exoplayer2.util.ParsableByteArray,long)
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onUpstreamFormatChanged(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.data.BufferedOutputStream: void write(int)
com.bumptech.glide.load.resource.gif.GifFrameLoader: android.graphics.Bitmap getFirstFrame()
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: void close(java.lang.Object)
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1: java.lang.Class getDataClass()
com.google.android.exoplayer2.util.PriorityTaskManager: PriorityTaskManager()
com.bumptech.glide.load.engine.DecodeJob: void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setAutoMirrored(boolean)
androidx.fragment.app.FragmentManagerImpl: void dispatchStateChange(int)
androidx.lifecycle.LiveData$1: void run()
com.bumptech.glide.load.engine.EngineJob: void onLoadFailed(com.bumptech.glide.load.engine.GlideException)
cn.jzvd.demo.CustomMedia.JZMediaExo$onBufferingUpdate: JZMediaExo$onBufferingUpdate(cn.jzvd.demo.CustomMedia.JZMediaExo,cn.jzvd.demo.CustomMedia.JZMediaExo$1)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: void writeToParcel(android.os.Parcel,int)
androidx.core.graphics.drawable.DrawableCompat: int getLayoutDirection(android.graphics.drawable.Drawable)
androidx.appcompat.app.TwilightManager: TwilightManager(android.content.Context,android.location.LocationManager)
androidx.appcompat.view.SupportActionModeWrapper: android.view.MenuInflater getMenuInflater()
androidx.recyclerview.widget.RecyclerView: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AppCompatDelegateImpl: int getLocalNightMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver: AudioBecomingNoisyManager$AudioBecomingNoisyReceiver(com.google.android.exoplayer2.AudioBecomingNoisyManager,android.os.Handler,com.google.android.exoplayer2.AudioBecomingNoisyManager$EventListener)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: <clinit>()
androidx.collection.ArrayMap$1: java.util.Map colGetMap()
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: java.lang.CharSequence safeSequence(java.lang.CharSequence)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: android.media.MediaCodec getCodec()
androidx.fragment.app.FragmentController: void dispatchStart()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getFpsInline()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isInvalid()
com.google.android.exoplayer2.metadata.id3.PrivFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void init(android.content.Context)
com.google.android.exoplayer2.extractor.mkv.VarintReader: VarintReader()
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithPlaybackError(com.google.android.exoplayer2.ExoPlaybackException)
com.google.android.exoplayer2.trackselection.FixedTrackSelection: int getSelectionReason()
com.google.android.exoplayer2.text.dvb.DvbParser: void paintPixelDataSubBlocks(com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData,com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition,int,int,int,android.graphics.Paint,android.graphics.Canvas)
androidx.fragment.app.Fragment: androidx.lifecycle.Lifecycle getLifecycle()
androidx.fragment.app.FragmentManagerImpl: void freeBackStackIndex(int)
com.bumptech.glide.request.target.ViewTarget: void onLoadCleared(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.audio.Ac3Util: int parseTrueHdSyncframeAudioSampleCount(java.nio.ByteBuffer,int)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findOneVisibleChild(int,int,boolean,boolean)
com.danikula.videocache.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.exoplayer2.drm.DrmInitData: <clinit>()
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: VbriSeeker(long[],long[],long,long)
androidx.collection.MapCollections: java.util.Set getKeySet()
androidx.recyclerview.widget.RecyclerView: void onScrolled(int,int)
com.google.android.exoplayer2.text.Cue: Cue(java.lang.CharSequence)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: int describeContents()
cn.jzvd.demo.ActivityApiUISmallChange: void onBackPressed()
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.PlayerMessage send()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDownstreamFormatChanged(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
org.slf4j.event.SubstituteLoggingEvent: void setLoggerName(java.lang.String)
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: int hashCode()
android.support.v4.media.MediaBrowserCompat$MediaItem$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.content.ContextCompat: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
androidx.fragment.app.FragmentManagerState: <clinit>()
com.google.android.exoplayer2.metadata.id3.InternalFrame: InternalFrame(android.os.Parcel)
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource: void recycle()
com.google.android.exoplayer2.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getOldPosition()
com.bumptech.glide.load.engine.DecodeJob: void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.ResourceDecoder byteBuffer(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
androidx.core.view.DisplayCutoutCompat: androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setContentDescription(java.lang.CharSequence)
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineJob init(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void post()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
tv.danmaku.ijk.media.player.misc.IAndroidIO: int read(byte[],int)
androidx.core.widget.NestedScrollView: boolean isWithinDeltaOfScreen(android.view.View,int,int)
com.bumptech.glide.request.target.BitmapImageViewTarget: void setResource(java.lang.Object)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistStuckException: HlsPlaylistTracker$PlaylistStuckException(android.net.Uri)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: void skipBits(int)
androidx.appcompat.widget.SearchView$10: SearchView$10(androidx.appcompat.widget.SearchView)
androidx.recyclerview.widget.GridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
tv.danmaku.ijk.media.player.pragma.DebugLog: DebugLog()
androidx.exifinterface.media.ExifInterface$ExifTag: ExifInterface$ExifTag(java.lang.String,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTint(int)
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: int hashCode()
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean isCompatTintEnabled()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onPlaybackSuppressionReasonChanged(int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.load.Key getSignature()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(int)
androidx.collection.MapCollections$ValuesCollection: MapCollections$ValuesCollection(androidx.collection.MapCollections)
android.support.v4.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void seekMap(com.google.android.exoplayer2.extractor.SeekMap)
com.google.android.exoplayer2.Timeline: Timeline()
org.slf4j.impl.AndroidLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)
com.google.android.exoplayer2.drm.DrmSessionManager$1: java.lang.Class getExoMediaCryptoType(com.google.android.exoplayer2.drm.DrmInitData)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: java.util.List getCues(long)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onDisabled()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspot(float,float)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: RecyclableBufferedInputStream(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int)
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType()
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)
androidx.recyclerview.widget.RecyclerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
tv.danmaku.ijk.media.player.ISurfaceTextureHost: void releaseSurfaceTexture(android.graphics.SurfaceTexture)
com.bumptech.glide.util.pool.FactoryPools: androidx.core.util.Pools$Pool threadSafeList()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isRepeatedCommand(boolean,byte,byte)
androidx.appcompat.widget.LinearLayoutCompat: int measureNullChild(int)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: java.lang.String toString()
com.danikula.videocache.HttpProxyCacheServer: void touchFileSafely(java.io.File)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int)
cn.jzvd.JZMediaSystem: void onSeekComplete(android.media.MediaPlayer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxStart(int)
androidx.appcompat.widget.DropDownListView: boolean touchModeDrawsInPressedStateCompat()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int)
androidx.appcompat.widget.AbsActionBarView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: int read(byte[],int,int)
com.danikula.videocache.Pinger: boolean pingServer()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class)
androidx.core.text.PrecomputedTextCompat$Params: java.lang.String toString()
com.google.android.exoplayer2.MediaPeriodHolder: void disableTrackSelectionsInResult()
com.bumptech.glide.load.engine.LockedResource: java.lang.Object get()
com.google.android.exoplayer2.source.hls.HlsChunkSource$InitializationTrackSelection: HlsChunkSource$InitializationTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int[])
com.danikula.videocache.HttpProxyCacheServer$Builder: HttpProxyCacheServer$Builder(android.content.Context)
com.google.android.exoplayer2.text.ttml.TtmlStyle: int getFontSizeUnit()
com.bumptech.glide.load.resource.bitmap.BitmapResource: void recycle()
androidx.appcompat.view.menu.ActionMenuItem: int getGroupId()
androidx.appcompat.widget.ViewUtils: void makeOptionalFitsSystemWindows(android.view.View)
androidx.appcompat.widget.ScrollingTabContainerView$1: ScrollingTabContainerView$1(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View)
com.google.android.exoplayer2.SimpleExoPlayer: long getDuration()
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: tv.danmaku.ijk.media.player.misc.IMediaFormat getFormat()
com.google.android.exoplayer2.metadata.MetadataRenderer: void decodeWrappedMetadata(com.google.android.exoplayer2.metadata.Metadata,java.util.List)
androidx.appcompat.app.AppCompatDelegateImpl$7: AppCompatDelegateImpl$7(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
androidx.fragment.app.FragmentActivity$HostCallbacks: void onSupportInvalidateOptionsMenu()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.graphics.PorterDuff$Mode getIconTintMode()
com.bumptech.glide.load.Options: Options()
com.bumptech.glide.manager.RequestManagerRetriever: android.app.Activity findActivity(android.content.Context)
androidx.collection.LruCache: int sizeOf(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onReadingStarted(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
androidx.fragment.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)
com.bumptech.glide.load.data.ExifOrientationStream: ExifOrientationStream(java.io.InputStream,int)
androidx.viewpager.widget.ViewPager: void setAdapter(androidx.viewpager.widget.PagerAdapter)
androidx.activity.ComponentActivity$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.widget.ListPopupWindow: void setPopupClipToScreenEnabled(boolean)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray()
com.danikula.videocache.GetRequest: long findRangeOffset(java.lang.String)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.bumptech.glide.load.data.BufferedOutputStream: void close()
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId getDummyFirstMediaPeriodId(boolean,com.google.android.exoplayer2.Timeline$Window,com.google.android.exoplayer2.Timeline$Period)
com.google.android.exoplayer2.extractor.ts.Ac4Reader: void packetStarted(long,int)
androidx.viewpager.widget.ViewPager: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$CheckedItemAdapter: boolean hasStableIds()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: android.media.MediaCodecInfo$CodecProfileLevel[] getProfileLevels()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions lock()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener: ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer)
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: SeekMap$SeekPoints(com.google.android.exoplayer2.extractor.SeekPoint)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onItemsChanged(androidx.recyclerview.widget.RecyclerView)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy()
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
com.bumptech.glide.load.engine.DecodeJob: void onEncodeComplete()
androidx.appcompat.view.menu.MenuWrapperICS: void setQwertyMode(boolean)
com.google.android.exoplayer2.extractor.mp4.Sniffer: boolean sniffUnfragmented(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void stop()
com.bumptech.glide.module.ManifestParser: void throwInstantiateGlideModuleException(java.lang.Class,java.lang.Exception)
androidx.appcompat.view.menu.MenuItemImpl: void setMenuInfo(android.view.ContextMenu$ContextMenuInfo)
androidx.exifinterface.media.ExifInterface: void retrieveJpegImageSize(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: <clinit>()
com.google.android.exoplayer2.PlayerMessage: PlayerMessage(com.google.android.exoplayer2.PlayerMessage$Sender,com.google.android.exoplayer2.PlayerMessage$Target,com.google.android.exoplayer2.Timeline,int,android.os.Handler)
com.google.android.exoplayer2.metadata.icy.IcyInfo$1: com.google.android.exoplayer2.metadata.icy.IcyInfo[] newArray(int)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean access$800(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,long)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: long getPosition()
androidx.collection.ArrayMap$1: void colClear()
org.slf4j.helpers.FormattingTuple: java.lang.String getMessage()
cn.jzvd.JzvdStd: void onCLickUiToggleToClear()
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: void mergeFrom(com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)
com.bumptech.glide.load.resource.bitmap.FitCenter: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry$1: com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry createFromParcel(android.os.Parcel)
androidx.lifecycle.LiveData$LifecycleBoundObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.bumptech.glide.TransitionOptions: com.bumptech.glide.TransitionOptions clone()
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generateLastReportedPlayingMediaPeriodEventTime()
com.bumptech.glide.load.DataSource: <clinit>()
androidx.appcompat.widget.TintInfo: TintInfo()
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readUnsignedInt()
com.google.android.exoplayer2.upstream.BaseDataSource: void transferStarted(com.google.android.exoplayer2.upstream.DataSpec)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.exoplayer2.extractor.MpegAudioHeader: void setValues(int,java.lang.String,int,int,int,int,int)
com.bumptech.glide.disklrucache.DiskLruCache: boolean remove(java.lang.String)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: boolean isPlaying()
androidx.appcompat.app.WindowDecorActionBar: boolean onKeyShortcut(int,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.extractor.ts.H262Reader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void resetCodecBuffers()
com.bumptech.glide.signature.EmptySignature: <clinit>()
androidx.appcompat.view.menu.MenuItemImpl: boolean requestsActionButton()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewAttachedToWindow(android.view.View)
com.bumptech.glide.request.ErrorRequestCoordinator: void onRequestSuccess(com.bumptech.glide.request.Request)
com.google.android.exoplayer2.extractor.ogg.FlacReader: boolean isAudioPacket(byte[])
cn.jzvd.demo.CustomMedia.JZMediaIjk: void start()
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery: <clinit>()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: void access$500(com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event,android.os.Parcel)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment)
androidx.fragment.app.FragmentController: FragmentController(androidx.fragment.app.FragmentHostCallback)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onRepeatModeChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int)
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void readMetadataBlocks(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: long getTimeUs(long)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: double readDouble()
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: void onCreate(android.database.sqlite.SQLiteDatabase)
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int)
androidx.appcompat.widget.ListPopupWindow: int buildDropDown()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: <clinit>()
com.google.android.exoplayer2.DefaultLoadControl: void onTracksSelected(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectionArray)
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: JzvdStdSpeed(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: boolean isIconified()
com.google.android.exoplayer2.DefaultRenderersFactory: void buildMetadataRenderers(android.content.Context,com.google.android.exoplayer2.metadata.MetadataOutput,android.os.Looper,int,java.util.ArrayList)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri)
androidx.collection.SparseArrayCompat: int size()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.recyclerview.widget.RecyclerView: boolean dispatchToOnItemTouchListeners(android.view.MotionEvent)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: com.google.android.exoplayer2.text.Cue build(int)
com.google.android.exoplayer2.source.TrackGroup: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransitionCompat21$4: android.graphics.Rect onGetEpicenter(android.transition.Transition)
com.danikula.videocache.HttpUrlSource: <clinit>()
com.google.android.exoplayer2.extractor.ts.SectionReader: SectionReader(com.google.android.exoplayer2.extractor.ts.SectionPayloadReader)
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory: HttpUrlFetcher$DefaultHttpUrlConnectionFactory()
com.bumptech.glide.request.target.CustomTarget: void onLoadStarted(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentActivity: void onResumeFragments()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumWidth()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()
com.bumptech.glide.Glide: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.DropDownListView: void drawSelectorCompat(android.graphics.Canvas)
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void defineWindow(boolean,boolean,boolean,int,boolean,int,int,int,int,int,int,int)
com.google.android.exoplayer2.ui.TrackSelectionView: void updateViewStates()
androidx.collection.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: android.util.Pair parseCommonEncryptionSinfFromParent(com.google.android.exoplayer2.util.ParsableByteArray,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: void recycle()
com.bumptech.glide.load.model.UrlUriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long readScrValueFromPack(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.metadata.id3.PrivFrame: boolean equals(java.lang.Object)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation,boolean)
tv.danmaku.ijk.media.player.pragma.DebugLog: void wfmt(java.lang.String,java.lang.String,java.lang.Object[])
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: DiskLruCacheFactory(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,long)
androidx.appcompat.view.menu.CascadingMenuPopup$2: CascadingMenuPopup$2(androidx.appcompat.view.menu.CascadingMenuPopup)
cn.jzvd.demo.ActivityTinyWindow: void clickAutoTinyListViewRecyclerViewMultiHolder(android.view.View)
android.support.v4.os.ResultReceiver: <clinit>()
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.google.android.exoplayer2.trackselection.BaseTrackSelection$DecreasingBandwidthComparator: int compare(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format)
androidx.core.provider.FontRequest: java.lang.String getProviderPackage()
androidx.viewpager.widget.ViewPager$ViewPositionComparator: int compare(android.view.View,android.view.View)
com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy: int getMinimumLoadableRetryCount(int)
com.bumptech.glide.provider.ResourceDecoderRegistry: void setBucketPriorityList(java.util.List)
androidx.recyclerview.widget.RecyclerView: void stopInterceptRequestLayout(boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void pause()
tv.danmaku.ijk.media.player.MediaPlayerProxy$3: MediaPlayerProxy$3(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: long getItemId(int)
androidx.appcompat.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.bumptech.glide.manager.ActivityFragmentLifecycle: void removeListener(com.bumptech.glide.manager.LifecycleListener)
com.google.android.exoplayer2.source.BaseMediaSource: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.load.engine.DiskCacheStrategy$2: boolean decodeCachedData()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onBackPressed()
com.google.android.exoplayer2.text.webvtt.CssParser: <clinit>()
com.google.android.exoplayer2.MediaPeriodQueue: boolean updateQueuedPeriods(long,long)
android.support.v4.media.session.MediaSessionCompat$QueueItem: int describeContents()
com.google.android.exoplayer2.util.ParsableByteArray: void readBytes(byte[],int,int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void prepareAsync()
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onSessionDestroyed()
com.google.android.exoplayer2.source.ads.AdPlaybackState: boolean equals(java.lang.Object)
com.google.android.exoplayer2.upstream.Loader$LoadTask: void maybeThrowError(int)
com.google.android.exoplayer2.SimpleExoPlayer: void maybeNotifySurfaceSizeChanged(int,int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void addFlags(int)
androidx.appcompat.widget.DrawableUtils: boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable)
androidx.lifecycle.LiveData: void assertMainThread(java.lang.String)
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory: com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)
com.google.android.exoplayer2.audio.DefaultAudioSink: long access$600(com.google.android.exoplayer2.audio.DefaultAudioSink)
androidx.fragment.app.Fragment: void onAttach(android.app.Activity)
com.google.android.exoplayer2.extractor.ts.TsExtractor: void seek(long,long)
com.bumptech.glide.load.resource.bitmap.Downsampler: void releaseOptions(android.graphics.BitmapFactory$Options)
android.support.v4.media.session.MediaSessionCompat$QueueItem: MediaSessionCompat$QueueItem(android.os.Parcel)
androidx.appcompat.app.ResourcesFlusher: void flushThemedResourcesCache(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getOpacity()
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: <clinit>()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void writeToTarget(com.google.android.exoplayer2.extractor.ExtractorInput,byte[],int,int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.util.ParsableBitArray: int bitsLeft()
com.google.android.exoplayer2.util.Util: long getMediaDurationForPlayoutDuration(long,float)
android.support.v4.media.session.MediaSessionCompat$Token$1: android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.StandardMenuPopup$1: void onGlobalLayout()
com.danikula.videocache.HttpProxyCacheServer: <clinit>()
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: void updateDiskCacheKey(java.security.MessageDigest)
androidx.core.widget.EdgeEffectCompat: void onPull(android.widget.EdgeEffect,float,float)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: int access$200(com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData)
com.google.android.exoplayer2.decoder.SimpleDecoder: void queueInputBuffer(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void reset()
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: void onPositionFramesMismatch(long,long,long,long)
androidx.appcompat.app.AlertController$AlertParams$3: AlertController$AlertParams$3(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController)
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: MediaControllerCompat$Callback$StubApi21(android.support.v4.media.session.MediaControllerCompat$Callback)
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseTruns(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle,long,int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: void startSample(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithIsLoading(boolean)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void deliverMessage(com.google.android.exoplayer2.PlayerMessage)
com.google.android.exoplayer2.drm.DrmSession$DrmSessionException: DrmSession$DrmSessionException(java.lang.Throwable)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void resetOutputBuffer()
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintList(android.content.Context,int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
androidx.appcompat.view.menu.MenuAdapter: MenuAdapter(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean needsPassthroughWorkarounds(int)
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: java.lang.String toString()
com.google.android.exoplayer2.ui.TrackSelectionView: void onDisableViewClicked()
androidx.core.widget.NestedScrollView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: java.lang.String buildCustomDiagnosticInfo(int)
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseBooleanArray access$900(com.google.android.exoplayer2.extractor.ts.TsExtractor)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int skipData(int,long)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence)
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2: void handle(java.lang.Throwable)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.appcompat.view.menu.MenuItemImpl: char getShortcut()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.ParcelableVolumeInfo: ParcelableVolumeInfo(android.os.Parcel)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int indexOfStateSet(int[])
com.google.android.exoplayer2.source.hls.DefaultHlsDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource createDataSource(int)
com.google.android.exoplayer2.extractor.ts.LatmReader: void resetBufferForSize(int)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewCollapsed()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat)
tv.danmaku.ijk.media.player.MediaPlayerProxy$2: void onCompletion(tv.danmaku.ijk.media.player.IMediaPlayer)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: <clinit>()
androidx.appcompat.widget.ToolbarWidgetWrapper: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: ListPopupWindow$ListSelectorHider(androidx.appcompat.widget.ListPopupWindow)
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: long getEventTime(int)
androidx.collection.ArraySet: void clear()
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForScrValueInBuffer(com.google.android.exoplayer2.util.ParsableByteArray,long,long)
com.google.android.exoplayer2.upstream.UdpDataSource: void close()
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.fragment.app.FragmentManagerImpl: void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
com.bumptech.glide.load.engine.cache.LruResourceCache: void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener)
androidx.viewpager.widget.ViewPager: boolean arrowScroll(int)
androidx.appcompat.widget.ActionBarContextView$1: void onClick(android.view.View)
android.support.v4.media.MediaDescriptionCompatApi23$Builder: void setMediaUri(java.lang.Object,android.net.Uri)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.recyclerview.widget.RecyclerView: void onScrollStateChanged(int)
androidx.collection.ArraySet: java.lang.Object[] toArray()
com.google.android.exoplayer2.Timeline$Period: com.google.android.exoplayer2.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long,com.google.android.exoplayer2.source.ads.AdPlaybackState)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)
androidx.versionedparcelable.VersionedParcel: VersionedParcel(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.bumptech.glide.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onSurfaceSizeChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,int)
com.bumptech.glide.manager.ActivityFragmentLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: OnBackPressedDispatcher$LifecycleOnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoaderReleased()
com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader: com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader peek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: MatroskaExtractor()
com.google.android.exoplayer2.source.SampleQueue: void onFormatResult(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.FormatHolder)
com.bumptech.glide.load.resource.bitmap.Downsampler: void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long)
com.danikula.videocache.file.FileCache: boolean isTempFile(java.io.File)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean dispatch(android.view.View,android.view.KeyEvent)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onCodecInitialized(java.lang.String,long,long)
cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen: JzvdStdVolumeAfterFullscreen(android.content.Context,android.util.AttributeSet)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onInactive()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.FragmentManagerViewModel: java.util.Collection getRetainedFragments()
tv.danmaku.ijk.media.player.misc.ITrackInfo: tv.danmaku.ijk.media.player.misc.IMediaFormat getFormat()
com.bumptech.glide.disklrucache.StrictLineReader: void close()
com.google.android.exoplayer2.extractor.ts.UserDataReader: UserDataReader(java.util.List)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEnabled(int)
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedEnd(android.view.View)
com.bumptech.glide.util.Preconditions: void checkArgument(boolean,java.lang.String)
androidx.appcompat.view.SupportActionModeWrapper: boolean isTitleOptional()
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()
androidx.recyclerview.widget.RecyclerView$SavedState: RecyclerView$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void appendViewToAllSpans(android.view.View)
androidx.appcompat.view.menu.CascadingMenuPopup: int getNextMenuPosition(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: java.util.List getDecoderInfos(com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.Format,boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: int getCodecCount()
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: void put(android.graphics.Bitmap)
androidx.appcompat.view.SupportMenuInflater: <clinit>()
com.google.android.exoplayer2.decoder.Buffer: boolean getFlag(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: void cancel()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: BinarySearchSeeker$SeekOperationParams(long,long,long,long,long,long,long)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory: ParcelFileDescriptorRewinder$Factory()
androidx.core.graphics.Insets: Insets(int,int,int,int)
com.google.android.exoplayer2.text.dvb.DvbDecoder: DvbDecoder(java.util.List)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void handleInputBufferSupplementalData(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: java.lang.String toString()
androidx.fragment.app.FragmentHostCallback: android.os.Handler getHandler()
androidx.appcompat.view.ActionBarPolicy: boolean hasEmbeddedTabs()
androidx.core.view.ViewCompat: <clinit>()
com.google.android.exoplayer2.audio.AudioTimestampPoller: void reset()
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool: com.bumptech.glide.gifdecoder.GifHeaderParser obtain(java.nio.ByteBuffer)
android.support.v4.media.session.MediaControllerCompat$Callback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: void handleMessage(int,java.lang.Object)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DrmSession acquirePlaceholderSession(android.os.Looper,int)
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int)
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.util.SlidingPercentile$Sample: SlidingPercentile$Sample()
androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.activity.OnBackPressedCallback: void removeCancellable(androidx.activity.Cancellable)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onMetadataChanged(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$6: FragmentManagerImpl$6(androidx.fragment.app.FragmentManagerImpl)
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.bumptech.glide.signature.EmptySignature: java.lang.String toString()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManagerImpl: void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition: DvbParser$DisplayDefinition(int,int,int,int,int,int)
com.bumptech.glide.GlideBuilder$1: com.bumptech.glide.request.RequestOptions build()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getTopDecorationHeight(android.view.View)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.load.engine.cache.LruResourceCache: int getSize(java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void buildAndPrepareAudioSampleStreamWrappers(long,java.util.List,java.util.List,java.util.List,java.util.Map)
androidx.appcompat.widget.ActionBarContextView$1: ActionBarContextView$1(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode)
com.bumptech.glide.load.resource.bitmap.FitCenter: int hashCode()
com.google.android.exoplayer2.source.hls.Aes128DataSource: void addTransferListener(com.google.android.exoplayer2.upstream.TransferListener)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object removeLast()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.viewpager.widget.ViewPager: boolean resetTouch()
com.bumptech.glide.util.Util: boolean isValidDimensions(int,int)
com.google.android.exoplayer2.source.hls.HlsMediaSource: HlsMediaSource(android.net.Uri,com.google.android.exoplayer2.source.hls.HlsDataSourceFactory,com.google.android.exoplayer2.source.hls.HlsExtractorFactory,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker,boolean,int,boolean,java.lang.Object)
com.bumptech.glide.load.resource.transcode.UnitTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable mutate()
android.support.v4.media.MediaDescriptionCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.graphics.Insets: android.graphics.Insets toPlatformInsets()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions optionalScaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation)
org.slf4j.LoggerFactory: java.util.Set findPossibleStaticLoggerBinderPathSet()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioBecomingNoisy()
cn.jzvd.JZDataSource: java.lang.Object getValueFromLinkedMap(int)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: <clinit>()
androidx.activity.OnBackPressedCallback: OnBackPressedCallback(boolean)
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.text.SubtitleOutputBuffer dequeueOutputBuffer()
androidx.core.text.PrecomputedTextCompat$Params: boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params)
androidx.core.graphics.ColorUtils: int compositeComponent(int,int,int,int,int)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks: StreamBitmapDecoder$UntrustedCallbacks(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,com.bumptech.glide.util.ExceptionPassthroughInputStream)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: com.google.android.exoplayer2.extractor.SeekPoint getSeekPoint(long,long)
androidx.lifecycle.ClassesInfoCache: void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore)
androidx.core.graphics.TypefaceCompatApi21Impl: boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: android.view.View getChildAt(int)
com.google.android.exoplayer2.upstream.AssetDataSource: AssetDataSource(android.content.Context)
cn.jzvd.demo.ActivityMain: void clickTinyWindow(android.view.View)
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand$1: com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand[] newArray(int)
androidx.appcompat.widget.TooltipCompatHandler: void cancelPendingShow()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window$Callback)
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestTask: DefaultDrmSession$RequestTask(boolean,long,java.lang.Object)
com.bumptech.glide.load.resource.bitmap.Downsampler: void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenHorizontal(int)
com.google.android.exoplayer2.extractor.ts.Ac4Reader: boolean skipToNextSync(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder: SampleQueue$SampleExtrasHolder()
com.google.android.exoplayer2.IllegalSeekPositionException: IllegalSeekPositionException(com.google.android.exoplayer2.Timeline,int,long)
com.bumptech.glide.disklrucache.DiskLruCache: void closeWriter(java.io.Writer)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void measureChildWithMargins(android.view.View,int,int)
com.bumptech.glide.util.pool.StateVerifier: com.bumptech.glide.util.pool.StateVerifier newInstance()
androidx.core.widget.NestedScrollView: int computeVerticalScrollExtent()
com.danikula.videocache.HttpProxyCacheServerClients: com.danikula.videocache.HttpProxyCache newHttpProxyCache()
com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: HttpDataSource$HttpDataSourceException(java.lang.String,com.google.android.exoplayer2.upstream.DataSpec,int)
androidx.fragment.app.FragmentHostCallback: android.app.Activity getActivity()
androidx.appcompat.widget.ActionBarOverlayLayout: void onDetachedFromWindow()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
com.google.android.exoplayer2.metadata.id3.CommentFrame: <clinit>()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)
com.google.android.exoplayer2.upstream.Loader$LoadTask: Loader$LoadTask(com.google.android.exoplayer2.upstream.Loader,android.os.Looper,com.google.android.exoplayer2.upstream.Loader$Loadable,com.google.android.exoplayer2.upstream.Loader$Callback,int,long)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
androidx.fragment.app.Fragment: void setStateAfterAnimating(int)
com.google.android.exoplayer2.audio.Sonic: void overlapAdd(int,int,short[],int,short[],int,short[],int)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: boolean onMediaPeriodReleased(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcelable)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.recyclerview.widget.LinearLayoutManager: boolean resolveIsInfinite()
com.google.android.exoplayer2.source.SinglePeriodTimeline: SinglePeriodTimeline(long,boolean,boolean,boolean,java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.AssetFileDescriptor openRawResourceFd(int)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor: void writePcm32BitFloat(int,java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatPopupWindow: <clinit>()
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: HlsMasterPlaylist(java.lang.String,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,com.google.android.exoplayer2.Format,java.util.List,boolean,java.util.Map,java.util.List)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void seekTo(long)
androidx.core.widget.AutoScrollHelper: boolean shouldAnimate()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void stop()
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetInvalidated()
androidx.appcompat.widget.TintTypedArray: android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback)
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: DefaultExtractorsFactory()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithContainerInfo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.android.exoplayer2.metadata.Metadata,int,int,int,int,int,java.lang.String)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void setPenLocation(int,int)
androidx.appcompat.widget.ListPopupWindow: void show()
com.google.android.exoplayer2.util.NalUnitUtil: int findNalUnit(byte[],int,int,boolean[])
androidx.core.provider.FontRequest: java.lang.String getQuery()
cn.jzvd.demo.CustomMedia.JZMediaExo: java.lang.Runnable access$100(cn.jzvd.demo.CustomMedia.JZMediaExo)
cn.jzvd.JZMediaSystem: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry: boolean handles(java.lang.Class,java.lang.Class)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
cn.jzvd.demo.ActivityListViewRecyclerView$1: ActivityListViewRecyclerView$1(cn.jzvd.demo.ActivityListViewRecyclerView)
com.danikula.videocache.Pinger: Pinger(java.lang.String,int)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.CommentFrame parseCommentAttribute(int,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.ProgressiveMediaSource: ProgressiveMediaSource(android.net.Uri,com.google.android.exoplayer2.upstream.DataSource$Factory,com.google.android.exoplayer2.extractor.ExtractorsFactory,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,java.lang.String,int,java.lang.Object)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream)
androidx.appcompat.app.AlertController$AlertParams: void createListView(androidx.appcompat.app.AlertController)
androidx.collection.SparseArrayCompat: androidx.collection.SparseArrayCompat clone()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
android.support.v4.media.session.ParcelableVolumeInfo$1: android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel)
androidx.lifecycle.ClassesInfoCache$MethodReference: int hashCode()
cn.jzvd.demo.ApplicationDemo: com.danikula.videocache.HttpProxyCacheServer getProxy(android.content.Context)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.audio.AudioSink$InitializationException: AudioSink$InitializationException(int,int,int,int)
cn.jzvd.JZMediaInterface: void setVolume(float,float)
androidx.core.view.KeyEventDispatcher: boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction disallowAddToBackStack()
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void configureTunnelingV21(android.media.MediaFormat,int)
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromMemory(com.bumptech.glide.load.engine.EngineKey,boolean,long)
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int)
com.google.android.exoplayer2.ExoPlayerImpl: void access$000(java.util.concurrent.CopyOnWriteArrayList,com.google.android.exoplayer2.BasePlayer$ListenerInvocation)
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationEnd(android.view.animation.Animation)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getAv1ProfileAndLevel(java.lang.String,java.lang.String[],com.google.android.exoplayer2.video.ColorInfo)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: int adjustMaxInputChannelCount(java.lang.String,java.lang.String,int)
cn.jzvd.demo.CustomMedia.JZMediaIjk: boolean onError(tv.danmaku.ijk.media.player.IMediaPlayer,int,int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions skipMemoryCache(boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector: IjkMediaPlayer$DefaultMediaCodecSelector()
androidx.appcompat.app.AppCompatDelegateImpl: void invalidateOptionsMenu()
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void setVisibility(boolean)
com.bumptech.glide.load.resource.gif.GifDrawableEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)
androidx.collection.SparseArrayCompat: java.lang.Object clone()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: void onDisplayRemoved(int)
com.google.android.exoplayer2.metadata.id3.ChapterFrame$1: com.google.android.exoplayer2.metadata.id3.ChapterFrame createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isShortcutsVisible()
com.google.android.exoplayer2.text.ttml.TtmlStyle: int getFontColor()
com.bumptech.glide.load.model.GlideUrl: java.lang.String getSafeStringUrl()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean getPadding(android.graphics.Rect)
com.google.android.exoplayer2.ExoPlayerImpl: void setRepeatMode(int)
com.danikula.videocache.file.Files$LastModifiedComparator: Files$LastModifiedComparator()
com.bumptech.glide.load.engine.DecodeJob$Stage: DecodeJob$Stage(java.lang.String,int)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: void releaseOutputBuffer(com.google.android.exoplayer2.text.SubtitleOutputBuffer)
androidx.cursoradapter.widget.CursorAdapter: void changeCursor(android.database.Cursor)
com.google.android.exoplayer2.util.ParsableByteArray: java.lang.String readLine()
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: <clinit>()
com.bumptech.glide.request.target.CustomTarget: CustomTarget()
com.google.android.exoplayer2.metadata.id3.BinaryFrame$1: BinaryFrame$1()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.extractor.ChunkIndex: boolean isSeekable()
com.google.android.exoplayer2.ParserException: ParserException()
androidx.collection.LongSparseArray: int size()
androidx.exifinterface.media.ExifInterface$ExifAttribute: ExifInterface$ExifAttribute(int,int,byte[])
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.upstream.ContentDataSource: void close()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.util.Log: void w(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.exoplayer2.C: long msToUs(long)
com.google.android.exoplayer2.DefaultLoadControl: boolean shouldStartPlayback(long,float,boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updatePlayingPeriodRenderers(com.google.android.exoplayer2.MediaPeriodHolder)
com.google.android.exoplayer2.extractor.ts.TsExtractor: TsExtractor()
androidx.versionedparcelable.VersionedParcelParcel: void writeBoolean(boolean)
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
cn.jzvd.demo.ActivityListViewFragmentViewPager: void onPageSelected(int)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float)
com.google.android.exoplayer2.metadata.id3.PrivFrame$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.extractor.ts.AdtsReader: void packetFinished()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getCodecLongNameInline()
androidx.core.content.res.FontResourcesParserCompat: int getType(android.content.res.TypedArray,int)
com.bumptech.glide.load.resource.bitmap.FitCenter: FitCenter()
com.bumptech.glide.Glide: void onTrimMemory(int)
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.lang.String getProfileName(int)
androidx.core.graphics.drawable.IconCompat: int getResId(android.graphics.drawable.Icon)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemChanged()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: HlsMediaPlaylist$Segment(java.lang.String,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment,java.lang.String,long,int,long,com.google.android.exoplayer2.drm.DrmInitData,java.lang.String,java.lang.String,long,long,boolean)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void setPenColor(int,int,int)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart()
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: ViewBoundsCheck$BoundFlags()
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: int compareTo(java.lang.Object)
com.google.android.exoplayer2.util.NalUnitUtil: com.google.android.exoplayer2.util.NalUnitUtil$SpsData parseSpsNalUnit(byte[],int,int)
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: void audioSessionId(int)
com.google.android.exoplayer2.AudioFocusManager: boolean willPauseWhenDucked()
com.bumptech.glide.load.model.ByteBufferEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)
androidx.appcompat.widget.TooltipCompat: void setTooltipText(android.view.View,java.lang.CharSequence)
androidx.fragment.app.Fragment: boolean equals(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
androidx.appcompat.widget.ResourceManagerInternal: <clinit>()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void onLoadCanceled(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.List getDecoderInfosSortedByFormatSupport(java.util.List,com.google.android.exoplayer2.Format)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void dump()
com.danikula.videocache.HttpProxyCache: void responseWithoutCache(java.io.OutputStream,long)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[],int)
android.support.v4.os.ResultReceiver$1: ResultReceiver$1()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.decoder.DecoderCounters access$102(com.google.android.exoplayer2.SimpleExoPlayer,com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onRenderedFirstFrame(android.view.Surface)
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String getStringValue(java.nio.ByteOrder)
com.google.android.exoplayer2.upstream.FileDataSource: android.net.Uri getUri()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyEvent(android.view.KeyEvent)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setDataSource(android.content.Context,android.net.Uri)
androidx.appcompat.widget.SearchView$8: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem getItem(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDialog: boolean supportRequestWindowFeature(int)
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean isRunning()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _prepareAsync()
androidx.fragment.app.Fragment: android.view.animation.Animation onCreateAnimation(int,boolean,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: android.view.View getChildAt(int)
com.google.android.exoplayer2.text.subrip.SubripSubtitle: int getEventTimeCount()
androidx.appcompat.widget.ActionBarBackgroundDrawable: ActionBarBackgroundDrawable(androidx.appcompat.widget.ActionBarContainer)
cn.jzvd.demo.ActivityApiUISmallChange: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant createMediaPlaylistVariantUrl(android.net.Uri)
androidx.appcompat.widget.AppCompatTextView: void setTextAppearance(android.content.Context,int)
com.google.android.exoplayer2.RendererConfiguration: int hashCode()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: boolean isSmallEnoughForReuse(int)
org.slf4j.impl.AndroidLoggerAdapter: void debug(java.lang.String)
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.Timeline getTimeline()
androidx.collection.MapCollections$EntrySet: boolean containsAll(java.util.Collection)
com.bumptech.glide.provider.ModelToResourceClassCache: ModelToResourceClassCache()
com.google.android.exoplayer2.BasePlayer$ListenerHolder: int hashCode()
com.danikula.videocache.ProxyCache: boolean isStopped()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.AppCompatImageButton: void drawableStateChanged()
com.google.android.exoplayer2.metadata.id3.InternalFrame$1: com.google.android.exoplayer2.metadata.id3.InternalFrame createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: FragmentedMp4Extractor(int,com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.mp4.Track,java.util.List)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isCodecSupported(com.google.android.exoplayer2.Format)
com.bumptech.glide.request.BaseRequestOptions: boolean getUseAnimationPool()
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isCtrlCode(byte)
android.support.v4.media.session.PlaybackStateCompat$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.data.DataRewinderRegistry$1: java.lang.Class getDataClass()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onContinueLoadingRequested(com.google.android.exoplayer2.source.SequenceableLoader)
androidx.exifinterface.media.ExifInterface: ExifInterface(java.io.InputStream)
androidx.recyclerview.widget.LayoutState: java.lang.String toString()
com.google.android.exoplayer2.drm.ErrorStateDrmSession: void release()
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams()
com.google.android.exoplayer2.upstream.DefaultDataSource: DefaultDataSource(android.content.Context,com.google.android.exoplayer2.upstream.DataSource)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: AdaptiveTrackSelection$Factory(com.google.android.exoplayer2.upstream.BandwidthMeter)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: DefaultAudioSink$Configuration(boolean,int,int,int,int,int,int,int,boolean,boolean,com.google.android.exoplayer2.audio.AudioProcessor[])
androidx.exifinterface.media.ExifInterface: boolean isOrfFormat(byte[])
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable getChild(int)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll()
com.bumptech.glide.manager.RequestManagerFragment: RequestManagerFragment(com.bumptech.glide.manager.ActivityFragmentLifecycle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void updatePaddingBuffer(java.nio.ByteBuffer,byte[],int)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable parseStbl(com.google.android.exoplayer2.extractor.mp4.Track,com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer2.extractor.GaplessInfoHolder)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: android.media.AudioAttributes getAudioAttributes(java.lang.Object)
com.google.android.exoplayer2.Timeline$Window: long getDefaultPositionUs()
com.bumptech.glide.load.resource.bitmap.VideoDecoder: <clinit>()
androidx.arch.core.internal.SafeIterableMap: java.lang.String toString()
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: void setScreenNormal()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseVideoSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,int,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData,int)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void packetFinished()
androidx.viewpager.widget.ViewPager: void onDraw(android.graphics.Canvas)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class)
com.google.android.exoplayer2.Timeline$Period: long getAdResumePositionUs()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void invalidateSelf()
cn.jzvd.Jzvd: <clinit>()
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: <clinit>()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long timeUsToTargetTime(long)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: SearchView$PreQAutoCompleteTextViewReflector()
com.google.android.exoplayer2.source.hls.Aes128DataSource: int read(byte[],int,int)
androidx.lifecycle.ReportFragment: void dispatch(androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.metadata.id3.MlltFrame: MlltFrame(android.os.Parcel)
com.bumptech.glide.request.ErrorRequestCoordinator: void onRequestFailed(com.bumptech.glide.request.Request)
cn.jzvd.JZMediaSystem: boolean onInfo(android.media.MediaPlayer,int,int)
androidx.appcompat.view.menu.StandardMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher$ListenerAndHandler: MediaSourceEventListener$EventDispatcher$ListenerAndHandler(android.os.Handler,com.google.android.exoplayer2.source.MediaSourceEventListener)
com.bumptech.glide.manager.SupportRequestManagerFragment: void setParentFragmentHint(androidx.fragment.app.Fragment)
com.bumptech.glide.manager.ApplicationLifecycle: void removeListener(com.bumptech.glide.manager.LifecycleListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState()
com.google.android.exoplayer2.extractor.ts.PsExtractor: PsExtractor(com.google.android.exoplayer2.util.TimestampAdjuster)
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder: com.bumptech.glide.load.engine.Resource toGifDrawableResource(com.bumptech.glide.load.engine.Resource)
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: java.lang.String buildHeader()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: boolean isReady()
org.slf4j.impl.StaticLoggerBinder: org.slf4j.ILoggerFactory getLoggerFactory()
cn.jzvd.Jzvd: void changeUrl(int,long)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ActionMenuPresenter: void setMenuView(androidx.appcompat.widget.ActionMenuView)
com.bumptech.glide.request.BaseRequestOptions: boolean isSet(int)
cn.jzvd.demo.ActivityTinyWindow: void onPause()
com.google.android.exoplayer2.audio.BaseAudioProcessor: boolean hasPendingOutput()
com.bumptech.glide.util.ExceptionPassthroughInputStream: int read()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaX()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)
tv.danmaku.ijk.media.player.MediaPlayerProxy$6: MediaPlayerProxy$6(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener)
androidx.viewpager.widget.ViewPager: void endDrag()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChildCount()
com.google.android.exoplayer2.Timeline$Period: com.google.android.exoplayer2.Timeline$Period set(java.lang.Object,java.lang.Object,int,long,long)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.gifdecoder.StandardGifDecoder: int averageColorsNear(int,int,int)
org.slf4j.helpers.SubstituteLoggerFactory: java.util.concurrent.LinkedBlockingQueue getEventQueue()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int skipFromPeekBuffer(int)
androidx.collection.SparseArrayCompat: java.lang.Object get(int,java.lang.Object)
com.bumptech.glide.load.resource.gif.GifBitmapProvider: void release(android.graphics.Bitmap)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isSeamlessAdaptationSupported(com.google.android.exoplayer2.Format)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: CursorAdapter$ChangeObserver(androidx.cursoradapter.widget.CursorAdapter)
androidx.appcompat.widget.ScrollingTabContainerView: <clinit>()
androidx.fragment.app.Fragment: void onPause()
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode clear()
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1: java.nio.ByteBuffer convert(byte[])
androidx.appcompat.view.ActionMode: void setTag(java.lang.Object)
com.google.android.exoplayer2.extractor.ts.H265Reader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.bumptech.glide.GlideContext: com.bumptech.glide.Registry getRegistry()
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
com.google.android.exoplayer2.metadata.icy.IcyHeaders: <clinit>()
androidx.collection.LongSparseArray: java.lang.Object clone()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: int getCount()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void setReadingSampleState(com.google.android.exoplayer2.extractor.TrackOutput,long,int,int)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: void decodeBlockForChannel(byte[],int,int,byte[])
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener: void onAudioSessionId(int)
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedFontSizes(boolean)
androidx.lifecycle.MutableLiveData: void setValue(java.lang.Object)
com.bumptech.glide.disklrucache.DiskLruCache: void flushWriter(java.io.Writer)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void setAudioTrack(android.media.AudioTrack,int,int,int)
cn.jzvd.demo.ActivityPreloading: void clickStartPreloading(android.view.View)
tv.danmaku.ijk.media.player.TextureMediaPlayer: android.graphics.SurfaceTexture getSurfaceTexture()
com.google.android.exoplayer2.upstream.DataSourceInputStream: void checkOpened()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.metadata.Metadata parseIlst(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentTransaction beginTransaction()
androidx.viewpager.widget.ViewPager: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.bumptech.glide.load.resource.transcode.TranscoderRegistry: com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: <clinit>()
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: long parseSpliceTime(com.google.android.exoplayer2.util.ParsableByteArray,long)
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrollStateChanged(int)
androidx.core.content.res.ColorStateListInflaterCompat: int modulateColorAlpha(int,float)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.bumptech.glide.load.model.MultiModelLoaderFactory: void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean)
com.google.android.exoplayer2.Timeline: int getNextPeriodIndex(int,com.google.android.exoplayer2.Timeline$Period,com.google.android.exoplayer2.Timeline$Window,int,boolean)
androidx.appcompat.view.menu.MenuItemImpl: int getOrder()
com.google.android.exoplayer2.audio.SonicAudioProcessor: void queueInput(java.nio.ByteBuffer)
com.google.android.exoplayer2.audio.Ac3Util: int findTrueHdSyncframeOffset(java.nio.ByteBuffer)
com.google.android.exoplayer2.audio.AudioTimestampPoller: void acceptTimestamp()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()
com.bumptech.glide.manager.SupportRequestManagerFragment: void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment)
cn.jzvd.demo.ActivityMain: void onPause()
com.bumptech.glide.util.ExceptionPassthroughInputStream: void close()
androidx.appcompat.graphics.drawable.StateListDrawable: void applyTheme(android.content.res.Resources$Theme)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setPropertyFloat(int,float)
com.bumptech.glide.Priority: com.bumptech.glide.Priority valueOf(java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionCancel(android.transition.Transition)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: TimeSignalCommand(long,long,com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand$1)
com.google.android.exoplayer2.audio.Sonic: void downSampleInput(short[],int,int)
com.google.android.exoplayer2.extractor.DummyTrackOutput: void sampleData(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.util.FlacStreamMetadata: int getSampleRateLookupKey(int)
com.google.android.exoplayer2.metadata.MetadataRenderer: boolean handleMessage(android.os.Message)
com.bumptech.glide.manager.ApplicationLifecycle: void addListener(com.bumptech.glide.manager.LifecycleListener)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long access$200(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int)
com.bumptech.glide.request.SingleRequest: boolean canSetResource()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: boolean onStateChanged(int[])
androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean)
com.google.android.exoplayer2.Timeline: <clinit>()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: SpliceScheduleCommand$Event(android.os.Parcel)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onDetachedFromWindow()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.Toolbar$1: Toolbar$1(androidx.appcompat.widget.Toolbar)
androidx.appcompat.widget.AppCompatTextHelper: android.content.res.ColorStateList getCompoundDrawableTintList()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
tv.danmaku.ijk.media.player.MediaPlayerProxy: tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo()
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame$1: UrlLinkFrame$1()
androidx.core.provider.FontsContractCompat$1: FontsContractCompat$1(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory: android.media.MediaMetadataRetriever build()
com.bumptech.glide.load.data.StreamAssetPathFetcher: StreamAssetPathFetcher(android.content.res.AssetManager,java.lang.String)
com.bumptech.glide.disklrucache.DiskLruCache: void access$400(com.bumptech.glide.disklrucache.DiskLruCache)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat onConfigure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,int[])
cn.jzvd.Jzvd: void autoFullscreen(float)
androidx.appcompat.widget.ResourcesWrapper: float getDimension(int)
androidx.fragment.app.FragmentState: FragmentState(androidx.fragment.app.Fragment)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int findNoisePosition(java.nio.ByteBuffer)
androidx.fragment.app.FragmentManagerImpl$5: FragmentManagerImpl$5(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: boolean handles(com.bumptech.glide.load.model.GlideUrl)
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollVertically()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnBufferingUpdateListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener)
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.drm.DefaultDrmSession: void doLicense(boolean)
com.bumptech.glide.module.AppGlideModule: AppGlideModule()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.GeobFrame decodeGeobFrame(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.ui.TrackSelectionView: boolean shouldEnableMultiGroupSelection()
com.bumptech.glide.load.model.MultiModelLoaderFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View,int)
androidx.core.provider.FontsContractCompat$FontFamilyResult: FontsContractCompat$FontFamilyResult(int,androidx.core.provider.FontsContractCompat$FontInfo[])
androidx.appcompat.widget.ScrollingTabContainerView: void onDetachedFromWindow()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeThrowError(int)
cn.jzvd.JZMediaInterface: boolean isPlaying()
com.google.android.exoplayer2.ui.TrackSelectionView: void updateViews()
androidx.appcompat.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.bumptech.glide.load.engine.executor.GlideExecutor: void shutdown()
com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader: TsExtractor$PatReader(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.core.text.PrecomputedTextCompat: int nextSpanTransition(int,int,java.lang.Class)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void access$200(tv.danmaku.ijk.media.player.IjkMediaPlayer,boolean)
androidx.versionedparcelable.VersionedParcelParcel: VersionedParcelParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: int hashCode()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int moveToExifSegmentAndGetLength(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader)
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long getFramePositionForTimeUs(long)
com.google.android.exoplayer2.ExoPlayerImplInternal: void sendMessage(com.google.android.exoplayer2.PlayerMessage)
androidx.collection.ArraySet$1: java.lang.Object colGetEntry(int,int)
com.bumptech.glide.request.BaseRequestOptions: boolean isAutoCloneEnabled()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: AppCompatSpinner$SavedState$1()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean selectTransition(int)
androidx.appcompat.widget.ResourceManagerInternal: void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal)
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean isAdtsSyncWord(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setMenuPrepared()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int readData(int,com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
com.bumptech.glide.load.resource.gif.GifDrawable: void recycle()
tv.danmaku.ijk.media.player.IMediaPlayer: void setSurface(android.view.Surface)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(int,int)
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: int getElementSizeInBytes()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: int describeContents()
androidx.core.text.PrecomputedTextCompat: java.lang.Object[] getSpans(int,int,java.lang.Class)
androidx.fragment.app.FragmentManagerImpl: boolean isStateAtLeast(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderers(boolean[],int)
com.google.android.exoplayer2.metadata.id3.PrivFrame: int hashCode()
androidx.appcompat.widget.AppCompatSpinner: android.os.Parcelable onSaveInstanceState()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1)
com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider: com.google.android.exoplayer2.util.TimestampAdjuster getAdjuster(int)
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: com.bumptech.glide.load.engine.executor.GlideExecutor build()
androidx.exifinterface.media.ExifInterface$Rational: java.lang.String toString()
com.google.android.exoplayer2.extractor.ts.PsExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingBottom()
com.google.android.exoplayer2.util.EGLSurfaceTexture$GlException: EGLSurfaceTexture$GlException(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.graphics.TypefaceCompatBaseImpl$1: TypefaceCompatBaseImpl$1(androidx.core.graphics.TypefaceCompatBaseImpl)
androidx.appcompat.app.AppCompatDelegateImpl: void throwFeatureRequestIfSubDecorInstalled()
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldInheritContext(android.view.ViewParent)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setSeekParametersInternal(com.google.android.exoplayer2.SeekParameters)
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable loadDrawable(int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int getElementType(int)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: int getChildVerticalGravity(int)
androidx.exifinterface.media.ExifInterface: boolean isPngFormat(byte[])
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory: com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener)
com.google.android.exoplayer2.video.DolbyVisionConfig: com.google.android.exoplayer2.video.DolbyVisionConfig parse(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.fragment.app.FragmentManagerImpl: boolean isMenuAvailable(androidx.fragment.app.Fragment)
androidx.recyclerview.widget.GridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: boolean onInfo(android.media.MediaPlayer,int,int)
androidx.collection.SparseArrayCompat: SparseArrayCompat(int)
com.bumptech.glide.load.model.FileLoader$Factory: FileLoader$Factory(com.bumptech.glide.load.model.FileLoader$FileOpener)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onPrepared()
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher: java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.Menu getMenu()
androidx.recyclerview.widget.RecyclerView: void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect)
androidx.core.view.LayoutInflaterCompat: void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher: void close(android.content.res.AssetFileDescriptor)
androidx.appcompat.view.menu.MenuBuilder: void clearHeader()
androidx.fragment.app.FragmentManagerImpl: void addRetainedFragment(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.PlayerMessage: java.lang.Object getPayload()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onReset()
com.google.android.exoplayer2.source.SampleQueue: int getRelativeIndex(int)
com.bumptech.glide.manager.RequestManagerFragment: RequestManagerFragment()
androidx.recyclerview.widget.RecyclerView: void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.core.graphics.TypefaceCompatUtil: void closeQuietly(java.io.Closeable)
cn.jzvd.demo.ActivityListViewRecyclerView: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(java.util.List)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void updateCurrentPosition()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter: float getScaleFactor(int,int,int,int)
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache: void put(java.lang.Class,java.util.List)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setCustomView(android.view.View)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.Track modifyTrack(com.google.android.exoplayer2.extractor.mp4.Track)
com.google.android.exoplayer2.ExoPlayerImplInternal: void sendMessageInternal(com.google.android.exoplayer2.PlayerMessage)
androidx.recyclerview.widget.LinearLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
com.google.android.exoplayer2.metadata.flac.VorbisComment$1: com.google.android.exoplayer2.metadata.flac.VorbisComment[] newArray(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void httphookReconnect()
androidx.appcompat.widget.LinearLayoutCompat: android.view.View getVirtualChildAt(int)
com.bumptech.glide.load.data.DataRewinderRegistry$1: com.bumptech.glide.load.data.DataRewinder build(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: SpliceScheduleCommand(android.os.Parcel)
androidx.appcompat.view.StandaloneActionMode: void setTitle(int)
org.slf4j.helpers.SubstituteLogger: boolean equals(java.lang.Object)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: boolean rendererSupportsTunneling(int[][],com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelection)
com.google.android.exoplayer2.extractor.mp4.TrackFragment: void reset()
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)
androidx.fragment.app.Fragment: boolean getAllowEnterTransitionOverlap()
androidx.versionedparcelable.VersionedParcel: void writeParcelable(android.os.Parcelable,int)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator: BaseMediaChunkIterator(long,long)
androidx.appcompat.widget.SearchView: boolean onItemClicked(int,int,java.lang.String)
androidx.collection.MapCollections$KeySet: void clear()
com.bumptech.glide.gifdecoder.StandardGifDecoder: void resetFrameIndex()
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int)
com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle: Mp4WebvttSubtitle(java.util.List)
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler: void handleMessage(android.os.Message)
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: EventDispatcher$HandlerAndListener(android.os.Handler,java.lang.Object)
com.google.android.exoplayer2.metadata.id3.ChapterFrame$1: com.google.android.exoplayer2.metadata.id3.ChapterFrame[] newArray(int)
androidx.appcompat.widget.TooltipCompatHandler: void clearAnchorPos()
com.google.android.exoplayer2.drm.ErrorStateDrmSession: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException getError()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: long getTimestampPositionFrames()
com.google.android.exoplayer2.util.Util: int linearSearch(int[],int)
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist createSingleVariantMasterPlaylist(java.lang.String)
com.google.android.exoplayer2.decoder.CryptoInfo: CryptoInfo()
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: AdPlaybackState$AdGroup()
com.google.android.exoplayer2.drm.DefaultDrmSession: int getState()
com.google.android.exoplayer2.extractor.wav.WavHeaderReader: com.google.android.exoplayer2.extractor.wav.WavHeader peek(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.model.ResourceLoader: android.net.Uri getResourceUri(java.lang.Integer)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.util.Map access$1300()
com.google.android.exoplayer2.source.hls.HlsChunkSource: android.net.Uri getFullEncryptionKeyUri(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.util.NalUnitUtil: void discardToSps(java.nio.ByteBuffer)
com.bumptech.glide.util.Util: boolean bothModelsNullEquivalentOrEquals(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.SampleQueue createSampleQueue(int,int)
androidx.fragment.app.FragmentManagerImpl: void makeActive(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void parsePaletteSection(com.google.android.exoplayer2.util.ParsableByteArray,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_finalize()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int chooseSize(int,int,int)
com.google.android.exoplayer2.upstream.UdpDataSource: android.net.Uri getUri()
com.google.android.exoplayer2.text.cea.CeaDecoder: void queueInputBuffer(java.lang.Object)
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource decodeFromFetcher(java.lang.Object,com.bumptech.glide.load.DataSource)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.util.NavigableMap getSizesForAdapter(java.lang.Class)
androidx.lifecycle.Lifecycling: androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser access$400(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
com.bumptech.glide.util.Util: void postOnUiThread(java.lang.Runnable)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException: MediaCodecUtil$DecoderQueryException(java.lang.Throwable)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void setUnderlineSpan(android.text.SpannableStringBuilder,int,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: java.util.List getDisplayCues()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: void assignCoordinateFromPadding(int)
androidx.collection.SimpleArrayMap: void allocArrays(int)
androidx.activity.OnBackPressedDispatcher: void onBackPressed()
com.bumptech.glide.load.model.GlideUrl: java.lang.String getCacheKey()
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue)
com.danikula.videocache.GetRequest: com.danikula.videocache.GetRequest read(java.io.InputStream)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void resetWriteSampleData()
com.google.android.exoplayer2.util.Util: java.lang.String getUserAgent(android.content.Context,java.lang.String)
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsPayloadReader access$500(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator)
androidx.appcompat.view.menu.MenuItemImpl: android.content.res.ColorStateList getIconTintList()
com.bumptech.glide.load.data.LocalUriFetcher: void cancel()
com.google.android.exoplayer2.util.ParsableByteArray: void setLimit(int)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
com.google.android.exoplayer2.extractor.ts.TsExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.source.BaseMediaSource: void removeEventListener(com.google.android.exoplayer2.source.MediaSourceEventListener)
com.google.android.exoplayer2.extractor.ts.DtsReader: void packetFinished()
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.bumptech.glide.signature.EmptySignature: void updateDiskCacheKey(java.security.MessageDigest)
androidx.core.widget.PopupWindowCompat: void setWindowLayoutType(android.widget.PopupWindow,int)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.metadata.id3.Id3Frame: Id3Frame(java.lang.String)
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setChecked(boolean)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isScrap()
com.google.android.exoplayer2.AudioBecomingNoisyManager: void setEnabled(boolean)
com.bumptech.glide.load.engine.DataCacheGenerator: void onLoadFailed(java.lang.Exception)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData parseStsd(com.google.android.exoplayer2.util.ParsableByteArray,int,int,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData,boolean)
androidx.appcompat.widget.SearchView: boolean isLandscapeMode(android.content.Context)
androidx.recyclerview.widget.RecyclerView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition parseClutDefinition(com.google.android.exoplayer2.util.ParsableBitArray,int)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
com.google.android.exoplayer2.text.ssa.SsaDecoder: int addCuePlacerholderByTime(long,java.util.List,java.util.List)
androidx.recyclerview.widget.RecyclerView: android.graphics.Rect getItemDecorInsetsForChild(android.view.View)
cn.jzvd.JZMediaSystem: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
androidx.appcompat.widget.ResourceManagerInternal: ResourceManagerInternal()
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void onClick(android.view.View)
androidx.recyclerview.widget.OrientationHelper$2: int getStartAfterPadding()
com.bumptech.glide.provider.LoadPathCache: boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle getNextFragmentRun(android.util.SparseArray)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: int size()
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int codecAdaptationWorkaroundMode(java.lang.String)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost: DownsampleStrategy$AtMost()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory: ByteBufferGifDecoder$GifDecoderFactory()
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: void onSystemTimeUsMismatch(long,long,long,long)
com.google.android.exoplayer2.source.MediaSourceEventListener: void onReadingStarted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.appcompat.widget.TooltipCompatHandler$1: TooltipCompatHandler$1(androidx.appcompat.widget.TooltipCompatHandler)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: <clinit>()
com.google.android.exoplayer2.audio.Sonic: void moveNewSamplesToPitchBuffer(int)
org.slf4j.helpers.NOPLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaPlayer: float _getPropertyFloat(int,float)
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: DefaultAudioSink$PositionTrackerListener(com.google.android.exoplayer2.audio.DefaultAudioSink)
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.bumptech.glide.load.model.ByteBufferFileLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options)
androidx.arch.core.executor.DefaultTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getTrackSupport(int,int,int)
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.util.Map getKnownCodecList()
com.bumptech.glide.gifdecoder.StandardGifDecoder: int readByte()
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1: void onReceive(android.content.Context,android.content.Intent)
com.google.android.exoplayer2.extractor.FlacMetadataReader: java.util.List readVorbisCommentMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,int)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: ActionMenuPresenter$OverflowMenuButton(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context)
androidx.core.view.NestedScrollingChildHelper: int[] getTempNestedScrollConsumed()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Object newFamily()
android.support.v4.media.MediaDescriptionCompatApi23: android.net.Uri getMediaUri(java.lang.Object)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void invalidateAnchor()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onEmsgLeafAtomRead(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.engine.DecodeHelper: boolean isSourceKey(com.bumptech.glide.load.Key)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onStateChange(int[])
com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder: EventMessageEncoder()
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode()
androidx.appcompat.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isExclusiveCheckable()
com.google.android.exoplayer2.drm.DrmSessionManager: void release()
com.danikula.videocache.HttpProxyCache: void processRequest(com.danikula.videocache.GetRequest,java.net.Socket)
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
androidx.appcompat.app.ActionBar: boolean openOptionsMenu()
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder: ParcelFileDescriptorBitmapDecoder(com.bumptech.glide.load.resource.bitmap.Downsampler)
com.google.android.exoplayer2.upstream.DataSpec: boolean isFlagSet(int)
android.support.v4.media.session.PlaybackStateCompatApi21: int getState(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
androidx.core.graphics.TypefaceCompatBaseImpl$2: boolean isItalic(java.lang.Object)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: Mp3Extractor()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] cleanupAutoSizePresetSizes(int[])
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.exifinterface.media.ExifInterface: void handleThumbnailFromStrips(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.lifecycle.LiveData: void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
com.bumptech.glide.request.target.ImageViewTargetFactory: com.bumptech.glide.request.target.ViewTarget buildTarget(android.widget.ImageView,java.lang.Class)
com.google.android.exoplayer2.source.ExtractorMediaSource: void onChildSourceInfoRefreshed(java.lang.Void,com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.Timeline)
androidx.core.graphics.drawable.WrappedDrawableApi21: WrappedDrawableApi21(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String _getVideoCodecInfo()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: ViewPropertyAnimatorCompatSet$1(androidx.appcompat.view.ViewPropertyAnimatorCompatSet)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.AppCompatTextView: void setTypeface(android.graphics.Typeface,int)
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getXml(int)
androidx.viewpager.widget.ViewPager: void setScrollState(int)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getStringOrNull(android.database.Cursor,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: com.google.android.exoplayer2.trackselection.TrackSelectionParameters build()
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: DefaultHttpDataSource(java.lang.String,int,int,boolean,com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean isSnapshotValid()
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStateNormal()
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(int,int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setShowTitle(boolean)
org.slf4j.helpers.MessageFormatter: void doubleArrayAppend(java.lang.StringBuilder,double[])
com.google.android.exoplayer2.util.SystemClock: com.google.android.exoplayer2.util.HandlerWrapper createHandler(android.os.Looper,android.os.Handler$Callback)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.source.ClippingMediaPeriod: void onPrepared(com.google.android.exoplayer2.source.MediaPeriod)
com.google.android.exoplayer2.metadata.id3.MlltFrame$1: com.google.android.exoplayer2.metadata.id3.MlltFrame[] newArray(int)
com.bumptech.glide.load.data.mediastore.MediaStoreUtil: boolean isThumbnailSize(int,int)
android.support.v4.media.session.ParcelableVolumeInfo$1: ParcelableVolumeInfo$1()
androidx.appcompat.app.AlertController: boolean canTextInput(android.view.View)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: SafeIterableMap$AscendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.graphics.PathParser$ExtractFloatResult: PathParser$ExtractFloatResult()
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.SubMenu getSubMenuWrapper(android.view.SubMenu)
androidx.appcompat.widget.LinearLayoutCompat: int getNextLocationOffset(android.view.View)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,boolean,boolean)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: ClassesInfoCache$CallbackInfo(java.util.Map)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder getPlayingPeriod()
com.bumptech.glide.load.data.mediastore.ThumbFetcher: void cancel()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void backspace()
cn.jzvd.demo.ActivityPreloading: void onCreate(android.os.Bundle)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onMetadataChanged(android.media.MediaMetadata)
com.danikula.videocache.HttpUrlSource: long readSourceAvailableBytes(java.net.HttpURLConnection,long,int)
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: SampleDataQueue$AllocationNode(long,int)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int bindSampleQueueToSampleStream(int)
cn.jzvd.demo.FragmentDemo: cn.jzvd.demo.FragmentDemo setIndex(int)
com.google.android.exoplayer2.extractor.ts.H264Reader: void endNalUnit(long,int,int,long)
androidx.appcompat.widget.SearchView$SavedState$1: SearchView$SavedState$1()
com.google.android.exoplayer2.text.SubtitleOutputBuffer: SubtitleOutputBuffer()
com.google.android.exoplayer2.extractor.flv.FlvExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.google.android.exoplayer2.upstream.FileDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onQueueInputBuffer(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onPositionReset(long,boolean)
com.google.android.exoplayer2.extractor.BinarySearchSeeker: void markSeekOperationFinished(boolean,long)
androidx.core.view.ViewPropertyAnimatorCompat: void cancel()
androidx.appcompat.widget.Toolbar: void ensureMenu()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer: com.bumptech.glide.util.pool.StateVerifier getVerifier()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: boolean isDriftTooLarge(long,long)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy: long getRetryDelayMsFor(int,long,java.io.IOException,int)
com.google.android.exoplayer2.Timeline: com.google.android.exoplayer2.Timeline$Period getPeriod(int,com.google.android.exoplayer2.Timeline$Period)
androidx.recyclerview.widget.RecyclerView$Adapter: void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder)
com.bumptech.glide.request.SingleRequest: void logV(java.lang.String)
androidx.versionedparcelable.VersionedParcel: android.os.Parcelable readParcelable(android.os.Parcelable,int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void unScrap()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean getPadding(android.graphics.Rect)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void notifyFrameMetadataListener(long,long,com.google.android.exoplayer2.Format,android.media.MediaFormat)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: float getFontSize()
com.google.android.exoplayer2.source.SampleQueue: void format(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)
com.google.android.exoplayer2.util.MimeTypes: java.lang.String getMediaMimeType(java.lang.String)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowing()
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: boolean parsePayload(com.google.android.exoplayer2.util.ParsableByteArray,long)
androidx.appcompat.R$styleable: <clinit>()
androidx.viewpager.widget.ViewPager$SavedState: java.lang.String toString()
androidx.recyclerview.widget.GridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.app.WindowDecorActionBar$1: WindowDecorActionBar$1(androidx.appcompat.app.WindowDecorActionBar)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException: RecyclableBufferedInputStream$InvalidMarkException(java.lang.String)
com.google.android.exoplayer2.trackselection.FixedTrackSelection: FixedTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int,int,java.lang.Object)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions self()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onAudioSessionId(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int)
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long readDiscontinuity()
com.google.android.exoplayer2.extractor.mkv.Sniffer: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getTitle()
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
androidx.fragment.app.FragmentManagerImpl: java.util.List getFragments()
com.google.android.exoplayer2.SimpleExoPlayer: int getCurrentWindowIndex()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
com.bumptech.glide.load.ImageHeaderParserUtils$1: ImageHeaderParserUtils$1(java.io.InputStream)
com.google.android.exoplayer2.text.pgs.PgsDecoder: void maybeInflateData(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.appcompat.app.AppCompatDelegateImpl: int updateStatusGuard(androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
androidx.core.view.AccessibilityDelegateCompat: android.view.View$AccessibilityDelegate getBridge()
androidx.core.util.ObjectsCompat: int hash(java.lang.Object[])
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: long access$000(com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: void writeSelectionOverridesToParcel(android.os.Parcel,android.util.SparseArray)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.bumptech.glide.load.Options: boolean equals(java.lang.Object)
com.danikula.videocache.file.FileCache: void close()
cn.jzvd.demo.ActivityTinyWindowRecycleView: void onBackPressed()
com.google.android.exoplayer2.ExoPlayerImplInternal: void enableRenderer(int,boolean,int)
com.google.android.exoplayer2.text.ssa.SsaDecoder: void parseDialogueLine(java.lang.String,com.google.android.exoplayer2.text.ssa.SsaDialogueFormat,java.util.List,java.util.List)
com.google.android.exoplayer2.decoder.SimpleDecoder: boolean decode()
com.danikula.videocache.Preconditions: void checkAllNotNull(java.lang.Object[])
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isHardwareConfigDisallowedByB112551574()
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int readSignedExpGolombCodedInt()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int calcTagOffset(int,int)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScroll(int,int,int,int,int[])
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: void access$000(com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper)
com.bumptech.glide.load.resource.file.FileDecoder: FileDecoder()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setVisible(boolean)
com.google.android.exoplayer2.extractor.ts.TsExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: java.lang.Object getItem(int)
androidx.collection.MapCollections$EntrySet: boolean add(java.lang.Object)
cn.jzvd.demo.ActivityApiUISmallChange: ActivityApiUISmallChange()
androidx.core.content.res.TypedArrayUtils: androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int applyAlpha(int,float)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanIndex(int,int)
com.google.android.exoplayer2.util.Util: void scaleLargeTimestampsInPlace(long[],long,long)
com.bumptech.glide.request.ThumbnailRequestCoordinator: void onRequestSuccess(com.bumptech.glide.request.Request)
androidx.appcompat.app.TwilightManager: boolean isNight()
com.danikula.videocache.SourceInfo: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isAutoMirrored()
com.bumptech.glide.request.target.ViewTarget: ViewTarget(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition: DvbParser$PageComposition(int,int,int,android.util.SparseArray)
cn.jzvd.JZMediaSystem: JZMediaSystem(cn.jzvd.Jzvd)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onLoadError(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData,java.io.IOException,boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onLoadStarted(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational,java.nio.ByteOrder)
com.google.android.exoplayer2.util.TimestampAdjuster: long getTimestampOffsetUs()
androidx.appcompat.view.menu.MenuBuilder: void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent)
com.google.android.exoplayer2.ui.SubtitlePainter: void draw(com.google.android.exoplayer2.text.Cue,boolean,boolean,com.google.android.exoplayer2.text.CaptionStyleCompat,float,float,float,android.graphics.Canvas,int,int,int,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int describeContents()
androidx.appcompat.widget.DrawableUtils: void fixVectorDrawableTinting(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Method getTextViewMethod(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.appcompat.widget.TintTypedArray: int getLayoutDimension(int,int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void prepare(com.google.android.exoplayer2.source.MediaPeriod$Callback,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: DrmInitData$SchemeData(android.os.Parcel)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.ViewGroup createSubDecor()
com.bumptech.glide.load.model.LazyHeaders$Builder: com.bumptech.glide.load.model.LazyHeaders build()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char,int)
com.google.android.exoplayer2.util.Util: java.lang.String getCountryCode(android.content.Context)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDrmKeysRestored(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.core.widget.NestedScrollView: boolean isNestedScrollingEnabled()
cn.jzvd.demo.AdapterListView: AdapterListView(android.content.Context,java.lang.String[],java.lang.String[],java.lang.String[])
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)
androidx.core.view.ViewConfigurationCompat: <clinit>()
androidx.fragment.app.Fragment: java.lang.Object getReturnTransition()
androidx.appcompat.view.menu.MenuPopupHelper: void show()
com.google.android.exoplayer2.upstream.FileDataSource: void close()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.appcompat.view.WindowCallbackWrapper: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
androidx.activity.ComponentActivity$1: ComponentActivity$1(androidx.activity.ComponentActivity)
androidx.appcompat.app.WindowDecorActionBar: void setElevation(float)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key get(int,java.lang.Class)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isLayoutRTL()
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.recyclerview.widget.GapWorker: void run()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder: com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void clear()
androidx.appcompat.widget.TooltipPopup: boolean isShowing()
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: ByteBufferFileLoader$ByteBufferFetcher(java.io.File)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil: java.util.UUID parseUuid(byte[])
com.google.android.exoplayer2.extractor.ogg.FlacReader: int getFlacFrameBlockSize(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.fragment.app.FragmentManagerImpl: void dispatchDestroyView()
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onLoadError(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData,java.io.IOException,boolean)
com.google.android.exoplayer2.util.Util: java.lang.String getCodecsOfType(java.lang.String,int)
androidx.activity.ImmLeaksCleaner: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
org.slf4j.impl.AndroidLoggerAdapter: void logInternal(int,java.lang.String,java.lang.Throwable)
com.google.android.exoplayer2.audio.AudioAttributes: int hashCode()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.Metadata decode(com.google.android.exoplayer2.metadata.MetadataInputBuffer)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: boolean handles(android.net.Uri)
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long getTimeUs(long)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: int readAmfType(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.util.CachedHashCodeArrayMap: void putAll(androidx.collection.SimpleArrayMap)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: int indexOfZeroByte(byte[],int)
com.google.android.exoplayer2.util.ParsableByteArray: ParsableByteArray(int)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void peekFully(byte[],int,int)
org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.bumptech.glide.load.engine.DecodeJob: void runGenerators()
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format getFormat(int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
cn.jzvd.demo.ActivityListViewFragmentViewPager$MyAdapter: int getCount()
com.bumptech.glide.load.resource.gif.GifDrawableTransformation: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.extractor.ts.UserDataReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.appcompat.widget.Toolbar: void inflateMenu(int)
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: DummySurface$DummySurfaceThread()
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,long,long,java.lang.String,int,java.util.Map)
com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer)
androidx.recyclerview.widget.RecyclerView$LayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.extractor.ts.Ac3Reader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.app.AppCompatDelegateImpl: int sanitizeWindowFeatureId(int)
com.google.android.exoplayer2.extractor.FlacMetadataReader: com.google.android.exoplayer2.util.FlacStreamMetadata readStreamInfoBlock(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.customview.view.AbsSavedState: <clinit>()
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat: java.lang.String toString()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void attachInternalListeners()
androidx.core.provider.FontsContractCompat: android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: PlaybackStateCompat$CustomAction(android.os.Parcel)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.mp3.Seeker maybeReadSeekFrame(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.core.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)
com.google.android.exoplayer2.util.Util: boolean isLinebreak(int)
com.google.android.exoplayer2.ui.TrackSelectionView: int[] getTracksRemoving(int[],int)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: DefaultExtractorInput(com.google.android.exoplayer2.upstream.DataSource,long,long)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.appcompat.app.WindowDecorActionBar: void hideForActionMode()
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand$1: com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.util.Util: int compareLong(long,long)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: void cleanup()
com.google.android.exoplayer2.source.ClippingMediaPeriod: boolean shouldKeepInitialDiscontinuity(long,com.google.android.exoplayer2.trackselection.TrackSelection[])
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: void removeObserver()
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder advancePlayingPeriod()
androidx.interpolator.view.animation.FastOutLinearInInterpolator: float getInterpolation(float)
com.bumptech.glide.load.engine.Engine: void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key)
androidx.core.graphics.Insets: androidx.core.graphics.Insets of(int,int,int,int)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event access$400(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long getNextLoadPositionUs()
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: long getMediaDuration(long)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.appcompat.widget.ResourceManagerInternal: android.content.res.ColorStateList getTintListFromCache(android.content.Context,int)
com.google.android.exoplayer2.text.ttml.TtmlNode: int getChildCount()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void initNativeOnce()
com.google.android.exoplayer2.metadata.id3.PrivFrame: PrivFrame(java.lang.String,byte[])
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: boolean tryLock(long,java.util.concurrent.TimeUnit)
com.google.android.exoplayer2.source.TrackGroupArray: TrackGroupArray(android.os.Parcel)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(java.lang.String,java.util.Map)
android.support.v4.media.MediaDescriptionCompat: MediaDescriptionCompat(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: com.google.android.exoplayer2.extractor.ts.TsExtractor createTsExtractor(int,boolean,com.google.android.exoplayer2.Format,java.util.List,com.google.android.exoplayer2.util.TimestampAdjuster)
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep3()
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.MediaPeriodHolder getNext()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
androidx.fragment.app.FragmentManagerImpl: void moveToState(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.viewpager.widget.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)
com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener: void onDrmSessionAcquired()
com.google.android.exoplayer2.source.ClippingMediaPeriod: boolean isLoading()
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: GifFrameLoader$DelayTarget(android.os.Handler,int,long)
com.google.android.exoplayer2.text.SubtitleDecoderException: SubtitleDecoderException(java.lang.String)
com.google.android.exoplayer2.text.cea.Cea608Decoder: com.google.android.exoplayer2.text.SubtitleOutputBuffer dequeueOutputBuffer()
com.google.android.exoplayer2.extractor.mp3.XingSeeker: boolean isSeekable()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void binaryElement(int,int,com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getTargetHeight()
androidx.viewpager.widget.ViewPager: void completeScroll(boolean)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.extractor.wav.WavSeekMap: WavSeekMap(com.google.android.exoplayer2.extractor.wav.WavHeader,int,long,long)
androidx.core.widget.NestedScrollView: boolean onNestedFling(android.view.View,float,float,boolean)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23: void handleFrameRendered(long)
androidx.recyclerview.widget.RecyclerView: void findMinMaxChildLayoutPositions(int[])
com.google.android.exoplayer2.drm.DrmSession: boolean playClearSamplesWithoutKeys()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: int removeUnsynchronization(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.core.content.res.ComplexColorCompat: boolean onStateChanged(int[])
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatio(float)
com.bumptech.glide.load.model.UnitModelLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$1: java.lang.Object[] newArray(int)
android.support.v4.media.MediaDescriptionCompatApi21: android.os.Bundle getExtras(java.lang.Object)
com.bumptech.glide.manager.DoNothingFirstFrameWaiter: void registerSelf(android.app.Activity)
androidx.appcompat.view.menu.StandardMenuPopup: void setVerticalOffset(int)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: CascadingMenuPopup$CascadingMenuInfo(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int)
com.google.android.exoplayer2.offline.StreamKey: int compareTo(com.google.android.exoplayer2.offline.StreamKey)
androidx.core.graphics.Insets: java.lang.String toString()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void maybeThrowPrepareError()
com.bumptech.glide.load.engine.ActiveResources$1: java.lang.Thread newThread(java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getTimeout()
com.google.android.exoplayer2.text.ssa.SsaStyle: int access$000(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem(android.os.Parcel)
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer: int compareTo(com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer)
com.danikula.videocache.Pinger: boolean access$100(com.danikula.videocache.Pinger)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onPrepared(tv.danmaku.ijk.media.player.IMediaPlayer)
androidx.appcompat.app.AlertController$AlertParams$4: AlertController$AlertParams$4(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setHeading(boolean)
androidx.appcompat.widget.ListPopupWindow: void setAnimationStyle(int)
com.google.android.exoplayer2.metadata.MetadataRenderer: boolean isEnded()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: android.util.Pair selectTracks(com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[])
com.google.android.exoplayer2.decoder.SimpleDecoder$1: SimpleDecoder$1(com.google.android.exoplayer2.decoder.SimpleDecoder)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isViewStateAndSizeValid(int,int)
androidx.appcompat.widget.ScrollingTabContainerView: void onMeasure(int,int)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: void outputPendingSampleMetadata(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
org.slf4j.helpers.FormattingTuple: FormattingTuple(java.lang.String,java.lang.Object[],java.lang.Throwable)
androidx.appcompat.view.menu.MenuItemImpl: boolean requiresActionButton()
com.google.android.exoplayer2.util.SystemHandlerWrapper: android.os.Message obtainMessage(int,int,int,java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter: android.widget.Filter getFilter()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu)
androidx.appcompat.widget.AppCompatSpinner$1: boolean onForwardingStarted()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: DrawableContainer$BlockInvalidateCallback()
androidx.recyclerview.widget.OrientationHelper: void onLayoutComplete()
com.bumptech.glide.util.CachedHashCodeArrayMap: void clear()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void releaseMediaDataSource()
androidx.core.widget.NestedScrollView: void onAttachedToWindow()
com.google.android.exoplayer2.ui.TrackSelectionView: void onClick(android.view.View)
com.google.android.exoplayer2.audio.Sonic: int getOutputSize()
com.google.android.exoplayer2.source.hls.HlsChunkSource$EncryptionKeyChunk: HlsChunkSource$EncryptionKeyChunk(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.Format,int,java.lang.Object,byte[])
com.google.android.exoplayer2.text.webvtt.WebvttCue: WebvttCue(long,long,java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float,com.google.android.exoplayer2.text.webvtt.WebvttCue$1)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result buildResult(com.google.android.exoplayer2.extractor.Extractor)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.view.menu.MenuItemImpl: boolean setVisibleInt(boolean)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: SpliceInsertCommand(long,boolean,boolean,boolean,boolean,long,long,java.util.List,boolean,long,int,int,int)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: java.lang.Object[] newArray(int)
cn.jzvd.Jzvd: void showBrightnessDialog(int)
com.google.android.exoplayer2.extractor.ts.H264Reader: void packetFinished()
androidx.appcompat.app.AppCompatDelegateImpl: void ensureWindow()
androidx.appcompat.widget.ResourcesWrapper: boolean getBoolean(int)
com.google.android.exoplayer2.audio.SonicAudioProcessor: long scaleDurationForSpeedup(long)
com.bumptech.glide.load.resource.gif.GifDrawable: boolean setVisible(boolean,boolean)
androidx.activity.ComponentActivity$3: ComponentActivity$3(androidx.activity.ComponentActivity)
com.bumptech.glide.util.LruCache: LruCache(long)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void update()
com.google.android.exoplayer2.BasePlayer$ListenerHolder: void invoke(com.google.android.exoplayer2.BasePlayer$ListenerInvocation)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeFinishPrepare()
com.google.android.exoplayer2.extractor.ChunkIndex: java.lang.String toString()
androidx.appcompat.widget.Toolbar$3: Toolbar$3(androidx.appcompat.widget.Toolbar)
androidx.fragment.app.Fragment: void performCreate(android.os.Bundle)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getMinimumHeight()
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: int skipData(long)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getContentDescription()
com.bumptech.glide.request.SingleRequest$Status: com.bumptech.glide.request.SingleRequest$Status[] values()
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanSize(int)
androidx.recyclerview.widget.RecyclerView: void defaultOnMeasure(int,int)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: SilenceSkippingAudioProcessor()
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder: void cleanup()
com.google.android.exoplayer2.source.SampleQueue: boolean seekTo(long,boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void onPrepared(com.google.android.exoplayer2.source.MediaPeriod)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
androidx.recyclerview.widget.OrientationHelper$1: int getEnd()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setVisible(boolean,boolean)
androidx.appcompat.widget.AppCompatImageHelper: void setImageResource(int)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.provider.SelfDestructiveThread$2$1: void run()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.google.android.exoplayer2.extractor.ogg.FlacReader: com.google.android.exoplayer2.util.FlacStreamMetadata access$000(com.google.android.exoplayer2.extractor.ogg.FlacReader)
androidx.viewpager.widget.ViewPager: void populate(int)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.text.ttml.TtmlNode: void traverseForImage(long,java.lang.String,java.util.List)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[])
androidx.appcompat.widget.SearchView$SearchAutoComplete: void performCompletion()
cn.jzvd.JZDataSource: cn.jzvd.JZDataSource cloneMe()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.bumptech.glide.load.engine.EngineKeyFactory: com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long getTimeUsAtPosition(long,long,int)
com.bumptech.glide.request.target.BaseTarget: void onLoadStarted(android.graphics.drawable.Drawable)
androidx.collection.SimpleArrayMap: java.lang.Object keyAt(int)
androidx.core.app.ActivityRecreator$1: void run()
com.google.android.exoplayer2.audio.DefaultAudioSink: void configure(int,int,int,int,int[],int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int getKeyframeIdAt(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues getCodecMaxValues(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format[])
cn.jzvd.demo.ActivityListViewFragmentViewPager: void onBackPressed()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void access$000(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,long)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable mutate()
androidx.core.app.ActivityRecreator: boolean needsRelaunchCall()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: MatroskaExtractor(com.google.android.exoplayer2.extractor.mkv.EbmlReader,int)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: int getMaxFdCount()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$2: IjkMediaFormat$2(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
tv.danmaku.ijk.media.player.pragma.DebugLog: void e(java.lang.String,java.lang.String,java.lang.Throwable)
tv.danmaku.ijk.media.player.MediaPlayerProxy: tv.danmaku.ijk.media.player.MediaInfo getMediaInfo()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void onCleared()
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: AppCompatSpinner$DropDownAdapter(android.widget.SpinnerAdapter,android.content.res.Resources$Theme)
com.bumptech.glide.manager.RequestTracker: RequestTracker()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.lang.String parseEncryptionScheme(java.lang.String)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: java.lang.String toString()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: int getSampleSize(com.bumptech.glide.gifdecoder.GifHeader,int,int)
androidx.fragment.app.Fragment: int getNextTransitionStyle()
androidx.appcompat.widget.SearchView: void onActionViewExpanded()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_profileBegin(java.lang.String)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
cn.jzvd.demo.CustomMedia.JZMediaExo$onBufferingUpdate: void run()
com.google.android.exoplayer2.video.ColorInfo: ColorInfo(int,int,int,byte[])
cn.jzvd.Jzvd: void setUp(cn.jzvd.JZDataSource,int,java.lang.Class)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState[] newArray(int)
androidx.core.view.ViewCompat: int getMinimumWidth(android.view.View)
com.bumptech.glide.util.MarkEnforcingInputStream: void updateAvailableBytesAfterRead(long)
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void onStartEnterTransition()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromType(java.lang.Class)
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: PsExtractor$PesReader(com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader,com.google.android.exoplayer2.util.TimestampAdjuster)
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: Tx3gSubtitle()
com.bumptech.glide.load.data.StreamAssetPathFetcher: java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setScreenOnWhilePlaying(boolean)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: boolean onTouch(android.view.View,android.view.MotionEvent)
com.google.android.exoplayer2.PlaybackParameters: PlaybackParameters(float)
androidx.exifinterface.media.ExifInterface$ExifTag: ExifInterface$ExifTag(java.lang.String,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: MenuItemWrapperICS$CollapsibleActionViewWrapper(android.view.View)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle setItalic(boolean)
com.bumptech.glide.module.ManifestParser: java.util.List parse()
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: <clinit>()
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.source.TrackGroupArray: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.Timeline: android.util.Pair getPeriodPosition(com.google.android.exoplayer2.Timeline$Window,com.google.android.exoplayer2.Timeline$Period,int,long,long)
com.google.android.exoplayer2.AudioFocusManager: float getVolumeMultiplier()
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: com.google.android.exoplayer2.text.ssa.SsaDialogueFormat fromFormatLine(java.lang.String)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onVideoSizeChanged(int,int,int,float)
com.google.android.exoplayer2.util.Util: long addWithOverflowDefault(long,long,long)
com.google.android.exoplayer2.text.cea.Cea608Decoder: int getChannel(byte)
com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder: com.google.android.exoplayer2.text.Cue parseVttCueBox(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder,int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
com.bumptech.glide.load.resource.UnitTransformation: <clinit>()
tv.danmaku.ijk.media.player.R$string: R$string()
com.bumptech.glide.load.data.StreamLocalUriFetcher: StreamLocalUriFetcher(android.content.ContentResolver,android.net.Uri)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider)
com.google.android.exoplayer2.trackselection.TrackSelector: TrackSelector()
com.google.android.exoplayer2.AudioFocusManager: int requestAudioFocus()
com.google.android.exoplayer2.Timeline$1: int getPeriodCount()
com.google.android.exoplayer2.PlaybackParameters: long getMediaTimeUsForPlayoutTimeMs(long)
com.google.android.exoplayer2.MediaPeriodHolder: long getRendererOffset()
androidx.appcompat.view.menu.ListMenuItemView: void insertIconView()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioSinkUnderrun(int,long,long)
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: com.google.android.exoplayer2.source.ExtractorMediaSource createMediaSource(android.net.Uri)
androidx.fragment.app.FragmentTransitionCompat21: void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.app.AppCompatDelegateImpl: boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int)
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context,android.util.AttributeSet,int)
org.slf4j.helpers.MessageFormatter: java.lang.Throwable getThrowableCandidate(java.lang.Object[])
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme)
com.bumptech.glide.load.engine.EngineJob: void reschedule(com.bumptech.glide.load.engine.DecodeJob)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation)
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: ForwardingListener$TriggerLongPress(androidx.appcompat.widget.ForwardingListener)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: android.view.View getFocusableViewAfter(int,int)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.TextInformationFrame parseIndexAndCountAttribute(int,java.lang.String,com.google.android.exoplayer2.util.ParsableByteArray)
androidx.lifecycle.LifecycleRegistry: void backwardPass(androidx.lifecycle.LifecycleOwner)
androidx.collection.MapCollections$KeySet: boolean retainAll(java.util.Collection)
androidx.recyclerview.widget.RecyclerView$Adapter: void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int getBitrateFromFrameSize(int,long)
com.google.android.exoplayer2.audio.BaseAudioProcessor: boolean isEnded()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void draw(android.graphics.Canvas)
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,long,long,long,java.lang.String,int)
androidx.viewpager.widget.ViewPager: void scrollToItem(int,boolean,int,boolean)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: ArgbEvaluator()
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.util.List getSchemeDatas(com.google.android.exoplayer2.drm.DrmInitData,java.util.UUID,boolean)
org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger delegate()
org.slf4j.impl.AndroidLoggerAdapter: void warn(java.lang.String)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
com.bumptech.glide.RequestManager$1: void run()
com.bumptech.glide.gifdecoder.GifHeaderParser: void readBitmap()
tv.danmaku.ijk.media.player.MediaPlayerProxy$2: MediaPlayerProxy$2(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener)
androidx.savedstate.SavedStateRegistryController: SavedStateRegistryController(androidx.savedstate.SavedStateRegistryOwner)
androidx.core.widget.CompoundButtonCompat: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: void put(java.lang.String,com.danikula.videocache.SourceInfo)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[])
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void setSurface(android.view.Surface)
androidx.lifecycle.LifecycleRegistry: boolean isSynced()
androidx.core.content.res.ComplexColorCompat: int getColor()
com.google.android.exoplayer2.MediaPeriodHolder: long toRendererTime(long)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceName(int)
com.bumptech.glide.load.engine.ActiveResources: void setListener(com.bumptech.glide.load.engine.EngineResource$ResourceListener)
com.bumptech.glide.manager.SupportRequestManagerFragment: boolean isDescendant(androidx.fragment.app.Fragment)
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void clear()
androidx.activity.OnBackPressedDispatcher: void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback)
androidx.recyclerview.widget.RecyclerView: void dispatchRestoreInstanceState(android.util.SparseArray)
com.google.android.exoplayer2.SimpleExoPlayer: long getCurrentPosition()
com.google.android.exoplayer2.util.Util: boolean isTv(android.content.Context)
com.bumptech.glide.manager.SupportRequestManagerFragment: void onStop()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.extractor.ts.TsExtractor: int access$102(com.google.android.exoplayer2.extractor.ts.TsExtractor,int)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: float getInterpolation(float)
com.bumptech.glide.load.engine.Engine: void onResourceRemoved(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithLoadingMediaPeriodId(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getTargetDimen(int,int,int)
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: FixedSampleSizeRechunker$Results(long[],int[],int,long[],int[],long,com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$1)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: MatroskaExtractor$InnerEbmlProcessor(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor,com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$1)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int updateSpecWithExtra(int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode)
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: boolean handleMessage(android.os.Message)
androidx.fragment.app.FragmentController: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
androidx.appcompat.widget.ForwardingListener: boolean onForwardingStopped()
androidx.appcompat.widget.ActionBarContainer: void drawableStateChanged()
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
com.bumptech.glide.disklrucache.DiskLruCache: void deleteIfExists(java.io.File)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int supportsFormat(com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.Format)
com.bumptech.glide.load.data.AssetPathFetcher: AssetPathFetcher(android.content.res.AssetManager,java.lang.String)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLeftDecorationWidth(android.view.View)
com.google.android.exoplayer2.source.SampleQueue: void reset(boolean)
com.bumptech.glide.util.ContentLengthInputStream: int checkReadSoFarOrThrow(int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanIndex()
com.google.android.exoplayer2.MediaPeriodQueue: boolean shouldLoadNextMediaPeriod()
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Rendition: HlsMasterPlaylist$Rendition(android.net.Uri,com.google.android.exoplayer2.Format,java.lang.String,java.lang.String)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void unbindSampleQueue(int)
com.google.android.exoplayer2.util.Util: int binarySearchFloor(java.util.List,java.lang.Comparable,boolean,boolean)
com.bumptech.glide.request.target.ImageViewTarget: void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition)
com.google.android.exoplayer2.BaseRenderer: void onStopped()
androidx.lifecycle.LiveData$LifecycleBoundObserver: LiveData$LifecycleBoundObserver(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer)
androidx.core.widget.NestedScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)
org.slf4j.event.Level: Level(java.lang.String,int,int,java.lang.String)
androidx.appcompat.widget.SearchView: void updateQueryHint()
com.bumptech.glide.signature.EmptySignature: com.bumptech.glide.signature.EmptySignature obtain()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.drm.DrmInitData$SchemeData parseDrmSchemeData(java.lang.String,java.lang.String,java.util.Map)
androidx.fragment.app.FragmentManagerImpl: void addAddedFragments(androidx.collection.ArraySet)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getAudioSessionId()
androidx.appcompat.widget.LinearLayoutCompat: void measureChildBeforeLayout(android.view.View,int,int,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int[] getAutoSizeTextAvailableSizes()
com.google.android.exoplayer2.metadata.icy.IcyHeaders$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: int hashCode()
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache: SuggestionsAdapter$ChildViewCache(android.view.View)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean continueLoading(long)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: HlsTrackMetadataEntry(java.lang.String,java.lang.String,java.util.List)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(int,int)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: float deriveMaxSize(int,float)
androidx.collection.MapCollections$KeySet: boolean removeAll(java.util.Collection)
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
com.bumptech.glide.request.BaseRequestOptions: boolean isTransformationAllowed()
com.google.android.exoplayer2.drm.DrmSessionManager$1: boolean canAcquireSession(com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.engine.ResourceCacheGenerator: void onDataReady(java.lang.Object)
com.bumptech.glide.manager.EmptyRequestManagerTreeNode: java.util.Set getDescendants()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void start()
androidx.fragment.app.Fragment: android.animation.Animator getAnimator()
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: void setResolvedPosition(int,long,java.lang.Object)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: float getInterpolation(float)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
androidx.cursoradapter.widget.CursorFilter: android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence)
androidx.appcompat.view.WindowCallbackWrapper: void onPointerCaptureChanged(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readLine()
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setVisible(boolean,boolean)
com.google.android.exoplayer2.drm.DrmInitData: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.metadata.icy.IcyHeaders: boolean equals(java.lang.Object)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readItem(android.util.AttributeSet)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onTracksChanged(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectionArray)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
androidx.appcompat.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onVideoDisabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.app.AppCompatActivity: void onSaveInstanceState(android.os.Bundle)
com.danikula.videocache.SourceInfo: SourceInfo(java.lang.String,long,java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void startRenderers()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AbsActionBarView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.LinearLayoutCompat: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToEnd()
com.bumptech.glide.load.engine.DiskCacheStrategy: <clinit>()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int)
androidx.appcompat.view.menu.BaseMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable mutate()
androidx.core.provider.SelfDestructiveThread: void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
org.slf4j.helpers.SubstituteLogger: void setDelegate(org.slf4j.Logger)
com.danikula.videocache.ProxyCacheUtils: java.lang.String getSupposablyMime(java.lang.String)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onIsPlayingChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,boolean)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue: com.google.android.exoplayer2.Format getAdjustedUpstreamFormat(com.google.android.exoplayer2.Format)
tv.danmaku.ijk.media.player.MediaPlayerProxy$1: void onPrepared(tv.danmaku.ijk.media.player.IMediaPlayer)
cn.jzvd.demo.CustomMedia.JZMediaExo$onBufferingUpdate: JZMediaExo$onBufferingUpdate(cn.jzvd.demo.CustomMedia.JZMediaExo)
com.bumptech.glide.load.Option$1: void update(byte[],java.lang.Object,java.security.MessageDigest)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int)
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEvent(android.view.View,int)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: java.util.Set getDefaultAllowedConfigs()
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onLoadStarted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.appcompat.widget.AppCompatRadioButton: void drawableStateChanged()
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildLabelString(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onRenderedFirstFrame(android.view.Surface)
com.google.android.exoplayer2.text.SubtitleOutputBuffer: int getNextEventTimeIndex(long)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: android.media.AudioTrack createAudioTrackV21(boolean,com.google.android.exoplayer2.audio.AudioAttributes,int)
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.exifinterface.media.ExifInterface: java.lang.String getAttribute(java.lang.String)
com.bumptech.glide.load.model.ResourceLoader: ResourceLoader(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader)
android.support.v4.media.session.PlaybackStateCompat: PlaybackStateCompat(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle)
com.google.android.exoplayer2.BaseRenderer: int readSource(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
android.support.v4.media.session.PlaybackStateCompat: java.lang.String toString()
com.google.android.exoplayer2.audio.AudioAttributes$Builder: AudioAttributes$Builder()
androidx.fragment.app.FragmentTransitionCompat21: boolean canHandle(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: void close()
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: PlaybackStateCompat$CustomAction$1()
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources getResources()
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int getNextAdIndexToPlay(int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside: DownsampleStrategy$CenterInside()
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.fragment.app.Fragment: android.view.View getAnimatingAway()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: com.google.android.exoplayer2.mediacodec.MediaCodecInfo getDecoderInfo(java.lang.String,boolean,boolean)
androidx.appcompat.app.AlertController$4: void onScroll(android.widget.AbsListView,int,int,int)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: boolean checkNextByte(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.appcompat.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.SearchView: void onLayout(boolean,int,int,int,int)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: VideoFrameReleaseTimeHelper$VSyncSampler()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo$1: com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo createFromParcel(android.os.Parcel)
org.slf4j.impl.AndroidLoggerAdapter: AndroidLoggerAdapter(java.lang.String)
com.google.android.exoplayer2.audio.DefaultAudioSink: void playToEndOfStream()
com.bumptech.glide.request.target.CustomTarget: com.bumptech.glide.request.Request getRequest()
com.google.android.exoplayer2.util.GlUtil: boolean isSurfacelessContextExtensionSupported()
com.google.android.exoplayer2.extractor.ts.TsDurationReader: int readLastPcrValue(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder,int)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
cn.jzvd.demo.ActivityMain: void onCreate(android.os.Bundle)
com.bumptech.glide.request.BaseRequestOptions: android.content.res.Resources$Theme getTheme()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setVolume(float,float)
com.bumptech.glide.load.ImageHeaderParser$ImageType: ImageHeaderParser$ImageType(java.lang.String,int,boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void drainAndReinitializeCodec()
com.google.android.exoplayer2.source.chunk.MediaChunk: long getNextChunkIndex()
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: HttpGlideUrlLoader(com.bumptech.glide.load.model.ModelCache)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.ActionMenuItemView: void onMeasure(int,int)
cn.jzvd.Jzvd: void reset()
androidx.viewpager.widget.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)
com.bumptech.glide.load.engine.DecodeJob: void onLoadFailed()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMaxTextSize()
androidx.media.AudioAttributesImplBase: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.bumptech.glide.load.engine.DiskCacheStrategy$5: boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy)
androidx.collection.ArraySet: java.lang.Object[] toArray(java.lang.Object[])
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl[] newArray(int)
com.google.android.exoplayer2.util.Assertions: void checkArgument(boolean,java.lang.Object)
com.google.android.exoplayer2.source.SampleQueue: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key)
androidx.core.view.ViewParentCompat: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[])
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
com.google.android.exoplayer2.text.SubtitleDecoderException: SubtitleDecoderException(java.lang.String,java.lang.Throwable)
androidx.appcompat.app.AlertController$AlertParams: void apply(androidx.appcompat.app.AlertController)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
com.bumptech.glide.GeneratedAppGlideModule: GeneratedAppGlideModule()
com.google.android.exoplayer2.source.TrackGroupArray: TrackGroupArray(com.google.android.exoplayer2.source.TrackGroup[])
androidx.appcompat.widget.SearchView$7: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAllowCaching(boolean)
com.google.android.exoplayer2.decoder.SimpleDecoder: void access$000(com.google.android.exoplayer2.decoder.SimpleDecoder)
com.bumptech.glide.load.resource.transcode.TranscoderRegistry: java.util.List getTranscodeClasses(java.lang.Class,java.lang.Class)
com.google.android.exoplayer2.audio.DefaultAudioSink: void enableTunnelingV21(int)
cn.jzvd.Jzvd$JZAutoFullscreenListener: void onAccuracyChanged(android.hardware.Sensor,int)
com.bumptech.glide.load.engine.SourceGenerator: void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
com.google.android.exoplayer2.util.UriUtil: android.net.Uri resolveToUri(java.lang.String,java.lang.String)
com.google.android.exoplayer2.decoder.Buffer: void clearFlag(int)
com.bumptech.glide.manager.SupportRequestManagerFragment: void onStart()
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: boolean handles(java.lang.Object)
tv.danmaku.ijk.media.player.misc.IAndroidIO: int open(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar peekSupportActionBar()
androidx.appcompat.app.AppCompatDelegateImpl: void updateStatusGuardColor(android.view.View)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void downstreamFormatChanged(com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.bumptech.glide.load.engine.SourceGenerator: boolean startNext()
com.bumptech.glide.load.ImageHeaderParserUtils: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer)
com.google.android.exoplayer2.extractor.wav.WavExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
androidx.core.view.NestedScrollingChildHelper: void stopNestedScroll(int)
cn.jzvd.Jzvd: void setScreen(int)
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache: FullSegmentEncryptionKeyCache(int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setDataSource(android.content.Context,android.net.Uri)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void seekTo(long)
androidx.appcompat.view.WindowCallbackWrapper: WindowCallbackWrapper(android.view.Window$Callback)
com.google.android.exoplayer2.DefaultRenderersFactory: void buildVideoRenderers(android.content.Context,int,com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.drm.DrmSessionManager,boolean,boolean,android.os.Handler,com.google.android.exoplayer2.video.VideoRendererEventListener,long,java.util.ArrayList)
com.bumptech.glide.util.ExceptionPassthroughInputStream: int read(byte[])
com.bumptech.glide.load.data.LocalUriFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.recyclerview.widget.RecyclerView: void onChildDetachedFromWindow(android.view.View)
com.google.android.exoplayer2.ParserException: ParserException(java.lang.String,java.lang.Throwable)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: BaseTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int[])
com.google.android.exoplayer2.extractor.ts.Id3Reader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent(int)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onQueueTitleChanged(java.lang.CharSequence)
androidx.appcompat.widget.SearchView$1: void run()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration generateConfigDelta(android.content.res.Configuration,android.content.res.Configuration)
androidx.collection.LongSparseArray: void gc()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$3: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(int)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: boolean skipToNextPage(com.google.android.exoplayer2.extractor.ExtractorInput,long)
androidx.appcompat.view.menu.ActionMenuItem: int getAlphabeticModifiers()
androidx.core.app.AppOpsManagerCompat: java.lang.String permissionToOp(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void markItemDecorInsetsDirty()
com.google.android.exoplayer2.upstream.FileDataSource: FileDataSource()
com.google.android.exoplayer2.source.SampleQueue: void reset()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setWakeMode(android.content.Context,int)
com.bumptech.glide.load.engine.EngineJob: void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean)
com.google.android.exoplayer2.ui.SubtitleView: void setCues(java.util.List)
com.google.android.exoplayer2.audio.DtsUtil: boolean isSyncWord(int)
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction: android.os.Bundle getExtras(java.lang.Object)
androidx.appcompat.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$AdapterRecyclerView: int getItemCount()
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory: InternalCacheDiskCacheFactory(android.content.Context)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter: java.lang.String format(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.appcompat.view.menu.MenuItemImpl: MenuItemImpl(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int)
cn.jzvd.JzvdStd: void setBatteryLevel()
com.danikula.videocache.StorageUtils: java.io.File getIndividualCacheDirectory(android.content.Context)
com.bumptech.glide.util.Util: int hashCode(java.lang.Object,int)
com.bumptech.glide.load.model.ModelLoader$LoadData: ModelLoader$LoadData(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: AbstractMediaPlayer()
com.google.android.exoplayer2.extractor.mp4.TrackFragment: void initTables(int,int)
com.google.android.exoplayer2.audio.DefaultAudioSink$2: void run()
androidx.lifecycle.LifecycleRegistry: void markState(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
com.google.android.exoplayer2.util.UriUtil: java.lang.String resolve(java.lang.String,java.lang.String)
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: void attachFontFace(android.text.SpannableStringBuilder,int,int,int,int,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.bumptech.glide.load.engine.GlideException: void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class)
cn.jzvd.Jzvd: void setScreenFullscreen()
com.google.android.exoplayer2.upstream.DefaultAllocator: void setTargetBufferSize(int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: MatroskaExtractor$Track(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$1)
androidx.core.graphics.drawable.WrappedDrawableApi14: androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void maybeInitCodec()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: android.graphics.Point alignVideoSizeV21(android.media.MediaCodecInfo$VideoCapabilities,int,int)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory: java.lang.Class getDataClass()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: int getVideoSarDen()
com.bumptech.glide.gifdecoder.GifHeader: int getNumFrames()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createVideoSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,float,java.util.List,int,float,com.google.android.exoplayer2.drm.DrmInitData)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionPause(android.transition.Transition)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist parse(android.net.Uri,java.io.InputStream)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.View onFindViewById(int)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.google.android.exoplayer2.drm.KeysExpiredException: KeysExpiredException()
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: boolean contains(com.bumptech.glide.request.ResourceCallback)
com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup: VorbisReader$VorbisSetup(com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader,com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader,byte[],com.google.android.exoplayer2.extractor.VorbisUtil$Mode[],int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: <clinit>()
androidx.appcompat.graphics.drawable.DrawableContainer: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: java.lang.String toMb(int)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onSessionDestroyed()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder create(android.content.Context)
androidx.fragment.app.Fragment: void initLifecycle()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: AdaptiveTrackSelection$Factory(com.google.android.exoplayer2.upstream.BandwidthMeter,int,int,int,float,float,long,com.google.android.exoplayer2.util.Clock)
androidx.collection.SimpleArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: java.lang.String getTag()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)
androidx.fragment.app.FragmentActivity$HostCallbacks: int onGetWindowAnimations()
com.google.android.exoplayer2.source.hls.HlsMediaChunk: void maybeLoadInitData()
com.google.android.exoplayer2.text.SubtitleOutputBuffer: long getEventTime(int)
androidx.recyclerview.widget.RecyclerView: void requestLayout()
androidx.appcompat.view.menu.MenuBuilder: int findInsertIndex(java.util.ArrayList,int)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op(int,androidx.fragment.app.Fragment)
androidx.core.widget.TextViewCompat: void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat)
androidx.fragment.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)
com.google.android.exoplayer2.PlayerMessage: android.os.Handler getHandler()
androidx.appcompat.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand$1: com.google.android.exoplayer2.metadata.scte35.PrivateCommand[] newArray(int)
com.google.android.exoplayer2.metadata.icy.IcyInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.util.ParsableByteArray: int readUnsignedShort()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.metadata.icy.IcyHeaders access$602(com.google.android.exoplayer2.source.ProgressiveMediaPeriod,com.google.android.exoplayer2.metadata.icy.IcyHeaders)
androidx.core.provider.SelfDestructiveThread: SelfDestructiveThread(java.lang.String,int,int)
com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean onStateChanged(int[])
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.ApicFrame decodeApicFrame(com.google.android.exoplayer2.util.ParsableByteArray,int,int)
androidx.appcompat.view.menu.MenuWrapperICS: boolean isShortcutKey(int,android.view.KeyEvent)
androidx.appcompat.view.ActionMode: void setTitleOptionalHint(boolean)
com.bumptech.glide.load.resource.gif.GifDrawable$GifState: int getChangingConfigurations()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
androidx.appcompat.widget.ActionBarContainer: boolean isCollapsed(android.view.View)
androidx.core.widget.NestedScrollView$SavedState: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.Registry: com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
com.bumptech.glide.load.Option: Option(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: void load()
com.google.android.exoplayer2.metadata.id3.PrivFrame: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.TintContextWrapper: boolean shouldWrap(android.content.Context)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: VideoFrameReleaseTimeHelper(android.content.Context)
androidx.appcompat.widget.SuggestionsAdapter: void onClick(android.view.View)
com.google.android.exoplayer2.util.SlidingPercentile: void ensureSortedByIndex()
com.google.android.exoplayer2.video.DummySurface: DummySurface(com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread,android.graphics.SurfaceTexture,boolean)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper buildSampleStreamWrapper(int,android.net.Uri[],com.google.android.exoplayer2.Format[],com.google.android.exoplayer2.Format,java.util.List,java.util.Map,long)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$8: IjkMediaFormat$8(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
cn.jzvd.demo.ActivityApiCustomMedia: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseBooleanArray access$800(com.google.android.exoplayer2.extractor.ts.TsExtractor)
com.bumptech.glide.load.resource.gif.GifFrameLoader: void loadNextFrame()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$1: com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry[] newArray(int)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: DefaultBandwidthMeter$Builder(android.content.Context)
com.google.android.exoplayer2.source.SampleQueue: long getLargestTimestamp(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean getPadding(android.graphics.Rect)
com.bumptech.glide.request.SingleRequest: com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View)
tv.danmaku.ijk.media.player.pragma.DebugLog: void v(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.exoplayer2.trackselection.MappingTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelectorResult selectTracks(com.google.android.exoplayer2.RendererCapabilities[],com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: void release()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox getEncryptionBoxIfEncrypted()
com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider: void reset()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
cn.jzvd.demo.ActivityApi: void clickBigChange(android.view.View)
com.google.android.exoplayer2.extractor.ts.H262Reader: android.util.Pair parseCsdBuffer(com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer,java.lang.String)
androidx.versionedparcelable.VersionedParcelParcel: androidx.versionedparcelable.VersionedParcel createSubParcel()
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void onFlush()
com.google.android.exoplayer2.audio.DefaultAudioSink: long access$700(com.google.android.exoplayer2.audio.DefaultAudioSink)
com.bumptech.glide.util.MultiClassKey: MultiClassKey()
androidx.core.content.res.ResourcesCompat$ThemeCompat: void rebase(android.content.res.Resources$Theme)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.hls.HlsMediaSource createMediaSource(android.net.Uri,android.os.Handler,com.google.android.exoplayer2.source.MediaSourceEventListener)
androidx.appcompat.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AppCompatDelegateImpl: void onPostResume()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: void maybeOutputSeekMap(long,boolean,boolean)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback)
com.google.android.exoplayer2.source.IcyDataSource: void addTransferListener(com.google.android.exoplayer2.upstream.TransferListener)
com.bumptech.glide.manager.RequestTracker: boolean clearAndRemove(com.bumptech.glide.request.Request)
cn.jzvd.JZMediaSystem: void start()
androidx.lifecycle.Lifecycling: java.lang.reflect.Constructor generatedConstructor(java.lang.Class)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: MenuItemWrapperICS$OnActionExpandListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: FragmentedMp4Extractor(int)
androidx.appcompat.widget.ActionBarOverlayLayout: <clinit>()
com.bumptech.glide.load.data.DataRewinderRegistry: com.bumptech.glide.load.data.DataRewinder build(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearOldPosition()
androidx.appcompat.view.menu.ActionMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: com.google.android.exoplayer2.decoder.OutputBuffer createOutputBuffer()
com.bumptech.glide.load.engine.EngineKeyFactory: EngineKeyFactory()
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getMediaPeriodInfoForContent(java.lang.Object,long,long)
cn.jzvd.demo.CustomMedia.JZMediaIjk: long getCurrentPosition()
androidx.appcompat.widget.ActionBarContainer: void onFinishInflate()
cn.jzvd.demo.ActivityApiRotationVideoSize: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.MediaPeriodHolder: long toPeriodTime(long)
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int _getLoopCount()
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void preApi29Check()
androidx.fragment.app.Fragment: java.lang.Object getHost()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void resetInputBuffer()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelection$Definition selectOtherTrack(int,com.google.android.exoplayer2.source.TrackGroupArray,int[][],com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: void init(com.google.android.exoplayer2.extractor.mp4.Track,com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues)
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: void applyStyleRecord(com.google.android.exoplayer2.util.ParsableByteArray,android.text.SpannableStringBuilder)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: AdaptiveTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int[],com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$BandwidthProvider,long,long,long,float,long,com.google.android.exoplayer2.util.Clock,com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$1)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.arch.core.executor.ArchTaskExecutor: boolean isMainThread()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int[] getAdaptiveAudioTracks(com.google.android.exoplayer2.source.TrackGroup,int[],int,boolean,boolean,boolean)
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: <clinit>()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getSpansFromViewTags(android.view.View)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setDither(boolean)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.source.TrackGroupArray: boolean equals(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: void onPanelClosed(int)
androidx.core.widget.NestedScrollView: boolean executeKeyEvent(android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: android.graphics.Region getTransparentRegion()
androidx.appcompat.widget.ToolbarWidgetWrapper$1: void onClick(android.view.View)
com.danikula.videocache.HttpProxyCacheServer: void access$100(com.danikula.videocache.HttpProxyCacheServer)
androidx.fragment.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.engine.EngineJob: EngineJob(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool)
com.google.android.exoplayer2.text.SubtitleOutputBuffer: void setContent(long,com.google.android.exoplayer2.text.Subtitle,long)
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: RequestManager$RequestManagerConnectivityListener(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.RequestTracker)
androidx.viewpager.widget.ViewPager: int getOffscreenPageLimit()
com.google.android.exoplayer2.audio.AudioAttributes$Builder: com.google.android.exoplayer2.audio.AudioAttributes build()
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: Cea708Decoder$CueBuilder()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoadCanceled(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,boolean)
androidx.appcompat.view.menu.MenuBuilder: void removeItemAtInt(int,boolean)
com.google.android.exoplayer2.RendererConfiguration: RendererConfiguration(int)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader)
android.support.v4.media.session.PlaybackStateCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
org.slf4j.helpers.SubstituteLoggerFactory: SubstituteLoggerFactory()
com.google.android.exoplayer2.MediaPeriodHolder: void releaseMediaPeriod(long,com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.source.MediaPeriod)
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource valueOf(java.lang.String)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean)
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkChannelAssignment(int,com.google.android.exoplayer2.util.FlacStreamMetadata)
com.google.android.exoplayer2.extractor.VorbisBitArray: int readBits(int)
androidx.fragment.app.FragmentManagerImpl$1: void handleOnBackPressed()
cn.jzvd.demo.CustomMedia.JZMediaIjk: JZMediaIjk(cn.jzvd.Jzvd)
com.google.android.exoplayer2.extractor.ts.LatmReader: void seek()
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])
cn.jzvd.demo.ActivityApiExtendsNormal: void onPause()
androidx.core.view.GravityCompat: int getAbsoluteGravity(int,int)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId resolveMediaPeriodIdForAds(java.lang.Object,long)
android.support.v4.media.session.PlaybackStateCompat: android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsMediaSource: <clinit>()
androidx.core.widget.NestedScrollView: void smoothScrollBy(int,int,int,boolean)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: ChapterFrame(android.os.Parcel)
androidx.appcompat.view.menu.ListMenuItemView: void onMeasure(int,int)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void doBeforeTextChanged(android.widget.AutoCompleteTextView)
tv.danmaku.ijk.media.player.IMediaPlayer: boolean isPlaying()
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: int getSize()
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generateEventTime(com.google.android.exoplayer2.Timeline,int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.appcompat.view.menu.MenuDialogHelper: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: boolean onStartCode(int,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean peekEndOfStreamOrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.offline.StreamKey: int hashCode()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: <clinit>()
androidx.appcompat.widget.ListPopupWindow: android.view.View getAnchorView()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: Mp3Extractor(int)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: int getSpanSize()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: boolean isShowing()
androidx.core.graphics.drawable.DrawableCompat: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
com.bumptech.glide.disklrucache.StrictLineReader: java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader)
androidx.collection.ArraySet: ArraySet(int)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.exoplayer2.source.hls.HlsMediaSource: void prepareSourceInternal(com.google.android.exoplayer2.upstream.TransferListener)
com.google.android.exoplayer2.WakeLockManager: WakeLockManager(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setChangingConfigurations(int)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingEnabled(boolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser)
androidx.core.content.res.ComplexColorCompat: android.graphics.Shader getShader()
com.google.android.exoplayer2.text.webvtt.CssParser: char peekCharAtPosition(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.metadata.Metadata: Metadata(java.util.List)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitleCondensed()
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onDownstreamFormatChanged(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.metadata.flac.VorbisComment: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: boolean expandActionView()
com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeFromWrappedStreams(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,com.bumptech.glide.load.PreferredColorSpace,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
androidx.collection.SimpleArrayMap: boolean containsKey(java.lang.Object)
androidx.lifecycle.ViewModelProvider: ViewModelProvider(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isAdapterPositionUnknown()
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTooltipText()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithMaxInputSize(int)
androidx.collection.MapCollections$KeySet: java.util.Iterator iterator()
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: void onClick(android.view.View)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setAuxEffectInfo(com.google.android.exoplayer2.audio.AuxEffectInfo)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle parseTfhd(com.google.android.exoplayer2.util.ParsableByteArray,android.util.SparseArray)
androidx.core.widget.AutoScrollHelper: float constrain(float,float,float)
com.bumptech.glide.disklrucache.Util: <clinit>()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setOnMediaCodecSelectListener(tv.danmaku.ijk.media.player.IjkMediaPlayer$OnMediaCodecSelectListener)
androidx.core.graphics.drawable.DrawableCompat: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: void register()
androidx.recyclerview.widget.RecyclerView: void dispatchLayout()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.util.SparseArray getCapturedKeys()
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DefaultDrmSession createNewDefaultSession(java.util.List,boolean)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.bumptech.glide.gifdecoder.StandardGifDecoder: void advance()
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.util.ParsableByteArray: long readLong()
com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)
com.bumptech.glide.Glide: Glide(android.content.Context,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.manager.RequestManagerRetriever,com.bumptech.glide.manager.ConnectivityMonitorFactory,int,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,com.bumptech.glide.GlideExperiments)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isSoftwareOnlyV29(android.media.MediaCodecInfo)
com.bumptech.glide.load.data.mediastore.MediaStoreUtil: boolean isMediaStoreVideoUri(android.net.Uri)
androidx.versionedparcelable.VersionedParcel: boolean readBoolean(boolean,int)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params build()
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: void cancel()
com.bumptech.glide.load.model.StringLoader: StringLoader(com.bumptech.glide.load.model.ModelLoader)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: ViewCompat$AccessibilityPaneVisibilityManager()
com.google.android.exoplayer2.metadata.flac.VorbisComment: java.lang.String toString()
com.google.android.exoplayer2.extractor.GaplessInfoHolder: boolean setFromXingHeaderValue(int)
com.bumptech.glide.load.engine.DiskCacheStrategy$4: boolean decodeCachedResource()
androidx.core.widget.NestedScrollView: boolean dispatchNestedFling(float,float,boolean)
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: boolean isSeekable()
androidx.recyclerview.R$styleable: <clinit>()
androidx.core.graphics.PathParser: int nextStart(java.lang.String,int)
com.google.android.exoplayer2.MediaPeriodHolder: void handlePrepared(float,com.google.android.exoplayer2.Timeline)
androidx.appcompat.view.menu.BaseMenuPresenter: BaseMenuPresenter(android.content.Context,int,int)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.google.android.exoplayer2.util.Util: java.lang.String toLowerInvariant(java.lang.String)
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: DrawableTransformation(com.bumptech.glide.load.Transformation,boolean)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: int findResourceIdFromUri(android.content.Context,android.net.Uri)
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock: DiskCacheWriteLocker$WriteLock()
androidx.arch.core.internal.SafeIterableMap: androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions()
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onPlaybackStateChanged(java.lang.Object)
com.google.android.exoplayer2.audio.DefaultAudioSink: void initialize(long)
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: com.google.android.exoplayer2.text.Cue build()
tv.danmaku.ijk.media.player.ffmpeg.FFmpegApi: java.lang.String av_base64_encode(byte[])
com.google.android.exoplayer2.metadata.id3.MlltFrame$1: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentTransitionCompat21: FragmentTransitionCompat21()
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getArrayPoolSizeInBytes()
androidx.appcompat.view.SupportMenuInflater$MenuState: void resetGroup()
com.google.android.exoplayer2.ExoPlayerImpl: void release()
androidx.recyclerview.widget.OrientationHelper: OrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean hasSubMenu()
com.google.android.exoplayer2.util.Util: java.lang.String[] getSystemLocalesV24(android.content.res.Configuration)
androidx.core.view.accessibility.AccessibilityRecordCompat: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: com.google.android.exoplayer2.upstream.DefaultDataSource createDataSource()
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: Ac4Util$SyncFrameInfo(int,int,int,int,int,com.google.android.exoplayer2.audio.Ac4Util$1)
com.google.android.exoplayer2.audio.DefaultAudioSink: android.os.ConditionVariable access$200(com.google.android.exoplayer2.audio.DefaultAudioSink)
com.bumptech.glide.load.engine.EngineJob: EngineJob(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory)
androidx.core.app.TaskStackBuilder: java.util.Iterator iterator()
androidx.appcompat.widget.SearchView$9: SearchView$9(androidx.appcompat.widget.SearchView)
com.google.android.exoplayer2.extractor.GaplessInfoHolder: GaplessInfoHolder()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void growArray(int,int)
com.bumptech.glide.load.engine.GlideException: java.lang.String getMessage()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: int avcLevelToMaxFrameSize(int)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithSubsampleOffsetUs(long)
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal)
com.google.android.exoplayer2.ui.SubtitleView: void setStyle(com.google.android.exoplayer2.text.CaptionStyleCompat)
androidx.lifecycle.Lifecycle$Event: Lifecycle$Event(java.lang.String,int)
com.google.android.exoplayer2.audio.AudioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities getCapabilities(android.content.Context,android.content.Intent)
com.google.android.exoplayer2.upstream.DataSpec: java.lang.String toString()
com.bumptech.glide.load.engine.ActiveResources$2: void run()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.exoplayer2.metadata.emsg.EventMessage: int describeContents()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean isStateful()
com.google.android.exoplayer2.trackselection.TrackSelectionArray: int hashCode()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter: IjkMediaFormat$Formatter(tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1)
androidx.core.content.res.GrowingArrayUtils: int growSize(int)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14(androidx.core.view.ViewPropertyAnimatorCompat)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.LinearLayoutCompat: void onMeasure(int,int)
androidx.appcompat.widget.Toolbar$SavedState: <clinit>()
com.google.android.exoplayer2.util.StandaloneMediaClock: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues: MediaCodecVideoRenderer$CodecMaxValues(int,int,int)
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: <clinit>()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: MediaCodecUtil$MediaCodecListCompatV16()
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: ThumbnailStreamOpener(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean onLevelChange(int)
androidx.collection.ArraySet$1: int colGetSize()
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence getText(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean hasSpans()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: VectorDrawableCommon()
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener)
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int)
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder: boolean handles(android.os.ParcelFileDescriptor,com.bumptech.glide.load.Options)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class)
com.google.android.exoplayer2.ExoPlayerImplInternal: android.util.Pair getPeriodPosition(com.google.android.exoplayer2.Timeline,int,long)
androidx.arch.core.internal.SafeIterableMap$ListIterator: boolean hasNext()
androidx.fragment.app.FragmentTransitionImpl: boolean isNullOrEmpty(java.util.List)
com.danikula.videocache.ProxyCacheUtils: void close(java.io.Closeable)
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: long getEventTime(int)
androidx.recyclerview.widget.RecyclerView: void ensureBottomGlow()
tv.danmaku.ijk.media.player.pragma.DebugLog: void printCause(java.lang.Throwable)
androidx.core.widget.NestedScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.danikula.videocache.ProxyCache: int read(byte[],long,int)
com.google.android.exoplayer2.FormatHolder: FormatHolder()
androidx.fragment.app.FragmentTransition: <clinit>()
androidx.appcompat.widget.TooltipCompatHandler: void show(boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void drawableStateChanged()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface)
androidx.recyclerview.widget.GapWorker$1: int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task)
androidx.appcompat.widget.DropDownListView: boolean onHoverEvent(android.view.MotionEvent)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: long peekId3PrivTimestamp(com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setCacheShare(int)
androidx.appcompat.view.menu.SubMenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
cn.jzvd.demo.ActivityPreloading: void onBackPressed()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey: boolean equals(java.lang.Object)
cn.jzvd.demo.ActivityWebView: void onPause()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: boolean canApplyTheme()
com.google.android.exoplayer2.extractor.ts.PsDurationReader: boolean isDurationReadFinished()
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean isEnded()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame$1: com.google.android.exoplayer2.metadata.id3.ChapterTocFrame createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onMetadata(com.google.android.exoplayer2.metadata.Metadata)
com.bumptech.glide.provider.LoadPathCache: void put(java.lang.Class,java.lang.Class,java.lang.Class,com.bumptech.glide.load.engine.LoadPath)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int)
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener: ScrollingTabContainerView$TabClickListener(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.exoplayer2.text.ssa.SsaDecoder: <clinit>()
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.app.AlertDialog$Builder: android.content.Context getContext()
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil: byte[] buildPsshAtom(java.util.UUID,byte[])
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long getTimeUsForTableIndex(int)
org.slf4j.event.SubstituteLoggingEvent: org.slf4j.helpers.SubstituteLogger getLogger()
androidx.core.view.accessibility.AccessibilityNodeProviderCompat: AccessibilityNodeProviderCompat(java.lang.Object)
androidx.lifecycle.FullLifecycleObserverAdapter$1: <clinit>()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData$1: DrmInitData$SchemeData$1()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void parseLineAttribute(java.lang.String,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)
com.google.android.exoplayer2.extractor.MpegAudioHeader: boolean isMagicPresent(int)
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.appcompat.view.ActionBarPolicy: int getMaxActionButtons()
com.google.android.exoplayer2.drm.DefaultDrmSession: void onKeysError(java.lang.Exception)
cn.jzvd.Jzvd: void showWifiDialog()
com.google.android.exoplayer2.source.TrackGroup$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer)
androidx.appcompat.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()
org.slf4j.impl.AndroidLoggerAdapter: void error(java.lang.String,java.lang.Throwable)
tv.danmaku.ijk.media.player.misc.ITrackInfo: int getTrackType()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int getAdaptiveVideoTrackCountForMimeType(com.google.android.exoplayer2.source.TrackGroup,int[],int,java.lang.String,int,int,int,int,java.util.List)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setWidth(float)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDroppedVideoFrames(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,long)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice access$000(android.os.Parcel)
com.google.android.exoplayer2.upstream.DataSourceInputStream: DataSourceInputStream(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec)
androidx.lifecycle.ReportFragment: ReportFragment()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader: void init(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
org.slf4j.event.SubstituteLoggingEvent: void setThreadName(java.lang.String)
androidx.fragment.app.FragmentActivity: void onPictureInPictureModeChanged(boolean)
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean isComplete(boolean)
com.bumptech.glide.load.resource.file.FileResource: FileResource(java.io.File)
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.ExoMediaCrypto getMediaCrypto()
com.google.android.exoplayer2.metadata.id3.MlltFrame: int hashCode()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.android.exoplayer2.extractor.GaplessInfoHolder: <clinit>()
com.google.android.exoplayer2.PlaybackParameters: PlaybackParameters(float,float,boolean)
com.bumptech.glide.load.model.ResourceLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsEosFlushWorkaround(java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setLogEnabled(boolean)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: void integerElement(int,long)
androidx.core.view.AccessibilityDelegateCompat: androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: void appendToNalUnit(byte[],int,int)
com.bumptech.glide.load.resource.UnitTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)
androidx.recyclerview.widget.GridLayoutManager: void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
com.bumptech.glide.load.resource.file.FileDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder advanceReadingPeriod()
com.bumptech.glide.provider.ModelToResourceClassCache: java.util.List get(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.core.view.ViewPropertyAnimatorCompat: void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int getSpecificityScore(java.lang.String,java.lang.String,java.lang.String[],java.lang.String)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: void setInitialValuesWithoutContext()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollOffset()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$3: IjkMediaFormat$3(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.extractor.FlacMetadataReader: com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable readSeekTableMetadataBlock(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.ui.TrackSelectionView: void onDefaultViewClicked()
androidx.core.app.ActivityRecreator$3: ActivityRecreator$3(java.lang.Object,java.lang.Object)
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1: java.lang.Object convert(byte[])
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: java.lang.CharSequence getHintText()
com.google.android.exoplayer2.audio.Sonic: void copyToOutput(short[],int,int)
com.google.android.exoplayer2.source.chunk.Chunk: Chunk(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,int,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseBitmap(int,int)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
androidx.core.widget.ListViewAutoScrollHelper: void scrollTargetBy(int,int)
com.bumptech.glide.load.resource.file.FileDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.Poolable create()
androidx.collection.SparseArrayCompat: void clear()
androidx.fragment.app.FragmentActivity$HostCallbacks: FragmentActivity$HostCallbacks(androidx.fragment.app.FragmentActivity)
android.support.v4.media.MediaDescriptionCompat$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.decoder.SimpleDecoder: void release()
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlStyle parseStyleAttributes(org.xmlpull.v1.XmlPullParser,com.google.android.exoplayer2.text.ttml.TtmlStyle)
androidx.core.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long)
androidx.fragment.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: boolean sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,long)
com.google.android.exoplayer2.MediaPeriodHolder: long getNextLoadPositionUs()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: <clinit>()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.XmlResourceParser getAnimation(int)
androidx.core.provider.FontsContractCompat$FontInfo: FontsContractCompat$FontInfo(android.net.Uri,int,int,boolean,int)
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long getTimeUs(long)
com.google.android.exoplayer2.metadata.id3.ChapterFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery: ThumbFetcher$VideoThumbnailQuery(android.content.ContentResolver)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
com.google.android.exoplayer2.metadata.id3.CommentFrame: java.lang.String toString()
androidx.versionedparcelable.VersionedParcelParcel: void writeInt(int)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: java.lang.Appendable append(java.lang.CharSequence)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onInfo(int,int)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
com.bumptech.glide.manager.TargetTracker: void onDestroy()
androidx.fragment.app.BackStackState: BackStackState(androidx.fragment.app.BackStackRecord)
com.bumptech.glide.util.pool.FactoryPools$2: java.lang.Object create()
com.google.android.exoplayer2.drm.DefaultDrmSession: void acquire()
tv.danmaku.ijk.media.player.MediaPlayerProxy: int getVideoHeight()
com.google.android.exoplayer2.DefaultLoadControl: com.google.android.exoplayer2.upstream.Allocator getAllocator()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.bumptech.glide.disklrucache.DiskLruCache: void access$200(com.bumptech.glide.disklrucache.DiskLruCache)
androidx.appcompat.widget.ActionBarOverlayLayout: void postAddActionBarHideOffset()
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseOutputBufferInternal(com.google.android.exoplayer2.decoder.OutputBuffer)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getCachedSpanGroupIndex(int,int)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.decoder.DecoderCounters access$602(com.google.android.exoplayer2.SimpleExoPlayer,com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.drm.ErrorStateDrmSession: com.google.android.exoplayer2.drm.ExoMediaCrypto getMediaCrypto()
com.google.android.exoplayer2.SimpleExoPlayer: android.view.Surface access$500(com.google.android.exoplayer2.SimpleExoPlayer)
com.google.android.exoplayer2.extractor.ts.PesReader: void init(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.collection.SimpleArrayMap: java.lang.Object removeAt(int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: AppCompatSpinner$DialogPopup(androidx.appcompat.widget.AppCompatSpinner)
com.google.android.exoplayer2.source.SampleQueue: long discardSampleMetadataToEnd()
androidx.appcompat.view.menu.StandardMenuPopup: void setForceShowIcon(boolean)
androidx.lifecycle.Lifecycle$State: Lifecycle$State(java.lang.String,int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
cn.jzvd.demo.CustomMedia.JZMediaExo: void setSurface(android.view.Surface)
androidx.appcompat.app.AlertController$3: AlertController$3(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.bumptech.glide.request.target.CustomTarget: void setRequest(com.bumptech.glide.request.Request)
androidx.exifinterface.media.ExifInterface: void getJpegAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int,int)
com.bumptech.glide.load.engine.SourceGenerator$1: SourceGenerator$1(com.bumptech.glide.load.engine.SourceGenerator,com.bumptech.glide.load.model.ModelLoader$LoadData)
com.google.android.exoplayer2.util.EGLSurfaceTexture: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
com.google.android.exoplayer2.metadata.flac.PictureFrame: PictureFrame(android.os.Parcel)
android.support.v4.media.MediaDescriptionCompat$1: MediaDescriptionCompat$1()
com.bumptech.glide.load.ImageHeaderParserUtils$2: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.ImageHeaderParser)
androidx.appcompat.widget.ScrollingTabContainerView: void onNothingSelected(android.widget.AdapterView)
androidx.appcompat.view.menu.StandardMenuPopup$1: StandardMenuPopup$1(androidx.appcompat.view.menu.StandardMenuPopup)
androidx.appcompat.widget.TintTypedArray: int getDimensionPixelSize(int,int)
androidx.exifinterface.media.ExifInterface: void getRafAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.exoplayer2.WakeLockManager: void updateWakeLock()
cn.jzvd.Jzvd: void setScreenNormal()
androidx.recyclerview.widget.RecyclerView: void dispatchOnScrolled(int,int)
com.bumptech.glide.request.BaseRequestOptions: boolean isTransformationSet()
androidx.appcompat.widget.AppCompatTextView: void consumeTextFutureAndSetBlocking()
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
androidx.recyclerview.widget.RecyclerView$SavedState: RecyclerView$SavedState(android.os.Parcelable)
com.google.android.exoplayer2.text.Cue: Cue(android.graphics.Bitmap,float,int,float,int,float,float)
com.google.android.exoplayer2.source.SinglePeriodTimeline: java.lang.Object getUidOfPeriod(int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnPreparedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener)
androidx.collection.ArraySet: void freeArrays(int[],java.lang.Object[],int)
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry: ResourceDecoderRegistry$Entry(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.lang.Object copy(java.util.List)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean synchronize(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
androidx.appcompat.widget.DropDownListView: void drawableStateChanged()
cn.jzvd.Jzvd: void onMeasure(int,int)
androidx.appcompat.widget.ResourcesWrapper: void getValue(java.lang.String,android.util.TypedValue,boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.view.ViewCompat: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isActionViewExpanded()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getCacheStatisticPhysicalPos()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer)
androidx.arch.core.executor.ArchTaskExecutor$1: void execute(java.lang.Runnable)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
androidx.fragment.app.Fragment: void setMenuVisibility(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: void run()
androidx.appcompat.view.menu.BaseMenuPresenter: void setId(int)
androidx.appcompat.view.menu.MenuDialogHelper: void onDismiss(android.content.DialogInterface)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void release()
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom: PsshAtomUtil$PsshAtom(java.util.UUID,int,byte[])
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: boolean equals(java.lang.Object)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.source.SampleStream getStream()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void mapSampleQueuesToMatchTrackGroups()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: TrackOutput$CryptoData(int,byte[],int,int)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: void initializeMatrixForRotation(int,android.graphics.Matrix)
androidx.core.widget.NestedScrollView: boolean arrowScroll(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasView()
com.google.android.exoplayer2.extractor.ts.LatmReader: LatmReader(java.lang.String)
com.google.android.exoplayer2.util.NalUnitUtil$SpsData: NalUnitUtil$SpsData(int,int,int,int,int,int,float,boolean,boolean,int,int,int,boolean)
cn.jzvd.demo.ActivityTinyWindowRecycleView: void onPause()
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getMediaPeriodInfoForAd(java.lang.Object,int,int,long,long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void removeCollectedSpans(android.view.View)
com.google.android.exoplayer2.decoder.DecoderInputBuffer: boolean isFlagsOnly()
com.bumptech.glide.request.target.BaseTarget: void onLoadCleared(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.PorterDuff$Mode getIconTintMode()
cn.jzvd.JzvdStd: void changeUiToPlayingShow()
androidx.core.view.ActionProvider: boolean onPerformDefaultAction()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onInterceptFocusSearch(android.view.View,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$400(tv.danmaku.ijk.media.player.IjkMediaPlayer)
com.bumptech.glide.util.Util: int getBitmapByteSize(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: boolean onMenuItemClick(android.view.MenuItem)
androidx.interpolator.view.animation.FastOutSlowInInterpolator: <clinit>()
com.google.android.exoplayer2.extractor.MpegAudioHeader: int getFrameSize(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onScrollStateChanged(int)
com.google.android.exoplayer2.Timeline$Period: long getDurationUs()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.fragment.app.Fragment: void onActivityResult(int,int,android.content.Intent)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog create()
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.PlaybackParameters applyPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfo(com.google.android.exoplayer2.decoder.DecoderInputBuffer,int)
com.google.android.exoplayer2.decoder.Buffer: Buffer()
androidx.fragment.app.FragmentController: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int toLegacyStreamType(android.media.AudioAttributes)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onAudioUnderrun(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,long,long)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onPreparePanel(int,android.view.View,android.view.Menu)
androidx.recyclerview.widget.LinearLayoutManager: void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState)
androidx.collection.LongSparseArray: java.lang.Object valueAt(int)
androidx.viewpager.widget.ViewPager: void onSizeChanged(int,int,int,int)
androidx.fragment.app.Fragment: void performPause()
com.google.android.exoplayer2.ExoPlayerImpl: android.os.Looper getApplicationLooper()
com.bumptech.glide.disklrucache.DiskLruCache$Entry: void setLengths(java.lang.String[])
com.bumptech.glide.disklrucache.StrictLineReader: boolean hasUnterminatedLine()
com.bumptech.glide.request.target.BaseTarget: void onStart()
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int,int)
androidx.appcompat.view.menu.ListMenuItemView: void setShortcut(boolean,char)
androidx.appcompat.view.menu.ActionMenuItem: boolean isActionViewExpanded()
com.bumptech.glide.request.BaseRequestOptions: boolean isPrioritySet()
com.google.android.exoplayer2.SimpleExoPlayer: void prepare(com.google.android.exoplayer2.source.MediaSource)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.exoplayer2.util.TimestampAdjuster: long usToPts(long)
com.google.android.exoplayer2.source.BaseMediaSource: void enable(com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getCapacity()
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.request.target.ViewTarget: void maybeAddAttachStateListener()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: void reset()
com.bumptech.glide.load.data.StreamLocalUriFetcher: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)
com.google.android.exoplayer2.metadata.id3.InternalFrame: InternalFrame(java.lang.String,java.lang.String,java.lang.String)
com.danikula.videocache.file.TotalSizeLruDiskUsage: TotalSizeLruDiskUsage(long)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.recyclerview.widget.GridLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean expandActionView()
androidx.appcompat.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean)
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.source.dash.DashChunkSource$Factory,com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.GridLayoutManager: void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void onTransferInitializing(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher: java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver)
androidx.appcompat.app.WindowDecorActionBar$3: WindowDecorActionBar$3(androidx.appcompat.app.WindowDecorActionBar)
androidx.recyclerview.widget.RecyclerView: boolean hasNestedScrollingParent()
org.slf4j.event.EventRecodingLogger: void info(java.lang.String)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueTitleChanged(java.lang.CharSequence)
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom getContainerAtomOfType(int)
com.google.android.exoplayer2.extractor.ts.Ac4Reader: void parseHeader()
androidx.appcompat.app.AlertController$4: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.savedstate.Recreator: void reflectiveNew(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable getFallbackDrawable()
androidx.core.widget.NestedScrollView: int computeVerticalScrollRange()
cn.jzvd.demo.CustomMedia.JZMediaExo: void release()
androidx.cursoradapter.widget.CursorAdapter: CursorAdapter(android.content.Context,android.database.Cursor,boolean)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: Id3Decoder(com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onQueueChanged(java.util.List)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData$1: java.lang.Object[] newArray(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setDuration(long)
com.bumptech.glide.RequestManager: void pauseRequests()
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties: RecyclerView$LayoutManager$Properties()
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.util.Map$Entry next()
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.trackselection.TrackSelectorResult getTrackSelectorResult()
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: java.lang.Appendable append(char)
com.google.android.exoplayer2.ExoPlayerImplInternal: long getTotalBufferedDurationUs()
androidx.appcompat.view.menu.ListMenuPresenter: boolean flagActionItems()
com.bumptech.glide.util.ContentLengthInputStream: int read()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean shouldDropOutputBuffer(long,long,boolean)
androidx.core.widget.NestedScrollView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.app.ActivityCompat: void finishAffinity(android.app.Activity)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: AccessibilityNodeInfoCompat(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.exoplayer2.SimpleExoPlayer: void access$1500(com.google.android.exoplayer2.SimpleExoPlayer,int,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void handleMessage(int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onPlaylistChanged()
tv.danmaku.ijk.media.player.misc.IMediaDataSource: int readAt(long,byte[],int,int)
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3: void handle(java.lang.Throwable)
com.google.android.exoplayer2.text.ssa.SsaStyle: boolean isValidAlignment(int)
androidx.appcompat.widget.DrawableUtils: void fixDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertDialog: android.widget.ListView getListView()
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent)
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: DefaultAudioSink$DefaultAudioProcessorChain(com.google.android.exoplayer2.audio.AudioProcessor[])
cn.jzvd.JZTextureView: void setRotation(float)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void processOutputFormat()
com.bumptech.glide.load.resource.bitmap.CenterCrop: android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isSeamlessAdaptationSupported(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format,boolean)
com.google.android.exoplayer2.source.hls.DefaultHlsDataSourceFactory: DefaultHlsDataSourceFactory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.bumptech.glide.load.model.Headers$1: java.util.Map getHeaders()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollOffset()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onStopped()
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.view.menu.CascadingMenuPopup$1: CascadingMenuPopup$1(androidx.appcompat.view.menu.CascadingMenuPopup)
com.google.android.exoplayer2.metadata.id3.GeobFrame$1: GeobFrame$1()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: void onTimelineChanged(com.google.android.exoplayer2.Timeline)
androidx.core.view.NestedScrollingChildHelper: boolean startNestedScroll(int)
androidx.exifinterface.media.ExifInterface: boolean isSeekableFD(java.io.FileDescriptor)
com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler: void onCacheAvailable(java.io.File,java.lang.String,int)
com.bumptech.glide.request.ErrorRequestCoordinator: com.bumptech.glide.request.RequestCoordinator getRoot()
com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key)
androidx.appcompat.view.menu.MenuItemImpl: void appendModifier(java.lang.StringBuilder,int,int,java.lang.String)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.util.Util: java.lang.String fromUtf8Bytes(byte[])
com.google.android.exoplayer2.ExoPlayerImpl: int getCurrentPeriodIndex()
androidx.collection.MapCollections$ArrayIterator: void remove()
androidx.fragment.app.Fragment: void performStop()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback)
com.bumptech.glide.request.BaseRequestOptions: boolean isMemoryCacheable()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)
com.bumptech.glide.util.Executors$2: Executors$2()
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23: MediaCodecVideoRenderer$OnFrameRenderedListenerV23(com.google.android.exoplayer2.video.MediaCodecVideoRenderer,android.media.MediaCodec)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getFileSize()
androidx.arch.core.internal.SafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder: com.google.android.exoplayer2.metadata.emsg.EventMessage decode(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.video.ColorInfo$1: com.google.android.exoplayer2.video.ColorInfo[] newArray(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void releaseCodec()
androidx.appcompat.app.AlertController$RecycleListView: void setHasDecor(boolean,boolean)
com.google.android.exoplayer2.upstream.DefaultAllocator: void release(com.google.android.exoplayer2.upstream.Allocation[])
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions: MemorySizeCalculator$DisplayMetricsScreenDimensions(android.util.DisplayMetrics)
com.google.android.exoplayer2.decoder.SimpleDecoder: void maybeThrowException()
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.PlayerMessage setType(int)
androidx.collection.ArraySet: boolean removeAll(java.util.Collection)
androidx.fragment.app.Fragment: android.content.Context getContext()
cn.jzvd.JZUtils: android.view.Window getWindow(android.content.Context)
androidx.appcompat.widget.AppCompatButton: void setTextSize(int,float)
com.google.android.exoplayer2.ExoPlayerImplInternal: android.util.Pair resolveSeekPosition(com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition,boolean)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int)
com.bumptech.glide.request.RequestCoordinator$RequestState: <clinit>()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void processCurrentPacket()
com.google.android.exoplayer2.Timeline$Period: Timeline$Period()
com.google.android.exoplayer2.text.ssa.SsaDecoder: float computeDefaultLineOrPosition(int)
androidx.core.app.BundleCompat: android.os.IBinder getBinder(android.os.Bundle,java.lang.String)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToPauseClear()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType[] values()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.appcompat.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)
com.google.android.exoplayer2.text.TextRenderer: int supportsFormat(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.util.ParsableByteArray: ParsableByteArray()
tv.danmaku.ijk.media.player.IjkMediaMeta: tv.danmaku.ijk.media.player.IjkMediaMeta parse(android.os.Bundle)
com.google.android.exoplayer2.trackselection.TrackSelection: void onDiscontinuity()
com.google.android.exoplayer2.extractor.ts.Ac3Reader: void parseHeader()
androidx.appcompat.widget.ListPopupWindow: void dismiss()
androidx.recyclerview.widget.RecyclerView: boolean didChildRangeChange(int,int)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: void skipToPageOfTargetGranule(com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener: void onVideoSizeChanged(tv.danmaku.ijk.media.player.IMediaPlayer,int,int,int,int)
androidx.core.widget.NestedScrollView: void fling(int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: int parseSelectionFlags(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onPlayerError(com.google.android.exoplayer2.ExoPlaybackException)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: int read(byte[],int,int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: AppCompatDelegateImpl$PanelFeatureState(int)
com.bumptech.glide.load.engine.Engine: Engine(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean)
androidx.activity.OnBackPressedCallback: void setEnabled(boolean)
androidx.fragment.app.Fragment: void onDetach()
com.bumptech.glide.load.resource.bitmap.VideoDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.BinarySearchSeeker: com.google.android.exoplayer2.extractor.SeekMap getSeekMap()
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: MdtaMetadataEntry(android.os.Parcel,com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry$1)
androidx.appcompat.widget.AppCompatBackgroundHelper: void applySupportBackgroundTint()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setHorizontalOffset(int)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.appcompat.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)
androidx.recyclerview.widget.GridLayoutManager: void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult)
com.google.android.exoplayer2.metadata.id3.GeobFrame: GeobFrame(java.lang.String,java.lang.String,java.lang.String,byte[])
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void draw(android.graphics.Canvas)
com.bumptech.glide.load.resource.gif.GifDrawable: GifDrawable(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap)
androidx.viewpager.widget.ViewPager$SavedState$1: ViewPager$SavedState$1()
com.bumptech.glide.disklrucache.StrictLineReader$1: java.lang.String toString()
com.danikula.videocache.HttpProxyCacheServer: int getClientsCount()
com.bumptech.glide.load.engine.GlideException: void appendCauses(java.util.List,java.lang.Appendable)
androidx.appcompat.widget.ForwardingListener: boolean onTouchForwarded(android.view.MotionEvent)
com.google.android.exoplayer2.extractor.wav.WavSeekMap: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean performAction(int,android.os.Bundle)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: int readNextSampleSize()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean notifyPlaylistError(android.net.Uri,long)
androidx.fragment.app.FragmentManagerImpl: void dispatchLowMemory()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char)
com.bumptech.glide.load.engine.DiskCacheStrategy$2: boolean decodeCachedResource()
com.bumptech.glide.load.data.HttpUrlFetcher: int getHttpStatusCodeOrInvalid(java.net.HttpURLConnection)
androidx.appcompat.view.menu.ListMenuItemView: void onFinishInflate()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onTimelineChanged(com.google.android.exoplayer2.Timeline,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean transitionHasReversibleFlag(int,int)
com.bumptech.glide.util.pool.GlideTrace: void endSection()
com.danikula.videocache.HttpProxyCacheServer: java.lang.String getProxyUrl(java.lang.String,boolean)
androidx.core.widget.AutoScrollHelper$ClampedScroller: float interpolateValue(float)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment)
androidx.recyclerview.widget.RecyclerView: void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean)
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: void cancel()
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ClassesInfoCache: <clinit>()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean isLevel1Element(int)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.lang.Boolean readAmfBoolean(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
androidx.appcompat.view.menu.MenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
androidx.lifecycle.LiveData: void onInactive()
androidx.core.view.MenuItemCompat: void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.google.android.exoplayer2.AudioFocusManager$AudioFocusListener: void onAudioFocusChange(int)
androidx.lifecycle.ReportFragment: void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$402(tv.danmaku.ijk.media.player.IjkMediaPlayer,int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnPreparedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getVideoDecoder()
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String getDataSource()
com.bumptech.glide.provider.EncoderRegistry$Entry: EncoderRegistry$Entry(java.lang.Class,com.bumptech.glide.load.Encoder)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.TooltipCompatHandler: void onViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: <clinit>()
com.google.android.exoplayer2.upstream.RawResourceDataSource: RawResourceDataSource(android.content.Context)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: java.lang.Object get()
com.bumptech.glide.Registry: java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.collection.ArrayMap: ArrayMap(int)
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver: void onReceiveResult(int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.exoplayer2.audio.Sonic: boolean previousPeriodBetter(int,int)
androidx.core.graphics.TypefaceCompatApi24Impl: TypefaceCompatApi24Impl()
com.google.android.exoplayer2.Format: java.lang.String toString()
androidx.core.provider.FontRequest: int getCertificatesArrayResId()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String)
com.bumptech.glide.provider.LoadPathCache: com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class)
com.bumptech.glide.load.data.ExifOrientationStream: void mark(int)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
com.google.android.exoplayer2.extractor.ts.SeiReader: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray)
androidx.collection.ArraySet: androidx.collection.MapCollections getCollection()
androidx.appcompat.app.AlertController: void setupButtons(android.view.ViewGroup)
com.bumptech.glide.load.resource.gif.GifFrameLoader: java.nio.ByteBuffer getBuffer()
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void parseBitmapSection(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.util.EGLSurfaceTexture: void init(int)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool: LruArrayPool$KeyPool()
androidx.activity.OnBackPressedCallback: boolean isEnabled()
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.TrackGroup getTrackGroup()
cn.jzvd.demo.ActivityApiOrientation: ActivityApiOrientation()
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: void onTimedText(android.media.MediaPlayer,android.media.TimedText)
androidx.core.view.NestedScrollingParentHelper: void onStopNestedScroll(android.view.View,int)
androidx.appcompat.app.AppCompatDelegateImpl: void invalidatePanelMenu(int)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onMetadataChanged(android.support.v4.media.MediaMetadataCompat)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getResourceId()
androidx.core.view.ViewCompat: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumHeight()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: double[][] getSwitchPoints(double[][])
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: FontResourcesParserCompat$ProviderResourceEntry(androidx.core.provider.FontRequest,int,int)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnErrorListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: void trimMemory(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.mp4.Atom: int parseFullAtomFlags(int)
com.google.android.exoplayer2.util.NalUnitUtil: int getH265NalUnitType(byte[],int)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: int describeContents()
com.google.android.exoplayer2.source.TrackGroup: int indexOf(com.google.android.exoplayer2.Format)
androidx.core.view.ViewParentCompat: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int)
com.bumptech.glide.manager.RequestManagerRetriever$1: RequestManagerRetriever$1()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.util.ParsableByteArray: int readLittleEndianInt()
com.google.android.exoplayer2.upstream.AssetDataSource: void close()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationCancel(android.view.View)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: FlacReader$FlacOggSeeker(com.google.android.exoplayer2.extractor.ogg.FlacReader)
com.google.android.exoplayer2.source.ClippingMediaPeriod: void onContinueLoadingRequested(com.google.android.exoplayer2.source.SequenceableLoader)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onClick(android.view.View)
com.google.android.exoplayer2.extractor.ts.H265Reader: void skipScalingList(com.google.android.exoplayer2.util.ParsableNalUnitBitArray)
com.google.android.exoplayer2.util.MimeTypes: java.lang.String getMimeTypeFromMp4ObjectType(int)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: AppCompatDelegateImpl$AutoTimeNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager)
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: android.graphics.Bitmap getResource()
com.google.android.exoplayer2.mediacodec.MediaCodecSelector$1: java.util.List getDecoderInfos(java.lang.String,boolean,boolean)
androidx.appcompat.widget.ViewStubCompat: void draw(android.graphics.Canvas)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean getPadding(android.graphics.Rect)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: MediaCodecRenderer$DecoderInitializationException(com.google.android.exoplayer2.Format,java.lang.Throwable,boolean,int)
com.google.android.exoplayer2.extractor.ts.TsUtil: long readPcrFromPacket(com.google.android.exoplayer2.util.ParsableByteArray,int,int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int numOutputFramesToBytes(int)
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher: void close(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader: int read(byte[],int)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int)
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
androidx.recyclerview.widget.RecyclerView$ItemAnimator: int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _release()
androidx.collection.MapCollections$ValuesCollection: int size()
androidx.fragment.app.FragmentTransition$4: FragmentTransition$4(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: SafeKeyGenerator$1(com.bumptech.glide.load.engine.cache.SafeKeyGenerator)
com.google.android.exoplayer2.util.ParsableBitArray: void reset(byte[])
androidx.appcompat.widget.ActionBarContainer: void onMeasure(int,int)
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter: void registerSelf(android.app.Activity)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.Format deriveFormat(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format,boolean)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int)
com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder: FlacFrameReader$SampleNumberHolder()
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setAlpha(int)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: boolean hasUnplayedAds()
com.google.android.exoplayer2.util.ParsableByteArray: int readInt()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void onLoadCanceled(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,boolean)
cn.jzvd.demo.FragmentDemo: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
com.google.android.exoplayer2.AudioFocusManager: void abandonAudioFocusV26()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context)
com.bumptech.glide.manager.RequestManagerFragment: java.util.Set getDescendantRequestManagerFragments()
androidx.core.provider.SelfDestructiveThread$2$1: SelfDestructiveThread$2$1(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object)
com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties: java.util.Map getSnapshot()
androidx.appcompat.widget.AppCompatRatingBar: AppCompatRatingBar(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.util.pool.StateVerifier getVerifier()
com.danikula.videocache.HttpProxyCacheServer: HttpProxyCacheServer(android.content.Context)
com.google.android.exoplayer2.upstream.Loader: void cancelLoading()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.source.chunk.Chunk: android.net.Uri getUri()
com.bumptech.glide.TransitionOptions: java.lang.Object clone()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets)
com.google.android.exoplayer2.metadata.Metadata$1: Metadata$1()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
cn.jzvd.JZUtils: int dip2px(android.content.Context,float)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(androidx.recyclerview.widget.LinearLayoutManager$SavedState)
com.google.android.exoplayer2.metadata.id3.GeobFrame: <clinit>()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: DefaultTrackSelector$SelectionOverride(int,int[],int,int)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void findHeader(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(int)
com.google.android.exoplayer2.upstream.Loader$LoadTask: void cancel(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getFirstChildPosition()
androidx.recyclerview.widget.GapWorker$Task: void clear()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: <clinit>()
com.danikula.videocache.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleSetWindowAttributes()
cn.jzvd.JzvdStd: void changeUrl(int,long)
androidx.fragment.app.FragmentViewLifecycleOwner: FragmentViewLifecycleOwner()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void onPlaylistUpdated(android.net.Uri,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: ActivityRecreator$LifecycleCheckCallbacks(android.app.Activity)
com.google.android.exoplayer2.util.Util: long subtractWithOverflowDefault(long,long,long)
com.bumptech.glide.load.engine.SourceGenerator: void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource)
androidx.appcompat.widget.TooltipCompatHandler: boolean onLongClick(android.view.View)
org.slf4j.helpers.FormattingTuple: java.lang.Throwable getThrowable()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: android.graphics.drawable.Drawable getCurrent()
com.google.android.exoplayer2.source.chunk.Chunk: java.util.Map getResponseHeaders()
com.bumptech.glide.gifdecoder.GifHeaderParser: void readContents(int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder: UnitDrawableDecoder()
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: boolean isSeekable()
com.google.android.exoplayer2.upstream.DefaultAllocator: com.google.android.exoplayer2.upstream.Allocation allocate()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int getActions()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.appcompat.view.menu.ListMenuItemView: boolean prefersCondensedTitle()
com.bumptech.glide.load.resource.gif.GifDrawableResource: void initialize()
com.bumptech.glide.load.resource.bitmap.FitCenter: <clinit>()
com.bumptech.glide.disklrucache.DiskLruCache$Value: DiskLruCache$Value(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[])
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean maybeRequiresSecureDecoder(com.google.android.exoplayer2.drm.DrmSession,com.google.android.exoplayer2.Format)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean onStateChange(int[])
androidx.fragment.app.FragmentManagerImpl: void addBackStackState(androidx.fragment.app.BackStackRecord)
androidx.appcompat.widget.Toolbar: int getVerticalMargins(android.view.View)
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean onFailed()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride$1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride createFromParcel(android.os.Parcel)
androidx.exifinterface.media.ExifInterface$ExifTag: boolean isFormatCompatible(int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions)
com.google.android.exoplayer2.extractor.SeekPoint: java.lang.String toString()
android.support.v4.media.session.PlaybackStateCompatApi21: long getActions(java.lang.Object)
com.bumptech.glide.module.AppGlideModule: void applyOptions(android.content.Context,com.bumptech.glide.GlideBuilder)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicWidth()
androidx.fragment.app.FragmentTransitionCompat21: void addTarget(java.lang.Object,android.view.View)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.app.AppCompatDelegate getDelegate()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand$1: com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationEnd(android.view.View)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: QMediaStoreUriLoader$QMediaStoreUriFetcher(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.net.Uri,int,int,com.bumptech.glide.load.Options,java.lang.Class)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void setStyle(int,boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onVideoDecoderInitialized(java.lang.String,long,long)
com.google.android.exoplayer2.text.ttml.TtmlNode: void traverseForText(long,boolean,java.lang.String,java.util.Map)
androidx.core.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)
com.google.android.exoplayer2.source.MediaSourceEventListener: void onMediaPeriodReleased(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.recyclerview.widget.RecyclerView: android.view.View focusSearch(android.view.View,int)
androidx.appcompat.widget.MenuPopupWindow: void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
com.bumptech.glide.load.engine.ActiveResources: void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference)
com.google.android.exoplayer2.extractor.flv.TagPayloadReader$UnsupportedFormatException: TagPayloadReader$UnsupportedFormatException(java.lang.String)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.app.TwilightCalculator: androidx.appcompat.app.TwilightCalculator getInstance()
com.google.android.exoplayer2.extractor.wav.WavExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.google.android.exoplayer2.util.ParsableByteArray: int limit()
com.bumptech.glide.load.engine.GlideException$IndentedAppendable: java.lang.Appendable append(java.lang.CharSequence,int,int)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: void resetFlags()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setWrappedDrawable(android.graphics.drawable.Drawable)
androidx.core.view.MenuItemCompat: void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onStopped()
com.bumptech.glide.gifdecoder.GifHeaderParser: void reset()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setDither(boolean)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: EngineJob$ResourceCallbacksAndExecutors()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getChangingConfigurations()
androidx.core.provider.SelfDestructiveThread$1: SelfDestructiveThread$1(androidx.core.provider.SelfDestructiveThread)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.ViewModelStore getViewModelStore()
com.google.android.exoplayer2.metadata.id3.BinaryFrame: BinaryFrame(java.lang.String,byte[])
androidx.recyclerview.widget.OrientationHelper: OrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.exoplayer2.metadata.MetadataRenderer: void onStreamChanged(com.google.android.exoplayer2.Format[],long)
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: FlacBinarySearchSeeker$FlacTimestampSeeker(com.google.android.exoplayer2.util.FlacStreamMetadata,int)
com.google.android.exoplayer2.audio.Sonic: void adjustRate(float,int)
androidx.core.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)
com.bumptech.glide.load.resource.gif.GifDrawable: void startRunning()
com.google.android.exoplayer2.source.SinglePeriodTimeline: SinglePeriodTimeline(long,long,long,long,boolean,boolean,boolean,java.lang.Object,java.lang.Object)
com.bumptech.glide.load.model.ModelLoader$LoadData: ModelLoader$LoadData(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher)
com.google.android.exoplayer2.ExoPlayerImplInternal: void onContinueLoadingRequested(com.google.android.exoplayer2.source.SequenceableLoader)
androidx.core.provider.FontsContractCompat: <clinit>()
com.google.android.exoplayer2.extractor.ts.PsDurationReader: int readLastScrValue(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean)
com.bumptech.glide.util.pool.FactoryPools: <clinit>()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.FragmentController: boolean execPendingActions()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: TrackSelectionParameters$Builder()
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: NalUnitTargetBuffer(int,int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long access$1200(com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap)
cn.jzvd.Jzvd: void setScreenTiny()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(java.io.FileDescriptor)
com.google.android.exoplayer2.text.cea.Cea608Decoder: Cea608Decoder(java.lang.String,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
androidx.core.provider.FontsContractCompat$5: FontsContractCompat$5()
androidx.appcompat.widget.AppCompatTextClassifierHelper: AppCompatTextClassifierHelper(android.widget.TextView)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution parseCellResolution(org.xmlpull.v1.XmlPullParser,com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setSurface(android.view.Surface)
androidx.core.provider.FontsContractCompat$TypefaceResult: FontsContractCompat$TypefaceResult(android.graphics.Typeface,int)
com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: void skipToTagHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: long getBitrateEstimate()
androidx.appcompat.widget.Toolbar: void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter)
com.bumptech.glide.disklrucache.Util: void deleteContents(java.io.File)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.fragment.app.Fragment: boolean getRetainInstance()
org.slf4j.event.SubstituteLoggingEvent: void setThrowable(java.lang.Throwable)
com.google.android.exoplayer2.source.SampleQueue: void setUpstreamFormatChangeListener(com.google.android.exoplayer2.source.SampleQueue$UpstreamFormatChangedListener)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: byte[] buildNalUnit(byte[],int,int)
androidx.appcompat.widget.Toolbar: void addChildrenForExpandedActionView()
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat: int getInteger(java.lang.String)
androidx.appcompat.view.menu.StandardMenuPopup: void dismiss()
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result buildResultForSameExtractorType(com.google.android.exoplayer2.extractor.Extractor,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.util.TimestampAdjuster)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
androidx.appcompat.widget.ListPopupWindow: boolean isInputMethodNotNeeded()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: TrackSelectionParameters(android.os.Parcel)
com.google.android.exoplayer2.Timeline: boolean isLastPeriod(int,com.google.android.exoplayer2.Timeline$Period,com.google.android.exoplayer2.Timeline$Window,int,boolean)
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate: ResourceManagerInternal$AsldcInflateDelegate()
androidx.fragment.app.BackStackRecord: int commitAllowingStateLoss()
com.bumptech.glide.load.model.StreamEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)
androidx.collection.SimpleArrayMap: int indexOf(java.lang.Object,int)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void setItalicSpan(android.text.SpannableStringBuilder,int,int)
androidx.core.view.ViewCompat: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
com.google.android.exoplayer2.text.ttml.TtmlNode: com.google.android.exoplayer2.text.ttml.TtmlNode buildNode(java.lang.String,long,long,com.google.android.exoplayer2.text.ttml.TtmlStyle,java.lang.String[],java.lang.String,java.lang.String)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: android.media.MediaPlayer getInternalMediaPlayer()
com.google.android.exoplayer2.source.hls.Aes128DataSource: Aes128DataSource(com.google.android.exoplayer2.upstream.DataSource,byte[],byte[])
com.bumptech.glide.load.engine.ResourceCacheGenerator: boolean hasNextModelLoader()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedShort()
cn.jzvd.demo.ActivityListViewNormal: void onResume()
androidx.appcompat.view.SupportActionModeWrapper: void invalidate()
com.bumptech.glide.load.engine.DecodeJob: boolean willDecodeFromCache()
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.bumptech.glide.load.model.ModelCache$ModelKey: boolean equals(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.view.menu.CascadingMenuPopup: CascadingMenuPopup(android.content.Context,android.view.View,int,int,boolean)
com.google.android.exoplayer2.DefaultMediaClock: long getPositionUs()
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean hasReadingPeriodFinishedReading()
androidx.appcompat.widget.ActionBarOverlayLayout$2: void run()
com.bumptech.glide.disklrucache.DiskLruCache$1: java.lang.Void call()
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: java.util.concurrent.locks.Condition newCondition()
com.google.android.exoplayer2.ui.R$styleable: <clinit>()
androidx.appcompat.view.menu.SubMenuBuilder: void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback)
com.danikula.videocache.ProxyCache: void onError(java.lang.Throwable)
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.Priority getPriority()
com.danikula.videocache.HttpProxyCacheServer: void access$200(com.danikula.videocache.HttpProxyCacheServer,java.net.Socket)
com.google.android.exoplayer2.upstream.ContentDataSource: int read(byte[],int,int)
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getUdpDataSource()
androidx.core.provider.FontsContractCompat$1: java.lang.Object call()
androidx.appcompat.widget.SearchView: void onSubmitQuery()
androidx.collection.MapCollections$KeySet: boolean containsAll(java.util.Collection)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence,java.lang.Class)
com.google.android.exoplayer2.metadata.flac.VorbisComment: VorbisComment(java.lang.String,java.lang.String)
androidx.core.view.ViewCompat: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
com.google.android.exoplayer2.source.EmptySampleStream: EmptySampleStream()
androidx.collection.MapCollections$MapIterator: java.util.Map$Entry next()
com.google.android.exoplayer2.util.Util: java.lang.String getTrackTypeString(int)
com.bumptech.glide.load.resource.bitmap.BitmapResource: java.lang.Object get()
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.bumptech.glide.load.engine.GlideException: void printStackTrace(java.io.PrintWriter)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean access$100(com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData,com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: void doFrame(long)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: ActionMenuItemView$ActionMenuItemForwardingListener(androidx.appcompat.view.menu.ActionMenuItemView)
com.google.android.exoplayer2.util.SystemHandlerWrapper: void removeMessages(int)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean closeMenuOnSubMenuOpened()
androidx.collection.SimpleArrayMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
androidx.lifecycle.FullLifecycleObserverAdapter: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setDataSource(java.io.FileDescriptor)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.appcompat.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty()
com.google.android.exoplayer2.MediaPeriodHolder: boolean isFullyBuffered()
com.google.android.exoplayer2.extractor.ts.H264Reader: void nalUnitData(byte[],int,int)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.core.graphics.TypefaceCompatApi26Impl: boolean isFontFamilyPrivateAPIAvailable()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setRepeatMode(int)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: void reset()
androidx.viewpager.widget.ViewPager$PagerObserver: void onChanged()
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: int findEndOfTag(java.lang.String,int)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int getIndexInTrackGroup(int)
tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener: void onSeekComplete(tv.danmaku.ijk.media.player.IMediaPlayer)
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: <clinit>()
androidx.fragment.app.FragmentManagerImpl: boolean checkForMenus()
com.danikula.videocache.Preconditions: void checkArgument(boolean)
androidx.appcompat.view.menu.MenuBuilder: boolean getOptionalIconsVisible()
com.google.android.exoplayer2.metadata.icy.IcyHeaders$1: IcyHeaders$1()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void applyEntity(java.lang.String,android.text.SpannableStringBuilder)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: Ac4Extractor()
com.google.android.exoplayer2.extractor.ogg.OpusReader: void putNativeOrderLong(java.util.List,int)
com.google.android.exoplayer2.text.dvb.DvbParser: void reset()
com.google.android.exoplayer2.source.MediaSourceEventListener: void onLoadStarted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem)
androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi17: void generateConfigDelta_densityDpi(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.bumptech.glide.load.model.LazyHeaders: LazyHeaders(java.util.Map)
com.bumptech.glide.RequestManager: RequestManager(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context)
org.slf4j.helpers.NOPLogger: <clinit>()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void onLoadCompleted(com.google.android.exoplayer2.upstream.ParsingLoadable,long,long)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: java.lang.String toString()
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaOutputBuffer: CeaDecoder$CeaOutputBuffer(com.google.android.exoplayer2.text.cea.CeaDecoder)
androidx.appcompat.widget.SearchView: void onActionViewCollapsed()
com.google.android.exoplayer2.extractor.wav.WavHeader: WavHeader(int,int,int,int,int,int,byte[])
com.google.android.exoplayer2.metadata.id3.ChapterFrame: int hashCode()
com.google.android.exoplayer2.text.ssa.SsaDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
androidx.fragment.app.FragmentManagerImpl: void updateOnBackPressedCallbackEnabled()
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler: void post(int,java.lang.Object,boolean)
com.bumptech.glide.load.engine.LockedResource$1: com.bumptech.glide.load.engine.LockedResource create()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
androidx.appcompat.widget.TintResources: TintResources(android.content.Context,android.content.res.Resources)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _reset()
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: boolean handles(java.io.InputStream,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: void writeSampleMetadata(int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTint(int)
androidx.core.widget.ImageViewCompat: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.google.android.exoplayer2.metadata.icy.IcyInfo: <clinit>()
androidx.loader.app.LoaderManagerImpl: java.lang.String toString()
org.slf4j.event.EventRecodingLogger: void warn(java.lang.String)
com.google.android.exoplayer2.extractor.ts.PesReader: boolean parseHeader()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureTwice()
com.google.android.exoplayer2.extractor.FlacMetadataReader: int getFrameStartMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()
cn.jzvd.demo.ActivityListViewMultiHolder: void onBackPressed()
com.google.android.exoplayer2.drm.ErrorStateDrmSession: void acquire()
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: java.lang.String toString()
com.google.android.exoplayer2.BasePlayer: void seekTo(long)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void jumpToCurrentState()
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy: void close()
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: int hashCode()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
com.google.android.exoplayer2.MediaPeriodHolder: void enableTrackSelectionsInResult()
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor()
com.google.android.exoplayer2.drm.DrmSessionManager: void prepare()
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: void onConnectivityChanged(boolean)
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist copy(java.util.List)
androidx.appcompat.widget.DropDownListView: void clearPressedItem()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getVariationSettings()
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: com.bumptech.glide.load.ImageHeaderParser$ImageType getImageType()
com.bumptech.glide.GlideExperiments$Builder: java.util.Map access$000(com.bumptech.glide.GlideExperiments$Builder)
androidx.appcompat.widget.ActionMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.fragment.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)
com.bumptech.glide.request.target.ImageViewTarget: void onStart()
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void access$000(com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder,com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.TextInformationFrame parseStandardGenreAttribute(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long access$400(com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)
com.google.android.exoplayer2.text.ttml.TtmlStyle: int getStyle()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: LruBitmapPool(long)
com.danikula.videocache.HttpUrlSource: void open(long)
androidx.appcompat.widget.Toolbar: int getViewListMeasuredWidth(java.util.List,int[])
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray)
androidx.appcompat.widget.ListPopupWindow: boolean isShowing()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestSimpleAnimationsInNextLayout()
com.google.android.exoplayer2.audio.Sonic: int skipPitchPeriod(short[],int,float,int)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: void seek(long,long)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onSessionDestroyed()
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.text.cea.Cea608Decoder: <clinit>()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readUnsignedByte()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory access$300(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setKeepInBackground(boolean)
cn.jzvd.demo.ActivityListViewRecyclerView: void onBackPressed()
androidx.appcompat.widget.ActionBarOverlayLayout$1: ActionBarOverlayLayout$1(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.appcompat.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.GlideExperiments$Builder: com.bumptech.glide.GlideExperiments build()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int readData(int,com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setWakeMode(android.content.Context,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: long parseMvhd(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.AppCompatSpinner$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.google.android.exoplayer2.text.webvtt.CssParser: void parseStyleDeclaration(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.text.webvtt.WebvttCssStyle,java.lang.StringBuilder)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: int getApplyableNightMode()
androidx.fragment.app.FragmentTransition: java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.text.cea.Cea708Decoder: boolean isNewSubtitleDataAvailable()
androidx.appcompat.widget.Toolbar: int getHorizontalMargins(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: <clinit>()
androidx.savedstate.SavedStateRegistry$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.viewpager.widget.ViewPager: void onMeasure(int,int)
com.bumptech.glide.load.engine.GlideException: GlideException(java.lang.String,java.lang.Throwable)
androidx.collection.SparseArrayCompat: java.lang.String toString()
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: boolean canReuseAudioTrack(com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration)
com.google.android.exoplayer2.Timeline$Period: long getPositionInWindowUs()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header decodeHeader(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet access$1300(com.google.android.exoplayer2.SimpleExoPlayer)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onExtrasChanged(android.os.Bundle)
androidx.appcompat.app.AppCompatDialog$1: AppCompatDialog$1(androidx.appcompat.app.AppCompatDialog)
androidx.recyclerview.widget.LayoutState: boolean hasMore(androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int fillbuf(java.io.InputStream,byte[])
androidx.versionedparcelable.VersionedParcel: void setSerializationFlags(boolean,boolean)
com.google.android.exoplayer2.drm.DrmInitData$1: java.lang.Object[] newArray(int)
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSeeker: void onSeekFinished()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void maybeSetPrimaryUrl(android.net.Uri)
androidx.appcompat.widget.SearchView: void setInputType(int)
com.google.android.exoplayer2.audio.AudioSink$WriteException: AudioSink$WriteException(int)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat translationY(float)
com.bumptech.glide.load.resource.bytes.BytesResource: java.lang.Object get()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long getBufferedPositionUs()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.ApicFrame parseCoverArt(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeThrowPrepareError()
android.support.v4.media.MediaDescriptionCompat: void writeToParcel(android.os.Parcel,int)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
androidx.exifinterface.media.ExifInterface: void readImageFileDirectory(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: void reset(boolean)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.extractor.DefaultExtractorInput prepareExtraction(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance()
com.bumptech.glide.Registry: com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: int countArrayElements(double[][])
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: void writeToParcel(android.os.Parcel)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAllRemainingSpans(int,int)
com.google.android.exoplayer2.source.MediaSourceEventListener: void onLoadError(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData,java.io.IOException,boolean)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: boolean boundsMatch()
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceEntryName(int)
androidx.appcompat.view.menu.CascadingMenuPopup: androidx.appcompat.widget.MenuPopupWindow createPopupWindow()
androidx.appcompat.widget.SearchView$SavedState$1: androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel)
com.bumptech.glide.util.MarkEnforcingInputStream: int read(byte[],int,int)
androidx.core.view.ActionProvider: ActionProvider(android.content.Context)
androidx.appcompat.widget.TintTypedArray: float getFloat(int,float)
com.bumptech.glide.gifdecoder.GifHeaderParser: int[] readColorTable(int)
androidx.core.widget.NestedScrollView: int getScrollRange()
com.bumptech.glide.load.engine.DecodeJob: void runWrapped()
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean isAdtsSyncBytes(byte,byte)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: com.google.android.exoplayer2.extractor.SeekMap buildSeekMap()
com.bumptech.glide.RequestManager: void clear(com.bumptech.glide.request.target.Target)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: void release()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void notifyOnBufferingUpdate(int)
androidx.core.view.ViewCompat: void setTransitionName(android.view.View,java.lang.String)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void autoFullscreen(float)
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnNativeInvokeListener: boolean onNativeInvoke(int,android.os.Bundle)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: float computeLine(float,int)
com.bumptech.glide.provider.EncoderRegistry: com.bumptech.glide.load.Encoder getEncoder(java.lang.Class)
androidx.lifecycle.LifecycleRegistry: LifecycleRegistry(androidx.lifecycle.LifecycleOwner)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeStepGranularity()
androidx.appcompat.view.SupportActionModeWrapper: void setTag(java.lang.Object)
org.slf4j.helpers.MessageFormatter: void shortArrayAppend(java.lang.StringBuilder,short[])
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void packetStarted(long,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getOpacity()
androidx.versionedparcelable.VersionedParcelParcel: void writeByteArray(byte[])
androidx.appcompat.app.WindowDecorActionBar: <clinit>()
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: MediaStoreVideoThumbLoader(android.content.Context)
androidx.appcompat.widget.RtlSpacingHelper: int getEnd()
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getMediaPeriodInfo(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.exoplayer2.text.cea.Cea608Decoder: void setPositionUs(long)
androidx.core.widget.AutoScrollHelper: AutoScrollHelper(android.view.View)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions optionalCenterCrop()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(java.lang.CharSequence)
com.google.android.exoplayer2.Player$EventListener: void onPlaybackSuppressionReasonChanged(int)
com.bumptech.glide.load.engine.DiskCacheStrategy$5: boolean decodeCachedData()
com.google.android.exoplayer2.source.SampleDataQueue: void advanceReadTo(long)
androidx.recyclerview.widget.OrientationHelper: int getTotalSpaceChange()
androidx.core.widget.NestedScrollView: void runAnimatedScroll(boolean)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside: float getScaleFactor(int,int,int,int)
com.bumptech.glide.util.ExceptionPassthroughInputStream: void setInputStream(java.io.InputStream)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()
com.bumptech.glide.gifdecoder.StandardGifDecoder: void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void appendToSpan(android.view.View)
com.bumptech.glide.load.engine.DecodeHelper: java.lang.Class getModelClass()
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void droppedFrames(int,long)
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: CameraMotionRenderer()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
com.google.android.exoplayer2.text.webvtt.CssParser: void skipWhitespaceAndComments(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources)
com.bumptech.glide.load.data.BufferedOutputStream: void flushBuffer()
androidx.appcompat.widget.ActionMenuPresenter: ActionMenuPresenter(android.content.Context)
androidx.lifecycle.LifecycleRegistry$1: <clinit>()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.danikula.videocache.ProxyCacheUtils: <clinit>()
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Paint getPaint()
com.google.android.exoplayer2.extractor.ts.SectionReader: void init(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.bumptech.glide.load.resource.bitmap.BitmapResource: BitmapResource(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
androidx.recyclerview.widget.RecyclerView: void repositionShadowingViews()
com.bumptech.glide.Registry: com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource)
androidx.appcompat.widget.AppCompatTextHelper: void setTextSizeInternal(int,float)
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache$1: FullSegmentEncryptionKeyCache$1(com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache,int,float,boolean,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void createBundles(java.util.List)
androidx.appcompat.app.AlertController: void setView(int)
androidx.fragment.app.Fragment: boolean performOptionsItemSelected(android.view.MenuItem)
androidx.appcompat.widget.ActionMenuPresenter: void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView)
com.google.android.exoplayer2.extractor.FlacMetadataReader: void readStreamMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.extractor.mp3.Seeker$UnseekableSeeker: long getDataEndPosition()
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: UnitBitmapDecoder$NonOwnedBitmapResource(android.graphics.Bitmap)
com.google.android.exoplayer2.ExoPlayerImpl: void notifyListeners(com.google.android.exoplayer2.BasePlayer$ListenerInvocation)
com.bumptech.glide.load.data.AssetPathFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$PreparedState getPreparedState()
com.google.android.exoplayer2.BaseRenderer: void maybeThrowStreamError()
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: int getNextEventTimeIndex(long)
com.google.android.exoplayer2.upstream.DataSourceInputStream: int read()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void stop()
org.slf4j.helpers.SubstituteLoggerFactory: java.util.List getLoggers()
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidResponseCodeException: HttpDataSource$InvalidResponseCodeException(int,java.lang.String,java.util.Map,com.google.android.exoplayer2.upstream.DataSpec)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnPreparedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener)
com.bumptech.glide.load.engine.executor.GlideExecutor: <clinit>()
com.bumptech.glide.load.model.ModelCache$ModelKey: int hashCode()
androidx.appcompat.view.menu.StandardMenuPopup: StandardMenuPopup(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean)
androidx.core.widget.ListViewCompat: void scrollListBy(android.widget.ListView,int)
androidx.appcompat.widget.Toolbar: void onRtlPropertiesChanged(int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicWidth()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$600(androidx.appcompat.widget.ActionMenuPresenter)
com.bumptech.glide.provider.EncoderRegistry: EncoderRegistry()
com.bumptech.glide.load.model.LazyHeaders: java.lang.String buildHeaderValue(java.util.List)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void start()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long minDurationForQualityIncreaseUs(long)
com.google.android.exoplayer2.text.subrip.SubripDecoder: <clinit>()
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: long getDurationUs()
com.google.android.exoplayer2.DefaultLoadControl: long getBackBufferDurationUs()
tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector: java.lang.String onMediaCodecSelect(tv.danmaku.ijk.media.player.IMediaPlayer,java.lang.String,int,int)
androidx.appcompat.view.menu.MenuAdapter: int getCount()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean onStateChange(int[])
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)
com.google.android.exoplayer2.decoder.DecoderInputBuffer: void flip()
com.danikula.videocache.file.Files$LastModifiedComparator: int compareLong(long,long)
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry: MultiModelLoaderFactory$Entry(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
com.google.android.exoplayer2.source.SampleQueue: void preRelease()
com.bumptech.glide.load.engine.DataCacheKey: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean fitSystemWindows(android.graphics.Rect)
com.google.android.exoplayer2.util.SlidingPercentile: void ensureSortedByValue()
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: boolean isFmp4Variant(com.google.android.exoplayer2.Format)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.View getCustomView()
androidx.appcompat.widget.SearchView: void onCloseClicked()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer: VideoDecoder$AssetFileDescriptorInitializer(com.bumptech.glide.load.resource.bitmap.VideoDecoder$1)
com.bumptech.glide.request.SingleRequest: boolean isCleared()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: SpliceScheduleCommand(java.util.List)
com.bumptech.glide.manager.RequestManagerFragment: void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment)
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: void startNalUnit(long,int,int,long)
androidx.core.widget.TextViewCompat: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdateReadingPeriod()
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: TsPayloadReader$TrackIdGenerator(int,int,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setLooping(boolean)
cn.jzvd.JzvdStd$DismissControlViewTimerTask: void run()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: <clinit>()
com.google.android.exoplayer2.ui.SubtitlePainter: void drawBitmapLayout(android.graphics.Canvas)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,byte[],int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
tv.danmaku.ijk.media.player.IjkMediaPlayer: IjkMediaPlayer()
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuff$Mode access$000()
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
tv.danmaku.ijk.media.player.R: R()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicWidth()
com.google.android.exoplayer2.source.SampleDataQueue: void reset()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onCaptioningEnabledChanged(boolean)
androidx.recyclerview.widget.RecyclerView: boolean isAccessibilityEnabled()
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.IMediaPlayer: int getVideoHeight()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: void onDismiss()
com.google.android.exoplayer2.source.DefaultCompositeSequenceableLoaderFactory: DefaultCompositeSequenceableLoaderFactory()
com.google.android.exoplayer2.audio.AudioTimestampPoller: boolean hasTimestamp()
androidx.appcompat.app.AppCompatDialog: void onStop()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithManifestFormatInfo(com.google.android.exoplayer2.Format)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(java.lang.CharSequence)
com.google.android.exoplayer2.text.cea.Cea608Decoder: com.google.android.exoplayer2.text.Subtitle createSubtitle()
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder: DataRewinderRegistry$DefaultRewinder(java.lang.Object)
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
com.bumptech.glide.load.engine.DecodeJob: void releaseInternal()
com.bumptech.glide.load.engine.SourceGenerator$1: void onLoadFailed(java.lang.Exception)
com.bumptech.glide.load.resource.gif.GifFrameLoader: int getFrameCount()
com.bumptech.glide.load.model.ByteArrayLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void popEnd()
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: void setPositionDiscontinuity(int)
com.bumptech.glide.request.target.DrawableImageViewTarget: DrawableImageViewTarget(android.widget.ImageView)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment getFirstOldOverlappingSegment(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: ProgressiveMediaPeriod(android.net.Uri,com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.extractor.Extractor[],com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,com.google.android.exoplayer2.source.ProgressiveMediaPeriod$Listener,com.google.android.exoplayer2.upstream.Allocator,java.lang.String,int)
com.google.android.exoplayer2.text.dvb.DvbSubtitle: int getNextEventTimeIndex(long)
androidx.appcompat.widget.RtlSpacingHelper: void setDirection(boolean)
androidx.appcompat.app.AppCompatActivity: void onStart()
androidx.appcompat.widget.AppCompatPopupWindow: void showAsDropDown(android.view.View,int,int,int)
androidx.appcompat.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: int addStateSet(int[],android.graphics.drawable.Drawable)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment)
com.google.android.exoplayer2.extractor.mp4.Atom: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
androidx.lifecycle.ClassesInfoCache: boolean hasLifecycleMethods(java.lang.Class)
com.bumptech.glide.load.engine.ResourceCacheKey: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.audio.ResamplingAudioProcessor: void queueInput(java.nio.ByteBuffer)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithMetadata(com.google.android.exoplayer2.metadata.Metadata)
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool: DiskCacheWriteLocker$WriteLockPool()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(java.io.InputStream,java.nio.ByteOrder)
androidx.viewpager.widget.ViewPager: void setOffscreenPageLimit(int)
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.danikula.videocache.sourcestorage.NoSourceInfoStorage: com.danikula.videocache.SourceInfo get(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: WavExtractor$ImaAdPcmOutputWriter(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.TrackOutput,com.google.android.exoplayer2.extractor.wav.WavHeader)
androidx.appcompat.view.menu.ActionMenuItem: android.view.View getActionView()
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)
com.google.android.exoplayer2.metadata.Metadata: int length()
cn.jzvd.demo.ActivityListViewNormal: ActivityListViewNormal()
com.bumptech.glide.load.engine.executor.GlideExecutor: void execute(java.lang.Runnable)
org.slf4j.helpers.MessageFormatter: void charArrayAppend(java.lang.StringBuilder,char[])
com.google.android.exoplayer2.trackselection.FixedTrackSelection: java.lang.Object getSelectionData()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
com.danikula.videocache.file.Md5FileNameGenerator: Md5FileNameGenerator()
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isViewInvalid()
com.bumptech.glide.util.Util: boolean isValidDimension(int)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onLoadingChanged(boolean)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo: android.widget.ListView getListView()
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setScreenOnWhilePlaying(boolean)
com.google.android.exoplayer2.metadata.Metadata: Metadata(android.os.Parcel)
com.bumptech.glide.request.target.DrawableImageViewTarget: void setResource(java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: void removeItem(int)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmHandler: void handleMessage(android.os.Message)
com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable: FlacStreamMetadata$SeekTable(long[],long[])
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1$1: boolean onPartialImage(android.graphics.ImageDecoder$DecodeException)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItemView: boolean shouldAllowTextWithIcon()
com.google.android.exoplayer2.util.Util: java.lang.String[] getSystemLocales()
com.bumptech.glide.gifdecoder.StandardGifDecoder: android.graphics.Bitmap getNextBitmap()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: java.io.File queryForFilePath(android.net.Uri)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseAudioSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,java.lang.String,boolean,com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData,int)
androidx.customview.view.AbsSavedState: AbsSavedState()
androidx.appcompat.app.AppCompatDelegateImpl: void dismissPopups()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: void start()
androidx.appcompat.widget.ListPopupWindow: void setModal(boolean)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: <clinit>()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void pause()
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry$1: MdtaMetadataEntry$1()
com.bumptech.glide.load.model.LazyHeaders: java.util.Map generateHeaders()
androidx.core.graphics.drawable.DrawableCompat: boolean canApplyTheme(android.graphics.drawable.Drawable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List getActionList()
com.google.android.exoplayer2.text.cea.CeaDecoder: void flush()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
androidx.appcompat.widget.ContentFrameLayout: void onAttachedToWindow()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isHardwareConfigAllowed(int,int,boolean,boolean)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
androidx.core.content.res.ResourcesCompat$FontCallback$1: void run()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onBandwidthSample(int,long,long)
com.google.android.exoplayer2.source.SinglePeriodTimeline: com.google.android.exoplayer2.Timeline$Window getWindow(int,com.google.android.exoplayer2.Timeline$Window,long)
com.google.android.exoplayer2.metadata.id3.GeobFrame: int hashCode()
com.google.android.exoplayer2.source.hls.HlsMediaChunk: void cancelLoad()
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocationForProvider(java.lang.String)
androidx.fragment.app.Fragment: android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle)
com.bumptech.glide.load.resource.drawable.DrawableResource: DrawableResource(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.graphics.drawable.IconCompat: <clinit>()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: boolean canReverse()
androidx.appcompat.app.AppCompatDelegateImpl: void onStart()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: HlsMediaPlaylist(int,java.lang.String,java.util.List,long,long,boolean,int,long,int,long,boolean,boolean,boolean,com.google.android.exoplayer2.drm.DrmInitData,java.util.List)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel)
androidx.savedstate.SavedStateRegistryController: void performSave(android.os.Bundle)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat: <clinit>()
com.bumptech.glide.load.resource.bitmap.BitmapTransformation: BitmapTransformation()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void findExpandedIndex()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: java.lang.String getFontFamily()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void mediaPeriodCreated()
com.bumptech.glide.disklrucache.DiskLruCache: void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)
android.support.v4.media.session.PlaybackStateCompatApi21: long getLastPositionUpdateTime(java.lang.Object)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: <clinit>()
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
android.support.v4.media.MediaDescriptionCompat: int describeContents()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: long access$400(com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint)
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: tv.danmaku.ijk.media.player.IjkMediaCodecInfo setupCandidate(android.media.MediaCodecInfo,java.lang.String)
androidx.appcompat.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)
androidx.appcompat.widget.ListPopupWindow: void setVerticalOffset(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: android.os.Bundle _getMediaMeta()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean isBufferVeryLate(long)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.bumptech.glide.manager.RequestManagerFragment: java.lang.String toString()
com.bumptech.glide.load.engine.GlideException: java.util.List getRootCauses()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.lang.Object getExact(int,java.lang.Class)
com.bumptech.glide.load.engine.Engine$DecodeJobFactory: Engine$DecodeJobFactory(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider)
androidx.fragment.app.FragmentManagerImpl: void moveToState(int,boolean)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
tv.danmaku.ijk.media.player.IjkMediaPlayer: float getDropFrameRate()
androidx.core.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)
androidx.appcompat.app.WindowDecorActionBar: boolean shouldAnimateContextView()
androidx.appcompat.widget.AppCompatTextHelper: boolean isAutoSizeEnabled()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.audio.Ac4Util: com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo parseAc4SyncframeInfo(com.google.android.exoplayer2.util.ParsableBitArray)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.metadata.Metadata parseUdta(com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom,boolean)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onSessionEvent(java.lang.String,android.os.Bundle)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand$1: java.lang.Object[] newArray(int)
com.bumptech.glide.util.Executors: <clinit>()
androidx.appcompat.widget.RtlSpacingHelper: int getRight()
androidx.lifecycle.ViewModel: ViewModel()
androidx.versionedparcelable.VersionedParcel: java.lang.Class findParcelClass(java.lang.Class)
com.google.android.exoplayer2.util.Util: int binarySearchFloor(long[],long,boolean,boolean)
com.google.android.exoplayer2.metadata.id3.ApicFrame: ApicFrame(android.os.Parcel)
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void doAfterTextChanged(android.widget.AutoCompleteTextView)
com.bumptech.glide.request.SingleRequest: void notifyLoadSuccess()
com.bumptech.glide.load.resource.gif.GifDrawable: java.nio.ByteBuffer getBuffer()
cn.jzvd.Jzvd: Jzvd(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24: void set(int,int)
com.google.android.exoplayer2.extractor.ts.LatmReader: int parsePayloadLengthInfo(com.google.android.exoplayer2.util.ParsableBitArray)
com.bumptech.glide.load.engine.cache.LruResourceCache: void onItemEvicted(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()
com.bumptech.glide.load.model.StringLoader: android.net.Uri toFileUri(java.lang.String)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void put(android.graphics.Bitmap)
androidx.fragment.app.FragmentTransitionCompat21: void beginDelayedTransition(android.view.ViewGroup,java.lang.Object)
androidx.appcompat.widget.SearchView: boolean onItemSelected(int)
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.graphics.TypefaceCompatBaseImpl$2: TypefaceCompatBaseImpl$2(androidx.core.graphics.TypefaceCompatBaseImpl)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void continuePreparing()
com.google.android.exoplayer2.MediaPeriodHolder: long applyTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelectorResult,long,boolean,boolean[])
androidx.versionedparcelable.VersionedParcelParcel: android.os.Parcelable readParcelable()
androidx.viewpager.widget.ViewPager: boolean performDrag(float)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void advancePeekPosition(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: int getChangingConfigurations()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isEnded()
com.google.android.exoplayer2.ExoPlayerImplInternal: long seekToPeriodPosition(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.CommentFrame decodeCommentFrame(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.exifinterface.media.ExifInterface: boolean startsWith(byte[],byte[])
androidx.appcompat.graphics.drawable.DrawableContainer$1: void run()
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getAsyncStatisticBufBackwards()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setContentDescription(java.lang.CharSequence)
tv.danmaku.ijk.media.player.IMediaPlayer: void release()
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void seek()
com.google.android.exoplayer2.util.Log: void e(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumHeight()
com.google.android.exoplayer2.metadata.flac.PictureFrame$1: com.google.android.exoplayer2.metadata.flac.PictureFrame[] newArray(int)
com.bumptech.glide.load.engine.EngineJob: boolean isDone()
com.google.android.exoplayer2.upstream.StatsDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.google.android.exoplayer2.SimpleExoPlayer: void addVideoListener(com.google.android.exoplayer2.video.VideoListener)
androidx.fragment.app.Fragment$2: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder: com.google.android.exoplayer2.metadata.Metadata decode(com.google.android.exoplayer2.metadata.MetadataInputBuffer)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: android.net.Uri getUri()
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean maybeBlacklistTrack(com.google.android.exoplayer2.source.chunk.Chunk,long)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
com.google.android.exoplayer2.ExoPlayerImpl: void notifyListeners(java.lang.Runnable)
com.google.android.exoplayer2.metadata.emsg.EventMessage: <clinit>()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader: long skip(long)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry)
android.support.v4.media.session.PlaybackStateCompatApi21: java.lang.CharSequence getErrorMessage(java.lang.Object)
com.google.android.exoplayer2.metadata.MetadataInputBuffer: MetadataInputBuffer()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
androidx.fragment.app.FragmentManagerImpl: void reportBackStackChanged()
com.google.android.exoplayer2.text.dvb.DvbParser: int[] generateDefault8BitClutEntries()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long seekToUs(long)
com.bumptech.glide.request.target.ViewTarget: com.bumptech.glide.request.Request getRequest()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onPositionReset(long,boolean)
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.disklrucache.DiskLruCache$Editor: com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowing()
com.google.android.exoplayer2.ExoPlayerImpl: long getCurrentPosition()
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: boolean handles(android.net.Uri,com.bumptech.glide.load.Options)
com.bumptech.glide.RequestManager: void onStop()
androidx.appcompat.widget.TooltipPopup: TooltipPopup(android.content.Context)
com.bumptech.glide.load.data.AssetPathFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame$1: com.google.android.exoplayer2.metadata.id3.UrlLinkFrame[] newArray(int)
androidx.appcompat.widget.SuggestionsAdapter: void setQueryRefinement(int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: long access$700(com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult)
com.google.android.exoplayer2.source.SampleDataQueue: void readEncryptionData(com.google.android.exoplayer2.decoder.DecoderInputBuffer,com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIcon(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher: void close(java.lang.Object)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: boolean blacklistPlaylist(long)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: void run()
cn.jzvd.JZUtils: void showStatusBar(android.content.Context)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setVolume(float)
androidx.appcompat.graphics.drawable.DrawableContainer: void initializeDrawableForDisplay(android.graphics.drawable.Drawable)
cn.jzvd.demo.ActivityListView: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.util.LongArray: LongArray()
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int)
androidx.collection.ArraySet: int size()
com.google.android.exoplayer2.offline.StreamKey$1: com.google.android.exoplayer2.offline.StreamKey[] newArray(int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)
com.bumptech.glide.manager.DefaultConnectivityMonitor: void register()
androidx.core.content.res.TypedArrayUtils: boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: H264Reader$SampleReader(com.google.android.exoplayer2.extractor.TrackOutput,boolean,boolean)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setVolume(float,float)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void applySpansForTag(java.lang.String,com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag,android.text.SpannableStringBuilder,java.util.List,java.util.List)
androidx.appcompat.view.menu.MenuBuilder: boolean isGroupDividerEnabled()
androidx.core.provider.FontsContractCompat: boolean equalsByteArrayList(java.util.List,java.util.List)
com.bumptech.glide.load.resource.drawable.DrawableResource: java.lang.Object get()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadError(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,int,int,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long,long,long,long,java.io.IOException,boolean)
com.google.android.exoplayer2.drm.ErrorStateDrmSession: java.util.Map queryKeyStatus()
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: void outputSample(int)
androidx.arch.core.executor.ArchTaskExecutor: void executeOnDiskIO(java.lang.Runnable)
com.bumptech.glide.Registry$MissingComponentException: Registry$MissingComponentException(java.lang.String)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelection$Definition[] selectAllTracks(com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],int[],com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void readScratch(com.google.android.exoplayer2.extractor.ExtractorInput,int)
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1: Engine$EngineJobFactory$1(com.bumptech.glide.load.engine.Engine$EngineJobFactory)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean)
androidx.appcompat.view.menu.ActionMenuItemView: boolean hasText()
com.google.android.exoplayer2.source.SampleDataQueue: void sampleData(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.fragment.app.Fragment: android.view.View requireView()
com.google.android.exoplayer2.source.hls.WebvttExtractor: <clinit>()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onStarted()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: int skipIgnorableWhitespace(java.io.BufferedReader,boolean,int)
cn.jzvd.demo.ActivityWebView: ActivityWebView()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.view.menu.MenuItemWrapperICS: int getNumericModifiers()
com.google.android.exoplayer2.ExoPlayerImplInternal: void onPlaybackParametersChanged(com.google.android.exoplayer2.PlaybackParameters)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
com.bumptech.glide.Glide: com.bumptech.glide.RequestManager with(android.app.Activity)
android.support.v4.media.MediaDescriptionCompatApi21$Builder: java.lang.Object newInstance()
androidx.fragment.app.Fragment$1: void run()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollHorizontally()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int readBits(int)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onAudioSessionId(int)
com.bumptech.glide.load.resource.bitmap.BitmapResource: void initialize()
com.google.android.exoplayer2.SimpleExoPlayer: void setVolume(float)
androidx.appcompat.view.StandaloneActionMode: android.view.Menu getMenu()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getCount()
cn.jzvd.Jzvd: void goOnPlayOnResume()
tv.danmaku.ijk.media.player.ISurfaceTextureHolder: void setSurfaceTexture(android.graphics.SurfaceTexture)
androidx.fragment.app.Fragment: Fragment()
com.danikula.videocache.file.FileCache: void complete()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnCompletionListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener)
com.bumptech.glide.disklrucache.StrictLineReader: StrictLineReader(java.io.InputStream,java.nio.charset.Charset)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.lang.String toString()
com.google.android.exoplayer2.extractor.ts.TsDurationReader: long readLastPcrValueFromBuffer(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.drm.DrmSessionManager$1: DrmSessionManager$1()
androidx.exifinterface.media.ExifInterface: boolean isSupportedDataType(java.util.HashMap)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean canNotifyCleared(com.bumptech.glide.request.Request)
androidx.appcompat.app.WindowDecorActionBar: boolean checkShowingFlags(boolean,boolean,boolean)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue build()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAlpha(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
androidx.fragment.app.Fragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.lang.String getBitmapString(int,android.graphics.Bitmap$Config)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: com.google.android.exoplayer2.drm.DrmInitData$SchemeData copyWithData(byte[])
com.google.android.exoplayer2.extractor.ts.Ac3Reader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.bumptech.glide.load.model.LazyHeaders$Builder: java.lang.String getSanitizedUserAgent()
androidx.collection.ArraySet: void allocArrays(int)
com.google.android.exoplayer2.drm.UnsupportedDrmException: UnsupportedDrmException(int)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer: void initialize(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor)
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: DvbParser$SubtitleService(int,int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isExtendedWestEuropeanChar(byte,byte)
com.google.android.exoplayer2.metadata.scte35.SpliceCommand: SpliceCommand()
com.bumptech.glide.load.model.GlideUrl: byte[] getCacheKeyBytes()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistParserFactory: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser createPlaylistParser()
com.bumptech.glide.load.data.StreamAssetPathFetcher: java.lang.Class getDataClass()
com.google.android.exoplayer2.extractor.flv.FlvExtractor: void seek(long,long)
com.google.android.exoplayer2.extractor.ChunkIndex: ChunkIndex(int[],long[],long[],long[])
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.Menu getMenuWrapper(android.view.Menu)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1: int readAt(long,byte[],int,int)
com.google.android.exoplayer2.trackselection.TrackSelection$Definition: TrackSelection$Definition(com.google.android.exoplayer2.source.TrackGroup,int[],int,java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: void init(com.google.android.exoplayer2.extractor.mkv.EbmlProcessor)
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: void lockInterruptibly()
com.bumptech.glide.load.engine.ActiveResources$1$1: void run()
com.bumptech.glide.load.engine.DecodeJob: void run()
androidx.exifinterface.media.ExifInterface: void getStandaloneAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23: void onFrameRendered(android.media.MediaCodec,long,long)
com.google.android.exoplayer2.decoder.SimpleDecoder: com.google.android.exoplayer2.decoder.OutputBuffer dequeueOutputBuffer()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: <clinit>()
androidx.fragment.app.Fragment: void setArguments(android.os.Bundle)
com.google.android.exoplayer2.extractor.mp4.TrackFragment: void initEncryptionData(int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ActionProvider getActionProvider()
androidx.core.text.PrecomputedTextCompat$Params: int hashCode()
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object)
androidx.exifinterface.media.ExifInterface: void getRw2Attributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void setColorSpan(android.text.SpannableStringBuilder,int,int,int)
com.bumptech.glide.load.resource.bitmap.Downsampler: void resetOptions(android.graphics.BitmapFactory$Options)
tv.danmaku.ijk.media.player.MediaPlayerProxy$5: void onVideoSizeChanged(tv.danmaku.ijk.media.player.IMediaPlayer,int,int,int,int)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: void init(int,long)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentTransition$2: void run()
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: MediaStoreImageThumbLoader(android.content.Context)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: DefaultHlsPlaylistTracker$MediaPlaylistBundle(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri)
androidx.lifecycle.LifecycleRegistry: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.util.Util: int getNetworkType(android.content.Context)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect)
com.google.android.exoplayer2.extractor.ts.TsExtractor: int access$108(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
com.google.android.exoplayer2.decoder.SimpleDecoder: void setInitialInputBufferSize(int)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean processOutputBuffer(long,long,android.media.MediaCodec,java.nio.ByteBuffer,int,int,long,boolean,boolean,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.extractor.ts.AdtsReader: <clinit>()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isVideoSizeAndRateSupportedV21(int,int,double)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage()
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: int getIndexOfEarlierOrEqualSynchronizationSample(long)
com.bumptech.glide.load.model.ByteBufferFileLoader: boolean handles(java.io.File)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getParentStart()
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean isComplete()
com.bumptech.glide.load.resource.gif.GifDrawableEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)
com.bumptech.glide.load.resource.gif.GifDrawable: void onFrameReady()
androidx.core.view.ViewCompat: int getLayoutDirection(android.view.View)
com.google.android.exoplayer2.SeekParameters: int hashCode()
com.google.android.exoplayer2.util.ParsableByteArray: void readBytes(com.google.android.exoplayer2.util.ParsableBitArray,int)
androidx.fragment.app.FragmentHostCallback: void onSupportInvalidateOptionsMenu()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: AnimatedStateListDrawableCompat$AnimationDrawableTransition(android.graphics.drawable.AnimationDrawable,boolean,boolean)
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo getReadingMediaPeriod()
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key)
androidx.fragment.app.BackStackRecord: boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op)
com.danikula.videocache.Pinger: void responseToPing(java.net.Socket)
android.support.v4.media.MediaDescriptionCompat$1: android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SuggestionsAdapter: boolean hasStableIds()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isMediaCodecException(java.lang.IllegalStateException)
com.google.android.exoplayer2.extractor.ts.AdtsReader: void checkAdtsHeader(com.google.android.exoplayer2.util.ParsableByteArray)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: MediaControllerCompat$MediaControllerImplApi21$ExtraCallback(android.support.v4.media.session.MediaControllerCompat$Callback)
com.bumptech.glide.load.resource.gif.GifDrawable: int getSize()
com.google.android.exoplayer2.source.SampleDataQueue: void readData(long,byte[],int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo$1: com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo[] newArray(int)
cn.jzvd.demo.ActivityApi: boolean onOptionsItemSelected(android.view.MenuItem)
android.support.v4.media.MediaDescriptionCompatApi21: void writeToParcel(java.lang.Object,android.os.Parcel,int)
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader: MultiModelLoaderFactory$EmptyModelLoader()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int readInt()
com.google.android.exoplayer2.upstream.Loader$LoadTask: void handleMessage(android.os.Message)
androidx.lifecycle.LiveData: boolean hasActiveObservers()
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.exoplayer2.upstream.StatsDataSource: int read(byte[],int,int)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: void onAnimationEnd(android.graphics.drawable.Drawable)
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setDescription(java.lang.Object,java.lang.CharSequence)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findFirstVisibleItemPositionInt()
androidx.appcompat.app.AlertDialog: void onCreate(android.os.Bundle)
androidx.appcompat.app.AlertDialog: int resolveDialogTheme(android.content.Context,int)
com.google.android.exoplayer2.text.cea.CeaSubtitle: long getEventTime(int)
com.bumptech.glide.manager.RequestManagerFragment: void onDestroy()
com.google.android.exoplayer2.metadata.id3.ChapterFrame$1: java.lang.Object[] newArray(int)
androidx.core.view.ViewParentCompat: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int)
androidx.appcompat.widget.AppCompatTextHelper: androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int)
android.support.v4.os.ResultReceiver$1: java.lang.Object[] newArray(int)
androidx.collection.ArrayMap$1: void colPut(java.lang.Object,java.lang.Object)
androidx.lifecycle.LiveData$ObserverWrapper: void detachObserver()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey: int hashCode()
com.google.android.exoplayer2.text.TextRenderer: long getNextEventTime()
androidx.appcompat.app.AlertController: void setTitle(java.lang.CharSequence)
com.danikula.videocache.HttpUrlSource: long getContentLength(java.net.HttpURLConnection)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void selectTrack(int)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: VideoDecoder(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer)
android.support.v4.media.RatingCompat: java.lang.String toString()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: double access$1100(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
androidx.fragment.app.FragmentActivity: void onLowMemory()
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.lang.String toString()
com.bumptech.glide.load.model.StringLoader: boolean handles(java.lang.String)
androidx.core.widget.NestedScrollView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()
com.google.android.exoplayer2.upstream.ContentDataSource: ContentDataSource(android.content.Context)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void commitSampleToOutput(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track,long,int,int,int)
androidx.lifecycle.LifecycleRegistry: void sync()
androidx.fragment.app.Fragment: boolean isPostponed()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: DefaultHlsPlaylistTracker(com.google.android.exoplayer2.source.hls.HlsDataSourceFactory,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionView(android.view.View)
com.bumptech.glide.Registry: java.util.List getImageHeaderParsers()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions centerCrop()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
androidx.core.view.MarginLayoutParamsCompat: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.google.android.exoplayer2.extractor.ts.LatmReader: void parseAudioMuxElement(com.google.android.exoplayer2.util.ParsableBitArray)
com.google.android.exoplayer2.extractor.ts.H264Reader: void startNalUnit(long,int,long)
org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object)
com.google.android.exoplayer2.Timeline: com.google.android.exoplayer2.Timeline$Period getPeriodByUid(java.lang.Object,com.google.android.exoplayer2.Timeline$Period)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader: int getUInt16()
com.bumptech.glide.load.ImageHeaderParserUtils$4: int getOrientation(com.bumptech.glide.load.ImageHeaderParser)
com.bumptech.glide.load.engine.DiskCacheStrategy$1: boolean isDataCacheable(com.bumptech.glide.load.DataSource)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.WrappedDrawableState: int getChangingConfigurations()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumWidth()
com.danikula.videocache.HttpProxyCacheServer: void processSocket(java.net.Socket)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererCount()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.extractor.TrackOutput icyTrack()
com.google.android.exoplayer2.source.SampleQueue: boolean isLastSampleQueued()
com.bumptech.glide.load.engine.EngineJob: void notifyCallbacksOfResult()
androidx.core.graphics.drawable.WrappedDrawableApi14: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.app.AlertController$ButtonHandler: void handleMessage(android.os.Message)
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: java.lang.Class getDataClass()
androidx.appcompat.app.AppCompatDialog: void setContentView(int)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void getNextChunk(long,long,java.util.List,boolean,com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder)
androidx.versionedparcelable.ParcelImpl$1: ParcelImpl$1()
androidx.appcompat.widget.SuggestionsAdapter: SuggestionsAdapter(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void show(int,int)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: TextInformationFrame(android.os.Parcel)
androidx.appcompat.widget.AppCompatImageHelper: AppCompatImageHelper(android.widget.ImageView)
com.google.android.exoplayer2.extractor.FlacMetadataReader: com.google.android.exoplayer2.metadata.flac.PictureFrame readPictureMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,int)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenHorizontal(int)
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: java.lang.String readSubtitleText(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel)
com.danikula.videocache.HttpUrlSource: java.net.HttpURLConnection openConnection(long,int)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment)
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: tv.danmaku.ijk.media.player.misc.AndroidTrackInfo[] fromTrackInfo(android.media.MediaPlayer$TrackInfo[])
androidx.appcompat.widget.AbsActionBarView: void access$101(androidx.appcompat.widget.AbsActionBarView,int)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickRotationTo0(android.view.View)
com.bumptech.glide.util.Util: <clinit>()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.ActionBarContextView: boolean shouldDelayChildPressedState()
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.source.hls.HlsDataSourceFactory)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: CompositeMediaSource$ForwardingEventListener(com.google.android.exoplayer2.source.CompositeMediaSource,java.lang.Object)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: java.lang.Class getDataClass()
com.google.android.exoplayer2.util.Log: <clinit>()
androidx.recyclerview.widget.GridLayoutManager: void guessMeasurement(float,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides parseFromDialogue(java.lang.String)
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: int getEventTimeCount()
androidx.collection.MapCollections$ArrayIterator: java.lang.Object next()
androidx.appcompat.widget.ActionBarContextView: void onMeasure(int,int)
androidx.appcompat.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory: NoTransition$NoAnimationFactory()
androidx.fragment.app.BackStackRecord: boolean generateOps(java.util.ArrayList,java.util.ArrayList)
com.google.android.exoplayer2.ui.SubtitleView: void setApplyEmbeddedStyles(boolean)
androidx.core.view.NestedScrollingParentHelper: int getNestedScrollAxes()
com.google.android.exoplayer2.source.hls.HlsSampleStream: void bindSampleQueue()
com.google.android.exoplayer2.util.CodecSpecificDataUtil: byte[] buildAacAudioSpecificConfig(int,int,int)
androidx.fragment.app.FragmentController: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.bumptech.glide.Glide: android.content.Context getContext()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
androidx.appcompat.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeTextType()
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: AttributeStrategy$Key(com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool)
com.bumptech.glide.load.engine.EngineKey: int hashCode()
com.google.android.exoplayer2.extractor.ogg.FlacReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
tv.danmaku.ijk.media.player.IjkMediaPlayer: android.os.Bundle getMediaMeta()
androidx.appcompat.widget.ScrollingTabContainerView: void animateToTab(int)
androidx.appcompat.widget.ListPopupWindow: ListPopupWindow(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.DefaultLoadControl: DefaultLoadControl(com.google.android.exoplayer2.upstream.DefaultAllocator,int,int,int,int,int,boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$9: IjkMediaFormat$9(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.extractor.ts.LatmReader: void packetStarted(long,int)
org.slf4j.helpers.MarkerIgnoringBase: java.lang.String getName()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: int getResizeMode()
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: TrimmingAudioProcessor()
androidx.viewpager.widget.ViewPager$1: ViewPager$1()
com.bumptech.glide.request.target.ImageViewTarget: ImageViewTarget(android.widget.ImageView)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: android.util.Pair parseFourCcPrivate(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder: InputStreamBitmapImageDecoderResourceDecoder()
com.bumptech.glide.load.engine.DecodeJob: DecodeJob(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,androidx.core.util.Pools$Pool)
androidx.collection.MapCollections$KeySet: int hashCode()
androidx.collection.SimpleArrayMap: boolean replace(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.upstream.HttpDataSource$InvalidContentTypeException: HttpDataSource$InvalidContentTypeException(java.lang.String,com.google.android.exoplayer2.upstream.DataSpec)
androidx.appcompat.widget.LinearLayoutCompat: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: boolean initForYuvFrame(int,int,int,int,int)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object getRealOwner()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void mediaPeriodReleased()
androidx.appcompat.content.res.AppCompatResources: void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourceTypeName(int)
com.bumptech.glide.manager.TargetTracker: void track(com.bumptech.glide.request.target.Target)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: AccessibilityClickableSpanCompat(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int)
androidx.appcompat.widget.ActionMenuPresenter: boolean showOverflowMenu()
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
cn.jzvd.demo.FragmentDemo$1: void onScroll(android.widget.AbsListView,int,int,int)
com.bumptech.glide.load.engine.EngineResource: boolean isMemoryCacheable()
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: com.google.android.exoplayer2.extractor.Extractor createExtractorByFileExtension(android.net.Uri,com.google.android.exoplayer2.Format,java.util.List,com.google.android.exoplayer2.util.TimestampAdjuster)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setPlaybackParametersInternal(com.google.android.exoplayer2.PlaybackParameters)
com.bumptech.glide.load.engine.ActiveResources: void deactivate(com.bumptech.glide.load.Key)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: SpliceScheduleCommand$ComponentSplice(int,long)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowIcon()
cn.jzvd.JZMediaSystem: void seekTo(long)
androidx.appcompat.app.AlertController$5: AlertController$5(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: boolean read(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.fragment.app.FragmentTransitionCompat21$3: FragmentTransitionCompat21$3(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.collection.ArrayMap$1: int colGetSize()
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean access$1002(com.google.android.exoplayer2.extractor.ts.TsExtractor,boolean)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean processFtypAtom(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void clear()
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)
androidx.fragment.app.Fragment: int hashCode()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void getStreamMarkerAndInfoBlockBytes(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.VectorEnabledTintResources: boolean shouldBeUsed()
com.google.android.exoplayer2.ui.TrackSelectionView: java.util.List getOverrides()
cn.jzvd.JZTextureView: void setVideoSize(int,int)
com.google.android.exoplayer2.ui.TrackSelectionView: int[] getTracksAdding(int[],int)
com.google.android.exoplayer2.DefaultRenderersFactory: void buildMiscellaneousRenderers(android.content.Context,android.os.Handler,int,java.util.ArrayList)
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generateEventTime(com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,int,boolean)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleC3Command(int)
com.bumptech.glide.disklrucache.DiskLruCache: com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String)
androidx.recyclerview.widget.RecyclerView: void saveOldPositions()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewInternal(int,android.view.View)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap removeLast()
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: int parseUint8AttributeValue(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onEnabled(boolean)
com.google.android.exoplayer2.SimpleExoPlayer: int access$800(com.google.android.exoplayer2.SimpleExoPlayer)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory: VideoDecoder$MediaMetadataRetrieverFactory()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: boolean isReady()
com.google.android.exoplayer2.decoder.CryptoInfo: android.media.MediaCodec$CryptoInfo getFrameworkCryptoInfo()
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean fillBufferWithAtLeastOnePacket(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.core.view.ViewCompat: boolean isAttachedToWindow(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)
androidx.fragment.app.FragmentActivity: void onStart()
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.appcompat.widget.ForwardingListener: void onViewAttachedToWindow(android.view.View)
androidx.appcompat.app.WindowDecorActionBar$3: void onAnimationUpdate(android.view.View)
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.core.widget.PopupWindowCompat: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOnePartiallyVisibleChild(int,int,boolean)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long[][][] access$000(long[][])
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.util.FlacStreamMetadata copyWithVorbisComments(java.util.List)
com.google.android.exoplayer2.extractor.TrackOutput$CryptoData: boolean equals(java.lang.Object)
com.danikula.videocache.HttpProxyCacheServer: boolean isCached(java.lang.String)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$Factory: DefaultDashChunkSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void prepareWithMasterPlaylistInfo(com.google.android.exoplayer2.source.TrackGroup[],int,int[])
cn.jzvd.JZMediaSystem: long getDuration()
cn.jzvd.demo.ActivityListViewMultiHolder: ActivityListViewMultiHolder()
androidx.appcompat.view.menu.CascadingMenuPopup: void updateMenuView(boolean)
com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$Factory: DefaultDashChunkSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.load.engine.cache.LruResourceCache: com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource)
cn.jzvd.Jzvd: Jzvd(android.content.Context)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void endTracks()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder: void cleanup()
com.google.android.exoplayer2.source.hls.WebvttExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
android.support.v4.media.RatingCompat: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.Priority: com.bumptech.glide.Priority[] values()
com.google.android.exoplayer2.DefaultMediaClock: long syncAndGetPositionUs(boolean)
com.google.android.exoplayer2.extractor.ts.Ac3Reader: void packetStarted(long,int)
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: com.google.android.exoplayer2.source.hls.HlsMediaSource createMediaSource(android.net.Uri)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollHorizontally()
com.google.android.exoplayer2.text.webvtt.WebvttCue: boolean isNormalCue()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getIcon1(android.database.Cursor)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame$1: java.lang.Object[] newArray(int)
android.support.v4.media.session.MediaSessionCompat$QueueItem: <clinit>()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onSurfaceSizeChanged(int,int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void applyButtonTint()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: void onReadingStarted(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: int getSize(android.graphics.Bitmap)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlNode parseNode(org.xmlpull.v1.XmlPullParser,com.google.android.exoplayer2.text.ttml.TtmlNode,java.util.Map,com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate)
androidx.appcompat.app.AppCompatDialog: void setTitle(java.lang.CharSequence)
com.bumptech.glide.manager.TargetTracker: void untrack(com.bumptech.glide.request.target.Target)
androidx.appcompat.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)
android.support.v4.media.MediaMetadataCompat$1: MediaMetadataCompat$1()
androidx.appcompat.widget.LinearLayoutCompat: int getChildrenSkipCount(android.view.View,int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void seekToInternal(com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: UrlLinkFrame(android.os.Parcel)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: DefaultEbmlReader()
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: ConstantBitrateSeekMap(long,long,int,int)
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionDestroyed()
androidx.viewpager.widget.ViewPager: void onLayout(boolean,int,int,int,int)
androidx.versionedparcelable.ParcelImpl$1: androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder: boolean handles(android.graphics.ImageDecoder$Source,com.bumptech.glide.load.Options)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder apply(com.bumptech.glide.request.BaseRequestOptions)
android.support.v4.media.session.MediaControllerCompat$Callback: void onQueueChanged(java.util.List)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void showSoftInputIfNecessary()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
com.bumptech.glide.load.resource.bitmap.BitmapResource: android.graphics.Bitmap get()
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: void run()
com.google.android.exoplayer2.source.SampleQueue: long discardUpstreamSampleMetadata(int)
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextDirectionHeuristic getTextDirection()
com.google.android.exoplayer2.upstream.Loader$LoadTask: void start(long)
androidx.core.view.ViewParentCompat: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionEnd(android.transition.Transition)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: AtomParsers$ChunkIterator(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.ParsableByteArray,boolean)
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter: void onLowMemory()
com.google.android.exoplayer2.source.TrackGroupArray: int hashCode()
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher: java.lang.Class getDataClass()
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
androidx.appcompat.widget.Toolbar: void ensureLogoView()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object)
com.bumptech.glide.RequestManager: void onLowMemory()
com.google.android.exoplayer2.drm.DefaultDrmSession: java.util.Map queryKeyStatus()
androidx.recyclerview.widget.GridLayoutManager: int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
tv.danmaku.ijk.media.player.IMediaPlayer: void pause()
com.danikula.videocache.HttpProxyCache: void registerCacheListener(com.danikula.videocache.CacheListener)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple: DefaultTrackSelector$AudioConfigurationTuple(int,int,java.lang.String)
com.google.android.exoplayer2.extractor.ts.TsExtractor: int access$402(com.google.android.exoplayer2.extractor.ts.TsExtractor,int)
com.bumptech.glide.load.engine.DecodeJob: void reschedule()
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: LinearLayoutManager$LayoutChunkResult()
com.bumptech.glide.disklrucache.DiskLruCache: void delete()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: long getEndTimeUs()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
org.slf4j.helpers.SubstituteLogger: int hashCode()
com.bumptech.glide.load.engine.EngineJob: void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback)
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName)
androidx.core.app.ActivityCompat: androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: AppCompatDelegateImpl$PanelMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerBefore()
androidx.appcompat.widget.AppCompatTextHelper: void setTextSize(int,float)
androidx.core.view.ViewCompat: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: ResourceManagerInternal$ColorFilterLruCache(int)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int available()
com.bumptech.glide.GlideContext: com.bumptech.glide.request.target.ViewTarget buildImageViewTarget(android.widget.ImageView,java.lang.Class)
androidx.fragment.app.FragmentManagerViewModel: int hashCode()
cn.jzvd.demo.ActivityWebView: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.offline.FilteringManifestParser: com.google.android.exoplayer2.offline.FilterableManifest parse(android.net.Uri,java.io.InputStream)
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: boolean isValid(java.io.File)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean shouldBeActive()
com.google.android.exoplayer2.upstream.DataSpec: java.lang.String getStringForHttpMethod(int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Activity,boolean)
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int)
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: void clearMemory()
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View)
com.bumptech.glide.request.BaseRequestOptions: boolean isSet(int,int)
com.google.android.exoplayer2.Timeline: int getFirstWindowIndex(boolean)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: void onSessionReleased(com.google.android.exoplayer2.drm.DefaultDrmSession)
androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi24: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
androidx.appcompat.widget.SearchView$10: void onTextChanged(java.lang.CharSequence,int,int,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void onLoadCanceled(com.google.android.exoplayer2.upstream.ParsingLoadable,long,long,boolean)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: SpliceScheduleCommand(android.os.Parcel,com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1)
com.bumptech.glide.load.model.UnitModelLoader$Factory: <clinit>()
androidx.appcompat.widget.AppCompatBackgroundHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.android.exoplayer2.extractor.ts.DtsReader: boolean skipToNextSync(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: void reset()
androidx.core.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.AppCompatSpinner$2: void onGlobalLayout()
org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setVolumeInternal()
com.bumptech.glide.disklrucache.DiskLruCache: void readJournal()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: int findEsdsPosition(com.google.android.exoplayer2.util.ParsableByteArray,int,int)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Bitmap centerInside(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
androidx.collection.LruCache: void trimToSize(int)
androidx.recyclerview.widget.LinearLayoutManager: void setOrientation(int)
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: boolean equals(java.lang.Object)
com.google.android.exoplayer2.SimpleExoPlayer: int getPlaybackState()
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: void reset()
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeStepGranularity()
com.google.android.exoplayer2.source.ExtractorMediaSource: ExtractorMediaSource(android.net.Uri,com.google.android.exoplayer2.upstream.DataSource$Factory,com.google.android.exoplayer2.extractor.ExtractorsFactory,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,java.lang.String,int,java.lang.Object,com.google.android.exoplayer2.source.ExtractorMediaSource$1)
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: ListPopupWindow$PopupTouchInterceptor(androidx.appcompat.widget.ListPopupWindow)
com.bumptech.glide.load.engine.DataCacheGenerator: boolean startNext()
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.Key getSignature()
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: BaseKeyPool()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
com.bumptech.glide.util.CachedHashCodeArrayMap: java.lang.Object removeAt(int)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.google.android.exoplayer2.extractor.VorbisUtil: long mapType1QuantValues(long,long)
androidx.core.widget.TextViewCompat: void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params)
cn.jzvd.JzvdStd: <clinit>()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$6: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.ExoPlayerImpl: ExoPlayerImpl(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.upstream.BandwidthMeter,com.google.android.exoplayer2.util.Clock,android.os.Looper)
androidx.core.widget.TextViewCompat: void setLineHeight(android.widget.TextView,int)
com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties: HttpDataSource$RequestProperties()
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String _getColorFormatName(int)
com.google.android.exoplayer2.util.TraceUtil: void beginSectionV18(java.lang.String)
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: <clinit>()
androidx.viewpager.widget.ViewPager: void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo)
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int)
androidx.recyclerview.widget.LinearLayoutManager: int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.fragment.app.FragmentManagerImpl: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: <clinit>()
com.bumptech.glide.load.model.MultiModelLoader: java.lang.String toString()
com.bumptech.glide.load.engine.LockedResource$1: java.lang.Object create()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int getStyle()
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup getPopup()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: FlacExtractor(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int getId()
cn.jzvd.demo.ActivityListViewRecyclerView: void onPause()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class)
androidx.appcompat.widget.Toolbar: void ensureNavButtonView()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isCheckable()
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)
androidx.core.graphics.PathParser: float[] copyOfRange(float[],int,int)
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.collection.SimpleArrayMap: java.lang.String toString()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getQuantityText(int,int)
com.google.android.exoplayer2.audio.AudioTimestampPoller: void rejectTimestamp()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.ColorStateList getColorStateList(int)
com.google.android.exoplayer2.upstream.FileDataSource: int read(byte[],int,int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker: boolean skipInputUntilPosition(com.google.android.exoplayer2.extractor.ExtractorInput,long)
androidx.exifinterface.media.ExifInterface: void printAttributes()
com.google.android.exoplayer2.FormatHolder: void clear()
cn.jzvd.demo.AdapterRecyclerViewTiny: int getItemCount()
androidx.appcompat.widget.AppCompatRatingBar: void onMeasure(int,int)
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher: void close(java.lang.Object)
com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader: WavHeaderReader$ChunkHeader(int,long)
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
android.support.v4.media.MediaBrowserCompat$MediaItem$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.SimpleExoPlayer: void setRepeatMode(int)
androidx.appcompat.app.WindowDecorActionBar: void init(android.view.View)
com.google.android.exoplayer2.util.ParsableByteArray: int readUnsignedFixedPoint1616()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter: IjkMediaFormat$Formatter()
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean extrasAvailable()
androidx.recyclerview.widget.GapWorker: androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long)
com.danikula.videocache.HttpProxyCacheServer: com.danikula.videocache.HttpProxyCacheServerClients getClients(java.lang.String)
tv.danmaku.ijk.media.player.IMediaPlayer: void seekTo(long)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean areSelectionOverridesEqual(android.util.SparseArray,android.util.SparseArray)
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker: FlacBinarySearchSeeker(com.google.android.exoplayer2.util.FlacStreamMetadata,int,long,long)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: void parseTextSampleEntry(com.google.android.exoplayer2.util.ParsableByteArray,int,int,int,int,java.lang.String,com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)
com.google.android.exoplayer2.audio.DefaultAudioSink: int writeNonBlockingV21(android.media.AudioTrack,java.nio.ByteBuffer,int)
com.bumptech.glide.load.EncodeStrategy: EncodeStrategy(java.lang.String,int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToError()
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.PlaybackInfo getResetPlaybackInfo(boolean,boolean,boolean,int)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: SizeConfigStrategy$Key(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool)
androidx.appcompat.app.AlertController$4: AlertController$4(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
androidx.fragment.app.FragmentActivity$HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter: java.lang.String getDefaultString()
androidx.recyclerview.widget.GridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean isCleared()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult targetFoundResult(long)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: <clinit>()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void setByteOrder(java.nio.ByteOrder)
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String getString(java.lang.String)
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: ExifInterfaceImageHeaderParser()
com.google.android.exoplayer2.extractor.ts.Ac3Reader: void seek()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void applyStyleToText(android.text.SpannableStringBuilder,com.google.android.exoplayer2.text.webvtt.WebvttCssStyle,int,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
android.support.v4.media.MediaDescriptionCompatApi21: java.lang.CharSequence getTitle(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList)
com.bumptech.glide.load.model.StringLoader: android.net.Uri parseUri(java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$1: android.graphics.Rect onGetEpicenter(android.transition.Transition)
android.support.v4.media.session.IMediaControllerCallback$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.google.android.exoplayer2.decoder.SimpleDecoder: void flush()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int)
com.google.android.exoplayer2.extractor.wav.WavHeaderReader: android.util.Pair skipToData(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithBitrate(int)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToPlayingShow()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.appcompat.widget.AppCompatButton: void drawableStateChanged()
androidx.core.widget.NestedScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean allowPassthrough(int,java.lang.String)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(java.lang.CharSequence)
com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat onConfigure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
androidx.fragment.app.FragmentActivity: void onNewIntent(android.content.Intent)
androidx.exifinterface.media.ExifInterface: void swapBasedOnImageSize(int,int)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void readHeaderRemainder(com.google.android.exoplayer2.util.ParsableByteArray)
tv.danmaku.ijk.media.player.pragma.DebugLog: void d(java.lang.String,java.lang.String)
com.bumptech.glide.load.engine.DiskCacheStrategy$1: DiskCacheStrategy$1()
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: AttributeStrategy$KeyPool()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getVp9ProfileAndLevel(java.lang.String,java.lang.String[])
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: MediaControllerCompat$Callback$StubCompat(android.support.v4.media.session.MediaControllerCompat$Callback)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void setTrackSelection(com.google.android.exoplayer2.trackselection.TrackSelection)
com.google.android.exoplayer2.upstream.UdpDataSource: UdpDataSource(int)
com.google.android.exoplayer2.text.ssa.SsaSubtitle: int getEventTimeCount()
com.google.android.exoplayer2.mediacodec.MediaFormatUtil: void maybeSetByteBuffer(android.media.MediaFormat,java.lang.String,byte[])
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState[] values()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onGlobalLayout()
android.support.v4.media.MediaDescriptionCompatApi21: android.graphics.Bitmap getIconBitmap(java.lang.Object)
com.google.android.exoplayer2.audio.Sonic: void flush()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object wrapTransitionInSet(java.lang.Object)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void enterReadingAtomHeaderState()
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: Tx3gDecoder(java.util.List)
com.google.android.exoplayer2.upstream.Loader: boolean isLoading()
androidx.core.provider.FontsContractCompat$2: FontsContractCompat$2(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: int access$500(com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredHeight(android.view.View)
tv.danmaku.ijk.media.player.IMediaPlayer: void setDataSource(tv.danmaku.ijk.media.player.misc.IMediaDataSource)
com.google.android.exoplayer2.util.ParsableBitArray: boolean readBit()
com.google.android.exoplayer2.audio.DefaultAudioSink$InvalidAudioTrackTimestampException: DefaultAudioSink$InvalidAudioTrackTimestampException(java.lang.String)
com.google.android.exoplayer2.extractor.mp4.Track: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox getSampleDescriptionEncryptionBox(int)
com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues: DefaultSampleValues(int,int,int,int)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long closestVsync(long,long,long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void jumpToCurrentState()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.PlayerMessage setPayload(java.lang.Object)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry: boolean handles(java.lang.Class,java.lang.Class)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void removeListener(com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistEventListener)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void release()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean shouldInitCodec(com.google.android.exoplayer2.mediacodec.MediaCodecInfo)
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem: long getQueueId(java.lang.Object)
com.bumptech.glide.load.engine.Engine: void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key)
androidx.appcompat.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuOpened(int)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: int size()
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.exoplayer2.upstream.Loader$UnexpectedLoaderException: Loader$UnexpectedLoaderException(java.lang.Throwable)
com.google.android.exoplayer2.text.ttml.TtmlRenderUtil: java.lang.String applyTextElementSpacePolicy(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int)
android.support.v4.media.MediaMetadataCompat: int describeContents()
androidx.fragment.app.FragmentManagerImpl: void handleOnBackPressed()
com.google.android.exoplayer2.decoder.DecoderInputBuffer: void clear()
cn.jzvd.JzvdStd: int getLayoutId()
androidx.core.widget.NestedScrollView: boolean fullScroll(int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.collection.MapCollections$KeySet: java.lang.Object[] toArray(java.lang.Object[])
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generateReadingMediaPeriodEventTime()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean dispatchOnCreate()
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onPrepared(android.media.MediaPlayer)
com.google.android.exoplayer2.video.VideoRendererEventListener: void onVideoInputFormatChanged(com.google.android.exoplayer2.Format)
com.bumptech.glide.provider.ResourceDecoderRegistry: void append(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDecoderEnabled(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.fragment.app.BackStackRecord: java.lang.String getName()
com.google.android.exoplayer2.source.SinglePeriodTimeline: int getPeriodCount()
com.bumptech.glide.gifdecoder.StandardGifDecoder: int getNextDelay()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void applyTheme(android.content.res.Resources$Theme)
androidx.loader.app.LoaderManager: androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(androidx.core.view.WindowInsetsCompat)
cn.jzvd.demo.ActivityListView: void clickNormal(android.view.View)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.LayoutState: android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.core.view.NestedScrollingParentHelper: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.google.android.exoplayer2.ExoPlaybackException: ExoPlaybackException(int,java.lang.Throwable,int,com.google.android.exoplayer2.Format,int)
androidx.appcompat.app.AppCompatDelegateImpl: void updateResourcesConfigurationForNightMode(int,boolean,android.content.res.Configuration)
com.danikula.videocache.file.FileCache: void append(byte[],int)
com.danikula.videocache.file.LruDiskUsage: <clinit>()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void setValue(java.lang.Object)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.text.CaptionStyleCompat: com.google.android.exoplayer2.text.CaptionStyleCompat createFromCaptionStyleV21(android.view.accessibility.CaptioningManager$CaptionStyle)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addDisappearingView(android.view.View)
com.google.android.exoplayer2.upstream.RawResourceDataSource: int read(byte[],int,int)
com.google.android.exoplayer2.metadata.icy.IcyHeaders$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentTransitionImpl$2: FragmentTransitionImpl$2(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
androidx.fragment.app.Fragment: void performLowMemory()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean isVisible()
com.google.android.exoplayer2.ExoPlayerImpl: void handleEvent(android.os.Message)
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache: ModelLoaderRegistry$ModelLoaderCache()
com.danikula.videocache.ProxyCache: ProxyCache(com.danikula.videocache.Source,com.danikula.videocache.Cache)
com.bumptech.glide.manager.TargetTracker: TargetTracker()
com.google.android.exoplayer2.text.subrip.SubripSubtitle: int getNextEventTimeIndex(long)
com.google.android.exoplayer2.Timeline$1: int getIndexOfPeriod(java.lang.Object)
com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStart()
com.google.android.exoplayer2.upstream.DefaultAllocator: void trim()
com.bumptech.glide.load.resource.drawable.DrawableResource: android.graphics.drawable.Drawable get()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setIntent(android.content.Intent)
com.google.android.exoplayer2.DefaultRenderersFactory: void buildCameraMotionRenderers(android.content.Context,int,java.util.ArrayList)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$DefaultSeekTimestampConverter: long timeUsToTargetTime(long)
com.google.android.exoplayer2.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.text.dvb.DvbParser: void parseSubtitlingSegment(com.google.android.exoplayer2.util.ParsableBitArray,com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)
cn.jzvd.JZMediaSystem: long getCurrentPosition()
androidx.fragment.app.Fragment: void setNextAnim(int)
com.bumptech.glide.disklrucache.DiskLruCache: com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String)
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: AndroidTrackInfo(android.media.MediaPlayer$TrackInfo)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21: void processPendingCallbacksLocked()
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(int,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: boolean isSupportedAdaptiveVideoTrack(com.google.android.exoplayer2.Format,java.lang.String,int,int,int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: java.lang.CharSequence getHintText()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void reevaluateBuffer(long)
com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource$Factory: SsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean canApplyTheme()
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: int getNextEventTimeIndex(long)
androidx.appcompat.view.menu.CascadingMenuPopup$3: void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.bumptech.glide.util.LruCache: long getMaxSize()
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object[] newArray(int)
androidx.fragment.app.FragmentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.appcompat.widget.ResourcesWrapper: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)
androidx.fragment.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$8: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long framesToDurationUs(long)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void readFully(byte[],int,int)
cn.jzvd.demo.ActivityApi: void onBackPressed()
com.danikula.videocache.ProxyCache: void notifyNewCacheDataAvailable(long,long)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: int readFirstScrValue(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.lifecycle.ReportFragment: void onActivityCreated(android.os.Bundle)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: int getHorizontalOriginalOffset()
androidx.fragment.app.Fragment: void onDestroyOptionsMenu()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void calculateCachedEnd()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: ThumbnailStreamOpener(java.util.List,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver)
cn.jzvd.Jzvd: void setState(int,int,int)
androidx.appcompat.app.AppCompatDialog: void dismiss()
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context)
com.google.android.exoplayer2.SimpleExoPlayer: int getPlaybackSuppressionReason()
androidx.viewpager.widget.ViewPager: boolean onTouchEvent(android.view.MotionEvent)
com.google.android.exoplayer2.source.SampleQueue: long getLargestQueuedTimestampUs()
com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder: Mp4WebvttDecoder()
com.google.android.exoplayer2.audio.AudioCapabilities: int getMaxChannelCount()
androidx.core.text.PrecomputedTextCompat: void setSpan(java.lang.Object,int,int,int)
androidx.collection.ArraySet: boolean isEmpty()
com.bumptech.glide.load.resource.gif.StreamGifDecoder: StreamGifDecoder(java.util.List,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.bumptech.glide.request.transition.NoTransition: NoTransition()
androidx.core.provider.FontsContractCompat$FontInfo: int getResultCode()
androidx.core.provider.FontsContractCompat$3: void onReply(java.lang.Object)
tv.danmaku.ijk.media.player.IjkMediaMeta: long getLong(java.lang.String,long)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
androidx.appcompat.view.StandaloneActionMode: boolean isTitleOptional()
com.google.android.exoplayer2.source.ads.AdPlaybackState: int getAdGroupIndexForPositionUs(long)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void renderOutputBuffer(android.media.MediaCodec,int,long)
android.support.v4.media.session.PlaybackStateCompatApi21: long getBufferedPosition(java.lang.Object)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$ChunkIterator: boolean moveNext()
com.bumptech.glide.load.resource.drawable.DrawableResource: void initialize()
com.bumptech.glide.module.LibraryGlideModule: LibraryGlideModule()
com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle: long getEventTime(int)
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: void unlock()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState)
androidx.fragment.app.FragmentTransaction: androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean)
com.bumptech.glide.gifdecoder.GifHeaderParser: void readHeader()
com.google.android.exoplayer2.DefaultRenderersFactory: void buildTextRenderers(android.content.Context,com.google.android.exoplayer2.text.TextOutput,android.os.Looper,int,java.util.ArrayList)
com.bumptech.glide.request.ErrorRequestCoordinator: void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)
androidx.appcompat.view.menu.ActionMenuItem: ActionMenuItem(android.content.Context,int,int,int,int,java.lang.CharSequence)
com.bumptech.glide.load.engine.executor.GlideExecutor: boolean isTerminated()
com.google.android.exoplayer2.metadata.id3.BinaryFrame$1: com.google.android.exoplayer2.metadata.id3.BinaryFrame[] newArray(int)
androidx.recyclerview.widget.GapWorker: GapWorker()
com.bumptech.glide.RequestManager: com.bumptech.glide.RequestBuilder load(java.lang.Object)
com.google.android.exoplayer2.extractor.ChunkIndex: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator: void reset()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
androidx.core.provider.FontsContractCompat$2: void onReply(java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: double readFloat(com.google.android.exoplayer2.extractor.ExtractorInput,int)
androidx.fragment.app.FragmentManagerViewModel: boolean addRetainedFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View,int)
androidx.fragment.app.FragmentPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity)
androidx.appcompat.view.menu.MenuPopupHelper: void dismiss()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.lang.Runnable access$900(com.google.android.exoplayer2.source.ProgressiveMediaPeriod)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void onClick(android.view.View)
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$1: ActivityTinyWindowRecycleViewMultiHolder$1(cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder)
com.danikula.videocache.ProxyCacheUtils: java.lang.String computeMD5(java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateIsLoading()
com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo: MediaSourceEventListener$LoadEventInfo(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,long,long,long)
com.google.android.exoplayer2.extractor.FlacMetadataReader: boolean checkAndPeekStreamMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: java.lang.Class getDataClass()
android.support.v4.media.MediaBrowserCompat$MediaItem: <clinit>()
androidx.appcompat.graphics.drawable.DrawableWrapper: void draw(android.graphics.Canvas)
androidx.appcompat.widget.TintTypedArray: int getColor(int,int)
com.bumptech.glide.GlideContext: com.bumptech.glide.load.engine.Engine getEngine()
com.bumptech.glide.Registry$NoSourceEncoderAvailableException: Registry$NoSourceEncoderAvailableException(java.lang.Class)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: void writeToParcel(android.os.Parcel,int)
androidx.core.view.MenuItemCompat: android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isStateful()
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getChildStart(android.view.View)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener: MediaCodecAudioRenderer$AudioSinkListener(com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)
com.bumptech.glide.load.resource.bitmap.CenterCrop: void updateDiskCacheKey(java.security.MessageDigest)
androidx.appcompat.widget.AppCompatSpinner$1: AppCompatSpinner$1(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup)
com.google.android.exoplayer2.audio.DtsUtil: com.google.android.exoplayer2.Format parseDtsFormat(byte[],java.lang.String,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void updateLiveEdgeTimeUs(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeNotifyDownstreamFormat(int)
androidx.appcompat.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)
androidx.appcompat.widget.ToolbarWidgetWrapper: void initProgress()
com.bumptech.glide.request.target.CustomTarget: void onDestroy()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException: MediaCodecUtil$DecoderQueryException(java.lang.Throwable,com.google.android.exoplayer2.mediacodec.MediaCodecUtil$1)
androidx.appcompat.widget.AppCompatBackgroundHelper: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.GapWorker$1: int compare(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void setVolumeMultiplier(float)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getChildFragmentManager()
com.bumptech.glide.disklrucache.DiskLruCache$Value: DiskLruCache$Value(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcelable)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View)
com.bumptech.glide.RequestManager: void untrackOrDelegate(com.bumptech.glide.request.target.Target)
tv.danmaku.ijk.media.player.IMediaPlayer: int getVideoSarDen()
com.google.android.exoplayer2.PlayerMessage: com.google.android.exoplayer2.PlayerMessage$Target getTarget()
com.google.android.exoplayer2.audio.DtsUtil: int getDtsFrameSize(byte[])
com.google.android.exoplayer2.util.ConditionVariable: boolean isOpen()
com.bumptech.glide.disklrucache.DiskLruCache$Editor: void commit()
com.bumptech.glide.RequestManager: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.app.AppCompatDelegateImpl: boolean requestWindowFeature(int)
com.bumptech.glide.load.model.stream.UrlLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getAudioCachedDuration()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPosition(android.view.View)
androidx.recyclerview.widget.RecyclerView: void removeDetachedView(android.view.View,boolean)
androidx.appcompat.view.menu.MenuItemImpl: void setShowAsAction(int)
com.google.android.exoplayer2.text.webvtt.CssParser: java.lang.String parseSelector(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.StringBuilder)
androidx.recyclerview.widget.RecyclerView: void dispatchContentChangedIfNecessary()
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: PgsDecoder$CueBuilder()
tv.danmaku.ijk.media.player.TextureMediaPlayer: void setSurfaceTexture(android.graphics.SurfaceTexture)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlRegion parseRegionAttributes(org.xmlpull.v1.XmlPullParser,com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution,com.google.android.exoplayer2.text.ttml.TtmlDecoder$TtsExtent)
androidx.collection.SimpleArrayMap: java.lang.Object remove(java.lang.Object)
com.google.android.exoplayer2.text.cea.Cea608Decoder: char getExtendedPtDeChar(byte)
com.google.android.exoplayer2.source.SampleQueue: int getWriteIndex()
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo: StaggeredGridLayoutManager$AnchorInfo(androidx.recyclerview.widget.StaggeredGridLayoutManager)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
cn.jzvd.Jzvd: void onPrepared()
androidx.core.widget.NestedScrollView: int computeVerticalScrollOffset()
androidx.core.text.PrecomputedTextCompat$Params: int getBreakStrategy()
androidx.appcompat.widget.Toolbar$3: void onClick(android.view.View)
com.google.android.exoplayer2.extractor.ts.Ac4Reader: void packetFinished()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstPartiallyOrCompletelyInvisibleChild()
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(java.lang.Object)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean shouldWaitForKeys(boolean)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: void scheduleUpdate(float,float,boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onReset()
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: void setBounds(android.graphics.Rect,android.graphics.Rect)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: ActionMenuView$MenuBuilderCallback(androidx.appcompat.widget.ActionMenuView)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: byte[] getHdrStaticInfo()
com.google.android.exoplayer2.Timeline$Period: long getPositionInWindowMs()
androidx.core.widget.NestedScrollView: void onSizeChanged(int,int,int,int)
androidx.appcompat.widget.TooltipCompatHandler: void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler)
com.bumptech.glide.GlideContext: com.bumptech.glide.GlideExperiments getExperiments()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: int delimiterLength(int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDrmSessionReleased(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
com.google.android.exoplayer2.extractor.ogg.OpusReader: boolean verifyBitstreamType(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.view.menu.ActionMenuItem: boolean hasSubMenu()
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getNextMediaPeriodInfo(long,com.google.android.exoplayer2.PlaybackInfo)
androidx.versionedparcelable.VersionedParcel: void writeBoolean(boolean,int)
com.google.android.exoplayer2.text.ttml.TtmlRenderUtil: void applyStylesToSpan(android.text.SpannableStringBuilder,int,int,com.google.android.exoplayer2.text.ttml.TtmlStyle)
com.bumptech.glide.load.data.StreamAssetPathFetcher: java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState)
com.google.android.exoplayer2.source.hls.HlsSampleStream: boolean isReady()
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: com.bumptech.glide.load.DataSource getDataSource()
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: int getImageOrientation()
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.disklrucache.DiskLruCache getDiskCache()
androidx.core.content.res.FontResourcesParserCompat: java.util.List toByteArrayList(java.lang.String[])
org.slf4j.impl.AndroidLoggerFactory: java.lang.String getSimpleName(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)
com.google.android.exoplayer2.upstream.Loader: boolean hasFatalError()
com.google.android.exoplayer2.drm.DefaultDrmSession: void onError(java.lang.Exception)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: AdaptiveTrackSelection(com.google.android.exoplayer2.source.TrackGroup,int[],com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$BandwidthProvider,long,long,long,float,long,com.google.android.exoplayer2.util.Clock)
com.bumptech.glide.util.Util: boolean isOnMainThread()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioDecoderInitialized(java.lang.String,long,long)
com.google.android.exoplayer2.text.webvtt.CssParser: CssParser()
com.google.android.exoplayer2.ExoPlayerImplInternal: void resolvePendingMessagePositions()
androidx.fragment.app.FragmentFactory: boolean isFragmentClass(java.lang.ClassLoader,java.lang.String)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setLogEnabled(boolean)
androidx.core.view.MenuItemCompat: void setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: void run()
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: void close(java.io.InputStream)
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.hls.HlsChunkSource$EncryptionKeyChunk: void consume(byte[],int)
org.slf4j.impl.StaticLoggerBinder: StaticLoggerBinder()
com.danikula.videocache.ProxyCacheUtils: java.lang.String bytesToHexString(byte[])
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setTitle(java.lang.Object,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo updateMediaPeriodInfoToNewTimeline(com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo,com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.ExoPlaybackException createForUnexpected(java.lang.RuntimeException)
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int)
com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor: FloatResamplingAudioProcessor()
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: com.danikula.videocache.SourceInfo convert(android.database.Cursor)
com.google.android.exoplayer2.text.cea.Cea708Cue: int compareTo(com.google.android.exoplayer2.text.cea.Cea708Cue)
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.AndroidResources: <clinit>()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: int hashCode()
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: int getSize(android.graphics.Bitmap)
androidx.fragment.app.Fragment$4: Fragment$4(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.ExoPlayerImpl$1: void handleMessage(android.os.Message)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: boolean verifyBitstreamType(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.viewpager.widget.PagerAdapter: float getPageWidth(int)
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: boolean isAd()
com.bumptech.glide.load.engine.EngineJob: void removeCallback(com.bumptech.glide.request.ResourceCallback)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean access$202(com.google.android.exoplayer2.audio.MediaCodecAudioRenderer,boolean)
com.google.android.exoplayer2.util.SystemClock: SystemClock()
androidx.appcompat.widget.ActionBarOverlayLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createTextSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData,long)
com.bumptech.glide.load.engine.Jobs: java.util.Map getJobMap(boolean)
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: Loader$LoadErrorAction(int,long,com.google.android.exoplayer2.upstream.Loader$1)
com.google.android.exoplayer2.metadata.Metadata$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void setCaptionMode(int)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: com.google.android.exoplayer2.text.SubtitleDecoderException createUnexpectedDecodeException(java.lang.Throwable)
androidx.collection.ArraySet: int indexOf(java.lang.Object)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadError(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,int,long,long,long,java.io.IOException,boolean)
com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: JZMediaSystemAssertFolder(cn.jzvd.Jzvd)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void draw(android.graphics.Canvas)
com.google.android.exoplayer2.decoder.SimpleDecoder: void releaseOutputBuffer(com.google.android.exoplayer2.decoder.OutputBuffer)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate()
com.bumptech.glide.load.data.StreamAssetPathFetcher: void close(java.io.InputStream)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey: MediaCodecUtil$CodecKey(java.lang.String,boolean,boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int)
com.google.android.exoplayer2.ExoPlayerImpl: long getDuration()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initPath(android.graphics.Path)
androidx.collection.LongSparseArray: void append(long,java.lang.Object)
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri getUri()
androidx.core.util.LogWriter: void flushBuilder()
androidx.viewpager.widget.ViewPager$ViewPositionComparator: ViewPager$ViewPositionComparator()
com.google.android.exoplayer2.util.MimeTypes: int getEncoding(java.lang.String)
com.google.android.exoplayer2.extractor.ts.H265Reader: void nalUnitData(byte[],int,int)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.lifecycle.LifecycleRegistry: void forwardPass(androidx.lifecycle.LifecycleOwner)
androidx.fragment.app.FragmentManager: void setFragmentFactory(androidx.fragment.app.FragmentFactory)
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: ResourceManagerInternal$VdcInflateDelegate()
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: void add(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener: void onDrmKeysRestored()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: java.lang.String readUTF()
com.google.android.exoplayer2.text.ssa.SsaDecoder: SsaDecoder(java.util.List)
com.bumptech.glide.load.resource.bitmap.BitmapResource: java.lang.Class getResourceClass()
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder: void cleanup()
com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder: void writeUnsignedInt(java.io.DataOutputStream,long)
com.bumptech.glide.load.Options: java.lang.Object get(com.bumptech.glide.load.Option)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.util.ParsableByteArray: ParsableByteArray(byte[])
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: int getSampleCount()
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generateMediaPeriodEventTime(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void renderOutputBufferV21(android.media.MediaCodec,int,long,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean onLevelChange(int)
androidx.appcompat.view.menu.MenuBuilder: int getOrdering(int)
com.bumptech.glide.disklrucache.DiskLruCache: void checkNotClosed()
com.bumptech.glide.disklrucache.DiskLruCache: boolean journalRebuildRequired()
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int getSpan(int)
com.google.android.exoplayer2.audio.DefaultAudioSink: long access$1000(com.google.android.exoplayer2.audio.DefaultAudioSink)
com.bumptech.glide.load.engine.EngineResource: int getSize()
com.google.android.exoplayer2.drm.WidevineUtil: android.util.Pair getLicenseDurationRemainingSec(com.google.android.exoplayer2.drm.DrmSession)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: int describeContents()
androidx.core.graphics.drawable.WrappedDrawableApi21: void getOutline(android.graphics.Outline)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame$1: com.google.android.exoplayer2.metadata.id3.ChapterTocFrame[] newArray(int)
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1: Engine$DecodeJobFactory$1(com.bumptech.glide.load.engine.Engine$DecodeJobFactory)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createTextSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,int,com.google.android.exoplayer2.drm.DrmInitData,long,java.util.List)
com.google.android.exoplayer2.upstream.Loader: void maybeThrowError(int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int[] getAdaptiveVideoTracksForGroup(com.google.android.exoplayer2.source.TrackGroup,int[],boolean,int,int,int,int,int,int,int,boolean)
com.bumptech.glide.GlideExperiments: GlideExperiments(com.bumptech.glide.GlideExperiments$Builder)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuPresenter$Callback getCallback()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: boolean parseCue(java.lang.String,java.util.regex.Matcher,com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder,java.lang.StringBuilder,java.util.List)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable)
androidx.loader.app.LoaderManager: LoaderManager()
com.bumptech.glide.load.engine.ResourceCacheKey: java.lang.String toString()
cn.jzvd.demo.CustomMedia.JZMediaExo: long getCurrentPosition()
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.List invokeAll(java.util.Collection)
com.bumptech.glide.disklrucache.DiskLruCache: void close()
com.google.android.exoplayer2.text.SimpleSubtitleOutputBuffer: SimpleSubtitleOutputBuffer(com.google.android.exoplayer2.text.SimpleSubtitleDecoder)
com.google.android.exoplayer2.util.ParsableBitArray: void readBytes(byte[],int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: <clinit>()
androidx.appcompat.widget.ListPopupWindow: void setAnchorView(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.audio.BaseAudioProcessor: void onReset()
com.bumptech.glide.load.engine.LockedResource: com.bumptech.glide.util.pool.StateVerifier getVerifier()
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onPlaybackStateChanged(android.media.session.PlaybackState)
com.bumptech.glide.load.ImageHeaderParser$ImageType: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setFontSizeUnit(int)
tv.danmaku.ijk.media.player.IMediaPlayer: void setDataSource(android.content.Context,android.net.Uri)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
androidx.appcompat.view.menu.MenuBuilder: void dispatchPresenterUpdate(boolean)
androidx.appcompat.app.AppCompatViewInflater: <clinit>()
com.bumptech.glide.load.engine.GlideException: void addRootCauses(java.lang.Throwable,java.util.List)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.google.android.exoplayer2.util.SystemHandlerWrapper: boolean sendEmptyMessage(int)
com.google.android.exoplayer2.audio.SonicAudioProcessor: SonicAudioProcessor()
com.bumptech.glide.load.model.UrlUriLoader: <clinit>()
androidx.appcompat.view.menu.MenuPopup: android.graphics.Rect getEpicenterBounds()
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List copyStreams(java.util.List,int,java.util.List)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ThemeUtils: void checkAppCompatTheme(android.view.View,android.content.Context)
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getResolutionInline()
com.bumptech.glide.manager.DefaultConnectivityMonitor: void onDestroy()
com.google.android.exoplayer2.MediaPeriodHolder: long getStartPositionRendererTime()
com.google.android.exoplayer2.text.cea.CeaSubtitle: int getEventTimeCount()
com.bumptech.glide.load.engine.SourceGenerator: void cancel()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onEnd()
com.google.android.exoplayer2.text.ssa.SsaSubtitle: SsaSubtitle(java.util.List,java.util.List)
com.google.android.exoplayer2.metadata.Metadata: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationCancel(android.view.View)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: float derivePosition(int)
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: void initInternal(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: float getSpeed(float)
com.google.android.exoplayer2.text.ssa.SsaDecoder: void parseHeader(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: long readFirstPcrValueFromBuffer(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.load.engine.DecodeHelper: boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: <clinit>()
com.google.android.exoplayer2.text.webvtt.CssParser: java.lang.String parsePropertyValue(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.StringBuilder)
androidx.fragment.app.FragmentActivity: void onPostResume()
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean access$1000(com.google.android.exoplayer2.extractor.ts.TsExtractor)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: <clinit>()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean canScrollVertically()
androidx.core.graphics.TypefaceCompatBaseImpl: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsMonoChannelCountWorkaround(java.lang.String,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.extractor.VorbisUtil: com.google.android.exoplayer2.extractor.VorbisUtil$Mode[] readVorbisModes(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int compareTo(com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.widget.ActionBarBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeFinishPrepare()
android.support.v4.media.session.MediaControllerCompatApi21: java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
com.google.android.exoplayer2.util.ColorParser: int parseTtmlColor(java.lang.String)
com.google.android.exoplayer2.drm.DrmInitData$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.flac.FlacExtractor: <clinit>()
androidx.collection.MapCollections$KeySet: boolean remove(java.lang.Object)
com.bumptech.glide.manager.RequestManagerRetriever: boolean handleMessage(android.os.Message)
androidx.recyclerview.widget.RecyclerView$3: RecyclerView$3()
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider: com.bumptech.glide.load.engine.cache.DiskCache getDiskCache()
androidx.appcompat.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentManager getFragmentManager()
androidx.fragment.app.FragmentTransitionImpl: boolean containedBeforeIndex(java.util.List,android.view.View,int)
androidx.appcompat.widget.ListPopupWindow: void setDropDownGravity(int)
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool: void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock)
android.support.v4.media.MediaMetadataCompat: <clinit>()
androidx.appcompat.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.util.List access$400(com.google.android.exoplayer2.drm.DefaultDrmSessionManager)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int[],java.nio.ByteOrder)
androidx.appcompat.app.AppCompatDialog: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getChildEnd(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasureSpecs(int,int)
com.bumptech.glide.load.resource.gif.GifDrawable: void resetLoopCount()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setAudioStreamType(int)
com.bumptech.glide.load.data.InputStreamRewinder: InputStreamRewinder(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.fragment.app.FragmentController: boolean dispatchContextItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: android.media.MediaFormat getMediaFormat(com.google.android.exoplayer2.Format,java.lang.String,int,float)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.SimpleExoPlayer: int getCurrentAdIndexInAdGroup()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple: int hashCode()
com.google.android.exoplayer2.ExoPlayerImpl: boolean getPlayWhenReady()
org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()
com.danikula.videocache.file.Md5FileNameGenerator: java.lang.String generate(java.lang.String)
com.google.android.exoplayer2.Player$EventListener: void onPlayerError(com.google.android.exoplayer2.ExoPlaybackException)
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: java.lang.Object get()
androidx.core.widget.AutoScrollHelper$ClampedScroller: float getValueAt(long)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View)
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: void onUnderrun(int,long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedMeasuredWidth(android.view.View)
com.google.android.exoplayer2.audio.DefaultAudioSink: int access$1100(int)
com.google.android.exoplayer2.util.NalUnitUtil: com.google.android.exoplayer2.util.NalUnitUtil$PpsData parsePpsNalUnit(byte[],int,int)
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.fragment.app.FragmentTransitionImpl$3: FragmentTransitionImpl$3(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map)
androidx.appcompat.view.menu.MenuItemImpl: boolean isCheckable()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getAudioCachedPackets()
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: boolean maybeUpdateTimestamp()
com.google.android.exoplayer2.ExoPlayerImplInternal: void releaseInternal()
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.appcompat.app.AppCompatDelegateImpl: int mapNightMode(android.content.Context,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getHotspotBounds(android.graphics.Rect)
com.google.android.exoplayer2.metadata.id3.MlltFrame: <clinit>()
androidx.appcompat.app.AppCompatDelegateImpl: void cleanupAutoManagers()
com.google.android.exoplayer2.util.Util: long getPlayoutDurationForMediaDuration(long,float)
com.bumptech.glide.request.target.CustomTarget: void onStart()
androidx.appcompat.app.AlertController$1: AlertController$1(androidx.appcompat.app.AlertController)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: android.util.SparseArray readSelectionOverrides(android.os.Parcel)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: DefaultBandwidthMeter()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedScroll(int,int,int,int,int[])
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getVideoCachedPackets()
com.bumptech.glide.MemoryCategory: MemoryCategory(java.lang.String,int,float)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: boolean isReusable(com.google.android.exoplayer2.extractor.Extractor)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_profileEnd()
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeView(android.view.View)
com.bumptech.glide.load.engine.LoadPath: java.lang.String toString()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleC0Command(int)
androidx.core.view.ViewCompat: int getMinimumHeight(android.view.View)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: <clinit>()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void setOutputSurfaceV23(android.media.MediaCodec,android.view.Surface)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int addChild(android.graphics.drawable.Drawable)
androidx.appcompat.app.AlertController$CheckedItemAdapter: long getItemId(int)
com.google.android.exoplayer2.text.dvb.DvbSubtitle: DvbSubtitle(java.util.List)
com.bumptech.glide.load.engine.SourceGenerator: void startNextLoad(com.bumptech.glide.load.model.ModelLoader$LoadData)
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: int getVideoWidth()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void createOrientationHelpers()
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getTokenField()
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: <clinit>()
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean restoreKeys()
androidx.appcompat.widget.ThemeUtils: <clinit>()
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: boolean equals(java.lang.Object)
androidx.lifecycle.ClassesInfoCache$CallbackInfo: void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.bumptech.glide.util.pool.GlideTrace: void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean isEquivalentTo(com.bumptech.glide.request.Request)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(int,java.lang.CharSequence)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)
androidx.recyclerview.widget.LinearLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.viewpager.widget.ViewPager$ItemInfo: ViewPager$ItemInfo()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
androidx.recyclerview.widget.RecyclerView: void postAnimationRunner()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long)
androidx.collection.ArrayMap$1: java.lang.Object colGetEntry(int,int)
com.google.android.exoplayer2.util.StandaloneMediaClock: void stop()
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int,int)
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: AudioTagPayloadReader(com.google.android.exoplayer2.extractor.TrackOutput)
androidx.core.view.OneShotPreDrawListener: void onViewAttachedToWindow(android.view.View)
com.bumptech.glide.load.data.InputStreamRewinder$Factory: com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long seekToUs(long)
androidx.core.widget.AutoScrollHelper: void requestStop()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean)
com.bumptech.glide.util.MarkEnforcingInputStream: long getBytesToRead(long)
androidx.exifinterface.media.ExifInterface: void validateImages()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.Configuration getConfiguration()
com.google.android.exoplayer2.util.ParsableByteArray: int readUnsignedIntToInt()
com.bumptech.glide.util.ExceptionPassthroughInputStream: int available()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo newInstance(java.lang.String,java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities,boolean,boolean,boolean,boolean,boolean)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int getSpanGroupIndex(int,int)
androidx.appcompat.widget.SearchView: void forceSuggestionQuery()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getEndLine(int)
androidx.collection.ArraySet: java.lang.Object removeAt(int)
androidx.appcompat.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()
androidx.recyclerview.widget.RecyclerView: void onEnterLayoutOrScroll()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: JzvdStdMp3(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean onKey(android.view.View,int,android.view.KeyEvent)
com.google.android.exoplayer2.BaseRenderer: void handleMessage(int,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableContainer: DrawableContainer()
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.appcompat.view.menu.ListMenuItemView: void insertRadioButton()
com.google.android.exoplayer2.Format: int hashCode()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadStarted(com.google.android.exoplayer2.upstream.DataSpec,int,int,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long,long)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleC2Command(int)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void videoSizeChanged(int,int,int,float)
androidx.core.view.ViewPropertyAnimatorCompat: long getDuration()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float)
com.google.android.exoplayer2.ExoPlayerImplInternal: void prepare(com.google.android.exoplayer2.source.MediaSource,boolean,boolean)
com.google.android.exoplayer2.extractor.BinarySearchSeeker: int handlePendingSeek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.appcompat.widget.LinearLayoutCompat: boolean shouldDelayChildPressedState()
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup readSetupHeaders(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.ImageHeaderParserUtils: com.bumptech.glide.load.ImageHeaderParser$ImageType getTypeInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$TypeReader)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void prepare(com.google.android.exoplayer2.source.MediaPeriod$Callback,long)
tv.danmaku.ijk.media.player.pragma.DebugLog: void w(java.lang.String,java.lang.String,java.lang.Throwable)
androidx.appcompat.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: com.danikula.videocache.SourceInfo get(java.lang.String)
androidx.viewpager.widget.ViewPager: <clinit>()
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onLoadCanceled(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.metadata.flac.PictureFrame: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: MediaSource$MediaPeriodId(java.lang.Object,long)
com.google.android.exoplayer2.text.cea.CeaSubtitle: int getNextEventTimeIndex(long)
com.google.android.exoplayer2.Timeline$Period: int getAdGroupIndexForPositionUs(long)
androidx.appcompat.graphics.drawable.DrawableWrapper: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.arch.core.executor.ArchTaskExecutor: void postToMainThread(java.lang.Runnable)
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory: com.bumptech.glide.load.engine.cache.DiskCache build()
com.bumptech.glide.load.engine.Jobs: com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean)
com.bumptech.glide.manager.ApplicationLifecycle: ApplicationLifecycle()
com.bumptech.glide.load.EncodeStrategy: com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean needMirroring()
com.bumptech.glide.load.model.UriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.LinearLayoutCompat: void drawVerticalDivider(android.graphics.Canvas,int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: MatroskaExtractor(int)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onPositionDiscontinuity(int)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: long inputFramesToDurationUs(long)
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: void generateNewId()
androidx.fragment.app.Fragment: void onAttach(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: boolean setState(int[])
com.google.android.exoplayer2.util.Util: java.util.concurrent.ExecutorService newSingleThreadExecutor(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickVideoImageDiaplayOriginal(android.view.View)
tv.danmaku.ijk.media.player.MediaPlayerProxy$1: MediaPlayerProxy$1(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void buildAndPrepareMainSampleStreamWrapper(com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist,long,java.util.List,java.util.List,java.util.Map)
androidx.recyclerview.widget.RecyclerView: void invalidateGlows()
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEdgeType(int)
cn.jzvd.JZMediaInterface: void setSpeed(float)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int getCodecMaxInputSize(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format[])
androidx.appcompat.widget.DropDownListView: boolean isFocused()
cn.jzvd.demo.AdapterListView: long getItemId(int)
com.google.android.exoplayer2.audio.SonicAudioProcessor: void queueEndOfStream()
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: DvbSubtitleReader(java.util.List)
com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy: DefaultLoadErrorHandlingPolicy(int)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void start()
androidx.core.view.AccessibilityDelegateCompat: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.bumptech.glide.load.engine.DecodeHelper: java.util.List getModelLoaders(java.io.File)
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier: void setRecycled(boolean)
com.google.android.exoplayer2.upstream.StatsDataSource: void close()
com.bumptech.glide.load.ImageHeaderParserUtils$5: int getOrientation(com.bumptech.glide.load.ImageHeaderParser)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[])
com.bumptech.glide.load.resource.gif.StreamGifDecoder: byte[] inputStreamToBytes(java.io.InputStream)
cn.jzvd.JzvdStd: void onStateNormal()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantWidth()
androidx.core.app.CoreComponentFactory: android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int access$202(com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder,int)
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.core.widget.ImageViewCompat: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.appcompat.app.AppCompatDelegateImpl: void setTheme(int)
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.fragment.app.Fragment: void performStart()
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long getDataEndPosition()
com.google.android.exoplayer2.BaseRenderer: void replaceStream(com.google.android.exoplayer2.Format[],com.google.android.exoplayer2.source.SampleStream,long)
com.google.android.exoplayer2.extractor.mp4.Sniffer: boolean sniffInternal(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
com.google.android.exoplayer2.ExoPlayerImpl: long getContentBufferedPosition()
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View)
com.bumptech.glide.load.data.DataRewinderRegistry: <clinit>()
com.google.android.exoplayer2.DefaultLoadControl: boolean shouldContinueLoading(long,float)
com.google.android.exoplayer2.metadata.icy.IcyInfo: void writeToParcel(android.os.Parcel,int)
androidx.core.app.ActivityRecreator: boolean recreate(android.app.Activity)
com.bumptech.glide.gifdecoder.GifHeaderParser: void readNetscapeExt()
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: void onExitLayoutOrScroll(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int)
com.bumptech.glide.load.engine.Jobs: void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob)
com.google.android.exoplayer2.trackselection.TrackSelector: void init(com.google.android.exoplayer2.trackselection.TrackSelector$InvalidationListener,com.google.android.exoplayer2.upstream.BandwidthMeter)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: PsDurationReader()
androidx.appcompat.widget.TintContextWrapper: TintContextWrapper(android.content.Context)
com.bumptech.glide.load.Option$1: Option$1()
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: void attachColor(android.text.SpannableStringBuilder,int,int,int,int,int)
com.bumptech.glide.load.engine.SourceGenerator: SourceGenerator(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback)
com.bumptech.glide.util.pool.GlideTrace: void beginSection(java.lang.String)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: MediaSourceEventListener$EventDispatcher()
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher: java.lang.Class getDataClass()
com.bumptech.glide.gifdecoder.StandardGifDecoder: void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame)
com.google.android.exoplayer2.extractor.VorbisUtil: com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader readVorbisIdentificationHeader(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.arch.core.internal.FastSafeIterableMap: java.util.Map$Entry ceil(java.lang.Object)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performShortcut(int,android.view.KeyEvent,int)
androidx.core.view.ViewCompat: boolean hasOnClickListeners(android.view.View)
com.bumptech.glide.disklrucache.StrictLineReader: void fillBuf()
com.bumptech.glide.load.model.ModelCache$1: void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object)
com.google.android.exoplayer2.extractor.mp3.XingSeeker: com.google.android.exoplayer2.extractor.mp3.XingSeeker create(long,long,com.google.android.exoplayer2.extractor.MpegAudioHeader,com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.view.menu.MenuBuilder: void removeItem(int)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter)
com.bumptech.glide.gifdecoder.GifHeaderParser: void clear()
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkBitsPerSample(int,com.google.android.exoplayer2.util.FlacStreamMetadata)
com.bumptech.glide.load.model.LazyHeaders$Builder: LazyHeaders$Builder()
androidx.arch.core.internal.SafeIterableMap: java.lang.Object remove(java.lang.Object)
org.slf4j.helpers.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getStartLine()
com.bumptech.glide.signature.ObjectKey: java.lang.String toString()
androidx.appcompat.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable)
com.google.android.exoplayer2.metadata.id3.MlltFrame: int describeContents()
com.google.android.exoplayer2.extractor.ogg.OpusReader: OpusReader()
androidx.collection.ArraySet: <clinit>()
com.danikula.videocache.Pinger$PingCallable: java.lang.Boolean call()
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: DefaultOggSeeker(com.google.android.exoplayer2.extractor.ogg.StreamReader,long,long,long,long,boolean)
androidx.arch.core.executor.TaskExecutor: TaskExecutor()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onInvalidated()
androidx.appcompat.widget.SearchView: void onRestoreInstanceState(android.os.Parcelable)
androidx.recyclerview.widget.LinearLayoutManager: boolean canScrollHorizontally()
com.google.android.exoplayer2.extractor.ogg.OggExtractor: boolean sniffInternal(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.model.UnitModelLoader: <clinit>()
androidx.recyclerview.widget.RecyclerView$SavedState: void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState)
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void onDetachedFromWindow()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
cn.jzvd.Jzvd: void onSeekComplete()
androidx.customview.view.AbsSavedState: AbsSavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.appcompat.app.AppCompatDelegateImpl: void reopenMenu(boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean isAutoMirrored()
com.bumptech.glide.load.engine.EngineResource: void recycle()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.extractor.ts.H265Reader: void seek()
androidx.appcompat.widget.Toolbar: void setContentInsetsRelative(int,int)
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: DefaultTsPayloadReaderFactory(int,java.util.List)
org.slf4j.helpers.NOPLogger: java.lang.String getName()
com.google.android.exoplayer2.extractor.SeekPoint: <clinit>()
com.google.android.exoplayer2.drm.ErrorStateDrmSession: ErrorStateDrmSession(com.google.android.exoplayer2.drm.DrmSession$DrmSessionException)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.engine.DiskCacheStrategy$5: DiskCacheStrategy$5()
androidx.appcompat.widget.AppCompatImageHelper: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.android.exoplayer2.source.BaseMediaSource: void addEventListener(android.os.Handler,com.google.android.exoplayer2.source.MediaSourceEventListener)
com.google.android.exoplayer2.trackselection.TrackSelectionArray: com.google.android.exoplayer2.trackselection.TrackSelection get(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
com.bumptech.glide.disklrucache.DiskLruCache$1: DiskLruCache$1(com.bumptech.glide.disklrucache.DiskLruCache)
androidx.fragment.app.FragmentTransition: java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean)
android.support.v4.media.MediaBrowserCompat$MediaItem$1: android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean forceHasPendingData()
com.bumptech.glide.load.model.ByteArrayLoader: boolean handles(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow: MenuPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void setHdr10PlusInfoV29(android.media.MediaCodec,byte[])
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: void cancel()
com.google.android.exoplayer2.upstream.DefaultDataSource: void close()
com.google.android.exoplayer2.util.MimeTypes: boolean allSamplesAreSyncSamples(java.lang.String)
androidx.core.provider.FontsContractCompat: androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest)
androidx.recyclerview.widget.RecyclerView: void clearOldPositions()
androidx.appcompat.widget.SearchView$3: void onFocusChange(android.view.View,boolean)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isStateful()
com.google.android.exoplayer2.trackselection.BaseTrackSelection$DecreasingBandwidthComparator: BaseTrackSelection$DecreasingBandwidthComparator(com.google.android.exoplayer2.trackselection.BaseTrackSelection$1)
com.bumptech.glide.load.model.LazyHeaders: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: MatroskaExtractor$Track()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: <clinit>()
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.exoplayer2.extractor.MpegAudioHeader: int getFrameSizeInSamples(int,int)
com.bumptech.glide.load.resource.transcode.UnitTranscoder: <clinit>()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setTargetVelocity(float,float)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean preDispatch(android.view.KeyEvent)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAlpha(int)
com.google.android.exoplayer2.BaseRenderer: boolean supportsFormatDrm(com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmInitData)
android.support.v4.media.MediaBrowserCompat$MediaItem: MediaBrowserCompat$MediaItem(android.os.Parcel)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.core.view.ViewCompat$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: void initForPrivateFrame(int,int)
com.bumptech.glide.manager.RequestManagerFragment: void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment)
com.google.android.exoplayer2.audio.AudioRendererEventListener: void onAudioDisabled(com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.upstream.ParsingLoadable: ParsingLoadable(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,int,com.google.android.exoplayer2.upstream.ParsingLoadable$Parser)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int)
androidx.recyclerview.widget.GridLayoutManager: int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener: void onDrmSessionReleased()
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: void readNalUnitData(byte[],int,int)
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String)
com.bumptech.glide.Registry$NoImageHeaderParserException: Registry$NoImageHeaderParserException()
com.google.android.exoplayer2.video.VideoListener: void onRenderedFirstFrame()
tv.danmaku.ijk.media.player.MediaPlayerProxy: int getVideoSarDen()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: void updateBandwidthMeter(com.google.android.exoplayer2.upstream.DefaultBandwidthMeter)
cn.jzvd.JzvdStd: void onClick(android.view.View)
org.slf4j.LoggerFactory: boolean messageContainsOrgSlf4jImplStaticLoggerBinder(java.lang.String)
com.bumptech.glide.manager.DoNothingFirstFrameWaiter: DoNothingFirstFrameWaiter()
com.bumptech.glide.load.HttpException: HttpException(java.lang.String,int,java.lang.Throwable)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long access$1000(com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap)
com.google.android.exoplayer2.metadata.flac.PictureFrame$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
com.google.android.exoplayer2.audio.DefaultAudioSink: void applyPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters,long)
com.google.android.exoplayer2.MediaPeriodHolder: void associateNoSampleRenderersWithEmptySampleStream(com.google.android.exoplayer2.source.SampleStream[])
com.google.android.exoplayer2.offline.StreamKey: boolean equals(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,android.graphics.ImageDecoder$OnHeaderDecodedListener)
androidx.recyclerview.widget.RecyclerView: void considerReleasingGlowsOnScroll(int,int)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: boolean hasBackgroundColor()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: java.lang.String getFileName()
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
com.google.android.exoplayer2.trackselection.MappingTrackSelector: MappingTrackSelector()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: SafeIterableMap$DescendingIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.appcompat.app.AppCompatDelegateImpl$6: void run()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.AssetManager getAssets()
com.google.android.exoplayer2.extractor.SeekPoint: SeekPoint(long,long)
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker: PsBinarySearchSeeker(com.google.android.exoplayer2.util.TimestampAdjuster,long,long)
com.bumptech.glide.Registry: com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
com.bumptech.glide.load.engine.EngineJob: <clinit>()
androidx.fragment.app.Fragment: void onViewStateRestored(android.os.Bundle)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups()
com.google.android.exoplayer2.extractor.MpegAudioHeader: MpegAudioHeader()
cn.jzvd.demo.ActivityListViewFragmentViewPager: boolean onOptionsItemSelected(android.view.MenuItem)
com.bumptech.glide.load.engine.executor.GlideExecutor: int calculateBestThreadCount()
androidx.appcompat.widget.VectorEnabledTintResources: android.graphics.drawable.Drawable superGetDrawable(int)
com.google.android.exoplayer2.util.ParsableBitArray: void skipBit()
androidx.appcompat.widget.DropDownListView: void updateSelectorStateCompat()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams()
androidx.fragment.app.FragmentPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)
androidx.appcompat.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)
com.google.android.exoplayer2.audio.AudioListener: void onVolumeChanged(float)
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
androidx.appcompat.app.AppCompatDialog: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: int getViewTypeCount()
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl()
androidx.appcompat.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)
com.bumptech.glide.load.model.ModelCache$ModelKey: ModelCache$ModelKey()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager(android.content.Context)
androidx.appcompat.view.menu.StandardMenuPopup: void setAnchorView(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean)
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.RendererConfiguration getConfiguration()
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher: AssetFileDescriptorLocalUriFetcher(android.content.ContentResolver,android.net.Uri)
com.google.android.exoplayer2.decoder.Buffer: boolean isDecodeOnly()
androidx.lifecycle.Lifecycling: int resolveObserverCallbackType(java.lang.Class)
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void recycle()
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: long getBufferedPositionUs()
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: AudioTrackPositionTracker(com.google.android.exoplayer2.audio.AudioTrackPositionTracker$Listener)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters$1: DefaultTrackSelector$Parameters$1()
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void output(java.nio.ByteBuffer)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator: HlsPlaylistParser$LineIterator(java.util.Queue,java.io.BufferedReader)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor: int hashCode()
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLSurface createEGLSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int)
androidx.appcompat.widget.AppCompatSeekBarHelper: void drawableStateChanged()
androidx.appcompat.view.WindowCallbackWrapper: void onDetachedFromWindow()
androidx.viewpager.widget.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)
com.google.android.exoplayer2.extractor.ts.Ac4Reader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnCompletionListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener)
com.bumptech.glide.load.resource.bitmap.Downsampler: boolean handles(android.os.ParcelFileDescriptor)
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder: java.lang.Object rewindAndGet()
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1: ByteArrayLoader$StreamFactory$1(com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory)
com.google.android.exoplayer2.audio.Sonic: void queueEndOfStream()
androidx.appcompat.view.menu.StandardMenuPopup: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
com.google.android.exoplayer2.util.ParsableBitArray: int getPosition()
androidx.fragment.app.FragmentViewLifecycleOwner: void initialize()
cn.jzvd.demo.ActivityTinyWindowRecycleView: ActivityTinyWindowRecycleView()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData parseTkhd(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener)
androidx.fragment.app.FragmentManagerViewModel$1: FragmentManagerViewModel$1()
androidx.collection.ArraySet: java.lang.Object valueAt(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.request.SingleRequest$Status: <clinit>()
androidx.recyclerview.widget.OrientationHelper$1: int getTransformedStartWithDecoration(android.view.View)
com.bumptech.glide.request.SingleRequest: void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void createAllFutures()
com.google.android.exoplayer2.util.ParsableBitArray: void byteAlign()
com.bumptech.glide.request.ErrorRequestCoordinator: boolean isCleared()
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent(int)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.util.Map$Entry next()
org.slf4j.LoggerFactory: boolean isAndroid()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylistImmediately()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildResolutionString(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: long getDurationUs()
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: void resetTrimmedFrameCount()
androidx.appcompat.widget.TooltipCompatHandler: boolean onHover(android.view.View,android.view.MotionEvent)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[])
com.google.android.exoplayer2.extractor.ts.LatmReader: void parseStreamMuxConfig(com.google.android.exoplayer2.util.ParsableBitArray)
androidx.fragment.app.Fragment: void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)
tv.danmaku.ijk.media.player.ISurfaceTextureHolder: void setSurfaceTextureHost(tv.danmaku.ijk.media.player.ISurfaceTextureHost)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
androidx.core.widget.NestedScrollView: void endDrag()
cn.jzvd.JZUtils: <clinit>()
androidx.recyclerview.widget.LinearLayoutManager: int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.danikula.videocache.file.LruDiskUsage: void touchInBackground(java.io.File)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2: void onGlobalLayout()
com.google.android.exoplayer2.source.SampleQueue: int read(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean,boolean,long)
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: DecodeJob$DeferredEncodeManager()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$5: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll(int)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo)
androidx.appcompat.widget.MenuPopupWindow: void setExitTransition(java.lang.Object)
androidx.fragment.app.FragmentManagerViewModel: androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.view.menu.MenuBuilder peekMenu()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int getAutoSizeMinTextSize()
androidx.appcompat.view.menu.SubMenuWrapperICS: SubMenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportSubMenu)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onLoadingChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,boolean)
androidx.core.app.ActivityRecreator: boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity)
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: ListPopupWindow$PopupDataSetObserver(androidx.appcompat.widget.ListPopupWindow)
androidx.appcompat.widget.LinearLayoutCompat: int getLocationOffset(android.view.View)
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: void onFlush()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: void setBundle(android.os.Bundle)
androidx.core.util.LogWriter: LogWriter(java.lang.String)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int getPcmEncoding(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.MediaPeriodHolder: void reevaluateBuffer(long)
androidx.viewpager.widget.ViewPager: int getClientWidth()
androidx.appcompat.widget.ResourcesWrapper: float getFraction(int,int,int)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.lang.Object getForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key,java.lang.Class)
androidx.appcompat.graphics.drawable.DrawableContainer: int getChangingConfigurations()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int readFromPeekBuffer(byte[],int,int)
com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker: long getTimeUs(long)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.metadata.Metadata parseUdtaMeta(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: void notifyDataSetChanged()
com.google.android.exoplayer2.source.hls.HlsMediaChunk: void loadMedia()
com.bumptech.glide.manager.RequestTracker: java.lang.String toString()
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationStart(android.view.View)
androidx.appcompat.widget.ActionBarContextView: void killMode()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onUpstreamFormatChanged(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.resource.gif.GifDrawableResource: java.lang.Class getResourceClass()
androidx.appcompat.view.menu.MenuPopupHelper: void showPopup(int,int,boolean,boolean)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: boolean onError(android.media.MediaPlayer,int,int)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationCancel(android.view.View)
androidx.savedstate.SavedStateRegistry: void performSave(android.os.Bundle)
androidx.collection.ArrayMap: ArrayMap()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionResume(android.transition.Transition)
com.google.android.exoplayer2.audio.DefaultAudioSink: void flush()
androidx.fragment.app.FragmentManagerImpl$FragmentTag: <clinit>()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onQueueChanged(java.util.List)
androidx.appcompat.view.menu.ListMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.bumptech.glide.request.SingleRequest: void clear()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver getInstance(android.content.Context)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean canScrollVertically()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean enableRotatedVerticalResolutionWorkaround(java.lang.String)
androidx.fragment.app.FragmentFactory: FragmentFactory()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.manager.RequestManagerFragment: void setRequestManager(com.bumptech.glide.RequestManager)
androidx.appcompat.app.AlertController: int getIconAttributeResId(int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.util.ParsableByteArray: void reset()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: long findFrame(com.google.android.exoplayer2.util.ParsableByteArray,boolean)
androidx.recyclerview.widget.LinearLayoutManager: boolean supportsPredictiveItemAnimations()
androidx.arch.core.internal.SafeIterableMap: int hashCode()
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformHeight(int,int)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void onAnimationsEnded()
com.google.android.exoplayer2.extractor.VorbisUtil$Mode: VorbisUtil$Mode(boolean,int,int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void clearColorFilter()
androidx.fragment.app.FragmentTransition: boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onVolumeChanged(float)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatActivity tryUnwrapContext()
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollRange()
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: void run()
androidx.recyclerview.widget.GridLayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: android.text.SpannableString buildCurrentLine()
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: StreamBitmapDecoder(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void stop()
com.bumptech.glide.load.Option: boolean equals(java.lang.Object)
com.bumptech.glide.GlideContext: com.bumptech.glide.request.RequestOptions getDefaultRequestOptions()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int access$102(com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder,int)
com.bumptech.glide.disklrucache.DiskLruCache$Editor: DiskLruCache$Editor(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry)
com.google.android.exoplayer2.PlayerMessage: boolean isCanceled()
androidx.core.view.MenuItemCompat: void setTooltipText(android.view.MenuItem,java.lang.CharSequence)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: MediaControllerCompatApi21$CallbackProxy(android.support.v4.media.session.MediaControllerCompatApi21$Callback)
com.google.android.exoplayer2.audio.BaseAudioProcessor: boolean isActive()
androidx.appcompat.app.AppCompatViewInflater: void checkOnClickListener(android.view.View,android.util.AttributeSet)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.lang.String getLengths()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnSeekCompleteListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener)
androidx.appcompat.view.menu.ActionMenuItem: int getOrder()
com.google.android.exoplayer2.source.chunk.DataChunk: void load()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.bumptech.glide.load.data.HttpUrlFetcher: void cleanup()
com.google.android.exoplayer2.Timeline$1: com.google.android.exoplayer2.Timeline$Window getWindow(int,com.google.android.exoplayer2.Timeline$Window,long)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: void experimental_setBandwidthAllocationCheckpoints(long[][])
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: void release()
com.bumptech.glide.load.data.DataRewinderRegistry$1: DataRewinderRegistry$1()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean readToFlagsOnlyBuffer(boolean)
androidx.fragment.app.FragmentTransitionCompat21: void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList)
com.google.android.exoplayer2.text.cea.Cea608Decoder: char getSpecialNorthAmericanChar(byte)
com.google.android.exoplayer2.util.EGLSurfaceTexture: void dispatchOnFrameAvailable()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void release()
androidx.appcompat.app.TwilightManager$TwilightState: TwilightManager$TwilightState()
androidx.appcompat.widget.DrawableUtils: android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void release()
androidx.appcompat.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)
com.bumptech.glide.request.SingleRequest$Status: SingleRequest$Status(java.lang.String,int)
com.bumptech.glide.request.SingleRequest: void assertNotCallingCallbacks()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None: DownsampleStrategy$None()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onLoadingChanged(boolean)
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: DefaultTsPayloadReaderFactory(int)
com.bumptech.glide.signature.ObjectKey: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long getNextLoadPositionUs()
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: IntegerArrayAdapter()
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState(android.os.Parcel)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.ActionBar getSupportActionBar()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: android.util.Pair parseEsdsFromParent(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean isTimelineReady()
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: <clinit>()
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: ClippingMediaPeriod$ClippingSampleStream(com.google.android.exoplayer2.source.ClippingMediaPeriod,com.google.android.exoplayer2.source.SampleStream)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()
com.google.android.exoplayer2.ExoPlayerImplInternal: void ensureStopped(com.google.android.exoplayer2.Renderer)
com.google.android.exoplayer2.ExoPlayerFactory: com.google.android.exoplayer2.SimpleExoPlayer newSimpleInstance(android.content.Context,com.google.android.exoplayer2.RenderersFactory,com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.analytics.AnalyticsCollector,android.os.Looper)
cn.jzvd.demo.ActivityDirectPlay: ActivityDirectPlay()
com.google.android.exoplayer2.source.hls.HlsChunkSource$InitializationTrackSelection: int getSelectionReason()
androidx.appcompat.widget.ActionMenuView: boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder: void writeNullTerminatedString(java.io.DataOutputStream,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: java.lang.String normalizeUndeterminedLanguageToNull(java.lang.String)
org.slf4j.helpers.SubstituteLogger: void error(java.lang.String,java.lang.Throwable)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean isTitleOptional()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean suggestedSizeFitsInSpace(int,android.graphics.RectF)
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested()
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: long readInteger(com.google.android.exoplayer2.extractor.ExtractorInput,int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.view.menu.MenuBuilder: boolean isShortcutsVisible()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void run()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDrmKeysRestored()
androidx.fragment.app.BackStackRecord: androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment)
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache: void clear()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean hasStableIds()
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: int getImageOrientation()
com.google.android.exoplayer2.source.TrackGroup: com.google.android.exoplayer2.Format getFormat(int)
androidx.appcompat.widget.AppCompatSpinner$SavedState: AppCompatSpinner$SavedState(android.os.Parcelable)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader: short getUInt8()
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildRoleString(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.DataSource: DataSource(java.lang.String,int)
com.google.android.exoplayer2.audio.AudioCapabilities: AudioCapabilities(int[],int)
androidx.fragment.app.FragmentManagerImpl: void dispatchDestroy()
cn.jzvd.JZMediaSystem: boolean onError(android.media.MediaPlayer,int,int)
androidx.fragment.app.FragmentContainer: FragmentContainer()
androidx.appcompat.widget.ScrollingTabContainerView$TabView: androidx.appcompat.app.ActionBar$Tab getTab()
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: void run()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: android.graphics.Point getMaxVideoSizeInViewport(boolean,int,int,int,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: int getVideoSarNum()
androidx.core.content.res.ResourcesCompat$FontCallback: ResourcesCompat$FontCallback()
androidx.appcompat.view.menu.StandardMenuPopup: <clinit>()
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: void onQueueEndOfStream()
com.bumptech.glide.load.model.FileLoader$FileFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.google.android.exoplayer2.ui.SubtitlePainter: void setupBitmapLayout()
androidx.appcompat.widget.AppCompatSpinner: void onDetachedFromWindow()
androidx.activity.ComponentActivity$3: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.widget.ButtonBarLayout: boolean isStacked()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getMinimumHeight()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: boolean isTransitionReversed(int,int)
androidx.appcompat.view.menu.MenuBuilder: void stopDispatchingItemsChanged()
androidx.fragment.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
tv.danmaku.ijk.media.player.IMediaPlayer: void setVolume(float,float)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
org.slf4j.helpers.NamedLoggerBase: NamedLoggerBase()
com.bumptech.glide.load.resource.bitmap.CenterInside: int hashCode()
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: void seek(long,long)
androidx.appcompat.widget.AppCompatImageButton: boolean hasOverlappingRendering()
androidx.appcompat.content.res.AppCompatResources: <clinit>()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: ByteArrayAdapter()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable()
androidx.fragment.app.Fragment: void performDestroyView()
org.slf4j.helpers.SubstituteLoggerFactory: void postInitialization()
org.slf4j.helpers.SubstituteLogger: java.lang.String getName()
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: void offer()
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: ExoPlayerImplInternal$PlaybackInfoUpdate(com.google.android.exoplayer2.ExoPlayerImplInternal$1)
com.google.android.exoplayer2.trackselection.MappingTrackSelector: int[] getMixedMimeTypeAdaptationSupports(com.google.android.exoplayer2.RendererCapabilities[])
androidx.core.view.MotionEventCompat: boolean isFromSource(android.view.MotionEvent,int)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: java.lang.Class getResourceClass()
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList inflateColorStateList(android.content.Context,int)
androidx.appcompat.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()
androidx.fragment.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object)
com.google.android.exoplayer2.ui.SubtitlePainter: void drawTextLayout(android.graphics.Canvas)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: AnimatedStateListDrawableCompat$FrameInterpolator(android.graphics.drawable.AnimationDrawable,boolean)
androidx.versionedparcelable.VersionedParcelParcel: java.lang.String readString()
androidx.appcompat.app.AlertController: void centerButton(android.widget.Button)
androidx.collection.ArraySet: int hashCode()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: void removeClearedReferences()
com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager setDefaultRequestOptions(com.bumptech.glide.request.RequestOptions)
androidx.core.provider.FontsContractCompat$FontInfo: boolean isItalic()
com.bumptech.glide.disklrucache.DiskLruCache$Entry: boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
androidx.core.graphics.TypefaceCompatApi24Impl: java.lang.Object newFamily()
androidx.fragment.app.FragmentManagerState: int describeContents()
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: IjkMediaCodecInfo()
com.bumptech.glide.request.ErrorRequestCoordinator: boolean parentCanNotifyCleared()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean setFrame(int,int,int,int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onMediaPeriodCreated(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)
com.danikula.videocache.ProxyCacheUtils: void assertBuffer(byte[],long,int)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: int findResourceIdFromResourceIdUri(android.net.Uri)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setListener(com.google.android.exoplayer2.audio.AudioSink$Listener)
androidx.fragment.app.FragmentManagerViewModel: <clinit>()
androidx.fragment.app.FragmentManagerImpl: void ensureInflatedFragmentView(androidx.fragment.app.Fragment)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int)
com.bumptech.glide.util.pool.FactoryPools: androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory)
androidx.appcompat.view.menu.MenuDialogHelper: MenuDialogHelper(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride getSelectionOverride(int,com.google.android.exoplayer2.source.TrackGroupArray)
androidx.versionedparcelable.VersionedParcel: boolean isStream()
com.google.android.exoplayer2.extractor.ts.SectionReader: void seek()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: int decodeBlockSize(byte,com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)
cn.jzvd.demo.FragmentDemo: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: SpliceInsertCommand$ComponentSplice(int,long,long,com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: com.google.android.exoplayer2.mediacodec.MediaCodecInfo getPassthroughDecoderInfo()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: <clinit>()
androidx.fragment.app.Fragment$4: android.view.View onFindViewById(int)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void notifyOnVideoSizeChanged(int,int,int,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getCacheStatisticCountBytes()
com.google.android.exoplayer2.text.cea.CeaDecoder: java.lang.Object dequeueOutputBuffer()
com.google.android.exoplayer2.SimpleExoPlayer: void setPlayWhenReady(boolean)
com.bumptech.glide.load.engine.DiskCacheStrategy$3: boolean decodeCachedResource()
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean openInternal(boolean)
androidx.exifinterface.media.ExifInterface: java.lang.String byteArrayToHexString(byte[])
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onStarted()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getCodecProfileAndLevel(com.google.android.exoplayer2.Format)
androidx.appcompat.content.res.AppCompatResources: android.content.res.ColorStateList getColorStateList(android.content.Context,int)
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newDiskCacheBuilder()
com.google.android.exoplayer2.source.TrackGroup: int hashCode()
com.google.android.exoplayer2.ExoPlayerImplInternal: void updatePlaybackPositions()
com.google.android.exoplayer2.BaseRenderer: int getTrackType()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isVisible()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int getTrackIndexOfNextReadSample(long)
androidx.media.AudioAttributesCompat: boolean equals(java.lang.Object)
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: java.io.File get(com.bumptech.glide.load.Key)
com.google.android.exoplayer2.util.Assertions: java.lang.String checkNotEmpty(java.lang.String)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(java.io.File)
com.google.android.exoplayer2.source.SampleQueue: void release()
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources)
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer: CeaDecoder$CeaInputBuffer()
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries()
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void inputFormatChanged(com.google.android.exoplayer2.Format)
androidx.appcompat.app.ResourcesFlusher: void flushNougats(android.content.res.Resources)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions decode(java.lang.Class)
com.bumptech.glide.load.ImageHeaderParserUtils$2: ImageHeaderParserUtils$2(java.nio.ByteBuffer)
com.google.android.exoplayer2.audio.DefaultAudioSink: DefaultAudioSink(com.google.android.exoplayer2.audio.AudioCapabilities,com.google.android.exoplayer2.audio.AudioProcessor[])
androidx.recyclerview.widget.ViewBoundsCheck: android.view.View findOneViewWithinBoundFlags(int,int,int,int)
com.google.android.exoplayer2.audio.Sonic: int findPitchPeriod(short[],int)
androidx.appcompat.view.menu.MenuItemWrapperICS: MenuItemWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenuItem)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: Toolbar$ExpandedActionViewMenuPresenter(androidx.appcompat.widget.Toolbar)
com.google.android.exoplayer2.source.SampleQueue: int getReadIndex()
androidx.appcompat.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createContainerFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: MemorySizeCalculator$Builder(android.content.Context)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context)
org.slf4j.helpers.MessageFormatter: void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Map)
com.google.android.exoplayer2.PlayerMessage: void markAsProcessed(boolean)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: DiskLruCache$Entry(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String)
com.bumptech.glide.load.model.MultiModelLoader: MultiModelLoader(java.util.List,androidx.core.util.Pools$Pool)
com.bumptech.glide.request.target.ImageViewTarget: void onLoadStarted(android.graphics.drawable.Drawable)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: java.lang.Object getItem(int)
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.customview.view.AbsSavedState: int describeContents()
org.slf4j.impl.AndroidLoggerAdapter: void error(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet)
cn.jzvd.JzvdStd: void showProgressDialog(float,java.lang.String,long,java.lang.String,long)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderView(android.view.View)
com.google.android.exoplayer2.decoder.DecoderCounters: DecoderCounters()
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback: boolean handleMessage(android.os.Message)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: void onSeekFinished()
com.bumptech.glide.load.resource.gif.GifDrawable: void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap)
androidx.core.graphics.drawable.WrappedDrawableApi14: void draw(android.graphics.Canvas)
androidx.appcompat.view.menu.MenuItemImpl: boolean showsTextAsAction()
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
androidx.viewpager.widget.ViewPager: void computeScroll()
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: int compareTo(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: android.view.View inflate()
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.Transformation getTransformation(java.lang.Class)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder$CueStyle: Cea608Decoder$CueBuilder$CueStyle(int,boolean,int)
androidx.appcompat.widget.MenuPopupWindow: void setTouchModal(boolean)
com.google.android.exoplayer2.text.dvb.DvbParser: void paintPixelDataSubBlock(byte[],int[],int,int,int,android.graphics.Paint,android.graphics.Canvas)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setExitFadeDuration(int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void finish()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoadCompleted(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long)
cn.jzvd.JZMediaInterface: void release()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void endMasterElement(int)
com.google.android.exoplayer2.source.TrackGroupArray: int describeContents()
androidx.appcompat.widget.AlertDialogLayout: void forceUniformWidth(int,int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.widget.NestedScrollView: void ensureGlows()
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: com.google.android.exoplayer2.text.SubtitleDecoderException decode(com.google.android.exoplayer2.text.SubtitleInputBuffer,com.google.android.exoplayer2.text.SubtitleOutputBuffer,boolean)
androidx.recyclerview.widget.RecyclerView: java.lang.String exceptionLabel()
cn.jzvd.JzvdStd: android.app.Dialog createDialogWithView(android.view.View)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData$1: com.google.android.exoplayer2.drm.DrmInitData$SchemeData[] newArray(int)
com.google.android.exoplayer2.extractor.mp4.TrackFragment: TrackFragment()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void show(int,int)
com.bumptech.glide.load.engine.DecodeHelper: int getWidth()
org.slf4j.impl.AndroidLoggerAdapter: void log(int,java.lang.String,java.lang.Throwable)
androidx.appcompat.widget.SearchView$8: SearchView$8(androidx.appcompat.widget.SearchView)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean parentCanNotifyStatusChanged()
com.google.android.exoplayer2.source.hls.HlsChunkSource$InitializationTrackSelection: java.lang.Object getSelectionData()
com.google.android.exoplayer2.util.ColorParser: int argb(int,int,int,int)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: java.lang.String toString()
org.slf4j.impl.AndroidLoggerAdapter: void warn(java.lang.String,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createAudioContainerFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.android.exoplayer2.metadata.Metadata,int,int,int,java.util.List,int,int,java.lang.String)
com.google.android.exoplayer2.ExoPlayerLibraryInfo: void registerModule(java.lang.String)
com.bumptech.glide.load.resource.UnitTransformation: UnitTransformation()
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: com.google.android.exoplayer2.extractor.ogg.StreamReader access$100(com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)
com.google.android.exoplayer2.Timeline$1: com.google.android.exoplayer2.Timeline$Period getPeriod(int,com.google.android.exoplayer2.Timeline$Period,boolean)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistParserFactory: DefaultHlsPlaylistParserFactory()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: boolean validateFrames(com.google.android.exoplayer2.util.ParsableByteArray,int,int,boolean)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getChangingConfigurations()
androidx.fragment.app.FragmentTransition: void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
androidx.recyclerview.widget.RecyclerView$ViewHolder: int getAdapterPosition()
com.google.android.exoplayer2.audio.BaseAudioProcessor: void flush()
com.bumptech.glide.request.target.ViewTarget: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
androidx.appcompat.widget.SearchView: void onWindowFocusChanged(boolean)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: android.os.Handler access$500(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
androidx.appcompat.view.menu.ListMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.PagerAdapter getAdapter()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer$OnFrameRenderedListenerV23: boolean handleMessage(android.os.Message)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isHardwareAccelerated(android.media.MediaCodecInfo)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.lang.Object readAmfData(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.core.widget.NestedScrollView: void onOverScrolled(int,int,boolean,boolean)
com.bumptech.glide.load.data.HttpUrlFetcher: boolean isHttpOk(int)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: android.util.Pair parseAacAudioSpecificConfig(com.google.android.exoplayer2.util.ParsableBitArray,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean preferLastSpan(int)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: java.util.Iterator iterator()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId: ProgressiveMediaPeriod$TrackId(int,boolean)
com.google.android.exoplayer2.extractor.wav.WavSeekMap: boolean isSeekable()
androidx.core.graphics.PathParser$PathDataNode: void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double)
androidx.core.R$styleable: <clinit>()
com.google.android.exoplayer2.ExoPlayerImplInternal: void onSourceInfoRefreshed(com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.Timeline)
androidx.recyclerview.widget.GridLayoutManager: void ensureViewSet()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayUseLogoEnabled(boolean)
androidx.appcompat.app.AppCompatDialog: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setIconBitmap(java.lang.Object,android.graphics.Bitmap)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioEnabled(com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: android.util.SparseArray createInitialPayloadReaders()
com.google.android.exoplayer2.metadata.icy.IcyHeaders: com.google.android.exoplayer2.metadata.icy.IcyHeaders parse(java.util.Map)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getBitmapPoolSize()
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: boolean parseHeader(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean isAutoMeasureEnabled()
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)
com.danikula.videocache.GetRequest: GetRequest(java.lang.String)
androidx.appcompat.app.AlertController: void setView(android.view.View)
com.google.android.exoplayer2.text.cea.Cea608Decoder: char getBasicChar(byte)
com.google.android.exoplayer2.extractor.ts.TsExtractor: java.util.List access$300(com.google.android.exoplayer2.extractor.ts.TsExtractor)
cn.jzvd.demo.ActivityApiRotationVideoSize: void onBackPressed()
com.google.android.exoplayer2.util.Util: boolean contains(java.lang.Object[],java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: android.os.Parcelable saveAllState()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void offsetChildrenVertical(int)
com.bumptech.glide.util.Util: java.util.Queue createQueue(int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setVerticalOffset(int)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: int getLayoutId()
androidx.fragment.app.FragmentManagerImpl: void checkStateLoss()
com.google.android.exoplayer2.metadata.id3.PrivFrame$1: PrivFrame$1()
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: VideoFrameReleaseTimeHelper$DefaultDisplayListener(com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper,android.hardware.display.DisplayManager)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: ViewTarget$SizeDeterminer(android.view.View)
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource)
com.bumptech.glide.load.model.ResourceLoader: boolean handles(java.lang.Object)
android.support.v4.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: SupportMenuInflater$InflatedOnMenuItemClickListener(java.lang.Object,java.lang.String)
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener: <clinit>()
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory: com.bumptech.glide.load.data.DataFetcher build(android.net.Uri)
com.google.android.exoplayer2.upstream.DefaultDataSource: java.util.Map getResponseHeaders()
androidx.appcompat.view.menu.CascadingMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
cn.jzvd.demo.ActivityTinyWindow: ActivityTinyWindow()
tv.danmaku.ijk.media.player.IMediaPlayer: java.lang.String getDataSource()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: <clinit>()
com.danikula.videocache.HttpUrlSource: void fetchContentInfo()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void skipFully(int)
cn.jzvd.demo.ActivityDirectPlay: void onPause()
com.bumptech.glide.load.engine.Engine: Engine(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,boolean)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: void init(int,android.graphics.Bitmap$Config)
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData$SchemeData get(int)
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: void reset()
org.slf4j.helpers.Util: boolean safeGetBooleanSystemProperty(java.lang.String)
com.google.android.exoplayer2.util.TimedValueQueue: java.lang.Object pollFloor(long)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap: DefaultOggSeeker$OggSeekMap(com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker,com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$1)
androidx.fragment.app.FragmentState$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.appcompat.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()
com.google.android.exoplayer2.source.MediaSourceEventListener: void onDownstreamFormatChanged(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
cn.jzvd.JzvdStd: void showWifiDialog()
androidx.appcompat.widget.ScrollingTabContainerView$1: void run()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onLeafAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom,long)
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
android.support.v4.media.session.PlaybackStateCompatApi21: long getPosition(java.lang.Object)
androidx.core.view.ViewPropertyAnimatorCompat$1: ViewPropertyAnimatorCompat$1(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: int describeContents()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle setBold(boolean)
org.slf4j.LoggerFactory: void emitSubstitutionWarning()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: androidx.appcompat.view.menu.ShowableListMenu getPopup()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildCount()
com.bumptech.glide.load.engine.executor.RuntimeCompat: int availableProcessors()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: HlsSampleStreamWrapper(int,com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$Callback,com.google.android.exoplayer2.source.hls.HlsChunkSource,java.util.Map,com.google.android.exoplayer2.upstream.Allocator,long,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,int)
androidx.exifinterface.media.ExifInterface: androidx.exifinterface.media.ExifInterface$ExifAttribute getExifAttribute(java.lang.String)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getAdaptiveSupport(int,int,boolean)
cn.jzvd.JzvdStd: void setUp(cn.jzvd.JZDataSource,int,java.lang.Class)
androidx.appcompat.widget.SearchView$SavedState: <clinit>()
androidx.appcompat.app.AppCompatDelegateImpl$2: void run()
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: boolean isSeekable()
android.support.v4.media.MediaBrowserCompat$MediaItem$1: MediaBrowserCompat$MediaItem$1()
androidx.recyclerview.widget.RecyclerView: void dispatchSaveInstanceState(android.util.SparseArray)
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource: java.lang.Class getResourceClass()
com.bumptech.glide.load.resource.gif.GifDrawableTransformation: GifDrawableTransformation(com.bumptech.glide.load.Transformation)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isHardwareConfigAllowedByDeviceModel()
com.bumptech.glide.module.AppGlideModule: boolean isManifestParsingEnabled()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setFilterBitmap(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.savedstate.Recreator: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: void seek(long,long)
com.google.android.exoplayer2.text.dvb.DvbDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
com.bumptech.glide.load.data.mediastore.FileService: FileService()
com.google.android.exoplayer2.upstream.Loader: java.io.IOException access$202(com.google.android.exoplayer2.upstream.Loader,java.io.IOException)
androidx.viewpager.widget.ViewPager: int determineTargetPage(int,float,int,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getResourcePackageName(int)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithGaplessInfo(int,int)
androidx.recyclerview.widget.OrientationHelper$2: OrientationHelper$2(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.fragment.app.FragmentManagerImpl: void dispatchResume()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
androidx.appcompat.widget.AppCompatPopupWindow: void init(android.content.Context,android.util.AttributeSet,int,int)
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource: NonOwnedDrawableResource(android.graphics.drawable.Drawable)
tv.danmaku.ijk.media.player.IjkMediaMeta: int getInt(java.lang.String,int)
androidx.appcompat.view.menu.CascadingMenuPopup: void setForceShowIcon(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: AnimatedVectorDrawableCompat$1(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: void access$200(com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice,android.os.Parcel)
androidx.fragment.app.FragmentManagerImpl$2: void run()
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.bumptech.glide.load.engine.DiskCacheStrategy$1: boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy)
com.google.android.exoplayer2.metadata.icy.IcyDecoder: java.lang.String decodeToString(java.nio.ByteBuffer)
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: boolean isSeekable()
androidx.fragment.app.Fragment: void setUserVisibleHint(boolean)
com.google.android.exoplayer2.text.ssa.SsaStyle$Format: com.google.android.exoplayer2.text.ssa.SsaStyle$Format fromFormatLine(java.lang.String)
com.bumptech.glide.util.ExceptionPassthroughInputStream: void release()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: boolean overridesItemVisibility()
com.google.android.exoplayer2.metadata.MetadataRenderer: MetadataRenderer(com.google.android.exoplayer2.metadata.MetadataOutput,android.os.Looper,com.google.android.exoplayer2.metadata.MetadataDecoderFactory)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeViewAt(int)
com.bumptech.glide.manager.SupportRequestManagerFragment: androidx.fragment.app.FragmentManager getRootFragmentManager(androidx.fragment.app.Fragment)
androidx.appcompat.graphics.drawable.DrawableContainer: int getAlpha()
com.bumptech.glide.load.engine.cache.LruResourceCache: int getSize(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.Format deriveAudioFormat(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format,boolean)
com.bumptech.glide.gifdecoder.GifHeaderParser: GifHeaderParser()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: StaggeredGridLayoutManager$Span(androidx.recyclerview.widget.StaggeredGridLayoutManager,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setVolume(float,float)
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: AspectRatioFrameLayout(android.content.Context,android.util.AttributeSet)
com.danikula.videocache.sourcestorage.SourceInfoStorageFactory: com.danikula.videocache.sourcestorage.SourceInfoStorage newEmptySourceInfoStorage()
androidx.appcompat.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.appcompat.view.menu.ExpandedMenuView: <clinit>()
androidx.recyclerview.widget.LinearLayoutManager: boolean shouldMeasureTwice()
com.google.android.exoplayer2.BaseRenderer: void reset()
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int)
com.google.android.exoplayer2.util.Util: long toLong(int,int)
com.google.android.exoplayer2.source.TrackGroupArray$1: java.lang.Object[] newArray(int)
androidx.core.graphics.drawable.IconCompat: java.lang.String typeToString(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: IjkMediaPlayer(tv.danmaku.ijk.media.player.IjkLibLoader)
cn.jzvd.Jzvd: void onStatePause()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: boolean isStateful()
com.google.android.exoplayer2.Timeline$Period: int getFirstAdIndexToPlay(int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: void release()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getSampleRateInline()
androidx.appcompat.widget.AppCompatDrawableManager: androidx.appcompat.widget.AppCompatDrawableManager get()
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: DefaultHttpDataSourceFactory(java.lang.String,com.google.android.exoplayer2.upstream.TransferListener)
tv.danmaku.ijk.media.player.IMediaPlayer: boolean isPlayable()
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: Atom$ContainerAtom(int,long)
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.PlaybackInfo copyWithNewPosition(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData maybeUpdateMediaLoadData(com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.util.FlacStreamMetadata copyWithSeekTable(com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: android.util.Pair parseAlacAudioSpecificConfig(byte[])
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: SpliceInsertCommand(android.os.Parcel,com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1)
android.support.v4.media.session.PlaybackStateCompat: PlaybackStateCompat(android.os.Parcel)
com.bumptech.glide.load.model.ModelLoaderRegistry: void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: void writeToParcel(android.os.Parcel,int)
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo: MediaControllerCompat$PlaybackInfo(int,int,int,int,int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant getVariantWithAudioGroup(java.util.ArrayList,java.lang.String)
androidx.core.util.Preconditions: int checkArgumentNonnegative(int)
com.bumptech.glide.load.resource.bytes.BytesResource: byte[] get()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long parseMehd(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.text.PrecomputedTextCompat: int length()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean collapseActionView()
androidx.appcompat.widget.TooltipCompatHandler$2: TooltipCompatHandler$2(androidx.appcompat.widget.TooltipCompatHandler)
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class)
org.slf4j.event.SubstituteLoggingEvent: void setLevel(org.slf4j.event.Level)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getTargetWidth()
androidx.core.provider.SelfDestructiveThread$2: SelfDestructiveThread$2(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback)
androidx.core.app.CoreComponentFactory: android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)
cn.jzvd.demo.ActivityListViewNormal: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener: void onDrmKeysLoaded()
androidx.appcompat.widget.Toolbar: int measureChildCollapseMargins(android.view.View,int,int,int,int,int[])
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: long parseTimestampUs(java.lang.String)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean)
androidx.cursoradapter.widget.CursorAdapter: int getCount()
androidx.appcompat.widget.AppCompatBackgroundHelper: void onSetBackgroundResource(int)
com.google.android.exoplayer2.text.ttml.TtmlStyle: java.lang.String getFontFamily()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.metadata.Metadata: int hashCode()
com.bumptech.glide.request.target.ImageViewTarget: void onLoadFailed(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.FlacFrameReader: long getFirstSampleNumber(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.util.FlacStreamMetadata)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void handleMidrowCtrl(byte)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle chain(com.google.android.exoplayer2.text.ttml.TtmlStyle)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: <clinit>()
androidx.core.view.ViewCompat$4: java.lang.CharSequence frameworkGet(android.view.View)
com.danikula.videocache.HttpProxyCacheServer: void onError(java.lang.Throwable)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: void experimental_setBandwidthAllocationCheckpoints(long[][])
com.google.android.exoplayer2.AudioBecomingNoisyManager: AudioBecomingNoisyManager(android.content.Context,android.os.Handler,com.google.android.exoplayer2.AudioBecomingNoisyManager$EventListener)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
com.google.android.exoplayer2.ExoPlayerImplInternal: void setForegroundModeInternal(boolean,java.util.concurrent.atomic.AtomicBoolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.arch.core.executor.ArchTaskExecutor: androidx.arch.core.executor.ArchTaskExecutor getInstance()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean feedInputBuffer()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onRepeatModeChanged(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long,java.io.IOException,int)
com.google.android.exoplayer2.text.Cue: Cue(java.lang.CharSequence,android.text.Layout$Alignment,android.graphics.Bitmap,float,int,int,float,int,int,float,float,float,boolean,int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int)
com.bumptech.glide.GlideBuilder: void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.appcompat.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void notifyOnPrepared()
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: void onBufferingUpdate(android.media.MediaPlayer,int)
androidx.viewpager.widget.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.metadata.icy.IcyHeaders access$600(com.google.android.exoplayer2.source.ProgressiveMediaPeriod)
com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.Key getFrameSignature()
android.support.v4.media.session.MediaSessionCompat$Token$1: MediaSessionCompat$Token$1()
com.bumptech.glide.load.model.UnitModelLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.danikula.videocache.HttpProxyCacheServer: java.lang.String getProxyUrl(java.lang.String)
androidx.fragment.app.FragmentActivity: boolean onPrepareOptionsPanel(android.view.View,android.view.Menu)
androidx.appcompat.view.menu.MenuPopup: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.extractor.flv.TagPayloadReader: TagPayloadReader(com.google.android.exoplayer2.extractor.TrackOutput)
org.slf4j.LoggerFactory: void performInitialization()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void removeEventListener(com.google.android.exoplayer2.source.MediaSourceEventListener)
com.google.android.exoplayer2.metadata.id3.GeobFrame$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle setFontFamily(java.lang.String)
com.bumptech.glide.Priority: <clinit>()
com.google.android.exoplayer2.trackselection.MappingTrackSelector: int[] getFormatSupport(com.google.android.exoplayer2.RendererCapabilities,com.google.android.exoplayer2.source.TrackGroup)
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: int getSpanIndex(int,int)
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.exoplayer2.upstream.AssetDataSource: int read(byte[],int,int)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToComplete()
androidx.recyclerview.widget.OrientationHelper$1: int getEndAfterPadding()
cn.jzvd.Jzvd: void onStateAutoComplete()
com.bumptech.glide.load.model.DataUrlLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.core.view.ViewCompat$3: ViewCompat$3(int,java.lang.Class,int)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void checkCurrentDimens()
com.bumptech.glide.util.MarkEnforcingInputStream: int read()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int writeSampleData(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getLastChildPosition()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(int,int)
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: void reset()
com.danikula.videocache.ProxyCacheUtils: java.lang.String encode(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight(boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void drainAndFlushCodec()
com.bumptech.glide.load.model.MultiModelLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.Timeline$Window: Timeline$Window()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowTitleEnabled(boolean)
com.google.android.exoplayer2.extractor.VorbisBitArray: void skipBits(int)
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.GlideContext: GlideContext(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.Registry,com.bumptech.glide.request.target.ImageViewTargetFactory,com.bumptech.glide.Glide$RequestOptionsFactory,java.util.Map,java.util.List,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.GlideExperiments,int)
com.google.android.exoplayer2.extractor.DummyTrackOutput: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
tv.danmaku.ijk.media.player.MediaPlayerProxy: int getAudioSessionId()
com.google.android.exoplayer2.metadata.id3.BinaryFrame: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.offline.StreamKey: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.Paint getPaint(android.graphics.ColorFilter)
com.google.android.exoplayer2.source.SampleQueue: void rewind()
androidx.appcompat.app.AlertDialog: AlertDialog(android.content.Context,int)
com.google.android.exoplayer2.upstream.ParsingLoadable: void load()
androidx.recyclerview.widget.OrientationHelper$1: void offsetChildren(int)
com.bumptech.glide.load.engine.DecodeJob: void notifyFailed()
com.google.android.exoplayer2.extractor.ts.DtsReader: void packetStarted(long,int)
androidx.collection.ArraySet$1: void colRemoveAt(int)
androidx.collection.LruCache: int safeSizeOf(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.MediaPeriodQueue: void setTimeline(com.google.android.exoplayer2.Timeline)
cn.jzvd.demo.ActivityDirectPlay: void onCreate(android.os.Bundle)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getIntrinsicHeight()
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int)
cn.jzvd.Jzvd$JZAutoFullscreenListener: Jzvd$JZAutoFullscreenListener()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.SearchView$10: void afterTextChanged(android.text.Editable)
org.slf4j.event.Level: <clinit>()
com.google.android.exoplayer2.util.ParsableBitArray: void reset(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.util.Map getResponseHeaders()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getChannelLayoutInline()
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory: com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String)
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory: UriLoader$AssetFileDescriptorFactory(android.content.ContentResolver)
androidx.collection.ContainerHelpers: int idealLongArraySize(int)
androidx.appcompat.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)
androidx.core.view.ActionProvider: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setChangingConfigurations(int)
androidx.core.app.ActivityRecreator: java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(android.os.Parcel)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.fragment.app.FragmentController: void dispatchActivityCreated()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
androidx.fragment.app.FragmentManagerImpl$5: void onAnimationEnd(android.animation.Animator)
androidx.appcompat.app.AppCompatDelegate: <clinit>()
com.google.android.exoplayer2.upstream.DefaultAllocator: void reset()
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.ExoPlaybackException createForRenderer(java.lang.Exception,int,com.google.android.exoplayer2.Format,int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: com.google.android.exoplayer2.Format deriveVideoFormat(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.resource.bitmap.CenterInside: android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
androidx.fragment.app.FragmentTransition: android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean)
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: int getOrientation(android.net.Uri)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getValue()
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: boolean sniffQuietly(com.google.android.exoplayer2.extractor.Extractor,com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void clear()
androidx.appcompat.widget.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.recyclerview.widget.RecyclerView: boolean predictiveItemAnimationsEnabled()
androidx.core.graphics.drawable.WrappedDrawableApi14: int[] getState()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1: IjkMediaFormat$1(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.fragment.app.FragmentTransition$3: void run()
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: com.google.android.exoplayer2.extractor.Extractor[] createExtractors()
com.bumptech.glide.load.engine.DecodeHelper: int getHeight()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.collection.MapCollections$EntrySet: java.util.Iterator iterator()
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState[] newArray(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getVideoCachedDuration()
com.google.android.exoplayer2.text.cea.CeaDecoder: com.google.android.exoplayer2.text.SubtitleInputBuffer dequeueInputBuffer()
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory: java.lang.Thread newThread(java.lang.Runnable)
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: long getEventTime(int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void draw(android.graphics.Canvas)
com.google.android.exoplayer2.util.TimestampAdjuster: long adjustTsTimestamp(long)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: void setPositionUs(long)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean readAmrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
cn.jzvd.JzvdStd: void init(android.content.Context)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setCheckable(boolean)
com.google.android.exoplayer2.audio.Sonic: void removeProcessedInputFrames(int)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void readingStarted()
androidx.appcompat.view.menu.ListMenuItemView: void insertCheckBox()
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason[] values()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getWriteMethod(java.lang.Class)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.UrlLinkFrame decodeUrlLinkFrame(com.google.android.exoplayer2.util.ParsableByteArray,int,java.lang.String)
com.danikula.videocache.ProxyCacheException: ProxyCacheException(java.lang.String)
com.google.android.exoplayer2.metadata.id3.ApicFrame: int hashCode()
androidx.appcompat.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)
androidx.appcompat.widget.ActionBarContextView: boolean isTitleOptional()
com.google.android.exoplayer2.source.chunk.DataChunk: void cancelLoad()
androidx.recyclerview.widget.RecyclerView: void scrollBy(int,int)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onInputFormatChanged(com.google.android.exoplayer2.FormatHolder)
com.bumptech.glide.request.ThumbnailRequestCoordinator: void pause()
cn.jzvd.Jzvd: void cancelProgressTimer()
androidx.viewpager.widget.ViewPager: void addFocusables(java.util.ArrayList,int,int)
com.google.android.exoplayer2.text.SubtitleDecoderFactory$1: SubtitleDecoderFactory$1()
androidx.appcompat.view.ActionBarPolicy: boolean showsOverflowMenuButton()
androidx.exifinterface.media.ExifInterface: java.nio.ByteOrder readByteOrder(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
cn.jzvd.demo.ActivityListViewNormal: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.source.CompositeMediaSource: void prepareChildSource(java.lang.Object,com.google.android.exoplayer2.source.MediaSource)
com.google.android.exoplayer2.metadata.id3.BinaryFrame$1: com.google.android.exoplayer2.metadata.id3.BinaryFrame createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
com.google.android.exoplayer2.decoder.Buffer: void setFlags(int)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int)
cn.jzvd.Jzvd: void startFullscreenDirectly(android.content.Context,java.lang.Class,java.lang.String,java.lang.String)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onAudioTrackUnderrun(int,long,long)
com.google.android.exoplayer2.text.ssa.SsaSubtitle: int getNextEventTimeIndex(long)
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream)
androidx.fragment.app.FragmentPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentFactory getFragmentFactory()
org.slf4j.LoggerFactory: LoggerFactory()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setTintMode(android.graphics.PorterDuff$Mode)
com.bumptech.glide.load.data.ExifOrientationStream: int read(byte[],int,int)
androidx.lifecycle.SingleGeneratedAdapterObserver: SingleGeneratedAdapterObserver(androidx.lifecycle.GeneratedAdapter)
com.google.android.exoplayer2.ExoPlayerImpl: int getCurrentWindowIndex()
com.google.android.exoplayer2.util.ParsableByteArray: int readUnsignedByte()
androidx.recyclerview.widget.LinearLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onSessionDestroyed()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspot(float,float)
com.google.android.exoplayer2.SimpleExoPlayer: void verifyApplicationThread()
com.bumptech.glide.request.SingleRequest: void pause()
com.google.android.exoplayer2.MediaPeriodQueue: void clear(boolean)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void append(char)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.interpolator.view.animation.LinearOutSlowInInterpolator: LinearOutSlowInInterpolator()
com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean isNarrowBandValidFrameType(int)
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int,java.lang.Object[])
tv.danmaku.ijk.media.player.MediaInfo: MediaInfo()
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: int getTrackType()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewAttachedToWindow(android.view.View)
com.google.android.exoplayer2.util.MimeTypes: java.lang.String getVideoMediaMimeType(java.lang.String)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: void draw(android.graphics.Canvas)
androidx.appcompat.widget.ListPopupWindow: void setWidth(int)
com.bumptech.glide.load.data.mediastore.MediaStoreUtil: boolean isMediaStoreImageUri(android.net.Uri)
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(com.google.android.exoplayer2.extractor.ExtractorInput,long)
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumHeight()
com.danikula.videocache.sourcestorage.NoSourceInfoStorage: NoSourceInfoStorage()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isFocused()
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToComplete()
com.bumptech.glide.load.engine.DecodeHelper: void clear()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$1: com.google.android.exoplayer2.trackselection.TrackSelectionParameters createFromParcel(android.os.Parcel)
androidx.core.widget.NestedScrollView: boolean hasNestedScrollingParent()
androidx.collection.MapCollections$MapIterator: java.lang.Object setValue(java.lang.Object)
com.google.android.exoplayer2.source.CompositeMediaSource: CompositeMediaSource()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findFirstPartiallyVisibleItemPosition()
com.bumptech.glide.request.SingleRequest: void onLoadFailed(com.bumptech.glide.load.engine.GlideException,int)
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
androidx.appcompat.widget.AppCompatCompoundButtonHelper: int getCompoundPaddingLeft(int)
com.bumptech.glide.request.BaseRequestOptions: int getPlaceholderId()
androidx.appcompat.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: void onDisplayChanged(int)
com.bumptech.glide.manager.DefaultConnectivityMonitor$1: DefaultConnectivityMonitor$1(com.bumptech.glide.manager.DefaultConnectivityMonitor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: VectorDrawableCompat$VectorDrawableCompatState(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long access$000(tv.danmaku.ijk.media.player.IjkMediaPlayer)
com.google.android.exoplayer2.AudioFocusManager: void abandonAudioFocus(boolean)
androidx.collection.SimpleArrayMap: int size()
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean canSetImage(com.bumptech.glide.request.Request)
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onLoadCanceled(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.bumptech.glide.util.LogTime: double getElapsedMillis(long)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config)
androidx.appcompat.widget.AppCompatEditText: void setTextAppearance(android.content.Context,int)
cn.jzvd.JZMediaSystem: boolean isPlaying()
cn.jzvd.JZMediaInterface: long getDuration()
com.google.android.exoplayer2.source.ExtractorMediaSource: void releasePeriod(com.google.android.exoplayer2.source.MediaPeriod)
com.google.android.exoplayer2.extractor.mp4.Sniffer: boolean sniffFragmented(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createAudioSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,java.util.List,com.google.android.exoplayer2.drm.DrmInitData,int,java.lang.String)
cn.jzvd.demo.ActivityApiRotationVideoSize: ActivityApiRotationVideoSize()
androidx.recyclerview.widget.RecyclerView: void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.bumptech.glide.load.engine.DecodeJob$RunReason: <clinit>()
androidx.fragment.app.FragmentPagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$7: IjkMediaFormat$7(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.SimpleExoPlayer: void addListener(com.google.android.exoplayer2.Player$EventListener)
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void access$200(com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder,com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setPosition(float)
cn.jzvd.JZMediaSystem: void prepare()
cn.jzvd.Jzvd: void goOnPlayOnPause()
org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[],java.lang.Throwable)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setupAudioProcessors()
com.google.android.exoplayer2.audio.AudioAttributes: AudioAttributes(int,int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
com.bumptech.glide.load.Option: java.lang.String toString()
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry parseMdtaMetadataEntryFromIlst(com.google.android.exoplayer2.util.ParsableByteArray,int,java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setVideoSurface(android.view.Surface)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setSurface(android.view.Surface)
com.bumptech.glide.load.engine.DiskCacheStrategy$4: boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy)
androidx.collection.ArrayMap$1: int colIndexOfValue(java.lang.Object)
com.bumptech.glide.load.engine.DiskCacheStrategy$5: boolean decodeCachedResource()
com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decodeStream(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
androidx.fragment.app.FragmentManagerImpl$3$1: FragmentManagerImpl$3$1(androidx.fragment.app.FragmentManagerImpl$3)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: boolean isFixedSampleSize()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
androidx.appcompat.widget.AppCompatTextView: void onMeasure(int,int)
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getString(java.lang.String)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame$1: ChapterTocFrame$1()
com.google.android.exoplayer2.source.SampleQueue: void sourceId(int)
androidx.lifecycle.LifecycleRegistry$ObserverWithState: void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.extractor.mkv.VarintReader: long assembleVarint(byte[],int,boolean)
tv.danmaku.ijk.media.player.pragma.DebugLog: void ifmt(java.lang.String,java.lang.String,java.lang.Object[])
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String getColorFormatName(int)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
androidx.recyclerview.widget.LinearLayoutManager: boolean isAutoMeasureEnabled()
com.google.android.exoplayer2.text.TextRenderer: void releaseBuffers()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.bumptech.glide.util.pool.FactoryPools$1: FactoryPools$1()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1: SpliceScheduleCommand$1()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: void sampleMetadata(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track,long,int,int,int)
com.google.android.exoplayer2.MediaPeriodQueue: boolean removeAfter(com.google.android.exoplayer2.MediaPeriodHolder)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.upstream.DataSpec access$100(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
androidx.appcompat.app.AppCompatDelegateImpl$3: AppCompatDelegateImpl$3(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.android.exoplayer2.util.StandaloneMediaClock: long getPositionUs()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: DefaultImageHeaderParser$RandomAccessReader(byte[],int)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: long getItemId(int)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.google.android.exoplayer2.source.ads.AdPlaybackState: int hashCode()
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean hasSessionId(byte[])
tv.danmaku.ijk.media.player.annotations.CalledByNative: java.lang.String value()
androidx.arch.core.internal.SafeIterableMap$Entry: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
com.google.android.exoplayer2.util.Util: java.lang.Object castNonNull(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
cn.jzvd.JzvdStd: void onStateError()
com.google.android.exoplayer2.BaseRenderer: boolean isCurrentStreamFinal()
androidx.exifinterface.media.ExifInterface$Rational: ExifInterface$Rational(long,long)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean)
com.google.android.exoplayer2.PlayerMessage: boolean getDeleteAfterDelivery()
com.google.android.exoplayer2.BaseRenderer: boolean isSourceReady()
com.google.android.exoplayer2.util.ColorParser: int parseColorInternal(java.lang.String,boolean)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithAdjustments(com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.metadata.Metadata)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1: void onAnimationEnd(android.view.View)
com.google.android.exoplayer2.source.SampleQueue: int findSampleBefore(int,int,long,boolean)
com.bumptech.glide.load.engine.GlideException: void printStackTrace(java.io.PrintStream)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.google.android.exoplayer2.metadata.id3.ApicFrame: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onPlayerError(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.ExoPlaybackException)
com.bumptech.glide.util.CachedHashCodeArrayMap: java.lang.Object setValueAt(int,java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStream: int readData(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: boolean canApplyTheme()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setActionView(int)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int)
com.google.android.exoplayer2.text.ssa.SsaDecoder: int toPositionAnchor(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: int describeContents()
com.google.android.exoplayer2.upstream.ContentDataSource$ContentDataSourceException: ContentDataSource$ContentDataSourceException(java.io.IOException)
androidx.exifinterface.media.ExifInterface: void getHeifAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
com.google.android.exoplayer2.util.ColorParser: int rgb(int,int,int)
androidx.core.graphics.Insets: <clinit>()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.app.AppCompatDelegateImpl$7: void onAnimationStart(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: HlsPlaylistParser(com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: int hashCode()
com.google.android.exoplayer2.SimpleExoPlayer: int getCurrentAdGroupIndex()
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void onViewDetachedFromWindow(android.view.View)
com.google.android.exoplayer2.util.Assertions: java.lang.Object checkStateNotNull(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: <clinit>()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int canKeepCodec(android.media.MediaCodec,com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: void evictToSize(int)
androidx.appcompat.app.AlertController$AlertParams$2: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.widget.AppCompatImageView: void drawableStateChanged()
androidx.core.view.ViewCompat: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.core.view.OneShotPreDrawListener: androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationStart(android.view.View)
androidx.exifinterface.media.ExifInterface: void getOrfAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
tv.danmaku.ijk.media.player.IjkMediaPlayer: float getVideoOutputFramesPerSecond()
androidx.appcompat.widget.SearchView$SearchAutoComplete: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.Object getValue(java.nio.ByteOrder)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getNumericShortcut()
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsPayloadReader access$502(com.google.android.exoplayer2.extractor.ts.TsExtractor,com.google.android.exoplayer2.extractor.ts.TsPayloadReader)
com.bumptech.glide.load.engine.ResourceCacheGenerator: ResourceCacheGenerator(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback)
androidx.collection.ArrayMap: void putAll(java.util.Map)
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: int compareTo(com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo)
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: TrackSampleTable(com.google.android.exoplayer2.extractor.mp4.Track,long[],int[],int,long[],int[],long)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.Toolbar$1: boolean onMenuItemClick(android.view.MenuItem)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onIsPlayingChanged(boolean)
com.google.android.exoplayer2.audio.AudioCapabilities: boolean equals(java.lang.Object)
com.bumptech.glide.load.model.ModelCache$ModelKey: com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)
androidx.lifecycle.ClassesInfoCache: ClassesInfoCache()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onLoadStarted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void finalizeCurrentPacket()
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo createDummy(long,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: java.lang.Object newArray(int)
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newAnimationBuilder()
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.Toolbar: void onLayout(boolean,int,int,int,int)
org.slf4j.impl.StaticLoggerBinder: java.lang.String getLoggerFactoryClassStr()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: int outputSampleEncryptionData(int,int)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void reset()
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: void reset(long)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onTimelineChanged(com.google.android.exoplayer2.Timeline,java.lang.Object,int)
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getTitle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: void cleanup()
com.bumptech.glide.load.engine.EngineJob: void decrementPendingCallbacks()
com.google.android.exoplayer2.audio.AuxEffectInfo: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: void requestDisallowInterceptTouchEvent(boolean)
androidx.appcompat.app.AlertController: android.widget.ListView getListView()
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction: java.lang.String getAction(java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void onMeasure(int,int)
com.bumptech.glide.load.engine.SourceGenerator: void cacheData(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onProcessedTunneledEndOfStream()
com.bumptech.glide.Registry: java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.recyclerview.widget.RecyclerView: void onSizeChanged(int,int,int,int)
androidx.recyclerview.widget.OrientationHelper$1: int getEndPadding()
com.google.android.exoplayer2.audio.AudioTimestampPoller: void updateState(int)
androidx.recyclerview.widget.GapWorker: void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(int)
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem: java.lang.Object getDescription(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int getGapForSpan(int)
com.bumptech.glide.Registry: com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object)
com.bumptech.glide.load.engine.Engine$EngineJobFactory: Engine$EngineJobFactory(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineResource$ResourceListener)
androidx.exifinterface.media.ExifInterface: void getRawAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.ui.SubtitleView: float getUserCaptionFontScaleV19()
androidx.collection.MapCollections$ArrayIterator: MapCollections$ArrayIterator(androidx.collection.MapCollections,int)
androidx.appcompat.app.AppCompatDialog: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.exoplayer2.metadata.id3.ApicFrame: ApicFrame(java.lang.String,java.lang.String,int,byte[])
android.support.v4.media.session.MediaControllerCompat$Callback: void onSessionEvent(java.lang.String,android.os.Bundle)
androidx.core.widget.NestedScrollView: void requestDisallowInterceptTouchEvent(boolean)
com.bumptech.glide.request.ErrorRequestCoordinator: void pause()
androidx.appcompat.view.SupportMenuInflater$MenuState: char getShortcut(java.lang.String)
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.source.hls.WebvttExtractor: void seek(long,long)
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory: com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.os.Parcelable onSaveInstanceState()
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.BaseRequestOptions clone()
androidx.core.graphics.PathParser$PathDataNode: void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: <clinit>()
com.google.android.exoplayer2.text.ttml.TtmlRegion: TtmlRegion(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean onStateChange(int[])
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void addEventListener(android.os.Handler,com.google.android.exoplayer2.upstream.BandwidthMeter$EventListener)
com.google.android.exoplayer2.extractor.ts.H265Reader: void packetFinished()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: CompositeSequenceableLoader(com.google.android.exoplayer2.source.SequenceableLoader[])
com.google.android.exoplayer2.audio.AudioAttributes: boolean equals(java.lang.Object)
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory: GlideExecutor$DefaultThreadFactory(java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy,boolean)
androidx.exifinterface.media.ExifInterface$1: void close()
androidx.versionedparcelable.VersionedParcelParcel: void writeParcelable(android.os.Parcelable)
com.bumptech.glide.gifdecoder.GifHeaderParser: void skipImageData()
androidx.core.graphics.drawable.WrappedDrawableApi21: void findAndCacheIsProjectedDrawableMethod()
androidx.core.view.KeyEventDispatcher: boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
com.bumptech.glide.load.engine.EngineJob: boolean onlyRetrieveFromCache()
com.google.android.exoplayer2.text.dvb.DvbSubtitle: java.util.List getCues(long)
cn.jzvd.Jzvd: void releaseAllVideos()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition: AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat)
com.google.android.exoplayer2.source.hls.Aes128DataSource: javax.crypto.Cipher getCipherInstance()
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom: java.util.UUID access$000(com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom)
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: int getFetchStrategy()
androidx.appcompat.app.AlertController$2: void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int)
androidx.core.graphics.drawable.IconCompat: int getResId()
androidx.fragment.app.FragmentTransaction: FragmentTransaction()
androidx.interpolator.view.animation.FastOutLinearInInterpolator: FastOutLinearInInterpolator()
androidx.recyclerview.widget.GridLayoutManager: void calculateItemBorders(int)
com.google.android.exoplayer2.util.UriUtil: java.lang.String removeDotSegments(java.lang.StringBuilder,int,int)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.engine.cache.DiskCache getDiskCache()
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: void stopGrowingBuffers()
com.google.android.exoplayer2.source.hls.HlsMediaChunk: com.google.android.exoplayer2.source.hls.HlsMediaChunk createInstance(com.google.android.exoplayer2.source.hls.HlsExtractorFactory,com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.Format,long,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,int,android.net.Uri,java.util.List,int,java.lang.Object,boolean,com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider,com.google.android.exoplayer2.source.hls.HlsMediaChunk,byte[],byte[])
androidx.lifecycle.SingleGeneratedAdapterObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.extractor.ts.H262Reader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.core.widget.NestedScrollView: void addView(android.view.View,int)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: int readDuration(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder,int)
androidx.fragment.app.FragmentController: void dispatchOptionsMenuClosed(android.view.Menu)
androidx.viewpager.widget.ViewPager$PagerObserver: void onInvalidated()
androidx.appcompat.app.AppCompatDelegateImpl: void ensureSubDecor()
com.google.android.exoplayer2.text.webvtt.CssParser: void applySelectorToStyle(com.google.android.exoplayer2.text.webvtt.WebvttCssStyle,java.lang.String)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void notifyOnSeekComplete()
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener: void startListening()
org.slf4j.helpers.SubstituteLogger: boolean isDelegateEventAware()
com.google.android.exoplayer2.ui.TrackSelectionView: boolean getIsDisabled()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: boolean isVisibleToUser(android.view.View)
com.danikula.videocache.HttpProxyCacheServerClients: void processRequest(com.danikula.videocache.GetRequest,java.net.Socket)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: AppCompatTextViewAutoSizeHelper(android.widget.TextView)
androidx.appcompat.widget.AppCompatTextView: void drawableStateChanged()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray)
com.bumptech.glide.util.Util: void assertMainThread()
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: GroupedLinkedMap$LinkedEntry()
androidx.core.graphics.TypefaceCompatApi26Impl: TypefaceCompatApi26Impl()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimension(android.graphics.Rect,int,int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistResetException: HlsPlaylistTracker$PlaylistResetException(android.net.Uri)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.Timeline getCurrentTimeline()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setHotspotBounds(int,int,int,int)
androidx.appcompat.widget.AppCompatSeekBarHelper: AppCompatSeekBarHelper(android.widget.SeekBar)
com.google.android.exoplayer2.Format$1: com.google.android.exoplayer2.Format createFromParcel(android.os.Parcel)
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory: java.lang.Class getDataClass()
com.google.android.exoplayer2.upstream.Loader$LoadTask: void run()
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onExtrasChanged(android.os.Bundle)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: DefaultTrackSelector$TextTrackScore(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters,int,java.lang.String)
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory: ByteArrayLoader$StreamFactory()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int[] getState()
com.google.android.exoplayer2.audio.AudioTimestampPoller$AudioTimestampV19: long getTimestampSystemTimeUs()
androidx.appcompat.widget.TintInfo: void clear()
com.google.android.exoplayer2.extractor.VorbisUtil: void readMappings(int,com.google.android.exoplayer2.extractor.VorbisBitArray)
androidx.core.graphics.drawable.WrappedDrawableApi14: WrappedDrawableApi14(android.graphics.drawable.Drawable)
com.bumptech.glide.load.model.Headers$1: Headers$1()
com.google.android.exoplayer2.ExoPlayerLibraryInfo: java.lang.String registeredModules()
com.bumptech.glide.load.engine.cache.DiskCacheAdapter: java.io.File get(com.bumptech.glide.load.Key)
com.bumptech.glide.util.pool.FactoryPools: com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean isVariantUrl(android.net.Uri)
androidx.appcompat.view.menu.MenuAdapter: long getItemId(int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder)
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: ByteArrayLoader$Fetcher(byte[],com.bumptech.glide.load.model.ByteArrayLoader$Converter)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: Mp4Extractor(int)
androidx.appcompat.view.menu.MenuAdapter: java.lang.Object getItem(int)
androidx.appcompat.widget.AppCompatDrawableManager: AppCompatDrawableManager()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast: DownsampleStrategy$AtLeast()
androidx.appcompat.view.menu.CascadingMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit)
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean release(boolean)
com.bumptech.glide.load.model.stream.UrlLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.video.DummySurface: boolean isSecureSupported(android.content.Context)
com.google.android.exoplayer2.extractor.VorbisUtil: com.google.android.exoplayer2.extractor.VorbisUtil$Mode[] readModes(com.google.android.exoplayer2.extractor.VorbisBitArray)
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher: FileDescriptorLocalUriFetcher(android.content.ContentResolver,android.net.Uri)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.bumptech.glide.provider.LoadPathCache: com.bumptech.glide.load.engine.LoadPath get(java.lang.Class,java.lang.Class,java.lang.Class)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation,boolean)
com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result: HlsExtractorFactory$Result(com.google.android.exoplayer2.extractor.Extractor,boolean,boolean)
androidx.appcompat.view.menu.MenuBuilder: void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeThrowSourceInfoRefreshError()
com.google.android.exoplayer2.util.MimeTypes: <clinit>()
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void pause()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setSampleOffsetUs(long)
androidx.recyclerview.widget.RecyclerView$ViewHolder: <clinit>()
cn.jzvd.demo.ActivityApi: void onCreate(android.os.Bundle)
androidx.core.view.ViewCompat: boolean hasTransientState(android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getDataSchemeDataSource()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet,int)
androidx.core.graphics.drawable.WrappedDrawableApi14: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long access$200(com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor)
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom getLeafAtomOfType(int)
com.google.android.exoplayer2.extractor.Id3Peeker: Id3Peeker()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void resetForNewMediaSource()
androidx.appcompat.widget.Toolbar: void removeChildrenForExpandedActionView()
androidx.appcompat.widget.ResourceManagerInternal: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
androidx.recyclerview.widget.LinearLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setName(java.lang.String)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int getFormatLanguageScore(com.google.android.exoplayer2.Format,java.lang.String,boolean)
com.bumptech.glide.load.engine.DiskCacheStrategy$3: boolean isDataCacheable(com.bumptech.glide.load.DataSource)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setIcon(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBottomDecorationHeight(android.view.View)
androidx.appcompat.widget.ForwardingListener: boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()
com.google.android.exoplayer2.BaseRenderer: boolean hasReadStreamToEnd()
androidx.recyclerview.widget.RecyclerView: void processAdapterUpdatesAndSetAnimationFlags()
androidx.collection.SimpleArrayMap: boolean isEmpty()
tv.danmaku.ijk.media.player.pragma.DebugLog: void v(java.lang.String,java.lang.String)
com.bumptech.glide.load.engine.DataCacheWriter: boolean write(java.io.File)
androidx.recyclerview.widget.LinearLayoutManager: void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[])
com.google.android.exoplayer2.audio.Ac3Util: com.google.android.exoplayer2.Format parseEAc3AnnexFFormat(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.String,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData)
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithPlaybackState(int)
androidx.lifecycle.ReportFragment: void onDestroy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
cn.jzvd.Jzvd: void onVideoSizeChanged(int,int)
com.google.android.exoplayer2.PlaybackInfo: <clinit>()
androidx.exifinterface.media.ExifInterface: boolean isHeifFormat(byte[])
com.google.android.exoplayer2.drm.DrmInitData: int compare(java.lang.Object,java.lang.Object)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation,boolean)
com.google.android.exoplayer2.util.TimedValueQueue: TimedValueQueue()
androidx.exifinterface.media.ExifInterface$ExifAttribute: ExifInterface$ExifAttribute(int,int,long,byte[])
androidx.appcompat.view.menu.StandardMenuPopup: void setHorizontalOffset(int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: HlsTrackMetadataEntry$VariantInfo(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
android.support.v4.media.MediaDescriptionCompatApi21: java.lang.CharSequence getSubtitle(java.lang.Object)
com.bumptech.glide.manager.FirstFrameAndAfterTrimMemoryWaiter: void onTrimMemory(int)
com.bumptech.glide.load.resource.bitmap.CenterInside: <clinit>()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void invalidateCache()
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.ExoPlayerImpl: long getTotalBufferedDuration()
com.bumptech.glide.load.model.UriLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
android.support.v4.media.MediaMetadataCompat: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void onQueueEndOfStream()
com.google.android.exoplayer2.extractor.flv.FlvExtractor: void ensureReadyForMediaOutput()
androidx.core.graphics.PathParser: void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
com.bumptech.glide.load.resource.SimpleResource: SimpleResource(java.lang.Object)
com.bumptech.glide.GlideContext: int getLogLevel()
cn.jzvd.Jzvd: void setState(int)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: void release()
com.google.android.exoplayer2.metadata.flac.PictureFrame: boolean equals(java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: void clearPreLayoutSpanMappingCache()
com.google.android.exoplayer2.ExoPlayerImplInternal: long getTotalBufferedDurationUs(long)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: AnalyticsCollector$MediaPeriodQueueTracker()
androidx.fragment.app.Fragment: void noteStateNotSaved()
cn.jzvd.demo.ActivityApiCustomMedia: void clickChangeToIjkplayer(android.view.View)
com.bumptech.glide.manager.ActivityFragmentLifecycle: ActivityFragmentLifecycle()
com.google.android.exoplayer2.extractor.ts.PsDurationReader: boolean checkMarkerBits(byte[])
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float)
com.google.android.exoplayer2.extractor.ts.AdtsReader: void parseAdtsHeader()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ViewStubCompat: void dispatchDraw(android.graphics.Canvas)
androidx.core.widget.NestedScrollView: void onLayout(boolean,int,int,int,int)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onSessionReady()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void stop()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitleInt(java.lang.CharSequence)
com.google.android.exoplayer2.util.Util: java.lang.String maybeReplaceGrandfatheredLanguageTags(java.lang.String)
androidx.appcompat.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)
androidx.appcompat.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)
androidx.appcompat.widget.AppCompatProgressBarHelper: <clinit>()
androidx.collection.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
androidx.appcompat.widget.AppCompatRadioButton: AppCompatRadioButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.MenuPopupWindow: void setEnterTransition(java.lang.Object)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks: void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: android.util.Pair parseTrex(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void saveOldPosition()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: double[][] getLogArrayValues(long[][])
androidx.appcompat.widget.AppCompatProgressBarHelper: android.graphics.Bitmap getSampleTile()
androidx.appcompat.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.ui.TrackSelectionView$ComponentListener: void onClick(android.view.View)
com.google.android.exoplayer2.extractor.ts.H262Reader: <clinit>()
com.google.android.exoplayer2.RendererConfiguration: boolean equals(java.lang.Object)
com.google.android.exoplayer2.offline.FilteringManifestParser: FilteringManifestParser(com.google.android.exoplayer2.upstream.ParsingLoadable$Parser,java.util.List)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void onLoadCompleted(com.google.android.exoplayer2.upstream.ParsingLoadable,long,long)
com.google.android.exoplayer2.AudioFocusManager: int handlePrepare(boolean)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setTextAlignment(int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: void initializeOutput(com.google.android.exoplayer2.extractor.ExtractorOutput,int)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean supportsPredictiveItemAnimations()
cn.jzvd.Jzvd: void setUp(cn.jzvd.JZDataSource,int)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.List shutdownNow()
com.bumptech.glide.load.model.ModelLoaderRegistry: java.util.List getModelLoadersForClass(java.lang.Class)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: java.util.ArrayList getTrackSampleTables(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,com.google.android.exoplayer2.extractor.GaplessInfoHolder,boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handlePlaybackParameters(com.google.android.exoplayer2.PlaybackParameters,boolean)
com.bumptech.glide.gifdecoder.StandardGifDecoder: android.graphics.Bitmap getNextFrame()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isServiceSwitchCommand(byte)
com.bumptech.glide.util.LogTime: <clinit>()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader destroy(boolean)
com.google.android.exoplayer2.audio.AudioProcessor$UnhandledAudioFormatException: AudioProcessor$UnhandledAudioFormatException(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
com.danikula.videocache.file.LruDiskUsage: long countTotalSize(java.util.List)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: int parseTrun(com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle,int,long,int,com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.text.subrip.SubripDecoder: com.google.android.exoplayer2.text.Cue buildCue(android.text.Spanned,java.lang.String)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void onActionProviderVisibilityChanged(boolean)
androidx.appcompat.widget.ActionBarContextView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
com.google.android.exoplayer2.upstream.Loader$ReleaseTask: void run()
com.google.android.exoplayer2.source.SampleQueue: boolean hasNextSample()
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: com.google.android.exoplayer2.extractor.ts.TsPayloadReader createPayloadReader(int,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsFlushWorkaround(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
com.bumptech.glide.TransitionOptions: TransitionOptions()
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean needsSpsPps()
com.google.android.exoplayer2.Timeline$Period: int getAdCountInAdGroup(int)
cn.jzvd.demo.ActivityMain: void clickListView(android.view.View)
androidx.core.graphics.TypefaceCompatApi28Impl: TypefaceCompatApi28Impl()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.ArrayList getDecoderInfosInternal(com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey,com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompat)
com.google.android.exoplayer2.extractor.mp4.Track: Track(int,int,long,long,long,com.google.android.exoplayer2.Format,int,com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[],int,long[],long[])
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void init(int,boolean)
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: void onFlush()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void setSourceDrmSession(com.google.android.exoplayer2.drm.DrmSession)
com.google.android.exoplayer2.DefaultLoadControl: void onPrepared()
com.google.android.exoplayer2.util.ColorParser: int parseCssColor(java.lang.String)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap: DefaultOggSeeker$OggSeekMap(com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: byte[] newArray(int)
androidx.core.widget.NestedScrollView$SavedState: NestedScrollView$SavedState(android.os.Parcel)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: boolean isFeatureSupported(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities)
androidx.appcompat.widget.AppCompatDrawableManager: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.viewpager.widget.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)
com.bumptech.glide.request.target.BitmapImageViewTarget: BitmapImageViewTarget(android.widget.ImageView)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple: boolean equals(java.lang.Object)
androidx.core.graphics.TypefaceCompatApi29Impl: androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: void assertExpectedPlaybackLooper(android.os.Looper)
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,boolean)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean shouldParseContainerAtom(int)
org.slf4j.helpers.MessageFormatter: boolean isEscapedDelimeter(java.lang.String,int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void maybeSkipRemainingMetaAtomHeaderBytes(com.google.android.exoplayer2.extractor.ExtractorInput)
android.support.v4.media.MediaDescriptionCompat$1: android.support.v4.media.MediaDescriptionCompat[] newArray(int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(int)
com.bumptech.glide.util.Util: int hashCode(int,int)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onShuffleModeChanged(int)
com.bumptech.glide.load.engine.EngineKey: void updateDiskCacheKey(java.security.MessageDigest)
android.support.v4.media.MediaDescriptionCompatApi21: java.lang.String getMediaId(java.lang.Object)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void onConnectivityAction()
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long getDurationUs()
cn.jzvd.demo.ActivityListViewNormal: void onPause()
androidx.appcompat.view.menu.MenuPopup: MenuPopup()
androidx.appcompat.widget.AppCompatButton: void setTextAppearance(android.content.Context,int)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(int,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
com.google.android.exoplayer2.extractor.ts.PsExtractor: void release()
androidx.appcompat.view.WindowCallbackWrapper: android.view.Window$Callback getWrapped()
androidx.appcompat.widget.LinearLayoutCompat: void measureVertical(int,int)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: FragmentManagerImpl$AnimationOrAnimator(android.animation.Animator)
androidx.core.widget.CompoundButtonCompat: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: boolean next()
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache: java.util.List get(java.lang.Class)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat(android.view.View$AccessibilityDelegate)
androidx.appcompat.widget.SearchView: void launchIntent(android.content.Intent)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: int parsePositionAnchor(java.lang.String)
com.google.android.exoplayer2.util.MimeTypes: int getTrackType(java.lang.String)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void resetSyncParams()
androidx.appcompat.widget.DialogTitle: void onMeasure(int,int)
com.bumptech.glide.manager.SupportRequestManagerFragment: void onDetach()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
androidx.fragment.app.FragmentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onInputFormatChanged(com.google.android.exoplayer2.FormatHolder)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
com.google.android.exoplayer2.util.EGLSurfaceTexture: void run()
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.lang.Object removeLast()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: void onChange()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setDataSource(java.io.FileDescriptor)
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory: FileLoader$FileDescriptorFactory()
cn.jzvd.JzvdStd: void showBrightnessDialog(int)
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer: long access$202(com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer,long)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem findItem(int)
com.google.android.exoplayer2.text.cea.CeaDecoder: CeaDecoder()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void skipOutputBuffer(android.media.MediaCodec,int,long)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: BinarySearchSeeker$TimestampSearchResult(int,long,long)
com.google.android.exoplayer2.mediacodec.MediaFormatUtil: void maybeSetFloat(android.media.MediaFormat,java.lang.String,float)
androidx.appcompat.widget.SearchView$10: void beforeTextChanged(java.lang.CharSequence,int,int,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void start(android.net.Uri,com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener)
androidx.appcompat.app.WindowDecorActionBar: boolean collapseActionView()
cn.jzvd.demo.ActivityListViewFragmentViewPager$MyAdapter: ActivityListViewFragmentViewPager$MyAdapter(cn.jzvd.demo.ActivityListViewFragmentViewPager,androidx.fragment.app.FragmentManager)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(androidx.appcompat.widget.Toolbar$LayoutParams)
com.bumptech.glide.provider.ImageHeaderParserRegistry: java.util.List getParsers()
androidx.core.widget.NestedScrollView: void scrollTo(int,int)
com.bumptech.glide.util.pool.FactoryPools$FactoryPool: java.lang.Object acquire()
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean supportsOutput(int,int)
androidx.recyclerview.widget.RecyclerView: void stopScroll()
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker: int access$100(byte[],int)
com.google.android.exoplayer2.analytics.AnalyticsCollector: AnalyticsCollector(com.google.android.exoplayer2.util.Clock)
com.bumptech.glide.load.resource.SimpleResource: int getSize()
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: boolean handles(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Options)
androidx.arch.core.executor.DefaultTaskExecutor: DefaultTaskExecutor()
com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.ExoPlaybackException createForSource(java.io.IOException)
com.google.android.exoplayer2.metadata.Metadata: Metadata(com.google.android.exoplayer2.metadata.Metadata$Entry[])
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: MpegAudioReader(java.lang.String)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int getArgbColorFromCeaColor(int,int,int)
com.google.android.exoplayer2.metadata.id3.ApicFrame: boolean equals(java.lang.Object)
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: int compareTo(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int)
androidx.fragment.app.FragmentController: void noteStateNotSaved()
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.MenuItem getItem()
com.google.android.exoplayer2.BaseRenderer: int getState()
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: boolean hasPendingUpdate(com.google.android.exoplayer2.PlaybackInfo)
androidx.appcompat.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)
androidx.appcompat.app.AlertController: boolean shouldCenterSingleButton(android.content.Context)
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void processOutputFormat(android.media.MediaCodec,int,int)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: H264Reader$SampleReader$SliceHeaderData()
com.google.android.exoplayer2.util.Util: java.lang.String[] splitAtFirst(java.lang.String,java.lang.String)
cn.jzvd.demo.ActivityApiOrientation: void onResume()
androidx.appcompat.view.menu.StandardMenuPopup: void setShowTitle(boolean)
androidx.fragment.app.FragmentTransitionCompat21$4: FragmentTransitionCompat21$4(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
com.google.android.exoplayer2.util.PriorityTaskManager: void add(int)
androidx.lifecycle.ViewModelProvider$KeyedFactory: ViewModelProvider$KeyedFactory()
com.google.android.exoplayer2.text.cea.CeaUtil: void consumeCcData(long,com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.extractor.TrackOutput[])
com.google.android.exoplayer2.source.TrackGroupArray$1: com.google.android.exoplayer2.source.TrackGroupArray createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: boolean hasPanelItems()
androidx.appcompat.widget.AppCompatTextHelper$1: void onFontRetrievalFailed(int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.Priority getPriority()
com.google.android.exoplayer2.metadata.flac.PictureFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: boolean access$200(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumHeight()
com.google.android.exoplayer2.ExoPlayerImplInternal: void resetInternal(boolean,boolean,boolean,boolean,boolean)
android.support.v4.media.session.MediaControllerCompat$Callback: void postToHandler(int,java.lang.Object,android.os.Bundle)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState()
android.support.v4.os.ResultReceiver$MyResultReceiver: void send(int,android.os.Bundle)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(java.net.URL,int,byte[],long,long,boolean,boolean,java.util.Map)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.MenuInflater getMenuInflater()
cn.jzvd.demo.AdapterRecyclerView: int getItemCount()
androidx.appcompat.view.menu.MenuBuilder: void startDispatchingItemsChanged()
androidx.appcompat.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.bumptech.glide.Glide: boolean removeFromManagers(com.bumptech.glide.request.target.Target)
androidx.versionedparcelable.VersionedParcel: byte[] readByteArray(byte[],int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleSetPenLocation()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.google.android.exoplayer2.util.NalUnitUtil: void clearPrefixFlags(boolean[])
androidx.fragment.app.FragmentTransitionCompat21: void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values()
com.google.android.exoplayer2.BaseRenderer: void stop()
com.bumptech.glide.load.model.AssetUriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
cn.jzvd.JzvdStd: void dissmissControlView()
androidx.lifecycle.MethodCallsLogger: MethodCallsLogger()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetTop()
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: ImageReader$ParcelFileDescriptorImageReader(android.os.ParcelFileDescriptor,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.exifinterface.media.ExifInterface: void getWebpAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.core.view.ViewCompat: void requestApplyInsets(android.view.View)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection createAdaptiveTrackSelection(com.google.android.exoplayer2.source.TrackGroup,com.google.android.exoplayer2.upstream.BandwidthMeter,int[],int)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: TsDurationReader()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isCheckable()
com.google.android.exoplayer2.ExoPlayerImplInternal: void sendMessageToTargetThread(com.google.android.exoplayer2.PlayerMessage)
tv.danmaku.ijk.media.player.TextureMediaPlayer: void setSurfaceTextureHost(tv.danmaku.ijk.media.player.ISurfaceTextureHost)
androidx.core.widget.NestedScrollView$SavedState: <clinit>()
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: float getSpeedFromIndex(int)
com.google.android.exoplayer2.audio.DefaultAudioSink: void playPendingData()
com.google.android.exoplayer2.extractor.amr.AmrExtractor: AmrExtractor()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
tv.danmaku.ijk.media.player.IMediaPlayer: void prepareAsync()
androidx.appcompat.app.AppCompatDelegateImpl: void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setDataSourceFd(int)
cn.jzvd.demo.AdapterRecyclerViewTiny: AdapterRecyclerViewTiny(android.content.Context)
com.bumptech.glide.load.model.AssetUriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
tv.danmaku.ijk.media.player.IMediaPlayer$OnPreparedListener: void onPrepared(tv.danmaku.ijk.media.player.IMediaPlayer)
com.bumptech.glide.load.engine.cache.LruResourceCache: void trimMemory(int)
com.google.android.exoplayer2.source.hls.HlsChunkSource$InitializationTrackSelection: int getSelectedIndex()
com.bumptech.glide.request.SingleRequest: void begin()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void initCodec(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,android.media.MediaCrypto)
com.bumptech.glide.request.ThumbnailRequestCoordinator: void begin()
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: com.bumptech.glide.load.engine.executor.GlideExecutor$Builder setThreadCount(int)
com.google.android.exoplayer2.source.BaseMediaSource: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher createEventDispatcher(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long)
androidx.appcompat.view.menu.CascadingMenuPopup: void dismiss()
androidx.core.widget.NestedScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.core.widget.AutoScrollHelper: float constrainEdgeValue(float,float)
com.bumptech.glide.load.resource.gif.GifDrawable: int getFrameCount()
com.google.android.exoplayer2.util.TimestampAdjuster: long adjustSampleTimestamp(long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getLargestQueuedTimestampUs()
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,int,byte[],long,long,long,java.lang.String,int)
com.bumptech.glide.request.BaseRequestOptions: int getOverrideWidth()
com.google.android.exoplayer2.metadata.icy.IcyHeaders: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.BaseRenderer: void setCurrentStreamFinal()
com.google.android.exoplayer2.drm.DefaultDrmSession: void onKeysRequired()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getCacheStatisticFilePos()
com.google.android.exoplayer2.metadata.id3.InternalFrame$1: InternalFrame$1()
androidx.fragment.app.FragmentActivity: void checkForValidRequestCode(int)
androidx.recyclerview.widget.LinearLayoutManager: void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.Player$EventListener: void onTimelineChanged(com.google.android.exoplayer2.Timeline,int)
com.google.android.exoplayer2.offline.StreamKey: <clinit>()
androidx.appcompat.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)
cn.jzvd.demo.CustomJzvd.JzvdStdAutoCompleteAfterFullscreen: void startVideo()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadCanceled(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,int,long,long,long)
androidx.appcompat.widget.AppCompatSeekBarHelper: void jumpDrawablesToCurrentState()
androidx.appcompat.app.ActionBar: boolean closeOptionsMenu()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.content.res.GradientColorInflaterCompat: android.graphics.Shader$TileMode parseTileMode(int)
com.google.android.exoplayer2.video.ColorInfo: boolean equals(java.lang.Object)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: android.media.MediaCodecInfo getCodecInfoAt(int)
androidx.fragment.app.FragmentManagerImpl: void noteStateNotSaved()
com.google.android.exoplayer2.extractor.ts.Ac4Reader: Ac4Reader(java.lang.String)
com.google.android.exoplayer2.audio.AudioTimestampPoller: boolean maybePollTimestamp(long)
com.google.android.exoplayer2.text.ttml.TtmlSubtitle: TtmlSubtitle(com.google.android.exoplayer2.text.ttml.TtmlNode,java.util.Map,java.util.Map,java.util.Map)
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: void clearSentEos()
com.google.android.exoplayer2.extractor.amr.AmrExtractor: void maybeOutputSeekMap(long,int)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.Timeline$Window: long getDefaultPositionMs()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: boolean isSupported(int,boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnControlMessageListener: java.lang.String onControlResolveSegmentUrl(int)
com.google.android.exoplayer2.metadata.icy.IcyInfo: int describeContents()
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: com.google.android.exoplayer2.extractor.ts.UserDataReader buildUserDataReader(com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)
com.google.android.exoplayer2.source.SampleQueue: void commitSample(long,int,long,int,com.google.android.exoplayer2.extractor.TrackOutput$CryptoData)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: com.google.android.exoplayer2.extractor.mp3.MlltSeeker maybeHandleSeekMetadata(com.google.android.exoplayer2.metadata.Metadata,long)
androidx.viewpager.widget.PagerAdapter: PagerAdapter()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: WindowDecorActionBar$ActionModeImpl(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback)
com.google.android.exoplayer2.extractor.ogg.StreamReader: StreamReader()
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: TsExtractor$PmtReader(com.google.android.exoplayer2.extractor.ts.TsExtractor,int)
com.bumptech.glide.load.model.FileLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: AmrExtractor(int)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: boolean onForwardingStarted()
androidx.core.graphics.TypefaceCompatApi21Impl: void init()
cn.jzvd.demo.ActivityApiCustomMedia: void onCreate(android.os.Bundle)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver: void onReceiveResult(int,android.os.Bundle)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainFreezeMethod(java.lang.Class)
androidx.fragment.app.Fragment: int getNextTransition()
com.bumptech.glide.load.resource.bitmap.CenterCrop: CenterCrop()
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException: RawResourceDataSource$RawResourceDataSourceException(java.io.IOException)
androidx.appcompat.view.menu.MenuDialogHelper: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.widget.ResourcesWrapper: int[] getIntArray(int)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: void init(com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper)
androidx.collection.MapCollections$ValuesCollection: boolean isEmpty()
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: ToolbarWidgetWrapper$2(androidx.appcompat.widget.ToolbarWidgetWrapper,int)
androidx.recyclerview.widget.RecyclerView: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer)
cn.jzvd.JzvdStd: void changeUiToComplete()
androidx.appcompat.view.menu.MenuPopup: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
androidx.viewpager.widget.ViewPager$SavedState: <clinit>()
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: TransformationUtils$NoLock()
androidx.appcompat.app.WindowDecorActionBar$2: void onAnimationEnd(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: StaggeredGridLayoutManager$LazySpanLookup()
androidx.collection.ArrayMap$1: int colIndexOfKey(java.lang.Object)
com.bumptech.glide.load.resource.gif.GifDrawable: void start()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseUuid(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.extractor.mp4.TrackFragment,byte[])
com.bumptech.glide.util.LruCache: java.lang.Object get(java.lang.Object)
cn.jzvd.JzvdStd: void changeUiToPauseClear()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.bumptech.glide.RequestManager: com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class)
androidx.viewpager.widget.PagerAdapter: void setViewPagerObserver(android.database.DataSetObserver)
androidx.appcompat.view.menu.MenuBuilder: void removeGroup(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean applyDayNight()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(int)
com.danikula.videocache.ProxyCache$SourceReaderRunnable: ProxyCache$SourceReaderRunnable(com.danikula.videocache.ProxyCache,com.danikula.videocache.ProxyCache$1)
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: boolean isWebvttHeaderLine(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.manager.SupportRequestManagerFragment: androidx.fragment.app.Fragment getParentFragmentUsingHint()
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory: DiskLruCache$DiskLruCacheThreadFactory(com.bumptech.glide.disklrucache.DiskLruCache$1)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void resetCueBuilders()
androidx.appcompat.widget.Toolbar: void ensureMenuView()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.google.android.exoplayer2.metadata.id3.GeobFrame$1: com.google.android.exoplayer2.metadata.id3.GeobFrame[] newArray(int)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
com.google.android.exoplayer2.text.cea.Cea608Decoder: void setCaptionRowCount(int)
androidx.arch.core.internal.FastSafeIterableMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.text.webvtt.CssParser: void skipStyleBlock(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: android.graphics.Bitmap decodeBitmap(android.graphics.BitmapFactory$Options)
android.support.v4.os.IResultReceiver$Stub: android.support.v4.os.IResultReceiver asInterface(android.os.IBinder)
androidx.core.widget.AutoScrollHelper: void cancelTargetTouch()
com.google.android.exoplayer2.extractor.ts.PsExtractor: PsExtractor()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnTimedTextListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener)
androidx.appcompat.widget.AppCompatTextHelper: void autoSizeText()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.data.DataFetcher buildDelegateFetcher()
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)
androidx.appcompat.app.WindowDecorActionBar$1: void onAnimationEnd(android.view.View)
tv.danmaku.ijk.media.player.IMediaPlayer: void setDataSource(java.io.FileDescriptor)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: MpegAudioReader()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onTracksEnded()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: <clinit>()
com.google.android.exoplayer2.source.chunk.MediaChunkIterator$1: MediaChunkIterator$1()
androidx.appcompat.widget.TintTypedArray: void recycle()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void parseCueText(java.lang.String,java.lang.String,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder,java.util.List)
tv.danmaku.ijk.media.player.MediaPlayerProxy$6: boolean onError(tv.danmaku.ijk.media.player.IMediaPlayer,int,int)
androidx.appcompat.widget.SearchView: void clearFocus()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect)
androidx.fragment.app.Fragment: void initState()
com.google.android.exoplayer2.text.ttml.TtmlDecoder: boolean isSupportedTag(java.lang.String)
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionStart(android.transition.Transition)
com.google.android.exoplayer2.AudioBecomingNoisyManager$AudioBecomingNoisyReceiver: void run()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo getLoadingMediaPeriod()
com.bumptech.glide.load.Options: int hashCode()
androidx.loader.app.LoaderManagerImpl: LoaderManagerImpl(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore)
com.google.android.exoplayer2.upstream.BaseDataSource: void transferEnded()
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: AndroidMediaPlayer$AndroidMediaPlayerListenerHolder(tv.danmaku.ijk.media.player.AndroidMediaPlayer,tv.danmaku.ijk.media.player.AndroidMediaPlayer)
androidx.media.AudioAttributesCompat: <clinit>()
cn.jzvd.demo.ActivityApiOrientation: void onCreate(android.os.Bundle)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void start()
org.slf4j.helpers.MessageFormatter: void intArrayAppend(java.lang.StringBuilder,int[])
com.bumptech.glide.request.target.ImageViewTarget: void maybeUpdateAnimatable(java.lang.Object)
com.google.android.exoplayer2.extractor.ts.Id3Reader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor)
androidx.core.view.ViewCompat$3: java.lang.Object frameworkGet(android.view.View)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: void cleanup()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: void remove(com.bumptech.glide.request.ResourceCallback)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: DefaultTrackNameProvider(android.content.res.Resources)
androidx.fragment.app.FragmentManagerImpl: void removeRetainedFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentManagerViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getMinimumWidth()
androidx.recyclerview.widget.GapWorker: void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long)
com.bumptech.glide.disklrucache.DiskLruCache: java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit)
com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder: SpliceInfoDecoder()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: long getPositionUs()
androidx.appcompat.app.WindowDecorActionBar: void setDisplayShowHomeEnabled(boolean)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)
androidx.fragment.app.Fragment: void performConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean readAtomHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: long getDurationUs()
androidx.appcompat.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setLoopCount(int)
com.google.android.exoplayer2.extractor.ts.H262Reader: void seek()
org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,java.lang.String,java.lang.Object[],java.lang.Throwable)
com.google.android.exoplayer2.util.SystemHandlerWrapper: android.os.Looper getLooper()
com.google.android.exoplayer2.util.CodecSpecificDataUtil: java.lang.String buildAvcCodecString(int,int,int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: java.lang.String toString()
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isTabCtrlCode(byte,byte)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAutoMeasureEnabled()
tv.danmaku.ijk.media.player.misc.IAndroidIO: int close()
com.bumptech.glide.load.engine.LockedResource: com.bumptech.glide.load.engine.LockedResource obtain(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.lang.Object parse(android.net.Uri,java.io.InputStream)
com.google.android.exoplayer2.text.ttml.TtmlRenderUtil: void endParagraph(android.text.SpannableStringBuilder)
androidx.fragment.app.Fragment: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.recyclerview.widget.RecyclerView$LayoutManager: void layoutDecoratedWithMargins(android.view.View,int,int,int,int)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: SpliceInsertCommand(android.os.Parcel)
com.google.android.exoplayer2.extractor.ogg.FlacReader: FlacReader()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat alpha(float)
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersVertical(android.graphics.Canvas)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: AnimatedStateListDrawableCompat$AnimatedStateListState(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onAudioEnabled(com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: long getDurationUs()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void setConstantSize(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: boolean isStateful()
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean hasPendingData(long)
com.bumptech.glide.request.RequestOptions: RequestOptions()
com.google.android.exoplayer2.source.ClippingMediaPeriod: void prepare(com.google.android.exoplayer2.source.MediaPeriod$Callback,long)
com.google.android.exoplayer2.metadata.flac.VorbisComment$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: void disable()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: int skipData(long)
com.google.android.exoplayer2.text.webvtt.CssParser: java.lang.String parseIdentifier(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.StringBuilder)
com.bumptech.glide.load.model.LazyHeaders: java.lang.String toString()
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(android.graphics.ImageDecoder$Source,int,int,com.bumptech.glide.load.Options)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int)
androidx.appcompat.app.AppCompatDelegateImpl$1: AppCompatDelegateImpl$1(java.lang.Thread$UncaughtExceptionHandler)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setState(int[])
com.bumptech.glide.load.resource.bitmap.TransformationUtils: java.util.concurrent.locks.Lock getBitmapDrawableLock()
com.bumptech.glide.load.model.ResourceLoader$UriFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.CascadingMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.google.android.exoplayer2.audio.Sonic: short[] ensureSpaceForAdditionalFrames(short[],int,int)
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onSessionEvent(java.lang.String,android.os.Bundle)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createTextContainerFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String,int)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onCompletion(android.media.MediaPlayer)
androidx.appcompat.widget.AbsActionBarView: int next(int,int,boolean)
com.bumptech.glide.request.target.ViewTarget: void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback)
com.google.android.exoplayer2.text.pgs.PgsSubtitle: PgsSubtitle(java.util.List)
com.google.android.exoplayer2.text.ttml.TtmlStyle: java.lang.String getId()
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.video.ColorInfo: <clinit>()
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void maybeInitExtraTracks()
androidx.appcompat.widget.AppCompatImageView: AppCompatImageView(android.content.Context)
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: DecodeJob$ReleaseManager()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.metadata.Metadata parseMdtaFromMeta(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void decoderInitialized(java.lang.String,long,long)
androidx.lifecycle.ClassesInfoCache$MethodReference: boolean equals(java.lang.Object)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(byte[])
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.fragment.app.FragmentActivity onGetHost()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onAudioInputFormatChanged(com.google.android.exoplayer2.Format)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View findViewById(int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void release()
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.activity.OnBackPressedCallback: void addCancellable(androidx.activity.Cancellable)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: MediaCodecRenderer(int,com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.drm.DrmSessionManager,boolean,boolean,float)
com.bumptech.glide.load.resource.UnitTransformation: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: void assertTrue(boolean)
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: void init(android.content.Context)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: boolean parsePayload(com.google.android.exoplayer2.util.ParsableByteArray,long)
androidx.savedstate.SavedStateRegistry$1: SavedStateRegistry$1(androidx.savedstate.SavedStateRegistry)
androidx.appcompat.widget.SearchView: android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String)
androidx.exifinterface.media.ExifInterface: int getAttributeInt(java.lang.String,int)
com.google.android.exoplayer2.AudioFocusManager: void abandonAudioFocus()
org.slf4j.helpers.SubstituteLogger: SubstituteLogger(java.lang.String,java.util.Queue,boolean)
org.slf4j.helpers.SubstituteLoggerFactory: void clear()
com.bumptech.glide.request.SingleRequest: void onLoadFailed(com.bumptech.glide.load.engine.GlideException)
com.google.android.exoplayer2.text.webvtt.CssParser: boolean maybeSkipComment(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
androidx.appcompat.view.menu.MenuBuilder: boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.extractor.ogg.OggExtractor: com.google.android.exoplayer2.util.ParsableByteArray resetPosition(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.AppCompatCheckBox: void drawableStateChanged()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnInfoListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener)
androidx.appcompat.view.ContextThemeWrapper: void initializeTheme()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingLeft()
com.bumptech.glide.load.engine.DecodeHelper: java.util.List getRegisteredResourceClasses()
com.bumptech.glide.util.pool.FactoryPools$3: void reset(java.lang.Object)
androidx.appcompat.app.ActionBar: boolean invalidateOptionsMenu()
com.google.android.exoplayer2.extractor.ogg.StreamReader: long convertTimeToGranule(long)
androidx.lifecycle.ClassesInfoCache$MethodReference: void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object)
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: void onData(byte[],int,int)
com.danikula.videocache.ProxyCache: <clinit>()
androidx.viewpager.widget.ViewPager: void dispatchOnPageSelected(int)
com.bumptech.glide.load.engine.EngineKey: boolean equals(java.lang.Object)
tv.danmaku.ijk.media.player.IjkMediaPlayer$DefaultMediaCodecSelector: <clinit>()
com.google.android.exoplayer2.audio.DefaultAudioSink: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
com.google.android.exoplayer2.source.IcyDataSource: android.net.Uri getUri()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options)
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter,boolean)
com.google.android.exoplayer2.source.TrackGroupArray$1: com.google.android.exoplayer2.source.TrackGroupArray[] newArray(int)
com.danikula.videocache.GetRequest: java.lang.String findUri(java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getCurrentPosition()
androidx.core.view.ActionProvider: void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setDither(boolean)
com.google.android.exoplayer2.text.SubtitleDecoderFactory$1: boolean supportsFormat(com.google.android.exoplayer2.Format)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setSpeed(float)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: AdtsExtractor()
androidx.fragment.app.FragmentTransitionCompat21: void addTargets(java.lang.Object,java.util.ArrayList)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.util.List extrasIntList(java.lang.String)
com.bumptech.glide.request.target.BaseTarget: BaseTarget()
com.danikula.videocache.Config: java.io.File generateCacheFile(java.lang.String)
com.google.android.exoplayer2.source.hls.Aes128DataSource: void close()
androidx.appcompat.app.AppCompatDelegateImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
com.danikula.videocache.file.Files: void modify(java.io.File)
androidx.appcompat.widget.AppCompatProgressBarHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.widget.ViewStubCompat: void onMeasure(int,int)
cn.jzvd.demo.AdapterListView$ViewHolder: AdapterListView$ViewHolder(cn.jzvd.demo.AdapterListView)
com.bumptech.glide.load.engine.cache.LruResourceCache: void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.DefaultMediaClock: void syncClocks(boolean)
com.google.android.exoplayer2.text.ttml.TtmlNode: void traverseForStyle(long,java.util.Map,java.util.Map)
com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStop()
com.google.android.exoplayer2.Timeline$Period: int getNextAdIndexToPlay(int,int)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnInfoListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: AppCompatDelegateImpl$ActionModeCallbackWrapperV9(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback)
androidx.core.widget.TextViewCompat: void setLastBaselineToBottomHeight(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.fragment.app.Fragment: void setHideReplaced(boolean)
com.bumptech.glide.load.DecodeFormat: <clinit>()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearTmpDetachFlag()
androidx.recyclerview.widget.GridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.app.AlertController: android.view.ViewGroup resolvePanel(android.view.View,android.view.View)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.TextInformationFrame decodeTextInformationFrame(com.google.android.exoplayer2.util.ParsableByteArray,int,java.lang.String)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand$1: com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand[] newArray(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleG2Character(int)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: void putPps(com.google.android.exoplayer2.util.NalUnitUtil$PpsData)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener: void onUnderrun(int,long,long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean canApplyTheme()
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: void seek()
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int getSynchronizationSampleIndex(com.google.android.exoplayer2.extractor.mp4.TrackSampleTable,long)
com.bumptech.glide.load.model.UnitModelLoader: UnitModelLoader()
com.google.android.exoplayer2.audio.DefaultAudioSink: void play()
androidx.viewpager.widget.ViewPager: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.audio.BaseAudioProcessor: void queueEndOfStream()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: android.view.MenuInflater getMenuInflater()
androidx.exifinterface.media.ExifInterface$1: int readAt(long,byte[],int,int)
com.google.android.exoplayer2.upstream.ContentDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.bumptech.glide.load.model.StringLoader: boolean handles(java.lang.Object)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getVideoSarNum()
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: LazyBitmapDrawableResource(android.content.res.Resources,com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: <clinit>()
android.support.v4.media.MediaMetadataCompat: android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object)
androidx.recyclerview.widget.RecyclerView: boolean isAttachedToWindow()
androidx.fragment.app.BackStackState: androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl)
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: void onChange(boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: com.google.android.exoplayer2.Format[] getFormats(com.google.android.exoplayer2.trackselection.TrackSelection)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadStarted(com.google.android.exoplayer2.upstream.DataSpec,int,long)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot()
com.google.android.exoplayer2.ExoPlayerImplInternal: void setShuffleModeEnabledInternal(boolean)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadError(com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData,java.io.IOException,boolean)
com.bumptech.glide.load.engine.CallbackException: CallbackException(java.lang.Throwable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: java.lang.Object getTargetByName(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(android.view.View)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: MdtaMetadataEntry(android.os.Parcel)
com.bumptech.glide.load.resource.gif.GifDrawableResource: void recycle()
com.bumptech.glide.load.engine.ResourceRecycler: void recycle(com.bumptech.glide.load.engine.Resource,boolean)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean shouldParseLeafAtom(int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.lang.String,java.util.Map)
com.google.android.exoplayer2.util.TimestampAdjuster: void reset()
com.google.android.exoplayer2.text.cea.Cea708Cue: Cea708Cue(java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float,boolean,int,int)
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: void startNalUnit(int)
com.google.android.exoplayer2.decoder.DecoderInputBuffer: java.nio.ByteBuffer createReplacementByteBuffer(int)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean arrayContains(int[],int)
androidx.appcompat.view.menu.BaseMenuPresenter: void updateMenuView(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.Window$Callback getWindowCallback()
com.google.android.exoplayer2.upstream.DefaultDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
androidx.appcompat.widget.SearchView: int getImeOptions()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void ensureImeVisible()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet,int)
com.bumptech.glide.util.ByteBufferUtil: com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setKeepInBackground(boolean)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int getCodecMaxInputSize(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.ExoPlayerImplInternal: android.os.Looper getPlaybackLooper()
com.google.android.exoplayer2.util.Util: int getStreamTypeForAudioUsage(int)
com.bumptech.glide.load.model.ResourceLoader: boolean handles(java.lang.Integer)
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.resource.bitmap.ImageReader,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks)
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void seek(long,long)
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: boolean populate(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder: BitmapDrawableEncoder(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceEncoder)
com.bumptech.glide.load.engine.DecodeJob: int compareTo(com.bumptech.glide.load.engine.DecodeJob)
androidx.appcompat.view.menu.MenuItemImpl: int getGroupId()
com.google.android.exoplayer2.trackselection.MappingTrackSelector: void onSelectionActivated(java.lang.Object)
androidx.appcompat.view.StandaloneActionMode: void setSubtitle(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void onContinueLoadingRequested(com.google.android.exoplayer2.source.MediaPeriod)
com.google.android.exoplayer2.source.hls.HlsMediaSource: void maybeThrowSourceInfoRefreshError()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: int getSelectionReason()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: short getInt16(int)
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment()
com.google.android.exoplayer2.util.Util: java.lang.String fromUtf8Bytes(byte[],int,int)
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: ListPopupWindow$PopupScrollListener(androidx.appcompat.widget.ListPopupWindow)
com.bumptech.glide.Priority: Priority(java.lang.String,int)
com.google.android.exoplayer2.extractor.mp4.TrackSampleTable: int getIndexOfLaterOrEqualSynchronizationSample(long)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: MenuPopupWindow$MenuDropDownListView(android.content.Context,boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: <clinit>()
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
com.google.android.exoplayer2.extractor.flv.TagPayloadReader: boolean consume(com.google.android.exoplayer2.util.ParsableByteArray,long)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: void access$900(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams,long,long)
org.slf4j.helpers.SubstituteLoggerFactory: org.slf4j.Logger getLogger(java.lang.String)
androidx.core.provider.FontsContractCompat$FontInfo: android.net.Uri getUri()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore: int compareTo(com.google.android.exoplayer2.trackselection.DefaultTrackSelector$TextTrackScore)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_init()
com.google.android.exoplayer2.source.dash.DashMediaSource$Factory: DashMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.bumptech.glide.load.model.MultiModelLoaderFactory: com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class)
org.slf4j.helpers.SubstituteLogger: boolean isDelegateNOP()
androidx.core.graphics.drawable.DrawableCompat: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDefaultIcon1()
androidx.fragment.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)
cn.jzvd.demo.ActivityListViewMultiHolder: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.util.Util: int crc8(byte[],int,int,int)
androidx.core.provider.SelfDestructiveThread$1: boolean handleMessage(android.os.Message)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onPositionDiscontinuity(int)
cn.jzvd.demo.CustomMedia.JZMediaIjk: boolean isPlaying()
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: void init(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.danikula.videocache.HttpProxyCacheServer$Builder: com.danikula.videocache.Config access$000(com.danikula.videocache.HttpProxyCacheServer$Builder)
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1: void put(android.graphics.Bitmap)
androidx.appcompat.widget.Toolbar: void onMeasure(int,int)
androidx.core.view.ViewCompat: boolean isScreenReaderFocusable(android.view.View)
androidx.fragment.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.bumptech.glide.RequestManager: void onTrimMemory(int)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean pause()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.source.hls.HlsMediaSource: void releasePeriod(com.google.android.exoplayer2.source.MediaPeriod)
com.google.android.exoplayer2.util.ParsableByteArray: long readUtf8EncodedLong()
androidx.core.util.Pools$SimplePool: java.lang.Object acquire()
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme)
com.google.android.exoplayer2.extractor.mp3.VbriSeeker: com.google.android.exoplayer2.extractor.mp3.VbriSeeker create(long,long,com.google.android.exoplayer2.extractor.MpegAudioHeader,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeNotifyPlaybackInfoChanged()
androidx.versionedparcelable.VersionedParcel: java.lang.String readString(java.lang.String,int)
androidx.core.content.res.TypedArrayUtils: int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.google.android.exoplayer2.audio.DefaultAudioSink$1: void run()
androidx.core.graphics.TypefaceCompatApi26Impl: boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[])
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets)
androidx.collection.MapCollections$EntrySet: boolean isEmpty()
androidx.core.view.ViewCompat$AccessibilityViewProperty: ViewCompat$AccessibilityViewProperty(int,java.lang.Class,int)
com.bumptech.glide.provider.EncoderRegistry$Entry: boolean handles(java.lang.Class)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
androidx.recyclerview.widget.RecyclerView: void markKnownViewsInvalid()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: void setCheckpointValues(long[][][],int,long[][],int[])
com.google.android.exoplayer2.BaseRenderer: void enable(com.google.android.exoplayer2.RendererConfiguration,com.google.android.exoplayer2.Format[],com.google.android.exoplayer2.source.SampleStream,long,boolean,long)
androidx.recyclerview.widget.RecyclerView: boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
com.google.android.exoplayer2.audio.Sonic: int insertPitchPeriod(short[],int,float,int)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: boolean parseHeader(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.view.ViewConfigurationCompat: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context)
androidx.lifecycle.LifecycleRegistry: void addObserver(androidx.lifecycle.LifecycleObserver)
com.google.android.exoplayer2.util.EGLSurfaceTexture: void onFrameAvailable(android.graphics.SurfaceTexture)
androidx.appcompat.view.menu.MenuWrapperICS: MenuWrapperICS(android.content.Context,androidx.core.internal.view.SupportMenu)
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean shouldTransitionToReadyState(boolean)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat build()
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory: com.bumptech.glide.load.data.DataRewinder build(java.lang.Object)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildLanguageOrLabelString(com.google.android.exoplayer2.Format)
org.slf4j.helpers.NOPLogger: void debug(java.lang.String)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int getTrackTypeScore(int)
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: long getDurationUs()
androidx.core.widget.AutoScrollHelper: float getEdgeValue(float,float,float,float)
com.danikula.videocache.Preconditions: void checkArgument(boolean,java.lang.String)
androidx.core.content.res.TypedArrayUtils: android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int)
androidx.core.app.AppOpsManagerCompat: int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setAdapter(android.widget.ListAdapter)
cn.jzvd.JzvdStd: void resetProgressAndTime()
com.google.android.exoplayer2.source.hls.HlsMediaSource: HlsMediaSource(android.net.Uri,com.google.android.exoplayer2.source.hls.HlsDataSourceFactory,com.google.android.exoplayer2.source.hls.HlsExtractorFactory,com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker,boolean,int,boolean,java.lang.Object,com.google.android.exoplayer2.source.hls.HlsMediaSource$1)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setLine(float)
androidx.recyclerview.widget.RecyclerView: void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: java.lang.Exception decode(com.google.android.exoplayer2.decoder.DecoderInputBuffer,com.google.android.exoplayer2.decoder.OutputBuffer,boolean)
androidx.recyclerview.widget.GridLayoutManager: int[] calculateItemBorders(int[],int,int)
com.google.android.exoplayer2.util.FlacStreamMetadata: long getSampleNumber(long)
com.google.android.exoplayer2.util.Util: java.lang.String[] getSystemLanguageCodes()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateHomeAccessibility()
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: int getItemViewType(int)
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory: MediaStoreImageThumbLoader$Factory(android.content.Context)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap createSeekMap()
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetBottom()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.appcompat.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void recycleFirstFrame()
com.bumptech.glide.load.engine.EngineJob$CallResourceReady: void run()
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)
com.google.android.exoplayer2.extractor.ts.DtsReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setSubtitle(java.lang.Object,java.lang.CharSequence)
androidx.recyclerview.widget.RecyclerView: void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: java.io.InputStream openThumbInputStream()
android.support.v4.media.session.IMediaSession$Stub: android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder)
androidx.appcompat.app.AlertController$AlertParams$4: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.exoplayer2.video.DolbyVisionConfig: DolbyVisionConfig(int,int,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void clearColorFilter()
com.google.android.exoplayer2.Timeline: android.util.Pair getPeriodPosition(com.google.android.exoplayer2.Timeline$Window,com.google.android.exoplayer2.Timeline$Period,int,long)
com.google.android.exoplayer2.util.FlacStreamMetadata: int getBitRate()
com.google.android.exoplayer2.Timeline: boolean isEmpty()
com.google.android.exoplayer2.audio.Sonic: void changeSpeed(float)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup)
com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder: EventMessageDecoder()
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onPlayerError(com.google.android.exoplayer2.ExoPlaybackException)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: void enable()
com.bumptech.glide.request.target.ImageViewTarget: void setResourceInternal(java.lang.Object)
com.google.android.exoplayer2.audio.AudioCapabilities: boolean deviceMaySetExternalSurroundSoundGlobalSetting()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setMenuPrepared()
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options)
com.danikula.videocache.HttpProxyCacheServerClients$UiListenerHandler: HttpProxyCacheServerClients$UiListenerHandler(java.lang.String,java.util.List)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
androidx.core.graphics.Insets: int hashCode()
androidx.recyclerview.widget.GridLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
com.google.android.exoplayer2.AudioFocusManager: void handleStop()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator: boolean hasNext()
androidx.fragment.app.Fragment: void onOptionsMenuClosed(android.view.Menu)
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler: DefaultDrmSession$RequestHandler(com.google.android.exoplayer2.drm.DefaultDrmSession,android.os.Looper)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String)
com.bumptech.glide.load.resource.gif.GifDrawable: void setColorFilter(android.graphics.ColorFilter)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: void updateNextSearchBytePosition()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.google.android.exoplayer2.text.Cue: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void buildAndPrepareSampleStreamWrappers(long)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(int,int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean maybeSeekForCues(com.google.android.exoplayer2.extractor.PositionHolder,long)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onRenderedFirstFrame()
androidx.cursoradapter.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: boolean endNalUnit(int)
com.google.android.exoplayer2.SimpleExoPlayer: void removeSurfaceCallbacks()
androidx.appcompat.widget.LinearLayoutCompat: void layoutHorizontal(int,int,int,int)
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23: void rebase(android.content.res.Resources$Theme)
com.bumptech.glide.provider.ResourceDecoderRegistry: java.util.List getOrAddEntryList(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Activity,androidx.appcompat.app.AppCompatCallback)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.widget.AppCompatSeekBarHelper: void applyTickMarkTint()
com.google.android.exoplayer2.text.ttml.TtmlRenderUtil: com.google.android.exoplayer2.text.ttml.TtmlStyle resolveStyle(com.google.android.exoplayer2.text.ttml.TtmlStyle,java.lang.String[],java.util.Map)
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty()
com.bumptech.glide.load.model.StringLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: LruArrayPool$Key(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void onReset()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: java.lang.Object next()
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement: int access$100(com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement)
com.google.android.exoplayer2.extractor.VorbisUtil: com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader readVorbisCommentHeader(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.text.ttml.TtmlNode: void addChild(com.google.android.exoplayer2.text.ttml.TtmlNode)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void dropOutputBuffer(android.media.MediaCodec,int,long)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(java.lang.String,boolean,com.google.android.exoplayer2.drm.DrmInitData$SchemeData[])
com.bumptech.glide.request.SingleRequest: boolean isAnyResourceSet()
androidx.fragment.app.FragmentTransition: void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean)
com.google.android.exoplayer2.metadata.icy.IcyDecoder: com.google.android.exoplayer2.metadata.Metadata decode(com.google.android.exoplayer2.metadata.MetadataInputBuffer)
com.danikula.videocache.HttpProxyCacheServer: boolean isAlive()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: MediaSessionCompat$ResultReceiverWrapper$1()
androidx.fragment.app.BackStackRecord: boolean interactsWith(java.util.ArrayList,int,int)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: long findNextFrame(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: ScrollingTabContainerView$TabAdapter(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.view.menu.MenuDialogHelper: void onClick(android.content.DialogInterface,int)
com.google.android.exoplayer2.text.pgs.PgsDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: int peekIntAtPosition(byte[],int)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: void evict()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()
androidx.appcompat.widget.TintContextWrapper: void setTheme(int)
com.google.android.exoplayer2.BaseRenderer: int getIndex()
com.google.android.exoplayer2.util.ParsableByteArray: int readLittleEndianUnsignedShort()
androidx.collection.MapCollections$MapIterator: MapCollections$MapIterator(androidx.collection.MapCollections)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void onBytesTransferred(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean,int)
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getFileDataSource()
com.google.android.exoplayer2.upstream.DataSourceException: DataSourceException(int)
androidx.appcompat.view.SupportMenuInflater$MenuState: SupportMenuInflater$MenuState(androidx.appcompat.view.SupportMenuInflater,android.view.Menu)
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback: ActionMenuItemView$PopupCallback()
androidx.appcompat.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int)
androidx.appcompat.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoadCompleted(com.google.android.exoplayer2.source.chunk.Chunk,long,long)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetLeft()
androidx.core.view.AccessibilityDelegateCompat: boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: void mark(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.metadata.id3.ChapterFrame$1: ChapterFrame$1()
androidx.appcompat.widget.SearchView$4: SearchView$4(androidx.appcompat.widget.SearchView)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isTunnelingV21(android.media.MediaCodecInfo$CodecCapabilities)
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: WebvttSubtitle(java.util.List)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.fragment.app.FragmentActivity: FragmentActivity()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float)
androidx.recyclerview.widget.OrientationHelper$1: int getModeInOther()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: long preparePayload(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.view.SupportActionModeWrapper: void setTitle(java.lang.CharSequence)
com.google.android.exoplayer2.source.CompositeMediaSource: void maybeThrowSourceInfoRefreshError()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: VorbisReader()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAutoMirrored(boolean)
androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int,android.util.TypedValue)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findFirstReferenceChildPosition(int)
com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle: java.util.List getCues(long)
com.bumptech.glide.load.model.MultiModelLoaderFactory: MultiModelLoaderFactory(androidx.core.util.Pools$Pool)
tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener: void onCompletion(tv.danmaku.ijk.media.player.IMediaPlayer)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean onPlaylistError(android.net.Uri,long)
android.support.v4.media.session.MediaSessionCompat$Token: MediaSessionCompat$Token(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle)
androidx.appcompat.app.AppCompatDelegate: void addActiveDelegate(androidx.appcompat.app.AppCompatDelegate)
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter: <clinit>()
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: java.io.InputStream open(android.net.Uri)
org.slf4j.impl.AndroidLoggerAdapter: void formatAndLog(int,java.lang.String,java.lang.Object[])
androidx.appcompat.widget.ForwardingListener$DisallowIntercept: ForwardingListener$DisallowIntercept(androidx.appcompat.widget.ForwardingListener)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromViewAndKeepVisibleRect(android.view.View,int)
org.slf4j.event.EventRecodingLogger: void debug(java.lang.String)
androidx.fragment.app.FragmentController: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean isAutoSizeEnabled()
androidx.recyclerview.widget.LinearLayoutManager: void resolveShouldLayoutReverse()
com.google.android.exoplayer2.text.cea.Cea708Decoder: com.google.android.exoplayer2.text.Subtitle createSubtitle()
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$502(tv.danmaku.ijk.media.player.IjkMediaPlayer,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1: void invalidateDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.metadata.id3.InternalFrame: java.lang.String toString()
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: void init(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.appcompat.widget.TintTypedArray: android.content.res.ColorStateList getColorStateList(int)
com.bumptech.glide.load.engine.ResourceCacheKey: int hashCode()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: void access$500(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long)
cn.jzvd.JzvdStd: void changeUiToError()
com.google.android.exoplayer2.upstream.RawResourceDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy: int readAt(long,byte[],int,int)
androidx.core.widget.NestedScrollView: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.media.session.MediaSessionCompat$Token: int hashCode()
android.support.v4.media.session.MediaControllerCompat$Callback: void binderDied()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean getCodecNeedsEosPropagation()
android.support.v4.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: UrlLinkFrame(java.lang.String,java.lang.String,java.lang.String)
com.google.android.exoplayer2.metadata.flac.PictureFrame$1: com.google.android.exoplayer2.metadata.flac.PictureFrame createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: int getTrackTypeForHdlr(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setBooleanProperty(int,boolean)
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState()
androidx.collection.SparseArrayCompat: <clinit>()
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onReadingStarted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithNewPosition(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,long)
com.google.android.exoplayer2.extractor.ts.Id3Reader: void seek()
androidx.recyclerview.widget.RecyclerView: void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
cn.jzvd.JZMediaSystem: void setSurface(android.view.Surface)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader: int read(byte[],int)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: ResourceDrawableDecoder(android.content.Context)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setInternalBackgroundTint(android.content.res.ColorStateList)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onMoofContainerAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: int getVideoHeight()
com.google.android.exoplayer2.util.MimeTypes: int getTrackTypeForCustomMimeType(java.lang.String)
androidx.collection.MapCollections$KeySet: boolean equals(java.lang.Object)
androidx.savedstate.SavedStateRegistry: void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider: void run()
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)
com.bumptech.glide.load.model.UriLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.util.Date readAmfDate(com.google.android.exoplayer2.util.ParsableByteArray)
cn.jzvd.demo.FragmentDemo: FragmentDemo()
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: android.view.View getWrappedView()
androidx.fragment.app.FragmentManagerViewModel: void onCleared()
com.bumptech.glide.util.ExceptionPassthroughInputStream: int read(byte[],int,int)
com.google.android.exoplayer2.audio.AudioAttributes: AudioAttributes(int,int,int,int,com.google.android.exoplayer2.audio.AudioAttributes$1)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.source.TrackGroup getTrackGroup()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox parseSchiFromParent(com.google.android.exoplayer2.util.ParsableByteArray,int,int,java.lang.String)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.fragment.app.FragmentManagerImpl: void restoreSaveState(android.os.Parcelable)
cn.jzvd.JZUtils: long getSavedProgress(android.content.Context,java.lang.Object)
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle()
com.bumptech.glide.load.ImageHeaderParserUtils$5: ImageHeaderParserUtils$5(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: int getApplyableNightMode()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: boolean setVisible(boolean,boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void notifySeekStarted()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.String toString()
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: <clinit>()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setAudioStreamType(int)
com.google.android.exoplayer2.upstream.AssetDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: java.lang.Class getDataClass()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist parseMasterPlaylist(com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser$LineIterator,java.lang.String)
com.danikula.videocache.HttpProxyCacheServer$WaitRequestsRunnable: void run()
com.google.android.exoplayer2.Timeline$1: Timeline$1()
com.bumptech.glide.load.engine.executor.GlideExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters$1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters[] newArray(int)
com.google.android.exoplayer2.upstream.DefaultDataSource: void maybeAddListenerToDataSource(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.TransferListener)
com.google.android.exoplayer2.util.Log: void w(java.lang.String,java.lang.String)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: <clinit>()
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String _getAudioCodecInfo()
com.bumptech.glide.TransitionOptions: com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory()
com.danikula.videocache.file.Files: <clinit>()
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedMeasurementInOther(android.view.View)
com.bumptech.glide.gifdecoder.StandardGifDecoder: int getByteSize()
androidx.appcompat.graphics.drawable.DrawableContainer: void jumpToCurrentState()
com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox: int schemeToCryptoMode(java.lang.String)
com.bumptech.glide.util.LruCache: int getSize(java.lang.Object)
com.bumptech.glide.load.data.ExifOrientationStream: int read()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: long getLoadedPlaylistStartTimeUs(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
androidx.core.view.ViewCompat$5: java.lang.Object frameworkGet(android.view.View)
androidx.recyclerview.widget.RecyclerView: void dispatchPendingImportantForAccessibilityChanges()
com.bumptech.glide.RequestManager: void pauseAllRequestsRecursive()
com.bumptech.glide.load.model.UnitModelLoader$Factory: com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
android.support.v4.media.session.MediaControllerCompat$Callback: void onExtrasChanged(android.os.Bundle)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void pause()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: boolean emsgContainsExpectedWrappedFormat(com.google.android.exoplayer2.metadata.emsg.EventMessage)
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseSenc(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.extractor.mp4.TrackFragment)
androidx.appcompat.widget.SearchView$4: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment)
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: com.google.android.exoplayer2.extractor.mp3.MlltSeeker create(long,com.google.android.exoplayer2.metadata.id3.MlltFrame)
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: void queueInput(java.nio.ByteBuffer)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char,int,int)
com.bumptech.glide.manager.RequestManagerFragment: void onAttach(android.app.Activity)
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: <clinit>()
com.bumptech.glide.load.engine.ActiveResources$1$1: ActiveResources$1$1(com.bumptech.glide.load.engine.ActiveResources$1,java.lang.Runnable)
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: DatabaseSourceInfoStorage(android.content.Context)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: void outputPendingSampleMetadata()
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: long skip(long)
androidx.appcompat.widget.AlertDialogLayout: void setChildFrame(android.view.View,int,int,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setEnabled(boolean)
com.google.android.exoplayer2.util.Util: int crc32(byte[],int,int,int)
cn.jzvd.JzvdStd: void dismissVolumeDialog()
androidx.appcompat.view.menu.MenuBuilder: <clinit>()
com.bumptech.glide.load.HttpException: HttpException(java.lang.String,int)
com.google.android.exoplayer2.text.SubtitleOutputBuffer: void clear()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.appcompat.widget.AppCompatImageHelper: void setSupportImageTintList(android.content.res.ColorStateList)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDisplay(android.view.SurfaceHolder)
androidx.viewpager.widget.ViewPager$LayoutParams: ViewPager$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long[],java.nio.ByteOrder)
androidx.appcompat.widget.ThemeUtils: android.util.TypedValue getTypedValue()
androidx.appcompat.widget.SearchView: void updateSubmitArea()
androidx.appcompat.widget.ResourceManagerInternal: void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper: MenuItemWrapperICS$OnMenuItemClickListenerWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener)
com.bumptech.glide.load.data.LocalUriFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
androidx.core.view.ActionProvider: boolean overridesItemVisibility()
com.bumptech.glide.Registry$NoResultEncoderAvailableException: Registry$NoResultEncoderAvailableException(java.lang.Class)
com.google.android.exoplayer2.text.cea.Cea708InitializationData: java.util.List buildData(boolean)
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: LazyHeaders$StringHeaderFactory(java.lang.String)
com.google.android.exoplayer2.drm.DrmInitData: int hashCode()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.text.TextRenderer: TextRenderer(com.google.android.exoplayer2.text.TextOutput,android.os.Looper,com.google.android.exoplayer2.text.SubtitleDecoderFactory)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: long getMaxSize()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions set(com.bumptech.glide.load.Option,java.lang.Object)
com.google.android.exoplayer2.drm.ErrorStateDrmSession: boolean playClearSamplesWithoutKeys()
androidx.appcompat.widget.Toolbar: boolean hideOverflowMenu()
androidx.fragment.app.Fragment: void performResume()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean maybeSelectNewPrimaryUrl()
com.bumptech.glide.load.engine.ResourceCacheKey: boolean equals(java.lang.Object)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean getRendererDisabled(int)
androidx.appcompat.view.menu.ExpandedMenuView: void onDetachedFromWindow()
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: com.bumptech.glide.load.engine.Resource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: <clinit>()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: boolean isEmpty()
com.google.android.exoplayer2.metadata.id3.BinaryFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.collection.ArraySet: void ensureCapacity(int)
com.google.android.exoplayer2.drm.DefaultDrmSession: long getLicenseDurationRemainingSec()
androidx.appcompat.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: void enable()
com.google.android.exoplayer2.audio.Ac3Util: <clinit>()
com.google.android.exoplayer2.util.MimeTypes: boolean isText(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int)
com.google.android.exoplayer2.Renderer: void setOperatingRate(float)
cn.jzvd.demo.ActivityApiUIBigChange: void onPause()
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToNormal()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onLoadCompleted(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
cn.jzvd.Jzvd: boolean backPress()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean isStateful()
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
androidx.appcompat.app.TwilightCalculator: TwilightCalculator()
com.bumptech.glide.RequestManager: void onDestroy()
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean continueRead(com.google.android.exoplayer2.util.ParsableByteArray,byte[],int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
cn.jzvd.demo.ActivityMain: void clickWebView(android.view.View)
tv.danmaku.ijk.media.player.IMediaPlayer: void start()
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions: int getWidthPixels()
androidx.appcompat.view.menu.ListMenuItemView: void initialize(androidx.appcompat.view.menu.MenuItemImpl,int)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void sampleData(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.fragment.app.FragmentTransition: androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeTextType()
androidx.viewpager.widget.ViewPager$2: ViewPager$2()
androidx.appcompat.view.SupportMenuInflater: void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu)
cn.jzvd.demo.ActivityPreloading: void onPause()
androidx.appcompat.app.AppCompatDelegateImpl: void applyFixedSizeWindow()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: byte[] copyOfRangeIfValid(byte[],int,int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: long getCurrentPosition()
com.bumptech.glide.RequestManager: void resumeRequests()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addStateSet(int[],android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void cancel()
com.google.android.exoplayer2.BaseRenderer: void onReset()
com.google.android.exoplayer2.util.Util: void removeRange(java.util.List,int,int)
com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil: com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil$PsshAtom parsePsshAtom(byte[])
com.google.android.exoplayer2.util.Util: boolean inflate(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.ParsableByteArray,java.util.zip.Inflater)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int forceInvalidateAfter(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: ExoPlayerImplInternal(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.trackselection.TrackSelectorResult,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.upstream.BandwidthMeter,boolean,int,boolean,android.os.Handler,com.google.android.exoplayer2.util.Clock)
cn.jzvd.demo.CustomJzvd.JzvdStdTinyWindow: JzvdStdTinyWindow(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void addEventListener(android.os.Handler,com.google.android.exoplayer2.source.MediaSourceEventListener)
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: com.google.android.exoplayer2.decoder.DecoderInputBuffer createInputBuffer()
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeTriggerPendingMessages(long,long)
org.slf4j.LoggerFactory: boolean isAmbiguousStaticLoggerBinderPathSet(java.util.Set)
com.bumptech.glide.load.model.AssetUriLoader: <clinit>()
androidx.exifinterface.media.ExifInterface: int getMimeType(java.io.BufferedInputStream)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
androidx.appcompat.widget.ActionMenuView: void onDetachedFromWindow()
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DecodeJob$Stage getNextStage(com.bumptech.glide.load.engine.DecodeJob$Stage)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: java.nio.ByteBuffer getOutput()
com.bumptech.glide.load.resource.gif.GifBitmapProvider: void release(byte[])
com.google.android.exoplayer2.decoder.SimpleDecoder: void queueInputBuffer(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatSpinner: void showPopup()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void onLoadCompleted(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long)
androidx.recyclerview.widget.OrientationHelper$2: int getMode()
com.google.android.exoplayer2.Format: Format(java.lang.String,java.lang.String,int,int,int,java.lang.String,com.google.android.exoplayer2.metadata.Metadata,java.lang.String,java.lang.String,int,java.util.List,com.google.android.exoplayer2.drm.DrmInitData,long,int,int,float,int,float,byte[],int,com.google.android.exoplayer2.video.ColorInfo,int,int,int,int,int,java.lang.String,int,java.lang.Class)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.source.chunk.Chunk,long,long,java.io.IOException,int)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long readLastScrValueFromBuffer(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14: void onAnimationEnd(android.view.View)
tv.danmaku.ijk.media.player.pragma.DebugLog: void i(java.lang.String,java.lang.String,java.lang.Throwable)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.util.HashMap readAmfObject(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.Id3Reader: void packetStarted(long,int)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.google.android.exoplayer2.source.hls.HlsSampleStream: HlsSampleStream(com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper,int)
androidx.appcompat.widget.Toolbar: void setLogo(int)
com.danikula.videocache.HttpProxyCacheServer: java.io.File getCacheFile(java.lang.String)
androidx.appcompat.widget.AppCompatDrawableManager: android.content.res.ColorStateList getTintList(android.content.Context,int)
androidx.lifecycle.ReportFragment: void onPause()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean isConstantSize()
com.google.android.exoplayer2.text.cea.Cea608Decoder: void handleMiscCode(byte)
com.bumptech.glide.gifdecoder.GifHeader: int getStatus()
com.bumptech.glide.load.model.StringLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: ActionMenuPresenter$OverflowMenuButton$1(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter)
com.google.android.exoplayer2.Timeline$Window: long getPositionInFirstPeriodUs()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
androidx.core.graphics.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: void load()
androidx.fragment.app.FragmentManagerViewModel: boolean isCleared()
androidx.appcompat.widget.Toolbar: void measureChildConstrained(android.view.View,int,int,int,int,int)
androidx.collection.MapCollections: java.util.Collection getValues()
com.bumptech.glide.load.model.ResourceLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setLayoutStateDirection(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int findLastReferenceChildPosition(int)
com.google.android.exoplayer2.video.HevcConfig: com.google.android.exoplayer2.video.HevcConfig parse(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.fragment.app.FragmentTransition: void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap)
tv.danmaku.ijk.media.player.TextureMediaPlayer: void reset()
androidx.recyclerview.widget.RecyclerView: android.view.View findNextViewToFocus()
com.bumptech.glide.manager.RequestTracker: void restartRequests()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int skipBytes(int)
androidx.exifinterface.media.ExifInterface$1: long getSize()
androidx.appcompat.app.AppCompatDelegateImpl: void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu)
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean isPlayable()
androidx.core.app.TaskStackBuilder: void startActivities(android.os.Bundle)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()
androidx.appcompat.view.StandaloneActionMode: StandaloneActionMode(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean)
androidx.arch.core.internal.FastSafeIterableMap: androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object)
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean hasPendingData()
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo: int getLegacyAudioStream(java.lang.Object)
androidx.core.widget.NestedScrollView: void onNestedPreScroll(android.view.View,int,int,int[])
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.metadata.id3.BinaryFrame: BinaryFrame(android.os.Parcel)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.TextInformationFrame parseTextAttribute(int,java.lang.String,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.wav.WavExtractor: void assertInitialized()
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcelable)
com.danikula.videocache.ProxyCache: void onCacheAvailable(long,long)
com.danikula.videocache.StorageUtils: java.io.File getExternalCacheDir(android.content.Context)
com.google.android.exoplayer2.ui.TrackSelectionView: void onTrackViewClicked(android.view.View)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$Builder: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter build()
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache: byte[] put(android.net.Uri,byte[])
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: int findFirstKeyLessThan(android.util.SparseIntArray,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isInOverlayMode()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getCodecShortNameInline()
androidx.appcompat.app.AppCompatDelegateImpl: android.content.Context getActionBarThemedContext()
androidx.collection.MapCollections$MapIterator: boolean hasNext()
com.bumptech.glide.load.model.FileLoader: boolean handles(java.io.File)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityResumed(android.app.Activity)
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1: java.lang.Class getDataClass()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.appcompat.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy: DownsampleStrategy()
androidx.viewpager.widget.ViewPager$1: int compare(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int getFontColor()
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: DefaultDataSourceFactory(android.content.Context,java.lang.String,com.google.android.exoplayer2.upstream.TransferListener)
com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener: void onDrmSessionManagerError(java.lang.Exception)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
androidx.appcompat.app.AppCompatDelegateImpl: void installViewFactory()
androidx.viewpager.widget.ViewPager$PagerObserver: ViewPager$PagerObserver(androidx.viewpager.widget.ViewPager)
androidx.core.graphics.TypefaceCompatApi21Impl: <clinit>()
com.google.android.exoplayer2.audio.Ac4Util: int parseAc4SyncframeSize(byte[],int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float cross(float,float,float,float)
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int,android.content.res.Resources$Theme)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnErrorListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean setState(int[])
androidx.appcompat.view.menu.ActionMenuItem: int getItemId()
com.bumptech.glide.load.engine.executor.GlideExecutor$Builder: GlideExecutor$Builder(boolean)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void clear()
com.danikula.videocache.GetRequest: java.lang.String toString()
androidx.core.graphics.PathParser: void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: boolean isActive()
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable getPlaceholderDrawable()
androidx.appcompat.widget.Toolbar$2: void run()
com.google.android.exoplayer2.MediaPeriodQueue: MediaPeriodQueue()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: VectorDrawableCompat$VectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
com.bumptech.glide.manager.RequestManagerFragment: boolean isDescendant(android.app.Fragment)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.extractor.ts.Id3Reader: void packetFinished()
androidx.appcompat.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setLooping(boolean)
androidx.appcompat.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: java.util.List parseVorbisCodecPrivate(byte[])
cn.jzvd.demo.ActivityMain: void Glideurl(android.widget.ImageView,java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: void clearMemory()
com.google.android.exoplayer2.extractor.BinarySearchSeeker: int seekToPosition(com.google.android.exoplayer2.extractor.ExtractorInput,long,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean isAutoMirrored()
com.google.android.exoplayer2.util.ParsableBitArray: ParsableBitArray()
com.bumptech.glide.load.engine.ResourceCacheKey: ResourceCacheKey(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.Key,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.Transformation,java.lang.Class,com.bumptech.glide.load.Options)
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.bumptech.glide.request.ThumbnailRequestCoordinator: com.bumptech.glide.request.RequestCoordinator getRoot()
com.google.android.exoplayer2.metadata.id3.InternalFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.TintContextWrapper: android.content.res.Resources$Theme getTheme()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createTextSampleFormat(java.lang.String,java.lang.String,int,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter: android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int)
com.google.android.exoplayer2.audio.DtsUtil: com.google.android.exoplayer2.util.ParsableBitArray getNormalizedFrameHeader(byte[])
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsChunkHolder: void clear()
com.google.android.exoplayer2.text.cea.CeaDecoder: void releaseOutputBuffer(com.google.android.exoplayer2.text.SubtitleOutputBuffer)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: void decode(byte[],int,com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.ResourcesWrapper: int getInteger(int)
com.google.android.exoplayer2.metadata.flac.PictureFrame: PictureFrame(int,java.lang.String,java.lang.String,int,int,int,int,byte[])
com.google.android.exoplayer2.audio.DefaultAudioSink: android.media.AudioTrack initializeKeepSessionIdAudioTrack(int)
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void reset()
com.bumptech.glide.disklrucache.DiskLruCache$Editor: DiskLruCache$Editor(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1)
androidx.fragment.app.Fragment: void onHiddenChanged(boolean)
androidx.viewpager.widget.ViewPager: void addTouchables(java.util.ArrayList)
androidx.appcompat.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void processEndOfStream()
com.bumptech.glide.request.target.BaseTarget: void onStop()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: void updateSeekFloor(long,long)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: void unregister()
com.google.android.exoplayer2.audio.DefaultAudioSink: long getCurrentPositionUs(boolean)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: java.util.Map deriveOverridingDrmInitData(java.util.List)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: void setLoadPosition(long,long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,java.io.IOException,int)
com.bumptech.glide.load.engine.EngineJob: void start(com.bumptech.glide.load.engine.DecodeJob)
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry: AppCompatResources$ColorStateListCacheEntry(android.content.res.ColorStateList,android.content.res.Configuration)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect)
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: void setTrackType(int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
com.google.android.exoplayer2.decoder.SimpleDecoder: java.lang.Object dequeueInputBuffer()
androidx.fragment.app.Fragment$InstantiationException: Fragment$InstantiationException(java.lang.String,java.lang.Exception)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: int getElementSizeInBytes()
androidx.arch.core.internal.SafeIterableMap: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentController: void attachHost(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View findViewForItem(android.view.MenuItem)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.ResourceCacheGenerator: void onLoadFailed(java.lang.Exception)
com.google.android.exoplayer2.util.Util: int constrainValue(int,int,int)
com.google.android.exoplayer2.extractor.VorbisUtil: com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook readBook(com.google.android.exoplayer2.extractor.VorbisBitArray)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTooltipText(java.lang.CharSequence)
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
com.google.android.exoplayer2.util.ParsableBitArray: void skipBits(int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: int[] access$300()
androidx.appcompat.view.StandaloneActionMode: void setCustomView(android.view.View)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData copyWithSchemeType(java.lang.String)
androidx.appcompat.widget.Toolbar$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.lifecycle.ViewModelStore: androidx.lifecycle.ViewModel get(java.lang.String)
androidx.collection.MapCollections$MapIterator: java.lang.String toString()
com.google.android.exoplayer2.audio.BaseAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat configure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition parseDisplayDefinition(com.google.android.exoplayer2.util.ParsableBitArray)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean isShowing()
com.google.android.exoplayer2.metadata.icy.IcyInfo$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean isReady()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int)
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: boolean isCompleted()
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long access$300(com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)
androidx.collection.ArraySet: int indexOfNull()
com.google.android.exoplayer2.upstream.UdpDataSource: int read(byte[],int,int)
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.Movie getMovie(int)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
androidx.appcompat.app.ResourcesFlusher: void flushMarshmallows(android.content.res.Resources)
com.bumptech.glide.request.ErrorRequestCoordinator: void begin()
com.danikula.videocache.file.LruDiskUsage$TouchCallable: LruDiskUsage$TouchCallable(com.danikula.videocache.file.LruDiskUsage,java.io.File)
org.slf4j.event.EventRecodingLogger: void error(java.lang.String,java.lang.Throwable)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastPartiallyOrCompletelyInvisibleChild()
cn.jzvd.JZUtils: android.app.Activity scanForActivity(android.content.Context)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.CharSequence getSubtitle()
com.google.android.exoplayer2.metadata.id3.ApicFrame$1: com.google.android.exoplayer2.metadata.id3.ApicFrame[] newArray(int)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader: DefaultImageHeaderParser$StreamReader(java.io.InputStream)
com.google.android.exoplayer2.extractor.VorbisUtil$VorbisIdHeader: VorbisUtil$VorbisIdHeader(long,int,long,int,int,int,int,int,boolean,byte[])
com.bumptech.glide.manager.RequestTracker: void resumeRequests()
com.google.android.exoplayer2.extractor.FlacMetadataReader$FlacStreamMetadataHolder: FlacMetadataReader$FlacStreamMetadataHolder(com.google.android.exoplayer2.util.FlacStreamMetadata)
androidx.core.widget.NestedScrollView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
androidx.appcompat.widget.Toolbar: android.os.Parcelable onSaveInstanceState()
com.google.android.exoplayer2.util.ParsableByteArray: int getPosition()
com.danikula.videocache.Pinger: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.savedstate.SavedStateRegistryController: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.android.exoplayer2.extractor.ts.H264Reader: void seek()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition()
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: int getRendererType(int)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand[] newArray(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getVideoHeight()
com.danikula.videocache.IgnoreHostProxySelector: <clinit>()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: DefaultTrackSelector$Parameters(int,int,int,int,boolean,boolean,boolean,int,int,boolean,java.lang.String,int,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean,int,boolean,boolean,boolean,int,android.util.SparseArray,android.util.SparseBooleanArray)
androidx.appcompat.widget.ListPopupWindow: void clearListSelection()
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: ExoPlayerImplInternal$PlaybackInfoUpdate()
cn.jzvd.demo.ActivityListViewFragmentViewPager: ActivityListViewFragmentViewPager()
androidx.appcompat.widget.Toolbar: boolean shouldLayout(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedTop(android.view.View)
androidx.core.widget.NestedScrollView: boolean inChild(int,int)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: int inferValueTypeFromValues(android.content.res.TypedArray,int,int)
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getRtmpDataSource()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean)
com.bumptech.glide.load.ImageHeaderParser$ImageType: boolean hasAlpha()
cn.jzvd.Jzvd: void resetProgressAndTime()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: void onPrepareSubMenu(android.view.SubMenu)
com.bumptech.glide.load.Option: void update(java.lang.Object,java.security.MessageDigest)
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedPreFling(float,float)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdateLoadingPeriod()
androidx.arch.core.internal.SafeIterableMap$DescendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: com.bumptech.glide.load.resource.bitmap.HardwareConfigState getInstance()
androidx.appcompat.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean isAnyResourceSet()
androidx.appcompat.widget.SearchView: <clinit>()
com.google.android.exoplayer2.BaseRenderer: void onEnabled(boolean)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle inherit(com.google.android.exoplayer2.text.ttml.TtmlStyle,boolean)
com.google.android.exoplayer2.audio.DefaultAudioSink: DefaultAudioSink(com.google.android.exoplayer2.audio.AudioCapabilities,com.google.android.exoplayer2.audio.AudioProcessor[],boolean)
androidx.collection.SimpleArrayMap: boolean containsValue(java.lang.Object)
com.bumptech.glide.manager.RequestManagerRetriever: RequestManagerRetriever(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory,com.bumptech.glide.GlideExperiments)
com.google.android.exoplayer2.text.dvb.DvbSubtitle: long getEventTime(int)
com.bumptech.glide.load.DecodeFormat: DecodeFormat(java.lang.String,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: boolean onError(android.media.MediaPlayer,int,int)
androidx.core.view.ViewCompat: void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat)
androidx.fragment.app.Fragment: void onMultiWindowModeChanged(boolean)
com.google.android.exoplayer2.text.subrip.SubripSubtitle: long getEventTime(int)
com.google.android.exoplayer2.video.ColorInfo$1: ColorInfo$1()
com.google.android.exoplayer2.AudioFocusManager: int requestAudioFocusV26()
com.google.android.exoplayer2.upstream.DataSchemeDataSource: void close()
com.google.android.exoplayer2.source.CompositeMediaSource: void prepareSourceInternal(com.google.android.exoplayer2.upstream.TransferListener)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: int getChangingConfigurations()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.audio.DefaultAudioSink: long applySpeedup(long)
android.support.v4.media.MediaDescriptionCompatApi21: java.lang.Object fromParcel(android.os.Parcel)
cn.jzvd.demo.CustomMedia.JZMediaExo: void seekTo(long)
com.google.android.exoplayer2.extractor.BinarySearchSeeker: void onSeekOperationFinished(boolean,long)
com.google.android.exoplayer2.util.SystemClock: long uptimeMillis()
androidx.lifecycle.LifecycleRegistry: void pushParentState(androidx.lifecycle.Lifecycle$State)
androidx.fragment.app.FragmentController: void dispatchStop()
com.bumptech.glide.request.SingleRequest: boolean isRunning()
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.google.android.exoplayer2.util.SystemHandlerWrapper: android.os.Message obtainMessage(int,java.lang.Object)
cn.jzvd.demo.ActivityApiUIBigChange: void onBackPressed()
cn.jzvd.Jzvd: void startVideoAfterPreloading()
com.google.android.exoplayer2.DefaultRenderersFactory: void buildAudioRenderers(android.content.Context,int,com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.drm.DrmSessionManager,boolean,boolean,com.google.android.exoplayer2.audio.AudioProcessor[],android.os.Handler,com.google.android.exoplayer2.audio.AudioRendererEventListener,java.util.ArrayList)
com.google.android.exoplayer2.extractor.mp4.Sniffer: boolean isCompatibleBrand(int)
com.google.android.exoplayer2.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser,java.lang.String)
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(com.google.android.exoplayer2.extractor.ExtractorInput,long)
androidx.appcompat.view.menu.ListMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToPlayingClear()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeightMode()
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int numOutputBytesToFrames(int)
androidx.core.graphics.TypefaceCompatApi26Impl: boolean freeze(java.lang.Object)
com.danikula.videocache.Pinger: java.lang.String getPingUrl()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch: int compareTo(java.lang.Object)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.load.Options getOptions()
com.google.android.exoplayer2.offline.StreamKey$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: DiskLruCacheWrapper(java.io.File,long)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: boolean isUnderline()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: java.lang.String getTagName(java.lang.String)
androidx.appcompat.widget.AppCompatDrawableManager$1: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.PlayerMessage: int getType()
androidx.appcompat.widget.ForwardingListener: boolean pointInView(android.view.View,float,float,float)
cn.jzvd.Jzvd: void clearSavedProgress(android.content.Context,java.lang.String)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: int numOutputFramesToBytes(int,int)
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.danikula.videocache.HttpProxyCacheServer: void releaseSocket(java.net.Socket)
androidx.versionedparcelable.VersionedParcelParcel: void writeString(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMaxTextSize()
com.google.android.exoplayer2.metadata.id3.MlltFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.util.MimeTypes: boolean isVideo(java.lang.String)
androidx.collection.MapCollections$ValuesCollection: boolean containsAll(java.util.Collection)
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: <clinit>()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int access$300(int,int)
androidx.activity.ComponentActivity: ComponentActivity()
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags: int compare(int,int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: long maybeAdjustSeekOffset(com.google.android.exoplayer2.extractor.mp4.TrackSampleTable,long,long)
com.google.android.exoplayer2.extractor.ts.AdtsReader: void setFindingSampleState()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setSurface(android.view.Surface)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$2: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean hasOutputBuffer()
cn.jzvd.JZMediaInterface: void prepare()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
androidx.fragment.app.BackStackRecord: void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ActionBarContextView: void onDetachedFromWindow()
com.google.android.exoplayer2.text.ttml.TtmlStyle: TtmlStyle()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist access$900(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
androidx.core.widget.AutoScrollHelper$ClampedScroller: AutoScrollHelper$ClampedScroller()
com.google.android.exoplayer2.text.SubtitleOutputBuffer: int getEventTimeCount()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: AppCompatDelegateImpl$ListMenuDecorView(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
cn.jzvd.demo.CustomMedia.JZMediaIjk: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.android.exoplayer2.source.TrackGroup: <clinit>()
androidx.fragment.app.Fragment: void onResume()
androidx.fragment.app.FragmentState: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory)
com.bumptech.glide.request.target.DrawableImageViewTarget: void setResource(android.graphics.drawable.Drawable)
cn.jzvd.Jzvd: void setMediaInterface(java.lang.Class)
com.bumptech.glide.load.EncodeStrategy: <clinit>()
com.google.android.exoplayer2.extractor.ogg.VorbisReader: void onSeekEnd(long)
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
com.danikula.videocache.HttpUrlSource: void close()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void stop()
com.bumptech.glide.Registry: boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.source.IcyDataSource: boolean readMetadata()
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long readFirstScrValueFromBuffer(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.text.pgs.PgsDecoder: PgsDecoder()
androidx.fragment.app.Fragment: void restoreChildFragmentState(android.os.Bundle)
com.google.android.exoplayer2.util.EGLSurfaceTexture: EGLSurfaceTexture(android.os.Handler)
androidx.core.view.AccessibilityDelegateCompat: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
android.support.v4.media.MediaDescriptionCompat: MediaDescriptionCompat(android.os.Parcel)
androidx.appcompat.view.menu.MenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: boolean tryLock()
androidx.appcompat.widget.SearchView: android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void setVolume(float,float)
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: void onLoadCleared(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: DefaultHlsExtractorFactory(int,boolean)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity)
cn.jzvd.JZUtils: void hideSystemUI(android.content.Context)
androidx.appcompat.view.menu.MenuDialogHelper: void show(android.os.IBinder)
com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.BitmapFactory$Options getDefaultOptions()
androidx.core.app.NavUtils: java.lang.String getParentActivityName(android.app.Activity)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantHeight()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read(byte[],int,int)
tv.danmaku.ijk.media.player.TextureMediaPlayer: void setDisplay(android.view.SurfaceHolder)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setAndroidIOCallback(tv.danmaku.ijk.media.player.misc.IAndroidIO)
com.google.android.exoplayer2.audio.BaseAudioProcessor: void onFlush()
androidx.appcompat.widget.Toolbar: boolean canShowOverflowMenu()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.Id3Frame decodeFrame(int,com.google.android.exoplayer2.util.ParsableByteArray,boolean,int,com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.lang.String parseOptionalStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.util.Util: void closeQuietly(java.io.Closeable)
com.google.android.exoplayer2.util.Util: void closeQuietly(com.google.android.exoplayer2.upstream.DataSource)
androidx.recyclerview.widget.RecyclerView: boolean fling(int,int)
androidx.recyclerview.widget.LinearLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: ByteBufferGifDecoder(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory)
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: void inputFormatChanged(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.extractor.ts.AdtsReader: void packetStarted(long,int)
com.bumptech.glide.util.ContentLengthInputStream: ContentLengthInputStream(java.io.InputStream,long)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: TextInformationFrame(java.lang.String,java.lang.String,java.lang.String)
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory valueOf(java.lang.String)
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat: java.lang.String getString(java.lang.String)
androidx.appcompat.view.ContextThemeWrapper: void setTheme(int)
com.google.android.exoplayer2.metadata.Metadata: boolean equals(java.lang.Object)
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: int supportsFormat(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.text.dvb.DvbParser: <clinit>()
com.google.android.exoplayer2.metadata.id3.CommentFrame: boolean equals(java.lang.Object)
androidx.core.widget.NestedScrollView: void scrollToChild(android.view.View)
androidx.appcompat.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)
androidx.recyclerview.widget.RecyclerView: void onLayout(boolean,int,int,int,int)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: com.google.android.exoplayer2.util.TimestampAdjuster getPcrTimestampAdjuster()
androidx.recyclerview.widget.RecyclerView: void dispatchLayoutStep2()
com.google.android.exoplayer2.util.TimestampAdjuster: void setFirstSampleTimestampUs(long)
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
androidx.media.AudioAttributesImplBase: int getLegacyStreamType()
com.google.android.exoplayer2.source.hls.HlsChunkSource: HlsChunkSource(com.google.android.exoplayer2.source.hls.HlsExtractorFactory,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker,android.net.Uri[],com.google.android.exoplayer2.Format[],com.google.android.exoplayer2.source.hls.HlsDataSourceFactory,com.google.android.exoplayer2.upstream.TransferListener,com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider,java.util.List)
com.google.android.exoplayer2.audio.DefaultAudioSink: int writeNonBlockingWithAvSyncV21(android.media.AudioTrack,java.nio.ByteBuffer,int,long)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.core.provider.FontRequest: java.lang.String getProviderAuthority()
androidx.appcompat.app.AppCompatActivity: void onStop()
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: void mark(int)
androidx.fragment.app.FragmentManagerImpl: void dispatchStop()
androidx.appcompat.widget.ActionMenuView: void onMeasureExactFormat(int,int)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.Format getFormatWithMetadata(int,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.metadata.Metadata,com.google.android.exoplayer2.metadata.Metadata,com.google.android.exoplayer2.extractor.GaplessInfoHolder)
com.bumptech.glide.load.ImageHeaderParserUtils: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
com.google.android.exoplayer2.util.StandaloneMediaClock: com.google.android.exoplayer2.PlaybackParameters getPlaybackParameters()
androidx.appcompat.view.WindowCallbackWrapper: void onAttachedToWindow()
androidx.appcompat.widget.AppCompatPopupWindow: AppCompatPopupWindow(android.content.Context,android.util.AttributeSet,int,int)
com.google.android.exoplayer2.drm.DrmSessionManager$1: com.google.android.exoplayer2.drm.DrmSession acquireSession(android.os.Looper,com.google.android.exoplayer2.drm.DrmInitData)
android.support.v4.os.IResultReceiver$Stub: IResultReceiver$Stub()
com.bumptech.glide.load.resource.bitmap.TransformationUtils: <clinit>()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups()
androidx.fragment.app.FragmentTransitionImpl$1: void run()
android.support.v4.media.session.MediaSessionCompat$Token: <clinit>()
androidx.appcompat.widget.AppCompatPopupWindow: void setSupportOverlapAnchor(boolean)
com.bumptech.glide.util.Executors$1: Executors$1()
androidx.recyclerview.widget.ViewBoundsCheck: ViewBoundsCheck(androidx.recyclerview.widget.ViewBoundsCheck$Callback)
com.danikula.videocache.file.FileCache: int read(byte[],long,int)
com.google.android.exoplayer2.util.Assertions: int checkIndex(int,int,int)
com.google.android.exoplayer2.extractor.ts.TsExtractor: android.util.SparseArray access$000(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
com.bumptech.glide.load.ImageHeaderParserUtils$3: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.ImageHeaderParser)
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.app.AppCompatDelegateImpl$5: AppCompatDelegateImpl$5(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.exoplayer2.text.pgs.PgsSubtitle: int getEventTimeCount()
androidx.appcompat.app.AppCompatDelegateImpl$2: AppCompatDelegateImpl$2(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.appcompat.graphics.drawable.DrawableWrapper: int getChangingConfigurations()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
androidx.recyclerview.widget.RecyclerView: void requestChildOnScreen(android.view.View,android.view.View)
androidx.appcompat.app.AppCompatDialog: void invalidateOptionsMenu()
androidx.appcompat.widget.AppCompatEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: void onDismiss()
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.chunk.Chunk maybeCreateEncryptionChunkFor(android.net.Uri,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setDisplay(android.view.SurfaceHolder)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.WakeLockManager: void setStayAwake(boolean)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean needsUpdate()
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: ListMenuPresenter$MenuAdapter(androidx.appcompat.view.menu.ListMenuPresenter)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: CompositeGeneratedAdaptersObserver(androidx.lifecycle.GeneratedAdapter[])
androidx.appcompat.view.menu.MenuPopup: androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter)
androidx.appcompat.view.menu.StandardMenuPopup: void show()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: androidx.lifecycle.ViewModel create(java.lang.Class)
com.google.android.exoplayer2.metadata.flac.VorbisComment: VorbisComment(android.os.Parcel)
tv.danmaku.ijk.media.player.MediaPlayerProxy$4: MediaPlayerProxy$4(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean setLayoutDirection(int,int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist: HlsPlaylist(java.lang.String,java.util.List,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: AppCompatDelegateImpl$AutoNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy access$200(com.google.android.exoplayer2.drm.DefaultDrmSession)
com.google.android.exoplayer2.Timeline: com.google.android.exoplayer2.Timeline$Window getWindow(int,com.google.android.exoplayer2.Timeline$Window)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: boolean markSupported()
com.bumptech.glide.load.engine.LockedResource: void unlock()
com.bumptech.glide.load.Options: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: com.google.android.exoplayer2.upstream.HttpDataSource createDataSourceInternal(com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice createFromParcel(android.os.Parcel)
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int)
com.google.android.exoplayer2.util.SlidingPercentile$Sample: SlidingPercentile$Sample(com.google.android.exoplayer2.util.SlidingPercentile$1)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseSaiz(com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox,com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.extractor.mp4.TrackFragment)
com.google.android.exoplayer2.metadata.MetadataRenderer: void onPositionReset(long,boolean)
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool: void release(com.bumptech.glide.gifdecoder.GifHeaderParser)
com.bumptech.glide.load.engine.DiskCacheStrategy$5: boolean isDataCacheable(com.bumptech.glide.load.DataSource)
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1: java.io.InputStream convert(byte[])
com.google.android.exoplayer2.audio.AudioCapabilities: boolean supportsEncoding(int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
com.google.android.exoplayer2.extractor.mkv.Sniffer: long readUint(com.google.android.exoplayer2.extractor.ExtractorInput)
org.slf4j.helpers.MessageFormatter: void floatArrayAppend(java.lang.StringBuilder,float[])
com.bumptech.glide.gifdecoder.StandardGifDecoder: int getFrameCount()
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: H265Reader$SampleReader(com.google.android.exoplayer2.extractor.TrackOutput)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: AccessibilityDelegateCompat$AccessibilityDelegateAdapter(androidx.core.view.AccessibilityDelegateCompat)
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable: void cancel()
cn.jzvd.demo.ActivityWebView: void onBackPressed()
androidx.fragment.app.Fragment: java.lang.Object getEnterTransition()
com.google.android.exoplayer2.MediaPeriodQueue: boolean isLoading(com.google.android.exoplayer2.source.MediaPeriod)
androidx.collection.ArraySet: ArraySet()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: boolean isFullSpan()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getRightDecorationWidth(android.view.View)
com.google.android.exoplayer2.util.EGLSurfaceTexture$GlException: EGLSurfaceTexture$GlException(java.lang.String,com.google.android.exoplayer2.util.EGLSurfaceTexture$1)
com.bumptech.glide.load.Option: java.lang.Object getDefaultValue()
cn.jzvd.JZMediaSystem: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.danikula.videocache.file.Files$LastModifiedComparator: Files$LastModifiedComparator(com.danikula.videocache.file.Files$1)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onAudioTrackPositionDiscontinuity()
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean isInitialized()
cn.jzvd.Jzvd$1: Jzvd$1()
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithAppendedEntriesFrom(com.google.android.exoplayer2.metadata.Metadata)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: long getCurrentPosition()
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getSelectedTrack(int)
androidx.recyclerview.widget.OrientationHelper$1: OrientationHelper$1(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMaxEnd(int)
androidx.appcompat.widget.SearchView: boolean isSubmitAreaEnabled()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: int getInteger(java.lang.String)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onProcessedOutputBuffer(long)
com.google.android.exoplayer2.audio.SonicAudioProcessor: void flush()
com.google.android.exoplayer2.extractor.mp3.Seeker$UnseekableSeeker: long getTimeUs(long)
android.support.v4.media.session.PlaybackStateCompat: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.engine.executor.RuntimeCompat$1: boolean accept(java.io.File,java.lang.String)
org.slf4j.helpers.MessageFormatter: org.slf4j.helpers.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])
androidx.appcompat.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)
com.google.android.exoplayer2.text.cea.CeaDecoder: void setPositionUs(long)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onAudioSinkUnderrun(int,long,long)
com.bumptech.glide.util.ExceptionPassthroughInputStream: java.io.IOException getException()
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: void seek(long,long)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.util.HashMap readAmfEcmaArray(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.gifdecoder.StandardGifDecoder: int getCurrentFrameIndex()
com.google.android.exoplayer2.ParserException: ParserException(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
com.google.android.exoplayer2.extractor.wav.WavExtractor: WavExtractor()
com.bumptech.glide.disklrucache.DiskLruCache: boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float)
androidx.core.widget.NestedScrollView$SavedState$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.resource.gif.GifDrawable: void onBoundsChange(android.graphics.Rect)
com.bumptech.glide.disklrucache.DiskLruCache: void trimToSize()
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet access$400(com.google.android.exoplayer2.SimpleExoPlayer)
tv.danmaku.ijk.media.player.MediaPlayerProxy$8: void onTimedText(tv.danmaku.ijk.media.player.IMediaPlayer,tv.danmaku.ijk.media.player.IjkTimedText)
android.support.v4.media.session.MediaSessionCompat$QueueItem: MediaSessionCompat$QueueItem(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void discardBuffer(long,boolean)
com.bumptech.glide.util.ByteBufferUtil: java.io.InputStream toStream(java.nio.ByteBuffer)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setHorizontalOriginalOffset(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: java.lang.String access$100()
androidx.appcompat.widget.TooltipCompatHandler$2: void run()
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.bumptech.glide.util.pool.FactoryPools$FactoryPool: FactoryPools$FactoryPool(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter)
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollRange()
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.danikula.videocache.ProxyCache: void checkReadSourceErrorsCount()
com.bumptech.glide.load.engine.DecodePath: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDownPanel(int,android.view.KeyEvent)
com.google.android.exoplayer2.audio.AudioTimestampPoller: long getTimestampPositionFrames()
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter: long getItemId(int)
com.google.android.exoplayer2.extractor.VorbisBitArray: void assertValidOffset()
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: WavExtractor$PassthroughOutputWriter(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.TrackOutput,com.google.android.exoplayer2.extractor.wav.WavHeader,java.lang.String,int)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createTextSampleFormat(java.lang.String,java.lang.String,int,java.lang.String)
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: void onClick(android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: void layoutVertical(int,int,int,int)
com.google.android.exoplayer2.upstream.BaseDataSource: BaseDataSource(boolean)
androidx.core.text.PrecomputedTextCompat$Params: int getHyphenationFrequency()
com.bumptech.glide.load.engine.DiskCacheStrategy$3: DiskCacheStrategy$3()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
androidx.activity.OnBackPressedCallback: void remove()
androidx.appcompat.view.menu.MenuBuilder: void setQwertyMode(boolean)
androidx.recyclerview.widget.RecyclerView: void onDetachedFromWindow()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: void offer()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.os.Parcelable onSaveInstanceState()
com.google.android.exoplayer2.source.ClippingMediaPeriod: long getNextLoadPositionUs()
androidx.core.graphics.drawable.WrappedDrawableState: boolean canConstantState()
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: long getSkippedFrames()
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup: GridLayoutManager$DefaultSpanSizeLookup()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.TrackGroupArray createTrackGroupArrayWithDrmInfo(com.google.android.exoplayer2.source.TrackGroup[])
com.google.android.exoplayer2.source.SampleQueue: void invalidateUpstreamFormatAdjustment()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void maybeNotifyBandwidthSample(int,long,long)
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.model.ByteBufferFileLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: void startNalUnit(long,int,long)
com.bumptech.glide.disklrucache.DiskLruCache: com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long)
androidx.core.graphics.TypefaceCompatApi21Impl: java.lang.Object newFamily()
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver: boolean deliverSelfNotifications()
androidx.recyclerview.widget.LinearLayoutManager: void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.Region getTransparentRegion()
androidx.appcompat.widget.ListPopupWindow$2: ListPopupWindow$2(androidx.appcompat.widget.ListPopupWindow)
androidx.fragment.app.FragmentTransition: void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList)
androidx.core.widget.NestedScrollView$SavedState$1: androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel)
androidx.collection.SimpleArrayMap: SimpleArrayMap(int)
androidx.appcompat.view.SupportMenuInflater$MenuState: java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[])
tv.danmaku.ijk.media.player.IjkMediaPlayer: void stayAwake(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: boolean maybeUpdateEventDispatcher(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.util.ByteBufferUtil: java.nio.ByteBuffer fromStream(java.io.InputStream)
com.bumptech.glide.util.pool.FactoryPools$1: void reset(java.lang.Object)
com.bumptech.glide.load.engine.SourceGenerator: boolean hasNextModelLoader()
androidx.exifinterface.media.ExifInterface: ExifInterface(java.io.InputStream,boolean)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(java.lang.String,java.util.List)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: void add(com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void computeConstantSize()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
tv.danmaku.ijk.media.player.TextureMediaPlayer: void release()
com.google.android.exoplayer2.audio.DefaultAudioSink$1: DefaultAudioSink$1(com.google.android.exoplayer2.audio.DefaultAudioSink,android.media.AudioTrack)
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewDetachedFromWindow(android.view.View)
androidx.core.view.ViewCompat$AccessibilityViewProperty: boolean frameworkAvailable()
androidx.appcompat.widget.AppCompatImageHelper: boolean hasOverlappingRendering()
androidx.appcompat.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)
com.google.android.exoplayer2.source.IcyDataSource: java.util.Map getResponseHeaders()
androidx.appcompat.widget.RtlSpacingHelper: void setRelative(int,int)
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.view.ActionMode: boolean getTitleOptionalHint()
androidx.appcompat.widget.ListPopupWindow$2: void run()
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.Request buildThumbnailRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean needsDividerBefore()
com.google.android.exoplayer2.upstream.StatsDataSource: java.util.Map getResponseHeaders()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findViewByPosition(int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)
androidx.recyclerview.widget.LinearLayoutManager: void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.view.menu.MenuItemImpl: android.view.View getActionView()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean)
tv.danmaku.ijk.media.player.MediaPlayerProxy: tv.danmaku.ijk.media.player.IMediaPlayer getInternalMediaPlayer()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: int parseExpandableClassSize(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.exifinterface.media.ExifInterface: void loadAttributes(java.io.InputStream)
com.bumptech.glide.load.resource.bitmap.Downsampler: int[] getDimensions(com.bumptech.glide.load.resource.bitmap.ImageReader,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
com.bumptech.glide.load.engine.executor.GlideExecutor: boolean isShutdown()
androidx.appcompat.widget.MenuPopupWindow: <clinit>()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void reset()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map)
androidx.fragment.app.FragmentTransitionImpl$2: void run()
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: long access$500(com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint)
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate: ResourceManagerInternal$AvdcInflateDelegate()
com.google.android.exoplayer2.extractor.ogg.OpusReader: boolean readHeaders(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)
com.bumptech.glide.load.engine.DecodeJob$RunReason: com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setOption(int,java.lang.String,java.lang.String)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void clearRenderedFirstFrame()
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: com.bumptech.glide.load.engine.bitmap_recycle.Poolable get()
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: DataUrlLoader$StreamFactory$1(com.bumptech.glide.load.model.DataUrlLoader$StreamFactory)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: int describeContents()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1: void close()
androidx.viewpager.widget.ViewPager: int getChildDrawingOrder(int,int)
androidx.appcompat.widget.Toolbar$SavedState$1: Toolbar$SavedState$1()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: HlsTrackMetadataEntry$VariantInfo(android.os.Parcel)
com.google.android.exoplayer2.Format$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.RtlSpacingHelper: int getLeft()
com.google.android.exoplayer2.metadata.id3.ApicFrame: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean isStateful()
com.google.android.exoplayer2.ui.TrackSelectionView$ComponentListener: TrackSelectionView$ComponentListener(com.google.android.exoplayer2.ui.TrackSelectionView)
com.google.android.exoplayer2.metadata.id3.InternalFrame: int hashCode()
androidx.fragment.app.FragmentManagerImpl: void dispatchPictureInPictureModeChanged(boolean)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachViewAt(int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentTransitionCompat21$2: FragmentTransitionCompat21$2(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList)
com.google.android.exoplayer2.util.Util: int ceilDivide(int,int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int access$400(int,int)
androidx.appcompat.view.SupportMenuInflater$MenuState: void readGroup(android.util.AttributeSet)
com.bumptech.glide.Registry: com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
com.google.android.exoplayer2.metadata.id3.BinaryFrame$1: java.lang.Object[] newArray(int)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: boolean isAccessMediaLocationGranted()
com.google.android.exoplayer2.text.dvb.DvbParser: int getColor(int,int,int,int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setVerticalOffset(int)
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onStopped()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void surfaceDestroyed(android.view.SurfaceHolder)
androidx.appcompat.widget.ViewUtils: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
cn.jzvd.demo.ActivityMain: void clicksy(android.view.View)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setFrameAtTime(java.lang.String,long,long,int,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(android.content.Context,android.net.Uri)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: int findLargestTextSizeWhichFits(android.graphics.RectF)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: long getDequeueOutputBufferTimeoutUs()
androidx.appcompat.widget.TooltipCompatHandler$1: void run()
com.google.android.exoplayer2.extractor.flv.FlvExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.extractor.DefaultExtractorsFactory: <clinit>()
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.util.List fromQueueItemList(java.util.List)
androidx.recyclerview.widget.OrientationHelper$2: int getTransformedEndWithDecoration(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.provider.FontsContractCompat$FontInfo: int getTtcIndex()
androidx.appcompat.app.AlertController$AlertParams$1: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter: int getArrayLength(java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.engine.DecodeJob: void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.google.android.exoplayer2.DefaultMediaClock: com.google.android.exoplayer2.PlaybackParameters getPlaybackParameters()
com.google.android.exoplayer2.extractor.wav.WavSeekMap: long blockIndexToTimeUs(long)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void release()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.extractor.TrackOutput prepareTrackOutput(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$TrackId)
com.google.android.exoplayer2.mediacodec.MediaFormatUtil: void maybeSetInteger(android.media.MediaFormat,java.lang.String,int)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: void put(java.lang.Object)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setDataSource(java.lang.String,java.lang.String[],java.lang.String[])
com.bumptech.glide.gifdecoder.GifFrame: GifFrame()
androidx.viewpager.widget.ViewPager: void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener)
androidx.core.widget.NestedScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)
androidx.appcompat.view.menu.SubMenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean playClearSamplesWithoutKeys()
cn.jzvd.demo.ActivityApiCustomMedia: void onPause()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void sampleMetadata(long,int,int,int,com.google.android.exoplayer2.extractor.TrackOutput$CryptoData)
androidx.appcompat.widget.Toolbar: void dismissPopupMenus()
androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.recyclerview.widget.RecyclerView: boolean scrollByInternal(int,int,android.view.MotionEvent)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onEnabled(boolean)
com.google.android.exoplayer2.upstream.DefaultAllocator: void release(com.google.android.exoplayer2.upstream.Allocation)
com.google.android.exoplayer2.extractor.ts.H265Reader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: boolean onEncodeComplete()
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: int hashCode()
androidx.core.app.ActivityRecreator$1: ActivityRecreator$1(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object)
androidx.viewpager.widget.ViewPager: void removeView(android.view.View)
com.google.android.exoplayer2.Player$EventListener: void onPlaybackParametersChanged(com.google.android.exoplayer2.PlaybackParameters)
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: int getParentEnd()
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet access$700(com.google.android.exoplayer2.SimpleExoPlayer)
com.google.android.exoplayer2.util.XmlPullParserUtil: boolean isStartTag(org.xmlpull.v1.XmlPullParser)
androidx.collection.MapCollections$EntrySet: MapCollections$EntrySet(androidx.collection.MapCollections)
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.PlayerMessage createMessage(com.google.android.exoplayer2.PlayerMessage$Target)
com.danikula.videocache.file.FileCache: boolean isCompleted()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicWidth()
com.google.android.exoplayer2.util.Util: long toUnsignedLong(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getGroupId()
com.google.android.exoplayer2.audio.AuxEffectInfo: AuxEffectInfo(int,float)
com.google.android.exoplayer2.source.hls.SampleQueueMappingException: SampleQueueMappingException(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void saveFragmentViewState(androidx.fragment.app.Fragment)
cn.jzvd.Jzvd: void onStatePreparing()
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: ActionMenuPresenter$ActionMenuPopupCallback(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.Toolbar: void postShowOverflowMenu()
androidx.appcompat.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.bumptech.glide.manager.RequestManagerFragment: void onDetach()
cn.jzvd.demo.ActivityApiUIBigChange: ActivityApiUIBigChange()
androidx.core.text.PrecomputedTextCompat$Params$Builder: androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic)
com.bumptech.glide.load.engine.GlideException: GlideException(java.lang.String)
com.bumptech.glide.load.engine.DecodeJob: void release(boolean)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.lang.Double readAmfDouble(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.metadata.id3.CommentFrame$1: com.google.android.exoplayer2.metadata.id3.CommentFrame[] newArray(int)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onStateChange(int[])
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData parseObjectData(com.google.android.exoplayer2.util.ParsableBitArray)
androidx.fragment.app.FragmentActivity$HostCallbacks: androidx.lifecycle.Lifecycle getLifecycle()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void executePlayerCommand(int)
cn.jzvd.demo.ActivityApi: void onResume()
com.google.android.exoplayer2.source.chunk.MediaChunk: MediaChunk(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long,long)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void onChunkLoadCompleted(com.google.android.exoplayer2.source.chunk.Chunk)
com.bumptech.glide.load.HttpException: HttpException(int)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: LinearLayoutManager$LayoutState()
androidx.core.view.ViewCompat: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: void logAssumedSupport(java.lang.String)
androidx.fragment.app.FragmentManagerImpl: void scheduleCommit()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object)
androidx.exifinterface.media.ExifInterface: void updateImageSizeValues(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header: Id3Decoder$Id3Header(int,boolean,int)
androidx.appcompat.widget.AppCompatButton: void onLayout(boolean,int,int,int,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean isLooping()
androidx.appcompat.widget.DropDownListView: boolean hasFocus()
androidx.appcompat.widget.ResourceManagerInternal: boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeWithDefaults(int)
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet access$1200(com.google.android.exoplayer2.SimpleExoPlayer)
cn.jzvd.JZTextureView: void onMeasure(int,int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long getDurationUs()
com.google.android.exoplayer2.extractor.VorbisUtil$CodeBook: VorbisUtil$CodeBook(int,int,long[],int,boolean)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float)
com.google.android.exoplayer2.util.EGLSurfaceTexture: void release()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: java.lang.Class getDataClass()
androidx.fragment.app.Fragment: void setNextTransition(int,int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: int describeContents()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,int)
androidx.appcompat.view.menu.MenuItemImpl: int getNumericModifiers()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getPrimaryNavigationFragment()
androidx.appcompat.view.SupportActionModeWrapper: void finish()
com.google.android.exoplayer2.extractor.ts.PsExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Bitmap centerCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
androidx.core.graphics.drawable.DrawableCompat: int getAlpha(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char,int)
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: java.lang.String getPath(android.net.Uri)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onPlaybackSuppressionReasonChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int)
com.google.android.exoplayer2.audio.SonicAudioProcessor: float setPitch(float)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void release()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: void onIcyMetadata(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean deviceDoesntSupportOperatingRate()
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: SpliceInsertCommand$ComponentSplice(int,long,long)
androidx.fragment.app.Fragment: boolean isInBackStack()
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isRepeatable(byte)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: WebvttCssStyle()
androidx.fragment.app.Fragment$AnimationInfo: Fragment$AnimationInfo()
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int)
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions: boolean hasNext()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean equals(java.lang.Object)
com.google.android.exoplayer2.SimpleExoPlayer: long getBufferedPosition()
androidx.loader.app.LoaderManagerImpl: <clinit>()
androidx.fragment.app.FragmentManagerImpl: boolean execPendingActions()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean isLoading()
com.google.android.exoplayer2.offline.FilteringManifestParser: java.lang.Object parse(android.net.Uri,java.io.InputStream)
com.google.android.exoplayer2.extractor.VorbisBitArray: VorbisBitArray(byte[])
androidx.collection.LongSparseArray: LongSparseArray()
androidx.fragment.app.FragmentManagerImpl: <clinit>()
androidx.collection.MapCollections$ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])
com.bumptech.glide.load.model.ModelCache$ModelKey: <clinit>()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatDelegateImpl: void endOnGoingFadeAnimation()
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.resource.bitmap.Downsampler: int adjustTargetDensityForError(double)
com.google.android.exoplayer2.audio.SonicAudioProcessor: java.nio.ByteBuffer getOutput()
com.bumptech.glide.load.model.UnitModelLoader: com.bumptech.glide.load.model.UnitModelLoader getInstance()
com.google.android.exoplayer2.extractor.mp3.XingSeeker: long getDurationUs()
com.google.android.exoplayer2.upstream.StatsDataSource: android.net.Uri getLastOpenedUri()
com.bumptech.glide.load.model.GlideUrl: GlideUrl(java.lang.String,com.bumptech.glide.load.model.Headers)
com.google.android.exoplayer2.source.ClippingMediaPeriod: void onContinueLoadingRequested(com.google.android.exoplayer2.source.MediaPeriod)
androidx.core.graphics.PathParser: androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.text.TextRenderer: void updateOutput(java.util.List)
com.google.android.exoplayer2.extractor.wav.WavExtractor$ImaAdPcmOutputWriter: boolean sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,long)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.util.ArrayList readAmfStrictArray(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.fragment.app.FragmentManagerImpl: void dispatchCreate()
androidx.core.view.NestedScrollingChildHelper: boolean isNestedScrollingEnabled()
androidx.fragment.app.FragmentActivity: void onPanelClosed(int,android.view.Menu)
com.google.android.exoplayer2.text.Cue: Cue(java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float,boolean,int)
cn.jzvd.Jzvd: void setTextureViewRotation(int)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnSeekCompleteListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void postEventFromNative(java.lang.Object,int,int,int,java.lang.Object)
androidx.viewpager.widget.ViewPager: boolean isGutterDrag(float,float)
cn.jzvd.JzvdStd: void changeUiToPauseShow()
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.MediaDescriptionCompat: java.lang.Object getMediaDescription()
androidx.collection.SimpleArrayMap: void putAll(androidx.collection.SimpleArrayMap)
com.google.android.exoplayer2.offline.StreamKey: int describeContents()
com.google.android.exoplayer2.extractor.ts.DtsReader: void seek()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$Segment: HlsMediaPlaylist$Segment(java.lang.String,long,long,java.lang.String,java.lang.String)
com.google.android.exoplayer2.text.Cue: Cue(java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float,int,float)
com.google.android.exoplayer2.util.ParsableByteArray: long readUnsignedLongToLong()
com.google.android.exoplayer2.audio.BaseAudioProcessor: java.nio.ByteBuffer replaceOutputBuffer(int)
com.google.android.exoplayer2.audio.AudioListener: void onAudioSessionId(int)
androidx.appcompat.app.AppCompatActivity: boolean performMenuItemShortcut(android.view.KeyEvent)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
org.slf4j.helpers.SubstituteLogger: void warn(java.lang.String,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int[] ensureArrayCapacity(int[],int)
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: void addMediaPlaylistUrls(java.util.List,java.util.List)
androidx.fragment.app.FragmentPagerAdapter: java.lang.String makeFragmentName(int,long)
androidx.fragment.app.BackStackRecord: void executeOps()
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder: java.nio.ByteBuffer rewindAndGet()
cn.jzvd.JZMediaSystem: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
androidx.appcompat.view.SupportMenuInflater: SupportMenuInflater(android.content.Context)
androidx.core.provider.FontRequest: java.lang.String toString()
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: void onDisabled()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseSgpd(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.ParsableByteArray,java.lang.String,com.google.android.exoplayer2.extractor.mp4.TrackFragment)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.util.List getDecoderInfos(java.lang.String,boolean,boolean)
androidx.core.view.ViewCompat: void stopNestedScroll(android.view.View)
com.google.android.exoplayer2.source.hls.WebvttExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.fragment.app.FragmentManagerImpl: boolean isDestroyed()
androidx.appcompat.app.WindowDecorActionBar: void setHasEmbeddedTabs(boolean)
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference: void reset()
androidx.appcompat.widget.TooltipPopup: void hide()
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback)
com.bumptech.glide.util.Util: int getBitmapByteSize(android.graphics.Bitmap)
androidx.appcompat.widget.ActionBarOverlayLayout: void addActionBarHideOffset()
cn.jzvd.demo.CustomJzvd.JzvdStdTinyWindow: void setUp(cn.jzvd.JZDataSource,int,java.lang.Class)
androidx.appcompat.view.menu.ActionMenuItem: boolean collapseActionView()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void onActive()
org.slf4j.impl.AndroidLoggerAdapter: void warn(java.lang.String,java.lang.Object)
com.google.android.exoplayer2.upstream.DataSpec: com.google.android.exoplayer2.upstream.DataSpec subrange(long)
com.bumptech.glide.load.resource.gif.GifBitmapProvider: void release(int[])
com.google.android.exoplayer2.extractor.mp4.Atom: Atom(int)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: void maybeOutputFormat()
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback: DecodeJob$DecodeCallback(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.DataSource)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: boolean equals(java.lang.Object)
androidx.recyclerview.widget.GridLayoutManager: int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
cn.jzvd.demo.ActivityTinyWindow: void clickAutoTinyListViewRecyclerView(android.view.View)
com.bumptech.glide.GlideBuilder$EnableImageDecoderForBitmaps: GlideBuilder$EnableImageDecoderForBitmaps()
androidx.appcompat.widget.TooltipPopup: void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams)
com.bumptech.glide.load.model.ByteArrayLoader: boolean handles(byte[])
com.google.android.exoplayer2.drm.DrmInitData$1: com.google.android.exoplayer2.drm.DrmInitData createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create()
androidx.recyclerview.widget.RecyclerView: void releaseGlows()
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
androidx.appcompat.graphics.drawable.DrawableWrapper: int getOpacity()
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult: void resetInternal()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.MlltFrame decodeMlltFrame(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean setState(int[])
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStateError()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track: Mp4Extractor$Mp4Track(com.google.android.exoplayer2.extractor.mp4.Track,com.google.android.exoplayer2.extractor.mp4.TrackSampleTable,com.google.android.exoplayer2.extractor.TrackOutput)
androidx.appcompat.view.menu.ActionMenuItem: android.content.res.ColorStateList getIconTintList()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int hashCode()
androidx.appcompat.widget.SearchView$SavedState: SearchView$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadStarted(com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.appcompat.view.menu.MenuWrapperICS: boolean performIdentifierAction(int,int)
androidx.fragment.app.Fragment: android.content.Context requireContext()
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentTransition: java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean)
cn.jzvd.JzvdStd: void setSystemTimeAndBattery()
androidx.appcompat.app.AppCompatDelegateImpl: void onSubDecorInstalled(android.view.ViewGroup)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.bumptech.glide.Glide: com.bumptech.glide.RequestManager with(android.content.Context)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(androidx.core.graphics.PathParser$PathDataNode)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createAudioSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,int,int,int,java.util.List,com.google.android.exoplayer2.drm.DrmInitData,int,java.lang.String,com.google.android.exoplayer2.metadata.Metadata)
androidx.core.graphics.drawable.IconCompat: java.lang.String getResPackage(android.graphics.drawable.Icon)
androidx.appcompat.widget.AlertDialogLayout: int resolveMinimumHeight(android.view.View)
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void release()
android.support.v4.media.session.MediaSessionCompat$Token: MediaSessionCompat$Token(java.lang.Object)
com.google.android.exoplayer2.metadata.id3.PrivFrame$1: com.google.android.exoplayer2.metadata.id3.PrivFrame createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ActionBarOverlayLayout: void pullChildren()
androidx.appcompat.widget.ActionBarBackgroundDrawable: int getOpacity()
androidx.recyclerview.widget.RecyclerView$SavedState$1: RecyclerView$SavedState$1()
androidx.appcompat.view.menu.MenuItemImpl: boolean collapseActionView()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
com.bumptech.glide.manager.NullConnectivityMonitor: void onStop()
androidx.appcompat.app.TwilightManager: boolean isStateValid()
com.google.android.exoplayer2.metadata.id3.PrivFrame: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: HlsTrackMetadataEntry(android.os.Parcel)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: DefaultTrackSelector(com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters,com.google.android.exoplayer2.trackselection.TrackSelection$Factory)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToPlayingClear()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: SpliceScheduleCommand$Event(long,boolean,boolean,boolean,java.util.List,long,boolean,long,int,int,int)
androidx.appcompat.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
androidx.appcompat.widget.SearchView: android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo)
androidx.appcompat.view.menu.StandardMenuPopup: android.widget.ListView getListView()
androidx.recyclerview.widget.GridLayoutManager: void updateMeasurements()
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.ogg.StreamReader$UnseekableOggSeeker: StreamReader$UnseekableOggSeeker(com.google.android.exoplayer2.extractor.ogg.StreamReader$1)
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void readId3Metadata(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.model.GlideUrl: GlideUrl(java.net.URL)
androidx.appcompat.app.AlertController: int selectContentView()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: WebvttCueParser()
androidx.recyclerview.widget.RecyclerView: boolean startNestedScroll(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setIsPrepared()
com.google.android.exoplayer2.text.ttml.TtmlStyle: boolean isUnderline()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer: VideoDecoder$ByteBufferInitializer()
com.google.android.exoplayer2.text.dvb.DvbParser: int paint4BitPixelCodeString(com.google.android.exoplayer2.util.ParsableBitArray,int[],byte[],int,int,android.graphics.Paint,android.graphics.Canvas)
androidx.recyclerview.widget.OrientationHelper$1: int getDecoratedMeasurement(android.view.View)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean readTagHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.view.menu.ActionMenuItemView: void updateTextButtonVisibility()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: int hashCode()
com.google.android.exoplayer2.MediaPeriodQueue: boolean isLastInTimeline(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,boolean)
androidx.collection.MapCollections$EntrySet: boolean add(java.util.Map$Entry)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long access$1100(com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap)
androidx.appcompat.graphics.drawable.DrawableContainer: int getIntrinsicHeight()
com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader: void reset()
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void getOutline(android.graphics.Outline)
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: void reset(com.google.android.exoplayer2.PlaybackInfo)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void discardBuffer(long,boolean)
com.google.android.exoplayer2.extractor.ogg.StreamReader$UnseekableOggSeeker: void startSeek(long)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int read()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.View getActionView()
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: boolean isPlaying()
com.google.android.exoplayer2.BaseRenderer: int skipSource(long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: void maybeThrowError()
androidx.appcompat.view.menu.MenuPopup: boolean closeMenuOnSubMenuOpened()
cn.jzvd.demo.CustomMedia.JZMediaExo: void onPlaybackParametersChanged(com.google.android.exoplayer2.PlaybackParameters)
androidx.appcompat.app.WindowDecorActionBar: int getNavigationMode()
com.bumptech.glide.Glide: void initializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule)
com.google.android.exoplayer2.ExoPlayerImpl: void prepare(com.google.android.exoplayer2.source.MediaSource,boolean,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$6: AppCompatDelegateImpl$6(androidx.appcompat.app.AppCompatDelegateImpl)
com.google.android.exoplayer2.util.TraceUtil: void endSectionV18()
com.google.android.exoplayer2.metadata.MetadataRenderer: boolean isReady()
com.google.android.exoplayer2.text.ssa.SsaSubtitle: java.util.List getCues(long)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void updateCodecOperatingRate()
androidx.collection.ArrayMap$1: java.lang.Object colSetValue(int,java.lang.Object)
com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: HttpDataSource$HttpDataSourceException(java.lang.String,java.io.IOException,com.google.android.exoplayer2.upstream.DataSpec,int)
androidx.core.view.ViewCompat: int getAccessibilityLiveRegion(android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void computeContentWidth()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: void cancelLoad()
androidx.fragment.app.FragmentTransition: void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()
androidx.lifecycle.ReportFragment: void onResume()
org.slf4j.helpers.MessageFormatter: java.lang.Object[] trimmedCopy(java.lang.Object[])
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: void skipToEndOfCurrentPack(com.google.android.exoplayer2.util.ParsableByteArray)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void initPlayer(tv.danmaku.ijk.media.player.IjkLibLoader)
androidx.appcompat.widget.ListPopupWindow: android.widget.ListView getListView()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
com.bumptech.glide.load.engine.Engine: void release(com.bumptech.glide.load.engine.Resource)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStatePause()
androidx.appcompat.app.WindowDecorActionBar: void showForSystem()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspotBounds(int,int,int,int)
com.google.android.exoplayer2.source.CompositeMediaSource: long getMediaTimeForChildMediaTime(java.lang.Object,long)
com.google.android.exoplayer2.source.SampleQueue: boolean isReady(boolean)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: void clear(android.graphics.Canvas)
com.google.android.exoplayer2.upstream.ParsingLoadable: ParsingLoadable(com.google.android.exoplayer2.upstream.DataSource,android.net.Uri,int,com.google.android.exoplayer2.upstream.ParsingLoadable$Parser)
com.google.android.exoplayer2.metadata.emsg.EventMessage: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.manager.NullConnectivityMonitor: NullConnectivityMonitor()
com.bumptech.glide.util.Executors$2: void execute(java.lang.Runnable)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setVisible(boolean,boolean)
androidx.fragment.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int,int)
com.bumptech.glide.load.engine.LockedResource: java.lang.Class getResourceClass()
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry: boolean handles(java.lang.Class)
org.slf4j.LoggerFactory: void replayEvents()
com.google.android.exoplayer2.source.TrackGroup$1: com.google.android.exoplayer2.source.TrackGroup[] newArray(int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: int readExpGolombCodeNum()
com.bumptech.glide.load.data.AssetPathFetcher: void cancel()
androidx.core.content.res.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl: <clinit>()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1: AppCompatSpinner$DropdownPopup$1(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner)
com.bumptech.glide.util.pool.FactoryPools: androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void discardBuffer(long,boolean)
androidx.core.view.ViewParentCompat: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onEvent(java.lang.String,android.os.Bundle)
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkAndReadCrc(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.lang.String toString()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: boolean isFeatureSupported(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: ParsableNalUnitBitArray(byte[],int,int)
com.bumptech.glide.load.model.UriLoader$StreamFactory: com.bumptech.glide.load.data.DataFetcher build(android.net.Uri)
androidx.appcompat.widget.ResourcesWrapper: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.Metadata$Entry parseIlstElement(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.disklrucache.DiskLruCache: java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache)
com.bumptech.glide.load.data.mediastore.MediaStoreUtil: boolean isVideoUri(android.net.Uri)
androidx.core.widget.TextViewCompat: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatSpinner: void onRestoreInstanceState(android.os.Parcelable)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: void disableSeeking()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void resetSampleQueues()
com.google.android.exoplayer2.trackselection.BaseTrackSelection$DecreasingBandwidthComparator: BaseTrackSelection$DecreasingBandwidthComparator()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: <clinit>()
com.bumptech.glide.load.data.AssetPathFetcher: void cleanup()
androidx.appcompat.view.menu.MenuBuilder: void setShortcutsVisibleInner(boolean)
com.bumptech.glide.load.resource.gif.GifDrawableEncoder: com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options)
cn.jzvd.demo.ActivityWebView: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.util.UriUtil: int[] getUriIndices(java.lang.String)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment)
androidx.appcompat.widget.SearchView$3: SearchView$3(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean onNestedPreFling(android.view.View,float,float)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: AspectRatioFrameLayout$AspectRatioUpdateDispatcher(com.google.android.exoplayer2.ui.AspectRatioFrameLayout)
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.Format[] getStreamFormats()
com.google.android.exoplayer2.extractor.ogg.OggPacket: OggPacket()
androidx.fragment.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: int parseHdlr(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int readSample(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
tv.danmaku.ijk.media.player.IMediaPlayer: void stop()
androidx.appcompat.view.menu.ActionMenuItem: android.content.Intent getIntent()
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildAudioChannelString(com.google.android.exoplayer2.Format)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeText()
com.google.android.exoplayer2.ExoPlayerImpl$PlaybackInfoUpdate: ExoPlayerImpl$PlaybackInfoUpdate(com.google.android.exoplayer2.PlaybackInfo,com.google.android.exoplayer2.PlaybackInfo,java.util.concurrent.CopyOnWriteArrayList,com.google.android.exoplayer2.trackselection.TrackSelector,boolean,int,int,boolean,boolean,boolean)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)
androidx.collection.MapCollections$EntrySet: int hashCode()
androidx.core.graphics.drawable.DrawableCompat: void jumpToCurrentState(android.graphics.drawable.Drawable)
android.support.v4.os.ResultReceiver: ResultReceiver(android.os.Parcel)
androidx.viewpager.widget.ViewPager: void sortChildDrawingOrder()
com.google.android.exoplayer2.text.Cue: Cue(java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent)
com.google.android.exoplayer2.source.SampleQueue: long discardSampleMetadataTo(long,boolean,boolean)
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist getLatestPlaylistSnapshot(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
androidx.appcompat.graphics.drawable.DrawableWrapper: void jumpToCurrentState()
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement: DefaultEbmlReader$MasterElement(int,long)
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups()
tv.danmaku.ijk.media.player.misc.IAndroidIO: long seek(long,int)
androidx.versionedparcelable.ParcelImpl: int describeContents()
com.danikula.videocache.IgnoreHostProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View)
androidx.appcompat.view.ActionBarPolicy: boolean enableHomeButtonByDefault()
androidx.fragment.app.Fragment: void setAnimatingAway(android.view.View)
androidx.appcompat.widget.TooltipPopup: android.view.View getAppRootView(android.view.View)
com.google.android.exoplayer2.metadata.flac.PictureFrame: int describeContents()
cn.jzvd.demo.CustomJzvd.JzvdStdVolumeAfterFullscreen: void onPrepared()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onCues(java.util.List)
androidx.appcompat.widget.AppCompatSpinner$SavedState: <clinit>()
androidx.appcompat.content.res.AppCompatResources: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.metadata.Metadata getMetadataCopyWithAppendedEntriesFrom(com.google.android.exoplayer2.metadata.Metadata)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void maybePollAndCheckTimestamp(long,long)
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable: ActionMenuPresenter$OpenOverflowRunnable(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo)
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: int getEventTimeCount()
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback)
com.google.android.exoplayer2.util.NalUnitUtil: void skipScalingList(com.google.android.exoplayer2.util.ParsableNalUnitBitArray,int)
com.bumptech.glide.load.engine.GlideException: void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource)
com.google.android.exoplayer2.util.ParsableByteArray: char peekChar()
com.bumptech.glide.load.engine.DiskCacheStrategy: DiskCacheStrategy()
com.google.android.exoplayer2.text.cea.Cea608Decoder: void release()
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.bumptech.glide.load.resource.gif.GifDrawable: void draw(android.graphics.Canvas)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int getAdaptiveAudioTrackCount(com.google.android.exoplayer2.source.TrackGroup,int[],com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple,int,boolean,boolean,boolean)
androidx.appcompat.view.menu.SubMenuBuilder: androidx.appcompat.view.menu.MenuBuilder getRootMenu()
android.support.v4.media.MediaMetadataCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.view.ViewCompat$5: ViewCompat$5(int,java.lang.Class,int)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.android.exoplayer2.PlaybackParameters: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.StandardMenuPopup: void updateMenuView(boolean)
androidx.recyclerview.widget.RecyclerView: void processDataSetCompletelyChanged(boolean)
com.google.android.exoplayer2.source.TrackGroupArray: com.google.android.exoplayer2.source.TrackGroup get(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback)
androidx.appcompat.graphics.drawable.StateListDrawable: boolean isStateful()
com.bumptech.glide.load.Options: com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object)
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onMediaPeriodCreated(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: int read(byte[],int,int)
cn.jzvd.JZMediaSystem: void release()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void resolveShouldLayoutReverse()
androidx.recyclerview.widget.GridLayoutManager: void cachePreLayoutSpanMapping()
com.bumptech.glide.manager.RequestTracker: void pauseRequests()
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: android.content.ContentValues convert(com.danikula.videocache.SourceInfo)
com.danikula.videocache.file.FileCache: long available()
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: void resetListener()
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long getContentLength(java.net.HttpURLConnection)
androidx.appcompat.widget.ListPopupWindow: androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: long access$400(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: void onDestroyActionMode(androidx.appcompat.view.ActionMode)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: <clinit>()
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: H264Reader$SampleReader$SliceHeaderData(com.google.android.exoplayer2.extractor.ts.H264Reader$1)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
cn.jzvd.JzvdStd: void onStatePreparing()
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawable(int)
com.bumptech.glide.load.engine.DataCacheGenerator: boolean hasNextModelLoader()
androidx.appcompat.widget.ToolbarWidgetWrapper: android.content.Context getContext()
androidx.fragment.app.FragmentManagerImpl: android.view.LayoutInflater$Factory2 getLayoutInflaterFactory()
androidx.appcompat.app.ActionBar: ActionBar()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void processOutputBuffersChanged()
androidx.core.widget.TextViewCompat$OreoCallback: boolean isEditable(android.widget.TextView)
com.google.android.exoplayer2.source.hls.HlsMediaSource: void onPrimaryPlaylistRefreshed(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int)
com.google.android.exoplayer2.extractor.mp4.TrackFragment: boolean sampleHasSubsampleEncryptionTable(int)
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder: ByteBufferRewinder(java.nio.ByteBuffer)
androidx.fragment.app.Fragment: void onDestroy()
tv.danmaku.ijk.media.player.IjkMediaMeta: IjkMediaMeta()
androidx.core.widget.NestedScrollView$AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy()
com.google.android.exoplayer2.audio.DefaultAudioSink: void setVolumeInternalV3(android.media.AudioTrack,float)
com.google.android.exoplayer2.source.TrackGroupArray$1: TrackGroupArray$1()
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long)
androidx.appcompat.widget.TooltipCompatHandler: TooltipCompatHandler(android.view.View,java.lang.CharSequence)
android.support.v4.media.MediaDescriptionCompat: <clinit>()
com.google.android.exoplayer2.ExoPlayerImplInternal: void setPlayWhenReadyInternal(boolean)
androidx.appcompat.widget.SearchView$5: SearchView$5(androidx.appcompat.widget.SearchView)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationStart(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenHorizontal(int)
com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$FlacTimestampSeeker: FlacBinarySearchSeeker$FlacTimestampSeeker(com.google.android.exoplayer2.util.FlacStreamMetadata,int,com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker$1)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setItalic(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void unscheduleSelf(java.lang.Runnable)
androidx.appcompat.view.menu.StandardMenuPopup: void setGravity(int)
androidx.recyclerview.widget.LinearLayoutManager: int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
cn.jzvd.demo.CustomMedia.JZMediaExo: void onLoadingChanged(boolean)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onEnabled(boolean)
cn.jzvd.JZUtils: boolean isWifiConnected(android.content.Context)
androidx.appcompat.app.AlertController$AlertParams$2: AlertController$AlertParams$2(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.view.ActionProvider getSupportActionProvider()
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.drm.DrmSession getUpdatedSourceDrmSession(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.drm.DrmSession)
com.google.android.exoplayer2.audio.DtsUtil: <clinit>()
com.google.android.exoplayer2.extractor.ts.H265Reader: H265Reader(com.google.android.exoplayer2.extractor.ts.SeiReader)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: java.lang.Object getItem(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void setWindowAttributes(int,int,boolean,int,int,int,int)
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: java.lang.Class getResourceClass()
cn.jzvd.JzvdStd: void onProgress(int,long,long)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: FragmentedMp4Extractor$TrackBundle(com.google.android.exoplayer2.extractor.TrackOutput)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem findItem(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.metadata.scte35.SpliceCommand: java.lang.String toString()
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context)
androidx.fragment.app.FragmentViewLifecycleOwner: boolean isInitialized()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getIntrinsicHeight()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean onStateChanged(int[])
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.util.MimeTypes: boolean isAudio(java.lang.String)
com.bumptech.glide.manager.SupportRequestManagerFragment: void setRequestManager(com.bumptech.glide.RequestManager)
androidx.appcompat.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onMetadata(com.google.android.exoplayer2.metadata.Metadata)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.fragment.app.FragmentPagerAdapter: long getItemId(int)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: android.media.MediaCodecInfo getCodecInfoAt(int)
androidx.core.view.WindowInsetsCompat: int getSystemWindowInsetRight()
androidx.core.text.PrecomputedTextCompat$Params: android.text.TextPaint getTextPaint()
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: void run()
com.bumptech.glide.load.resource.bitmap.Downsampler: java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException: RawResourceDataSource$RawResourceDataSourceException(java.lang.String)
com.bumptech.glide.load.engine.EngineResource: void release()
android.support.v4.media.session.PlaybackStateCompat$1: android.support.v4.media.session.PlaybackStateCompat[] newArray(int)
com.bumptech.glide.request.RequestOptions: com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class)
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: com.google.android.exoplayer2.upstream.DataSource createDataSource()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.recyclerview.widget.RecyclerView: void stopNestedScroll()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.exoplayer2.util.Util: java.lang.String getLocaleLanguageTag(java.util.Locale)
com.bumptech.glide.manager.RequestManagerFragment: void unregisterFragmentWithRoot()
com.bumptech.glide.load.engine.DecodeJob$Stage: com.bumptech.glide.load.engine.DecodeJob$Stage[] values()
com.bumptech.glide.request.RequestCoordinator$RequestState: boolean isComplete()
com.google.android.exoplayer2.BasePlayer: BasePlayer()
androidx.core.widget.TextViewCompat$OreoCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)
androidx.recyclerview.widget.GapWorker: void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: boolean isDurationReadFinished()
com.google.android.exoplayer2.metadata.id3.GeobFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(int,int,int)
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher: void close(android.os.ParcelFileDescriptor)
com.google.android.exoplayer2.ExoPlayerImplInternal: long seekToPeriodPosition(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,boolean)
com.danikula.videocache.ProxyCache: void shutdown()
androidx.fragment.app.FragmentTransition$4: void run()
com.google.android.exoplayer2.util.EventDispatcher: void dispatch(com.google.android.exoplayer2.util.EventDispatcher$Event)
com.google.android.exoplayer2.text.webvtt.CssParser: java.lang.String readCueTarget(com.google.android.exoplayer2.util.ParsableByteArray)
com.danikula.videocache.ProxyCacheUtils: java.lang.String decode(java.lang.String)
org.slf4j.LoggerFactory: void reportActualBinding(java.util.Set)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long getBufferedPositionUs()
cn.jzvd.demo.ActivityListView: void clickListViewFragmentViewpager(android.view.View)
androidx.fragment.app.BackStackRecord: androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
android.support.v4.media.MediaDescriptionCompatApi21$Builder: java.lang.Object build(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: void writeToParcel(android.os.Parcel,int)
androidx.fragment.app.FragmentTransition: java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setIcon(int)
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode: java.lang.String toString()
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: TsBinarySearchSeeker$TsPcrSeeker(int,com.google.android.exoplayer2.util.TimestampAdjuster)
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.appcompat.widget.SuggestionsAdapter: void notifyDataSetChanged()
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawableIfKnown(int)
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: SeekMap$Unseekable(long,long)
androidx.fragment.app.FragmentManagerImpl$3: FragmentManagerImpl$3(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
cn.jzvd.demo.CustomJzvd.JzvdStdShowTitleAfterFullscreen: void setUp(cn.jzvd.JZDataSource,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: android.net.Uri access$1200(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
com.bumptech.glide.load.resource.gif.GifDrawable$GifState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory: UrlLoader$StreamFactory()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: android.util.Pair selectTextTrack(com.google.android.exoplayer2.source.TrackGroupArray,int[][],com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters,java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuItemImpl getItem(int)
com.bumptech.glide.request.SingleRequest: SingleRequest(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor)
androidx.core.graphics.TypefaceCompatApi29Impl: TypefaceCompatApi29Impl()
androidx.appcompat.widget.ActionBarOverlayLayout: void initFeature(int)
androidx.versionedparcelable.ParcelImpl: void writeToParcel(android.os.Parcel,int)
androidx.collection.ArraySet: boolean containsAll(java.util.Collection)
androidx.appcompat.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources$Theme)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException copyWithFallbackException(com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void updatePeekBuffer(int)
com.bumptech.glide.load.resource.gif.GifFrameLoader: android.graphics.Bitmap getCurrentFrame()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int)
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.core.graphics.TypefaceCompatBaseImpl: void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry)
androidx.appcompat.widget.FitWindowsFrameLayout: boolean fitSystemWindows(android.graphics.Rect)
com.google.android.exoplayer2.metadata.icy.IcyInfo: boolean equals(java.lang.Object)
com.bumptech.glide.load.engine.DecodeHelper: boolean hasLoadPath(java.lang.Class)
org.slf4j.helpers.SubstituteLogger: void info(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: android.util.Pair getDolbyVisionProfileAndLevel(java.lang.String,java.lang.String[])
androidx.appcompat.view.menu.MenuBuilder: boolean hasVisibleItems()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setSubtitle(java.lang.CharSequence)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: boolean canReadExpGolombCodedNum()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void reset(int)
androidx.core.content.res.ComplexColorCompat: androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader)
cn.jzvd.Jzvd: int getLayoutId()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: StaggeredGridLayoutManager$SavedState$1()
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
androidx.collection.MapCollections$KeySet: boolean contains(java.lang.Object)
cn.jzvd.demo.ActivityApi: void clickSmallChange(android.view.View)
androidx.appcompat.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
androidx.appcompat.widget.ActionBarContextView: void initTitle()
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState[] newArray(int)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void setPromptText(java.lang.CharSequence)
androidx.fragment.app.BackStackRecord: boolean isPostponed()
androidx.appcompat.view.SupportMenuInflater$MenuState: boolean hasAddedItem()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onMetadata(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.metadata.Metadata)
androidx.appcompat.graphics.drawable.DrawableContainer: void setHotspot(float,float)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.google.android.exoplayer2.util.LongArray: int size()
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()
android.support.v4.media.session.MediaControllerCompat$Callback: void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuff$Mode getTintMode(int)
com.google.android.exoplayer2.audio.DefaultAudioSink: void processBuffers(long)
androidx.core.view.AccessibilityDelegateCompat: boolean performClickableSpanAction(int,android.view.View)
androidx.fragment.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)
tv.danmaku.ijk.media.player.IMediaPlayer: long getDuration()
androidx.appcompat.widget.ViewUtils: <clinit>()
androidx.core.app.ActivityRecreator$3: void run()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void seek(long,long)
androidx.appcompat.widget.TintResources: android.graphics.drawable.Drawable getDrawable(int)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)
com.bumptech.glide.util.pool.FactoryPools$2: FactoryPools$2()
com.google.android.exoplayer2.text.dvb.DvbParser: int paint2BitPixelCodeString(com.google.android.exoplayer2.util.ParsableBitArray,int[],byte[],int,int,android.graphics.Paint,android.graphics.Canvas)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition()
androidx.fragment.app.FragmentTransitionImpl: java.lang.String findKeyForValue(java.util.Map,java.lang.String)
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.RendererCapabilities getCapabilities()
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference: ActiveResources$ResourceWeakReference(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue,boolean)
com.google.android.exoplayer2.extractor.FlacMetadataReader: com.google.android.exoplayer2.metadata.Metadata peekId3Metadata(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
com.google.android.exoplayer2.extractor.ogg.OggPacket: void trimPayload()
com.bumptech.glide.load.engine.DataCacheKey: java.lang.String toString()
com.bumptech.glide.load.model.UriLoader: <clinit>()
androidx.appcompat.widget.Toolbar: void collapseActionView()
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: void cleanup()
com.danikula.videocache.HttpProxyCacheServer$SocketProcessorRunnable: void run()
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice: com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$ComponentSplice createFromParcel(android.os.Parcel)
androidx.appcompat.view.menu.MenuItemImpl: char getAlphabeticShortcut()
com.google.android.exoplayer2.offline.StreamKey$1: StreamKey$1()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean checkSyncPositionValid(com.google.android.exoplayer2.util.ParsableByteArray,int)
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void reset()
androidx.fragment.app.FragmentTransitionImpl: void bfsAddViewChildren(java.util.List,android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$1: void uncaughtException(java.lang.Thread,java.lang.Throwable)
androidx.core.graphics.drawable.IconCompat: void onPreParceling(boolean)
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStopped()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalRemoveItem(int)
androidx.lifecycle.ReportFragment: void onStart()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.collection.SparseArrayCompat: void append(int,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.MenuWrapperICS: int size()
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onCreatePanelMenu(int,android.view.Menu)
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: long getLong(java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _start()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.Region getTransparentRegion()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int access$100(com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)
androidx.core.view.WindowInsetsCompat: android.view.WindowInsets toWindowInsets()
androidx.lifecycle.LifecycleRegistry: void removeObserver(androidx.lifecycle.LifecycleObserver)
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()
androidx.appcompat.widget.SuggestionsAdapter: java.lang.CharSequence formatUrl(java.lang.CharSequence)
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: BitmapBytesTranscoder(android.graphics.Bitmap$CompressFormat,int)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: java.lang.String toString()
com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData: DvbParser$ObjectData(int,boolean,byte[],byte[])
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getConstantMinimumWidth()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: int getCodecMaxInputSize(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,java.lang.String,int,int)
com.google.android.exoplayer2.text.subrip.SubripDecoder: long parseTimecode(java.util.regex.Matcher,int)
androidx.appcompat.widget.AppCompatTextHelper: void onSetTextAppearance(android.content.Context,int)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isSoftwareOnly(android.media.MediaCodecInfo)
com.bumptech.glide.request.SingleRequest: void cancel()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isViewPartiallyVisible(android.view.View,boolean,boolean)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
com.google.android.exoplayer2.text.TextRenderer: void onPositionReset(long,boolean)
com.google.android.exoplayer2.source.hls.HlsChunkSource: long getChunkMediaSequence(com.google.android.exoplayer2.source.hls.HlsMediaChunk,boolean,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,long,long)
androidx.recyclerview.widget.GridLayoutManager: int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int)
com.bumptech.glide.GlideBuilder: com.bumptech.glide.Glide build(android.content.Context)
com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader: com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo readEsInfo(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isChecked()
androidx.recyclerview.widget.RecyclerView$LayoutManager$2: RecyclerView$LayoutManager$2(androidx.recyclerview.widget.RecyclerView$LayoutManager)
androidx.core.graphics.TypefaceCompatBaseImpl$2: int getWeight(java.lang.Object)
androidx.appcompat.app.AppCompatViewInflater: android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean)
com.bumptech.glide.signature.ObjectKey: int hashCode()
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.LiveData: <clinit>()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioInputFormatChanged(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDecoderInitialized(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,java.lang.String,long)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickRotationTo270(android.view.View)
com.google.android.exoplayer2.audio.DefaultAudioSink: void disableTunneling()
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: int getMaxDisplayLength(android.content.Context)
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery: android.database.Cursor query(android.net.Uri)
com.bumptech.glide.request.ErrorRequestCoordinator: ErrorRequestCoordinator(java.lang.Object,com.bumptech.glide.request.RequestCoordinator)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void prepare()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String[] getStringArray(int)
com.bumptech.glide.load.model.MediaStoreFileLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy()
com.google.android.exoplayer2.extractor.ts.TsExtractor: TsExtractor(int,int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.arch.core.internal.SafeIterableMap$ListIterator: androidx.arch.core.internal.SafeIterableMap$Entry nextNode()
com.bumptech.glide.request.target.ImageViewTarget: void onLoadCleared(android.graphics.drawable.Drawable)
cn.jzvd.Jzvd: void gotoScreenNormal()
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: com.google.android.exoplayer2.text.SubtitleOutputBuffer createOutputBuffer()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void start()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean onLevelChange(int)
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction: java.lang.CharSequence getName(java.lang.Object)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean readTagData(com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.IMediaPlayer: tv.danmaku.ijk.media.player.MediaInfo getMediaInfo()
androidx.versionedparcelable.VersionedParcel: void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean)
com.google.android.exoplayer2.source.hls.HlsChunkSource: void reset()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getSeekLoadDuration()
androidx.appcompat.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void put(android.graphics.Bitmap)
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: java.lang.Class getDataClass()
androidx.recyclerview.widget.GridLayoutManager: int getSpaceForSpanRange(int,int)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getUpdatedMediaPeriodInfo(com.google.android.exoplayer2.MediaPeriodInfo)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: MappingTrackSelector$MappedTrackInfo(int[],com.google.android.exoplayer2.source.TrackGroupArray[],int[],int[][][],com.google.android.exoplayer2.source.TrackGroupArray)
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: void skipBit()
androidx.appcompat.view.menu.CascadingMenuPopup: void setGravity(int)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.Request buildRequestRecursive(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: long access$600(com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: FragmentManagerImpl$EndViewTransitionAnimation(android.view.animation.Animation,android.view.ViewGroup,android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: RecyclerView$LayoutManager$1(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.android.exoplayer2.extractor.ts.H264Reader: void packetStarted(long,int)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder: com.bumptech.glide.load.engine.cache.MemorySizeCalculator build()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: int readFrames(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.danikula.videocache.HttpUrlSource: long length()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: java.lang.String getCharsetName(int)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: boolean onMenuOpened(int,android.view.Menu)
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory: MediaStoreFileLoader$Factory(android.content.Context)
androidx.appcompat.view.menu.MenuItemWrapperICS: char getAlphabeticShortcut()
androidx.core.widget.NestedScrollView: void smoothScrollTo(int,int,int,boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void reinitializeCodec()
com.google.android.exoplayer2.source.SinglePeriodTimeline: com.google.android.exoplayer2.Timeline$Period getPeriod(int,com.google.android.exoplayer2.Timeline$Period,boolean)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: int available()
com.google.android.exoplayer2.extractor.ogg.OpusReader: long getPacketDurationUs(byte[])
androidx.core.widget.NestedScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: <clinit>()
cn.jzvd.JzvdStd: void changeUiToPlayingClear()
com.bumptech.glide.manager.DefaultConnectivityMonitor$1: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
androidx.appcompat.view.menu.MenuItemImpl: void setIsActionButton(boolean)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: int clamp(int,int,int)
androidx.fragment.app.FragmentTransition: java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String)
androidx.appcompat.widget.Toolbar$LayoutParams: void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams)
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant copyWithFormat(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$VideoDecoderException: VideoDecoder$VideoDecoderException()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: float getCodecOperatingRateV23(float,com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format[])
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String)
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: SsaStyle$Overrides(int,android.graphics.PointF)
androidx.core.view.LayoutInflaterCompat: void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2)
androidx.collection.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata copyWithAppendedEntries(com.google.android.exoplayer2.metadata.Metadata$Entry[])
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)
androidx.appcompat.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)
com.bumptech.glide.load.resource.bitmap.ImageReader$ParcelFileDescriptorImageReader: void stopGrowingBuffers()
com.google.android.exoplayer2.source.ClippingMediaPeriod: long seekToUs(long)
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.bumptech.glide.load.model.FileLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.util.Util: void writeBoolean(android.os.Parcel,boolean)
androidx.appcompat.widget.AppCompatTextHelper: void onSetCompoundDrawables()
cn.jzvd.demo.CustomJzvd.MyJzvdStd: MyJzvdStd(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.util.ParsableByteArray: int readLittleEndianUnsignedIntToInt()
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: long getSkippedOutputFrameCount()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoadCanceled(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,boolean)
androidx.appcompat.widget.Toolbar: boolean isOverflowMenuShowPending()
com.bumptech.glide.load.resource.bitmap.Downsampler: boolean handles(java.nio.ByteBuffer)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void moveView(int,int)
com.bumptech.glide.RequestManager: com.bumptech.glide.RequestBuilder asBitmap()
androidx.fragment.app.Fragment: boolean performPrepareOptionsMenu(android.view.Menu)
com.google.android.exoplayer2.drm.DefaultDrmSession: com.google.android.exoplayer2.drm.DrmSession$DrmSessionException getError()
com.google.android.exoplayer2.source.ProgressiveMediaSource: void notifySourceInfoRefreshed(long,boolean,boolean)
android.support.v4.media.RatingCompat: int describeContents()
com.google.android.exoplayer2.upstream.DefaultDataSource: void addTransferListener(com.google.android.exoplayer2.upstream.TransferListener)
com.google.android.exoplayer2.ExoPlayerImplInternal: void seekTo(com.google.android.exoplayer2.Timeline,int,long)
androidx.activity.ImmLeaksCleaner: void initializeReflectiveFields()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setFilterBitmap(boolean)
com.bumptech.glide.provider.LoadPathCache: LoadPathCache()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onProcessedTunneledBuffer(long)
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource decodeFromData(com.bumptech.glide.load.data.DataFetcher,java.lang.Object,com.bumptech.glide.load.DataSource)
androidx.fragment.app.BackStackState: BackStackState(android.os.Parcel)
androidx.core.widget.NestedScrollView: boolean scrollToChildRect(android.graphics.Rect,boolean)
com.bumptech.glide.load.model.FileLoader$FileFetcher: java.lang.Class getDataClass()
com.bumptech.glide.request.target.BaseTarget: void onDestroy()
com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution: TtmlDecoder$CellResolution(int,int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: void seek(long)
com.bumptech.glide.load.engine.ActiveResources$1: ActiveResources$1()
com.google.android.exoplayer2.extractor.ts.Ac4Reader: boolean continueRead(com.google.android.exoplayer2.util.ParsableByteArray,byte[],int)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.appcompat.app.ActionBar: void onDestroy()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void handleInputBufferSupplementalData(com.google.android.exoplayer2.decoder.DecoderInputBuffer)
com.google.android.exoplayer2.source.ExtractorMediaSource$Factory: ExtractorMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.android.exoplayer2.metadata.icy.IcyHeaders: int describeContents()
com.google.android.exoplayer2.metadata.flac.VorbisComment$1: java.lang.Object[] newArray(int)
com.bumptech.glide.load.data.BufferedOutputStream: void write(byte[])
com.google.android.exoplayer2.text.cea.Cea708Decoder: void flush()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: <clinit>()
com.bumptech.glide.Registry$NoModelLoaderAvailableException: Registry$NoModelLoaderAvailableException(java.lang.Object,java.util.List)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: void disable()
com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom: java.lang.String toString()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setKeepInBackground(boolean)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: int finishWriteSampleData()
androidx.appcompat.view.menu.CascadingMenuPopup$3$1: void run()
com.bumptech.glide.load.model.AssetUriLoader: boolean handles(android.net.Uri)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame$1: java.lang.Object[] newArray(int)
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: boolean isFirstVclNalUnitOfPicture(com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)
androidx.appcompat.view.menu.CascadingMenuPopup: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.fragment.app.FragmentState: FragmentState(android.os.Parcel)
com.google.android.exoplayer2.extractor.mp3.XingSeeker: XingSeeker(long,int,long,long,long[])
androidx.appcompat.content.res.AppCompatResources: android.util.TypedValue getTypedValue()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.view.ViewPropertyAnimatorCompat: void start()
com.bumptech.glide.util.ContentLengthInputStream: int read(byte[],int,int)
androidx.appcompat.widget.AbsActionBarView: boolean onHoverEvent(android.view.MotionEvent)
com.danikula.videocache.StorageUtils: <clinit>()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean setVisible(boolean,boolean)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void getSize(com.bumptech.glide.request.target.SizeReadyCallback)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder: com.google.android.exoplayer2.extractor.Extractor selectExtractor(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.ExtractorOutput,android.net.Uri)
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: tv.danmaku.ijk.media.player.misc.AndroidTrackInfo[] fromMediaPlayer(android.media.MediaPlayer)
com.google.android.exoplayer2.upstream.Loader: long startLoading(com.google.android.exoplayer2.upstream.Loader$Loadable,com.google.android.exoplayer2.upstream.Loader$Callback,int)
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState: void setStyle(android.content.Context)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.core.view.NestedScrollingChildHelper: void setNestedScrollingParentForType(int,android.view.ViewParent)
com.google.android.exoplayer2.metadata.id3.CommentFrame: int hashCode()
androidx.core.provider.SelfDestructiveThread$3: SelfDestructiveThread$3(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition)
com.google.android.exoplayer2.extractor.mp3.XingSeeker: XingSeeker(long,int,long)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean hasSelectionOverride(int,com.google.android.exoplayer2.source.TrackGroupArray)
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker: int peekIntAtPosition(byte[],int)
com.google.android.exoplayer2.source.TrackGroup: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback: ResourceRecycler$ResourceRecyclerCallback()
com.bumptech.glide.load.engine.ResourceCacheGenerator: boolean startNext()
androidx.appcompat.widget.ActionBarContextView: void initForMode(androidx.appcompat.view.ActionMode)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$300(tv.danmaku.ijk.media.player.IjkMediaPlayer)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
tv.danmaku.ijk.media.player.IMediaPlayer: long getCurrentPosition()
com.bumptech.glide.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void reevaluateBuffer(long)
androidx.appcompat.view.menu.BaseMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
org.slf4j.helpers.SubstituteLogger: void error(java.lang.String)
androidx.recyclerview.widget.RecyclerView: <clinit>()
androidx.appcompat.widget.AbsActionBarView: void access$001(androidx.appcompat.widget.AbsActionBarView,int)
com.bumptech.glide.manager.RequestManagerRetriever: <clinit>()
androidx.fragment.app.Fragment$4: boolean onHasView()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean)
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder$AdapterRecyclerView: ActivityTinyWindowRecycleViewMultiHolder$AdapterRecyclerView(cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder)
androidx.recyclerview.widget.RecyclerView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.upstream.Loader$LoadTask: void execute()
com.bumptech.glide.load.model.StreamEncoder: boolean encode(java.io.InputStream,java.io.File,com.bumptech.glide.load.Options)
androidx.collection.MapCollections$MapIterator: boolean equals(java.lang.Object)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode)
androidx.core.provider.SelfDestructiveThread: void post(java.lang.Runnable)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: void reverse()
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getChildEnd(android.view.View)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: void updateSeekCeiling(long,long)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: ChapterFrame(java.lang.String,int,int,long,long,com.google.android.exoplayer2.metadata.id3.Id3Frame[])
com.google.android.exoplayer2.audio.DefaultAudioSink$DefaultAudioProcessorChain: com.google.android.exoplayer2.audio.AudioProcessor[] getAudioProcessors()
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: java.lang.Object decode(java.lang.String)
tv.danmaku.ijk.media.player.MediaPlayerProxy: boolean isLooping()
androidx.collection.MapCollections$EntrySet: int size()
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object getKey()
androidx.interpolator.view.animation.LookupTableInterpolator: LookupTableInterpolator(float[])
com.google.android.exoplayer2.source.CompositeSequenceableLoader: void reevaluateBuffer(long)
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void outputSampleMetadata()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
com.google.android.exoplayer2.source.hls.WebvttExtractor: void processSample()
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: void onPositionReset(long,boolean)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: int read()
androidx.appcompat.view.menu.ActionMenuItem: boolean expandActionView()
com.danikula.videocache.HttpUrlSource: HttpUrlSource(com.danikula.videocache.HttpUrlSource)
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedMeasurement(android.view.View)
androidx.collection.MapCollections$ValuesCollection: boolean removeAll(java.util.Collection)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: PrivateCommand(android.os.Parcel)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean getClipToPadding()
androidx.core.widget.TextViewCompat$OreoCallback: TextViewCompat$OreoCallback(android.view.ActionMode$Callback,android.widget.TextView)
androidx.recyclerview.widget.RecyclerView$SavedState: void writeToParcel(android.os.Parcel,int)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void setSpeed(float)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.util.Util: boolean readBoolean(android.os.Parcel)
androidx.lifecycle.LiveData$1: LiveData$1(androidx.lifecycle.LiveData)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: com.google.android.exoplayer2.PlaybackParameters getPlaybackParameters()
androidx.lifecycle.ViewModel: void closeWithRuntimeException(java.lang.Object)
com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime: AnalyticsListener$EventTime(long,com.google.android.exoplayer2.Timeline,int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,long)
com.google.android.exoplayer2.BasePlayer$ListenerHolder: BasePlayer$ListenerHolder(com.google.android.exoplayer2.Player$EventListener)
cn.jzvd.Jzvd: void cloneAJzvd(android.view.ViewGroup)
androidx.appcompat.view.menu.CascadingMenuPopup: void setHorizontalOffset(int)
androidx.versionedparcelable.VersionedParcel: void writeByteArray(byte[],int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUp(int,android.view.KeyEvent)
androidx.appcompat.app.AppCompatDelegateImpl: boolean shouldAnimateActionModeView()
com.danikula.videocache.file.LruDiskUsage: LruDiskUsage()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: androidx.loader.content.Loader getLoader()
com.google.android.exoplayer2.metadata.emsg.EventMessage$1: EventMessage$1()
com.google.android.exoplayer2.ExoPlayerImpl: int getPlaybackSuppressionReason()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void initTempTextPaint(int)
androidx.appcompat.widget.ResourceManagerInternal: androidx.appcompat.widget.ResourceManagerInternal get()
com.bumptech.glide.load.resource.bitmap.Downsampler$1: void onObtainBounds()
androidx.appcompat.app.AppCompatDialog: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.fragment.app.Fragment: void performPrimaryNavigationFragmentChanged()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void processLoadedPlaylist(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,long)
androidx.appcompat.widget.AppCompatTextHelper$1: void onFontRetrieved(android.graphics.Typeface)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStatePreparing()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean isEnabled()
androidx.fragment.app.Fragment: void performMultiWindowModeChanged(boolean)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.bumptech.glide.load.engine.EngineJob: void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: AppCompatDelegateImpl$AppCompatWindowCallback(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setAndroidIOCallback(tv.danmaku.ijk.media.player.misc.IAndroidIO)
com.bumptech.glide.load.engine.executor.RuntimeCompat: int getCoreCountPre17()
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: void onReset()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,java.io.IOException,int)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean resolvePendingMessagePosition(com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo)
androidx.collection.MapCollections$MapIterator: int hashCode()
com.google.android.exoplayer2.video.ColorInfo: java.lang.String toString()
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: long getDurationUs()
com.bumptech.glide.load.engine.executor.RuntimeCompat$1: RuntimeCompat$1(java.util.regex.Pattern)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: <clinit>()
com.google.android.exoplayer2.DefaultMediaClock: void onRendererEnabled(com.google.android.exoplayer2.Renderer)
androidx.core.provider.FontRequest: FontRequest(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement: DefaultEbmlReader$MasterElement(int,long,com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$1)
com.bumptech.glide.load.data.StreamLocalUriFetcher: java.lang.Class getDataClass()
com.bumptech.glide.manager.DefaultConnectivityMonitor: void onStop()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.google.android.exoplayer2.util.Log: void d(java.lang.String,java.lang.String)
androidx.versionedparcelable.ParcelImpl: ParcelImpl(android.os.Parcel)
com.google.android.exoplayer2.drm.DefaultDrmSession: void access$100(com.google.android.exoplayer2.drm.DefaultDrmSession,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void setSubtitleEndTime(java.lang.String,long,byte[])
com.google.android.exoplayer2.metadata.id3.MlltFrame: boolean equals(java.lang.Object)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnTimedTextListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.AppCompatTextView: void onTextChanged(java.lang.CharSequence,int,int,int)
androidx.fragment.app.FragmentManagerImpl$6: androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String)
androidx.fragment.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)
androidx.appcompat.view.SupportMenuInflater: java.lang.Object findRealOwner(java.lang.Object)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getAlpha()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: void onMediaPeriodCreated(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean setupAutoSizeUniformPresetSizesConfiguration()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setupAnimatorsForTarget(java.lang.String,android.animation.Animator)
com.google.android.exoplayer2.util.ParsableByteArray: double readDouble()
com.google.android.exoplayer2.audio.Ac3Util: int parseAc3SyncframeAudioSampleCount(java.nio.ByteBuffer)
androidx.appcompat.widget.SearchView: void updateVoiceButton(boolean)
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer: int compareTo(java.lang.Object)
androidx.appcompat.view.menu.MenuBuilder: boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDrmSessionAcquired(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition: ExoPlayerImplInternal$SeekPosition(com.google.android.exoplayer2.Timeline,int,long)
com.bumptech.glide.gifdecoder.GifHeader: int getWidth()
androidx.appcompat.widget.ViewUtils: boolean isLayoutRtl(android.view.View)
androidx.fragment.app.FragmentManagerImpl: boolean isPrimaryNavigation(androidx.fragment.app.Fragment)
com.bumptech.glide.util.ContentLengthInputStream: java.io.InputStream obtain(java.io.InputStream,long)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onSeekProcessed(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int)
tv.danmaku.ijk.media.player.pragma.DebugLog: void vfmt(java.lang.String,java.lang.String,java.lang.Object[])
cn.jzvd.JzvdStd: void onStatePause()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources)
com.google.android.exoplayer2.extractor.ts.H262Reader: void packetFinished()
androidx.appcompat.widget.DropDownListView: boolean isInTouchMode()
cn.jzvd.demo.ActivityMain: ActivityMain()
android.support.v4.media.MediaMetadataCompatApi21: void writeToParcel(java.lang.Object,android.os.Parcel,int)
com.bumptech.glide.load.model.ByteBufferFileLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.util.Util: float constrainValue(float,float,float)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: int supportsMixedMimeTypeAdaptation()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: int getChangingConfigurations()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void cancel()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupVisible(int,boolean)
androidx.fragment.app.Fragment: androidx.fragment.app.FragmentActivity requireActivity()
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: com.google.android.exoplayer2.extractor.SeekMap createSeekMap()
com.bumptech.glide.load.engine.cache.DiskCacheAdapter: DiskCacheAdapter()
com.bumptech.glide.load.data.HttpUrlFetcher: java.net.HttpURLConnection buildAndConfigureConnection(java.net.URL,java.util.Map)
com.bumptech.glide.load.Option: int hashCode()
androidx.core.view.WindowInsetsCompat: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: long getAllocatedBandwidth()
com.danikula.videocache.HttpProxyCacheServerClients: void startProcessRequest()
com.google.android.exoplayer2.text.cea.CeaDecoder: java.lang.Object dequeueInputBuffer()
androidx.recyclerview.widget.RecyclerView: void startInterceptRequestLayout()
com.google.android.exoplayer2.decoder.Buffer: void clear()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.android.exoplayer2.source.CompositeMediaSource: void enableInternal()
androidx.cursoradapter.widget.CursorAdapter: android.database.Cursor getCursor()
androidx.versionedparcelable.VersionedParcelParcel: void setOutputField(int)
androidx.appcompat.app.AppCompatDelegate: android.content.Context attachBaseContext2(android.content.Context)
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean drainAudioProcessorsToEndOfStream()
androidx.appcompat.view.menu.MenuBuilder: android.view.View getHeaderView()
com.bumptech.glide.Glide: void unregisterRequestManager(com.bumptech.glide.RequestManager)
androidx.appcompat.view.menu.SubMenuBuilder: void setQwertyMode(boolean)
androidx.appcompat.widget.Toolbar$SavedState: Toolbar$SavedState(android.os.Parcel,java.lang.ClassLoader)
androidx.fragment.app.BackStackRecord: java.lang.String toString()
androidx.appcompat.widget.SearchView: void postUpdateFocusedState()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getAsyncStatisticBufCapacity()
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: void initialize()
androidx.recyclerview.widget.GapWorker: void remove(androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader: boolean parseHeader(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.metadata.id3.ApicFrame$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onKeyDown(int,android.view.KeyEvent)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onTracksChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectionArray)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void assertIsPrepared()
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter: com.bumptech.glide.load.engine.Resource convert(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void evict()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onVideoDisabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup: void onDismiss()
com.google.android.exoplayer2.audio.DtsUtil: int parseDtsAudioSampleCount(byte[])
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
androidx.core.graphics.PathParser: boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.appcompat.view.menu.MenuPopupHelper: void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildLanguageString(com.google.android.exoplayer2.Format)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView$3: float getInterpolation(float)
androidx.appcompat.widget.ResourcesWrapper: int getDimensionPixelOffset(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _pause()
android.support.v4.media.MediaDescriptionCompat: java.lang.String toString()
com.google.android.exoplayer2.ui.SubtitlePainter: boolean areCharSequencesEqual(java.lang.CharSequence,java.lang.CharSequence)
androidx.core.widget.NestedScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getMaxSize(android.app.ActivityManager,float,float)
cn.jzvd.Jzvd: void onStopTrackingTouch(android.widget.SeekBar)
cn.jzvd.JzvdStd: void cancelDismissControlViewTimer()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer: float getVideoDecodeFramesPerSecond()
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean handleMessage(android.os.Message)
com.google.android.exoplayer2.drm.FrameworkMediaCrypto: <clinit>()
com.google.android.exoplayer2.video.DummySurface: DummySurface(com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread,android.graphics.SurfaceTexture,boolean,com.google.android.exoplayer2.video.DummySurface$1)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void readFully(byte[],int,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue: void setDrmInitData(com.google.android.exoplayer2.drm.DrmInitData)
com.google.android.exoplayer2.text.subrip.SubripSubtitle: SubripSubtitle(com.google.android.exoplayer2.text.Cue[],long[])
com.google.android.exoplayer2.text.dvb.DvbParser: int[] generateDefault2BitClutEntries()
cn.jzvd.JZUtils: void hideStatusBar(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: boolean showOverflowMenu()
cn.jzvd.demo.ActivityListView: void clickRecyclerView(android.view.View)
androidx.core.view.AccessibilityDelegateCompat: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean)
com.google.android.exoplayer2.video.ColorInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
cn.jzvd.Jzvd: void setUp(java.lang.String,java.lang.String,int)
androidx.versionedparcelable.VersionedParcelParcel: byte[] readByteArray()
com.google.android.exoplayer2.Timeline$Window: long getDurationMs()
androidx.appcompat.widget.AppCompatProgressBarHelper: AppCompatProgressBarHelper(android.widget.ProgressBar)
com.bumptech.glide.manager.RequestTracker: void runRequest(com.bumptech.glide.request.Request)
com.bumptech.glide.load.data.BufferedOutputStream: void maybeFlushBuffer()
cn.jzvd.demo.CustomMedia.JZMediaIjk: boolean onInfo(tv.danmaku.ijk.media.player.IMediaPlayer,int,int)
com.bumptech.glide.manager.SupportRequestManagerFragment: void unregisterFragmentWithRoot()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.appcompat.view.menu.MenuBuilder: boolean isQwertyMode()
androidx.core.graphics.TypefaceCompatApi28Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
com.google.android.exoplayer2.MediaPeriodInfo: com.google.android.exoplayer2.MediaPeriodInfo copyWithStartPositionUs(long)
androidx.fragment.app.FragmentHostCallback: android.view.View onFindViewById(int)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void outputPendingMetadataSamples(long)
com.bumptech.glide.manager.TargetTracker: void clear()
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: com.google.android.exoplayer2.video.DummySurface init(int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
com.google.android.exoplayer2.extractor.ogg.OggExtractor: void seek(long,long)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: byte[] formatSubtitleTimecode(long,java.lang.String,long)
androidx.appcompat.widget.ThemeUtils: int getThemeAttrColor(android.content.Context,int,float)
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.fragment.app.FragmentManagerImpl: int getBackStackEntryCount()
androidx.collection.MapCollections$EntrySet: boolean contains(java.lang.Object)
androidx.appcompat.widget.ToolbarWidgetWrapper: void collapseActionView()
com.bumptech.glide.load.engine.DataCacheKey: DataCacheKey(com.bumptech.glide.load.Key,com.bumptech.glide.load.Key)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onTimedText(tv.danmaku.ijk.media.player.IMediaPlayer,tv.danmaku.ijk.media.player.IjkTimedText)
cn.jzvd.JzvdStd: void setScreenTiny()
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.fragment.app.Fragment: void onLowMemory()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumHeight()
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: void trimMemory(int)
com.bumptech.glide.load.resource.gif.GifFrameLoader: GifFrameLoader(com.bumptech.glide.Glide,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Transformation,android.graphics.Bitmap)
tv.danmaku.ijk.media.player.pragma.DebugLog: void i(java.lang.String,java.lang.String)
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder: DrawableBytesTranscoder(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
androidx.appcompat.widget.ListPopupWindow: int getVerticalOffset()
androidx.appcompat.view.menu.ListMenuItemView: void addContentView(android.view.View,int)
com.google.android.exoplayer2.extractor.Id3Peeker: com.google.android.exoplayer2.metadata.Metadata peekId3Data(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)
com.google.android.exoplayer2.util.GlUtil: void checkGlError()
androidx.appcompat.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)
com.bumptech.glide.load.engine.GlideException: void printStackTrace(java.lang.Appendable)
com.bumptech.glide.load.data.InputStreamRewinder$Factory: java.lang.Class getDataClass()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object)
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: CursorAdapter$MyDataSetObserver(androidx.cursoradapter.widget.CursorAdapter)
androidx.media.AudioAttributesImplApi21: boolean equals(java.lang.Object)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onPositionDiscontinuity(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean shouldHideActionBarOnFling(float)
androidx.appcompat.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()
com.bumptech.glide.util.MarkEnforcingInputStream: MarkEnforcingInputStream(java.io.InputStream)
tv.danmaku.ijk.media.player.IMediaPlayer: tv.danmaku.ijk.media.player.misc.ITrackInfo[] getTrackInfo()
com.google.android.exoplayer2.audio.Ac3Util: int parseAc3SyncframeSize(byte[])
com.google.android.exoplayer2.source.CompositeSequenceableLoader: long getNextLoadPositionUs()
androidx.collection.MapCollections$EntrySet: boolean remove(java.lang.Object)
androidx.collection.LongSparseArray: java.lang.Object get(long)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean codecNeedsDiscardChannelsWorkaround(java.lang.String)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant getVariantWithVideoGroup(java.util.ArrayList,java.lang.String)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.RequestManager: void onStart()
androidx.appcompat.widget.AppCompatDrawableManager: void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[])
com.google.android.exoplayer2.BaseRenderer: void onStarted()
com.danikula.videocache.HttpProxyCacheServer: void closeSocketOutput(java.net.Socket)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: long generateTransitionKey(int,int)
androidx.recyclerview.widget.GapWorker: void add(androidx.recyclerview.widget.RecyclerView)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void processSilence(java.nio.ByteBuffer)
com.google.android.exoplayer2.metadata.scte35.SpliceCommand: int describeContents()
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
com.bumptech.glide.load.model.MediaStoreFileLoader: boolean handles(java.lang.Object)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
cn.jzvd.Jzvd: void startVideo()
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStarted(android.app.Activity)
com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: FileDataSource$FileDataSourceException(java.io.IOException)
cn.jzvd.JZUtils: void saveProgress(android.content.Context,java.lang.Object,long)
cn.jzvd.JzvdStd: void dismissBrightnessDialog()
androidx.collection.MapCollections$EntrySet: void clear()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getParentFragment()
com.google.android.exoplayer2.source.hls.HlsChunkSource$HlsMediaPlaylistSegmentIterator: HlsChunkSource$HlsMediaPlaylistSegmentIterator(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,long,int)
com.bumptech.glide.gifdecoder.GifHeaderParser: int read()
androidx.appcompat.app.AppCompatDelegateImpl: void attachToWindow(android.view.Window)
tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener: void onTimedText(tv.danmaku.ijk.media.player.IMediaPlayer,tv.danmaku.ijk.media.player.IjkTimedText)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnBufferingUpdateListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.DummyTrackOutput createDummyTrackOutput(int,int)
com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory: HttpDataSource$BaseFactory()
com.google.android.exoplayer2.audio.Ac3Util: int parseTrueHdSyncframeAudioSampleCount(byte[])
com.google.android.exoplayer2.text.ttml.TtmlStyle: boolean hasBackgroundColor()
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int)
androidx.core.view.WindowInsetsCompat$Builder: WindowInsetsCompat$Builder()
androidx.appcompat.view.menu.MenuBuilder: int size()
androidx.appcompat.view.menu.MenuWrapperICS: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist copyWith(long,int)
com.google.android.exoplayer2.extractor.ogg.OggPacket: com.google.android.exoplayer2.extractor.ogg.OggPageHeader getPageHeader()
androidx.fragment.app.Fragment: void onPictureInPictureModeChanged(boolean)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleSetPenColor()
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawable(android.net.Uri)
com.google.android.exoplayer2.audio.AudioCapabilities: com.google.android.exoplayer2.audio.AudioCapabilities getCapabilities(android.content.Context)
com.google.android.exoplayer2.text.TextRenderer: void releaseDecoder()
com.google.android.exoplayer2.extractor.ogg.StreamReader: int readPayload(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createURational(androidx.exifinterface.media.ExifInterface$Rational[],java.nio.ByteOrder)
cn.jzvd.demo.AdapterRecyclerView: AdapterRecyclerView(android.content.Context)
android.support.v4.os.ResultReceiver: int describeContents()
com.google.android.exoplayer2.util.CodecSpecificDataUtil: <clinit>()
com.google.android.exoplayer2.offline.StreamKey: void writeToParcel(android.os.Parcel,int)
androidx.exifinterface.media.ExifInterface: void readExifSegment(byte[],int)
com.bumptech.glide.load.data.InputStreamRewinder: java.io.InputStream rewindAndGet()
cn.jzvd.JZDataSource: java.lang.Object getCurrentUrl()
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1: boolean onForwardingStopped()
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.SimpleExoPlayer: android.os.Looper getApplicationLooper()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions useAnimationPool(boolean)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: boolean equals(java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: BitmapPoolAdapter()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void clear()
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: LinearLayoutManager$AnchorInfo()
androidx.appcompat.widget.LinearLayoutCompat: void drawDividersHorizontal(android.graphics.Canvas)
androidx.appcompat.app.AppCompatDelegateImpl: void onDestroy()
com.google.android.exoplayer2.extractor.ogg.StreamReader$UnseekableOggSeeker: com.google.android.exoplayer2.extractor.SeekMap createSeekMap()
com.bumptech.glide.load.model.FileLoader$StreamFactory$1: java.lang.Object open(java.io.File)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setHotspot(float,float)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDrmSessionReleased()
androidx.fragment.app.FragmentManagerImpl: void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean)
androidx.recyclerview.widget.RecyclerView: void assertNotInLayoutOrScroll(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: android.graphics.drawable.Drawable mutate()
com.google.android.exoplayer2.util.Util: java.util.HashMap createIsoLanguageReplacementMap()
androidx.collection.MapCollections$EntrySet: boolean equals(java.lang.Object)
cn.jzvd.demo.CustomMedia.JZMediaExo: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setPlayWhenReady(boolean)
tv.danmaku.ijk.media.player.IMediaPlayer: void reset()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: void onAnimationEnd(android.view.View)
androidx.core.view.ViewCompat$Api23Impl: android.view.WindowInsets getRootWindowInsets(android.view.View)
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,int,byte[],long,long,long,java.lang.String,int,java.util.Map)
com.google.android.exoplayer2.text.dvb.DvbSubtitle: int getEventTimeCount()
androidx.core.widget.NestedScrollView: void doScrollY(int)
androidx.appcompat.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.danikula.videocache.ProxyCache: void readSource()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track: boolean parseMsAcmCodecPrivate(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)
androidx.collection.MapCollections$MapIterator: java.lang.Object getKey()
com.bumptech.glide.manager.DefaultConnectivityMonitor: DefaultConnectivityMonitor(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)
androidx.fragment.app.FragmentController: void dispatchPictureInPictureModeChanged(boolean)
androidx.recyclerview.widget.RecyclerView: void smoothScrollBy(int,int,android.view.animation.Interpolator)
androidx.fragment.app.Fragment: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.core.graphics.drawable.WrappedDrawableApi21: android.graphics.Rect getDirtyBounds()
androidx.loader.app.LoaderManagerImpl: void markForRedelivery()
com.google.android.exoplayer2.decoder.DecoderInputBuffer: DecoderInputBuffer(int)
com.google.android.exoplayer2.extractor.flac.FlacExtractor: FlacExtractor()
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry)
com.bumptech.glide.load.PreferredColorSpace: PreferredColorSpace(java.lang.String,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: int getNavigationMode()
com.google.android.exoplayer2.DefaultMediaClock: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
com.google.android.exoplayer2.extractor.ts.TsExtractor: int access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.danikula.videocache.HttpProxyCache: java.lang.String format(java.lang.String,java.lang.Object[])
com.bumptech.glide.load.engine.DecodeJob: void decodeFromRetrievedData()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl getExpandedItem()
com.google.android.exoplayer2.util.StandaloneMediaClock: StandaloneMediaClock(com.google.android.exoplayer2.util.Clock)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long readGranuleOfLastPage(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.SearchView$2: void run()
androidx.recyclerview.widget.OrientationHelper$1: int getMode()
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker: com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results rechunk(int,long[],int[],long)
com.bumptech.glide.util.MarkEnforcingInputStream: void mark(int)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: int inferPrimaryTrackType(com.google.android.exoplayer2.Format)
tv.danmaku.ijk.media.player.BuildConfig: BuildConfig()
cn.jzvd.demo.ActivityListView: void clickMultiHolder(android.view.View)
androidx.appcompat.widget.AppCompatTextHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()
com.google.android.exoplayer2.ExoPlayerImpl: void addListener(com.google.android.exoplayer2.Player$EventListener)
androidx.core.widget.NestedScrollView: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
com.google.android.exoplayer2.BasePlayer: int getBufferedPercentage()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)
com.bumptech.glide.load.resource.transcode.TranscoderRegistry: TranscoderRegistry()
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getString(int,java.lang.Object[])
com.google.android.exoplayer2.metadata.icy.IcyHeaders: int hashCode()
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getLayoutDirection()
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onChanged()
androidx.appcompat.widget.AppCompatImageHelper: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int indexOf(int)
androidx.collection.MapCollections$EntrySet: boolean retainAll(java.util.Collection)
androidx.recyclerview.widget.GapWorker: <clinit>()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean enoughToFilter()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumWidth()
tv.danmaku.ijk.media.player.misc.ITrackInfo: java.lang.String getInfoInline()
androidx.recyclerview.widget.RecyclerView: void access$300(androidx.recyclerview.widget.RecyclerView,int,int)
com.google.android.exoplayer2.audio.Ac3Util: int getAc3SyncframeSize(int,int)
androidx.appcompat.widget.DropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
com.bumptech.glide.load.model.stream.UrlLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options)
cn.jzvd.Jzvd: void onProgress(int,long,long)
androidx.viewpager.widget.ViewPager: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: void onSeekFinished()
androidx.appcompat.widget.AppCompatSeekBarHelper: void setTickMark(android.graphics.drawable.Drawable)
com.bumptech.glide.load.resource.bitmap.Downsampler: java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onWindowFocusChanged(boolean)
com.bumptech.glide.load.engine.ResourceCacheKey: byte[] getResourceClassBytes()
com.google.android.exoplayer2.util.NalUnitUtil: <clinit>()
androidx.appcompat.app.TwilightManager: android.location.Location getLastKnownLocation()
androidx.fragment.app.FragmentTransition: void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.fragment.app.FragmentTransitionImpl: void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map)
androidx.exifinterface.media.ExifInterface: void handleThumbnailFromJfif(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,java.util.HashMap)
cn.jzvd.Jzvd$ProgressTimerTask: Jzvd$ProgressTimerTask(cn.jzvd.Jzvd)
cn.jzvd.demo.ActivityListView: void onCreate(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isRemoved()
com.google.android.exoplayer2.Timeline: int getNextWindowIndex(int,int,boolean)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: void onLoadFailed(java.lang.Exception)
com.bumptech.glide.request.BaseRequestOptions: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
com.bumptech.glide.util.pool.GlideTrace: void beginSectionFormat(java.lang.String,java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean)
androidx.lifecycle.Lifecycle$State: boolean isAtLeast(androidx.lifecycle.Lifecycle$State)
androidx.appcompat.widget.TooltipCompatHandler: void hide()
androidx.core.graphics.drawable.WrappedDrawableState: android.graphics.drawable.Drawable newDrawable()
com.bumptech.glide.load.resource.bitmap.BitmapResource: int getSize()
androidx.core.view.KeyEventDispatcher: <clinit>()
com.bumptech.glide.Glide: void throwIncorrectGlideModule(java.lang.Exception)
com.google.android.exoplayer2.metadata.flac.PictureFrame: <clinit>()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator iterator()
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: <clinit>()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onContainerAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
androidx.appcompat.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: byte readByte()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleG3Character(int)
com.google.android.exoplayer2.audio.ResamplingAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat onConfigure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setDataSource(java.lang.String)
com.google.android.exoplayer2.upstream.DataSpec: DataSpec(android.net.Uri,byte[],long,long,long,java.lang.String,int)
com.bumptech.glide.MemoryCategory: <clinit>()
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)
com.bumptech.glide.load.resource.gif.GifDrawable: int getIntrinsicHeight()
androidx.collection.SimpleArrayMap: int indexOfNull()
com.google.android.exoplayer2.text.CaptionStyleCompat: com.google.android.exoplayer2.text.CaptionStyleCompat createFromCaptionStyleV19(android.view.accessibility.CaptioningManager$CaptionStyle)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: android.view.accessibility.AccessibilityNodeInfo unwrap()
com.danikula.videocache.GetRequest: <clinit>()
com.google.android.exoplayer2.extractor.mkv.VarintReader: long readUnsignedVarint(com.google.android.exoplayer2.extractor.ExtractorInput,boolean,boolean,int)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor)
androidx.appcompat.app.AppCompatDelegate: void removeActivityDelegate(androidx.appcompat.app.AppCompatDelegate)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: SizeConfigStrategy()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAlpha(int)
cn.jzvd.Jzvd: void init(android.content.Context)
androidx.appcompat.app.AppCompatDelegateImpl$4: void onFitSystemWindows(android.graphics.Rect)
androidx.versionedparcelable.VersionedParcel: void writeInt(int,int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
androidx.recyclerview.widget.RecyclerView: void ensureTopGlow()
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder: java.lang.Object rewindAndGet()
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet access$900(com.google.android.exoplayer2.SimpleExoPlayer)
androidx.core.content.res.TypedArrayUtils: boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: GroupedLinkedMap()
com.google.android.exoplayer2.ui.TrackSelectionView: TrackSelectionView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean shouldParseContainerAtom(int)
com.google.android.exoplayer2.util.ColorParser: <clinit>()
com.bumptech.glide.load.data.HttpUrlFetcher: boolean isHttpRedirect(int)
androidx.fragment.app.FragmentTransition$2: FragmentTransition$2(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object)
com.google.android.exoplayer2.extractor.ogg.OggExtractor: OggExtractor()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl: java.lang.CharSequence getTitle()
cn.jzvd.JZMediaInterface: void seekTo(long)
androidx.appcompat.widget.AppCompatSeekBar: void onDraw(android.graphics.Canvas)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
androidx.appcompat.widget.TintTypedArray: android.content.res.TypedArray getWrappedTypeArray()
androidx.appcompat.widget.ResourcesWrapper: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)
androidx.core.app.TaskStackBuilder: androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getAlphabeticModifiers()
androidx.fragment.app.FragmentTransition$1: void run()
androidx.appcompat.widget.AppCompatDrawableManager$1: void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)
androidx.appcompat.widget.ResourcesWrapper: int getColor(int)
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams: ActionBarOverlayLayout$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[])
androidx.core.view.NestedScrollingChildHelper: NestedScrollingChildHelper(android.view.View)
androidx.appcompat.view.menu.ActionMenuItem: boolean isEnabled()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.upstream.Loader$ReleaseTask: Loader$ReleaseTask(com.google.android.exoplayer2.upstream.Loader$ReleaseCallback)
com.bumptech.glide.load.engine.GlideException: GlideException(java.lang.String,java.util.List)
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: HardwareConfigState()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean isEmpty()
androidx.recyclerview.widget.GridLayoutManager: void measureChild(android.view.View,int,boolean)
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: void enabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.appcompat.widget.Toolbar: void ensureContentInsets()
com.google.android.exoplayer2.text.ssa.SsaDecoder: int toLineAnchor(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void setPositionUs(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.appcompat.widget.LinearLayoutCompat: void forceUniformWidth(int,int)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$1: com.google.android.exoplayer2.trackselection.TrackSelectionParameters[] newArray(int)
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory: EngineJob$EngineResourceFactory()
com.bumptech.glide.load.resource.bitmap.Downsampler: boolean isScaling(android.graphics.BitmapFactory$Options)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.lang.String logBitmap(android.graphics.Bitmap)
com.google.android.exoplayer2.text.SimpleSubtitleOutputBuffer: void release()
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: BitmapBytesTranscoder()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
androidx.appcompat.view.SupportActionModeWrapper: void setTitleOptionalHint(boolean)
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable: DropDownListView$ResolveHoverRunnable(androidx.appcompat.widget.DropDownListView)
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory: HttpGlideUrlLoader$Factory()
androidx.recyclerview.widget.LinearLayoutManager: int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State)
androidx.core.widget.NestedScrollView: boolean pageScroll(int)
com.google.android.exoplayer2.text.ttml.TtmlNode: long[] getEventTimesUs()
tv.danmaku.ijk.media.player.ISurfaceTextureHolder: android.graphics.SurfaceTexture getSurfaceTexture()
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher: void cleanup()
android.support.v4.media.session.MediaSessionCompat$Token$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.GridLayoutManager$LayoutParams: GridLayoutManager$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.util.Util: java.lang.Object[] nullSafeArrayCopy(java.lang.Object[],int)
androidx.viewpager.widget.ViewPager: void dataSetChanged()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void setReadingId3HeaderState()
androidx.appcompat.view.ActionMode: java.lang.Object getTag()
androidx.fragment.app.Fragment: boolean isHidden()
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist getPlaylistSnapshot(android.net.Uri,boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _stop()
androidx.appcompat.view.SupportActionModeWrapper: void setCustomView(android.view.View)
androidx.recyclerview.widget.RecyclerView: boolean findInterceptingOnItemTouchListener(android.view.MotionEvent)
com.google.android.exoplayer2.util.NalUnitUtil: int findNextUnescapeIndex(byte[],int,int)
com.google.android.exoplayer2.source.SampleQueue: void setSampleOffsetUs(long)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: void onBackPressed()
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean perform(android.view.View,android.os.Bundle)
com.danikula.videocache.IgnoreHostProxySelector: java.util.List select(java.net.URI)
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicHeight()
com.bumptech.glide.manager.TargetTracker: java.util.List getAll()
com.google.android.exoplayer2.text.CaptionStyleCompat: CaptionStyleCompat(int,int,int,int,int,android.graphics.Typeface)
com.google.android.exoplayer2.source.CompositeMediaSource: void disableInternal()
androidx.appcompat.widget.ActionMenuPresenter: boolean dismissPopupMenus()
com.bumptech.glide.load.data.HttpUrlFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(java.lang.String,com.google.android.exoplayer2.drm.DrmInitData$SchemeData[])
androidx.recyclerview.widget.StaggeredGridLayoutManager: int getMinStart(int)
androidx.fragment.app.FragmentHostCallback: boolean onHasWindowAnimations()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void addSpansToExtras(java.lang.CharSequence,android.view.View)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.interpolator.view.animation.FastOutLinearInInterpolator: <clinit>()
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: com.bumptech.glide.load.Transformation asBitmapDrawable()
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean canNotifyCleared(com.bumptech.glide.request.Request)
cn.jzvd.JZDataSource: java.lang.Object getCurrentKey()
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket: Cea708Decoder$DtvCcPacket(int,int)
com.bumptech.glide.load.data.InputStreamRewinder: void cleanup()
com.bumptech.glide.load.resource.bitmap.VideoDecoder: android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: boolean isAvailable(int,int)
android.support.v4.media.session.ParcelableVolumeInfo$1: android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder load(java.lang.String)
com.bumptech.glide.load.model.MediaStoreFileLoader: boolean handles(android.net.Uri)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int)
androidx.fragment.app.FragmentManagerImpl: void attachFragment(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void setEnabled(boolean)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getCleanFile(int)
com.google.android.exoplayer2.ui.SubtitlePainter: SubtitlePainter(android.content.Context)
androidx.core.graphics.drawable.WrappedDrawableApi21: boolean setState(int[])
com.google.android.exoplayer2.extractor.ts.TsDurationReader: int readFirstPcrValue(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder,int)
cn.jzvd.demo.ActivityTinyWindowRecycleView$1: void onChildViewDetachedFromWindow(android.view.View)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener)
androidx.collection.LongSparseArray: long keyAt(int)
androidx.exifinterface.media.ExifInterface: long[] convertToLongArray(java.lang.Object)
androidx.appcompat.widget.TooltipCompatHandler: void setTooltipText(android.view.View,java.lang.CharSequence)
tv.danmaku.ijk.media.player.IjkMediaPlayer$OnMediaCodecSelectListener: java.lang.String onMediaCodecSelect(tv.danmaku.ijk.media.player.IMediaPlayer,java.lang.String,int,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchMultiWindowModeChanged(boolean)
com.google.android.exoplayer2.drm.DrmInitData: DrmInitData(com.google.android.exoplayer2.drm.DrmInitData$SchemeData[])
com.google.android.exoplayer2.text.ttml.TtmlStyle: boolean hasFontColor()
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1: android.os.ParcelFileDescriptor open(java.io.File)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery)
com.bumptech.glide.load.engine.Engine$LoadStatus: void cancel()
com.bumptech.glide.gifdecoder.GifHeaderParser: void readGraphicControlExt()
androidx.fragment.app.FragmentManagerImpl: void setPrimaryNavigationFragment(androidx.fragment.app.Fragment)
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: void onClick(android.content.DialogInterface,int)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: long getDurationUs()
com.bumptech.glide.request.target.ViewTarget: java.lang.String toString()
com.google.android.exoplayer2.metadata.Metadata: int describeContents()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.view.ActionProvider getSupportActionProvider()
com.google.android.exoplayer2.trackselection.TrackSelectionParameters: TrackSelectionParameters(java.lang.String,java.lang.String,int,boolean,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: int compareTo(java.lang.Object)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$InputStreamFactory: QMediaStoreUriLoader$InputStreamFactory(android.content.Context)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation,float)
androidx.appcompat.widget.ButtonBarLayout: void onMeasure(int,int)
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: <clinit>()
com.bumptech.glide.manager.FirstFrameWaiter: FirstFrameWaiter()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void access$100(com.google.android.exoplayer2.upstream.DefaultBandwidthMeter)
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3: GlideExecutor$UncaughtThrowableStrategy$3()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.core.view.OneShotPreDrawListener: boolean onPreDraw()
com.google.android.exoplayer2.metadata.Metadata$Entry: com.google.android.exoplayer2.Format getWrappedMetadataFormat()
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: boolean shouldSkipByte(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: boolean isDefined()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler getInstance()
com.bumptech.glide.load.engine.LockedResource: int getSize()
com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24: CryptoInfo$PatternHolderV24(android.media.MediaCodec$CryptoInfo)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void surfaceChanged(android.view.SurfaceHolder,int,int,int)
com.google.android.exoplayer2.text.subrip.SubripDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
com.bumptech.glide.manager.RequestManagerFragment: void setParentFragmentHint(android.app.Fragment)
androidx.appcompat.widget.SearchView: void onTextChanged(java.lang.CharSequence)
androidx.arch.core.executor.DefaultTaskExecutor: void postToMainThread(java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void offsetChildrenVertical(int)
android.support.v4.media.session.PlaybackStateCompatApi22: android.os.Bundle getExtras(java.lang.Object)
com.google.android.exoplayer2.text.subrip.SubripDecoder: java.lang.String processLine(java.lang.String,java.util.ArrayList)
com.google.android.exoplayer2.text.cea.CeaSubtitle: CeaSubtitle(java.util.List)
androidx.viewpager.widget.ViewPager: float distanceInfluenceForSnapDuration(float)
androidx.core.content.res.ResourcesCompat$FontCallback$1: ResourcesCompat$FontCallback$1(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean processOutputBuffer(long,long,android.media.MediaCodec,java.nio.ByteBuffer,int,int,long,boolean,boolean,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.Player$EventListener: void onRepeatModeChanged(int)
com.google.android.exoplayer2.util.Util: int binarySearchCeil(java.util.List,java.lang.Comparable,boolean,boolean)
cn.jzvd.demo.ActivityTinyWindow: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult,int)
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager: void cleanup()
com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException: UdpDataSource$UdpDataSourceException(java.io.IOException)
androidx.appcompat.view.menu.MenuItemImpl: void actionFormatChanged()
com.google.android.exoplayer2.metadata.Metadata$1: com.google.android.exoplayer2.metadata.Metadata[] newArray(int)
androidx.core.graphics.TypefaceCompatUtil: java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri)
com.google.android.exoplayer2.upstream.DataSource: java.util.Map getResponseHeaders()
com.google.android.exoplayer2.extractor.ogg.OggExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1: java.lang.Object create()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean wasReturnedFromScrap()
com.google.android.exoplayer2.extractor.ts.LatmReader: void parseFrameLength(com.google.android.exoplayer2.util.ParsableBitArray)
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: void release()
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View findFirstVisibleItemClosestToEnd(boolean)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmHandler: DefaultDrmSessionManager$MediaDrmHandler(com.google.android.exoplayer2.drm.DefaultDrmSessionManager,android.os.Looper)
androidx.core.widget.NestedScrollView: void onSecondaryPointerUp(android.view.MotionEvent)
androidx.collection.MapCollections: java.util.Set getEntrySet()
androidx.recyclerview.widget.GridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory: com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool)
androidx.core.provider.SelfDestructiveThread$3: void run()
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.Poolable create()
androidx.viewpager.widget.ViewPager: android.os.Parcelable onSaveInstanceState()
androidx.appcompat.widget.AppCompatCheckedTextView: void setTextAppearance(android.content.Context,int)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setChangingConfigurations(int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.source.hls.HlsMediaChunk getLastMediaChunk()
androidx.appcompat.widget.SearchView$SearchAutoComplete: boolean isEmpty()
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean parentCanNotifyCleared()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int updateFrames(android.graphics.drawable.AnimationDrawable,boolean)
androidx.core.content.res.GradientColorInflaterCompat$ColorStops: GradientColorInflaterCompat$ColorStops(java.util.List,java.util.List)
com.google.android.exoplayer2.metadata.id3.InternalFrame$1: java.lang.Object[] newArray(int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder: boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.hls.HlsChunkSource$InitializationTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,com.google.android.exoplayer2.source.chunk.MediaChunkIterator[])
cn.jzvd.demo.ActivityListViewMultiHolder: void onCreate(android.os.Bundle)
androidx.core.widget.NestedScrollView: void recycleVelocityTracker()
androidx.core.provider.FontsContractCompat$5: int compare(byte[],byte[])
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: void onCreate(android.os.Bundle)
androidx.core.view.KeyEventDispatcher: boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent)
android.support.v4.media.session.MediaSessionCompat$Token$1: android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isEnabled()
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.recyclerview.widget.LinearLayoutManager: void onRestoreInstanceState(android.os.Parcelable)
androidx.fragment.app.Fragment: void setAnimator(android.animation.Animator)
com.google.android.exoplayer2.extractor.ts.LatmReader: void packetFinished()
androidx.recyclerview.widget.RecyclerView$Adapter: void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
com.google.android.exoplayer2.extractor.ChunkIndex: long getDurationUs()
com.google.android.exoplayer2.util.ParsableByteArray: void reset(byte[],int)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.google.android.exoplayer2.util.ParsableByteArray: void skipBytes(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getVideoSarDen()
com.google.android.exoplayer2.source.SampleDataQueue: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
com.google.android.exoplayer2.audio.Sonic: short interpolate(short[],int,int,int)
androidx.fragment.app.FragmentTransitionImpl$1: FragmentTransitionImpl$1(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: boolean handles(android.net.Uri)
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel)
androidx.core.app.TaskStackBuilder: void startActivities()
com.google.android.exoplayer2.source.hls.HlsChunkSource: long resolveTimeToLiveEdgeUs(long)
com.bumptech.glide.load.engine.Jobs: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob)
com.google.android.exoplayer2.ui.SubtitlePainter: void setupTextLayout()
com.bumptech.glide.load.engine.SourceGenerator: void onDataReadyInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Object)
com.google.android.exoplayer2.extractor.ts.H265Reader: com.google.android.exoplayer2.Format parseMediaFormat(java.lang.String,com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer,com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer,com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer)
androidx.viewpager.widget.ViewPager: void enableLayers(boolean)
androidx.appcompat.widget.Toolbar: boolean showOverflowMenu()
androidx.appcompat.view.menu.ActionMenuItem: boolean isCheckable()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowMenuShowPending()
com.bumptech.glide.load.model.FileLoader: boolean handles(java.lang.Object)
cn.jzvd.demo.FragmentDemo$1: FragmentDemo$1(cn.jzvd.demo.FragmentDemo)
com.google.android.exoplayer2.trackselection.BaseTrackSelection$DecreasingBandwidthComparator: int compare(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader: void init(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.core.widget.NestedScrollView: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: AccessibilityNodeInfoCompat$AccessibilityActionCompat(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class)
androidx.appcompat.app.WindowDecorActionBar: void doShow(boolean)
com.google.android.exoplayer2.source.SampleDataQueue: long getTotalBytesWritten()
com.bumptech.glide.load.resource.gif.GifDrawable: void stopRunning()
androidx.arch.core.internal.SafeIterableMap$ListIterator: java.lang.Object next()
com.google.android.exoplayer2.util.ParsableByteArray: short readShort()
com.google.android.exoplayer2.source.SampleDataQueue: void readToBuffer(com.google.android.exoplayer2.decoder.DecoderInputBuffer,com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder)
androidx.fragment.app.Fragment: void performDetach()
com.google.android.exoplayer2.extractor.BinarySearchSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams createSeekParamsForTargetTimeUs(long)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: GroupedLinkedMap$LinkedEntry(java.lang.Object)
com.bumptech.glide.RequestBuilder$1: <clinit>()
com.bumptech.glide.signature.ObjectKey: boolean equals(java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)
androidx.fragment.app.FragmentPagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)
cn.jzvd.demo.ActivityPreloading: void clickStartVideoAfterPreloading(android.view.View)
androidx.appcompat.view.menu.MenuItemImpl: void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setColorFilter(int,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.GaplessInfoHolder: boolean setFromComment(java.lang.String)
com.danikula.videocache.HttpProxyCache: java.lang.String newResponseHeaders(com.danikula.videocache.GetRequest)
com.google.android.exoplayer2.extractor.mp4.Atom: int parseFullAtomVersion(int)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onExtrasChanged(android.os.Bundle)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioSessionId(int)
androidx.appcompat.widget.ListPopupWindow: void removePromptView()
com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject: DvbParser$RegionObject(int,int,int,int,int,int)
androidx.core.widget.CompoundButtonCompat: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
com.bumptech.glide.load.engine.SourceGenerator$1: void onDataReady(java.lang.Object)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: TrackSelectorResult(com.google.android.exoplayer2.RendererConfiguration[],com.google.android.exoplayer2.trackselection.TrackSelection[],java.lang.Object)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
com.google.android.exoplayer2.metadata.id3.MlltFrame$1: com.google.android.exoplayer2.metadata.id3.MlltFrame createFromParcel(android.os.Parcel)
androidx.appcompat.app.AlertController$ButtonHandler: AlertController$ButtonHandler(android.content.DialogInterface)
com.google.android.exoplayer2.audio.BaseAudioProcessor: void onQueueEndOfStream()
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.DataFetcherGenerator getNextGenerator()
androidx.appcompat.app.AppCompatViewInflater: android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)
com.bumptech.glide.load.model.UrlUriLoader: boolean handles(android.net.Uri)
androidx.appcompat.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[])
com.bumptech.glide.manager.RequestManagerFragment: android.app.Fragment getParentFragmentUsingHint()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int)
com.google.android.exoplayer2.MediaPeriodHolder: void continueLoading(long)
com.google.android.exoplayer2.metadata.id3.InternalFrame: <clinit>()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context)
androidx.versionedparcelable.VersionedParcelParcel: void writeCharSequence(java.lang.CharSequence)
com.google.android.exoplayer2.BaseRenderer: void setIndex(int)
com.bumptech.glide.provider.EncoderRegistry: void append(java.lang.Class,com.bumptech.glide.load.Encoder)
com.google.android.exoplayer2.source.ExtractorMediaSource: com.google.android.exoplayer2.source.MediaPeriod createPeriod(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.upstream.Allocator,long)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: void addObserver()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
androidx.appcompat.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: <clinit>()
androidx.appcompat.view.menu.CascadingMenuPopup$1: void onGlobalLayout()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void setAspectRatioListener(com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener)
androidx.appcompat.app.AppCompatDialog: AppCompatDialog(android.content.Context,int)
org.slf4j.LoggerFactory: void emitReplayWarning(int)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnVideoSizeChangedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener)
cn.jzvd.Jzvd: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.appcompat.view.menu.CascadingMenuPopup$3: CascadingMenuPopup$3(androidx.appcompat.view.menu.CascadingMenuPopup)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnVideoSizeChangedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void setFilterBitmap(boolean)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setActionProvider(android.view.ActionProvider)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: boolean hasFontColor()
com.bumptech.glide.request.target.CustomTarget: void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.Format access$302(com.google.android.exoplayer2.SimpleExoPlayer,com.google.android.exoplayer2.Format)
androidx.exifinterface.media.ExifInterface$ExifAttribute: int getIntValue(java.nio.ByteOrder)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$DefaultSeekTimestampConverter: BinarySearchSeeker$DefaultSeekTimestampConverter()
androidx.collection.ContainerHelpers: int binarySearch(int[],int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: int getItemId()
androidx.appcompat.widget.ActionBarOverlayLayout: boolean showOverflowMenu()
com.bumptech.glide.request.ThumbnailRequestCoordinator: void onRequestFailed(com.bumptech.glide.request.Request)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.ChapterFrame decodeChapterFrame(com.google.android.exoplayer2.util.ParsableByteArray,int,int,boolean,int,com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)
com.google.android.exoplayer2.decoder.SimpleDecoder: SimpleDecoder(com.google.android.exoplayer2.decoder.DecoderInputBuffer[],com.google.android.exoplayer2.decoder.OutputBuffer[])
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean areRendererDisabledFlagsEqual(android.util.SparseBooleanArray,android.util.SparseBooleanArray)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeThrowError(int)
androidx.core.content.res.FontResourcesParserCompat: void skip(org.xmlpull.v1.XmlPullParser)
androidx.appcompat.widget.SearchView$7: SearchView$7(androidx.appcompat.widget.SearchView)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setWrappedDrawable(android.graphics.drawable.Drawable)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry)
com.bumptech.glide.provider.ResourceDecoderRegistry: java.util.List getResourceClasses(java.lang.Class,java.lang.Class)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void downstreamFormatChanged(int,com.google.android.exoplayer2.Format,int,java.lang.Object,long)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void handleMessage(int,java.lang.Object)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int compareInts(int,int)
androidx.appcompat.widget.ResourcesWrapper: void getValue(int,android.util.TypedValue,boolean)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: DefaultImageHeaderParser()
com.google.android.exoplayer2.source.ClippingMediaPeriod: void discardBuffer(long,boolean)
androidx.appcompat.widget.ActionMenuView: void onMeasure(int,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams: StaggeredGridLayoutManager$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onError(int,int)
com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader: VorbisUtil$CommentHeader(java.lang.String,java.lang.String[],int)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: void writeToParcel(android.os.Parcel,int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: boolean isPlayable()
cn.jzvd.demo.CustomJzvd.JzvdStdTinyWindow: void gotoScreenTiny()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onSeekProcessed()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer: void initialize(android.media.MediaMetadataRetriever,java.lang.Object)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: StateListDrawable$StateListState(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasFocus()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setAlphabeticShortcut(char,int)
com.bumptech.glide.RequestManager: java.lang.String toString()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options)
androidx.core.content.res.ResourcesCompat$FontCallback$2: ResourcesCompat$FontCallback$2(androidx.core.content.res.ResourcesCompat$FontCallback,int)
com.google.android.exoplayer2.drm.DrmInitData$1: DrmInitData$1()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onPlaybackParametersChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.PlaybackParameters)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: boolean isRunning()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void trimMemory(int)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String buildBitrateString(com.google.android.exoplayer2.Format)
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: int getTrackType()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isReady()
org.slf4j.helpers.FormattingTuple: <clinit>()
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean shouldAdvancePlayingPeriod()
com.google.android.exoplayer2.text.dvb.DvbParser: com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition parsePageComposition(com.google.android.exoplayer2.util.ParsableBitArray,int)
com.google.android.exoplayer2.util.ConditionVariable: ConditionVariable()
com.bumptech.glide.gifdecoder.StandardGifDecoder: java.nio.ByteBuffer getData()
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: int getAvailableBufferSize(long)
android.support.v4.os.ResultReceiver$MyResultReceiver: ResultReceiver$MyResultReceiver(android.support.v4.os.ResultReceiver)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: <clinit>()
androidx.appcompat.app.AlertController: void setIcon(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initCubic(float,float,float,float)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy access$700(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
com.google.android.exoplayer2.text.TextRenderer: TextRenderer(com.google.android.exoplayer2.text.TextOutput,android.os.Looper)
com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo: com.google.android.exoplayer2.source.TrackGroupArray getTrackGroups(int)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: void offer()
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.appcompat.app.WindowDecorActionBar: void completeDeferredDestroyActionMode()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: ViewPropertyAnimatorCompatSet()
cn.jzvd.JZMediaSystem: void pause()
androidx.core.widget.ListViewAutoScrollHelper: ListViewAutoScrollHelper(android.widget.ListView)
com.google.android.exoplayer2.source.CompositeMediaSource$ForwardingEventListener: void onLoadCompleted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.source.MediaSourceEventListener$LoadEventInfo,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
com.google.android.exoplayer2.text.cea.CeaDecoder: void release()
androidx.appcompat.view.SupportMenuInflater$MenuState: void addItem()
androidx.fragment.app.Fragment: void onStop()
com.google.android.exoplayer2.audio.Ac4Util: int parseAc4SyncframeAudioSampleCount(java.nio.ByteBuffer)
com.google.android.exoplayer2.util.Util: long parseXsDateTime(java.lang.String)
androidx.core.widget.NestedScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)
com.google.android.exoplayer2.ExoPlayerImpl: void seekTo(int,long)
androidx.core.widget.NestedScrollView: void onRestoreInstanceState(android.os.Parcelable)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)
androidx.fragment.app.FragmentManagerImpl: void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int)
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: int getLayoutId()
androidx.versionedparcelable.VersionedParcelParcel: boolean readField(int)
androidx.arch.core.internal.SafeIterableMap$AscendingIterator: androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.widget.TextViewCompat: int getLastBaselineToBottomHeight(android.widget.TextView)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
org.slf4j.impl.AndroidLoggerFactory: AndroidLoggerFactory()
com.bumptech.glide.load.resource.gif.GifFrameLoader: void start()
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
com.google.android.exoplayer2.upstream.Loader: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction createRetryAction(boolean,long)
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1: void close(android.os.ParcelFileDescriptor)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: boolean isLevel1Element(int)
androidx.fragment.app.BackStackState: int describeContents()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnSeekCompleteListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnSeekCompleteListener)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean formatsMatch(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: <clinit>()
com.google.android.exoplayer2.util.SystemClock: long elapsedRealtime()
com.bumptech.glide.load.model.MultiModelLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: void stringElement(int,java.lang.String)
com.bumptech.glide.util.ExceptionPassthroughInputStream: void reset()
androidx.fragment.app.Fragment: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getChangingConfigurations()
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void access$100(com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder,com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.text.webvtt.CssParser: java.util.List parseBlock(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.view.menu.ActionMenuItem: char getNumericShortcut()
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void seek()
com.google.android.exoplayer2.util.Util: int getMobileNetworkType(android.net.NetworkInfo)
com.google.android.exoplayer2.util.TimedValueQueue: TimedValueQueue(int)
com.google.android.exoplayer2.extractor.ts.TsExtractor: boolean shouldConsumePacketPayload(int)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: void resolveMethod(android.content.Context)
androidx.lifecycle.LiveData: void onActive()
com.bumptech.glide.load.resource.bitmap.DrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)
androidx.core.text.PrecomputedTextCompat: androidx.core.text.PrecomputedTextCompat$Params getParams()
androidx.appcompat.app.AppCompatDelegateImpl: void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent)
com.bumptech.glide.util.ExceptionPassthroughInputStream: <clinit>()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: boolean isColorType(int)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult)
androidx.appcompat.widget.AppCompatCheckedTextView: AppCompatCheckedTextView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.util.Util: boolean isEncodingLinearPcm(int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation)
com.google.android.exoplayer2.text.ttml.TtmlNode: com.google.android.exoplayer2.text.ttml.TtmlNode getChild(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setFlags(int,int)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace valueOf(java.lang.String)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo$1: HlsTrackMetadataEntry$VariantInfo$1()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.metadata.id3.BinaryFrame: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void applyTheme(android.content.res.Resources$Theme)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean areSizeAndRateSupportedV21(android.media.MediaCodecInfo$VideoCapabilities,int,int,double)
com.google.android.exoplayer2.source.ProgressiveMediaSource: void releaseSourceInternal()
com.google.android.exoplayer2.video.DummySurface: void release()
androidx.appcompat.view.ActionBarPolicy: androidx.appcompat.view.ActionBarPolicy get(android.content.Context)
com.bumptech.glide.load.model.stream.UrlLoader: UrlLoader(com.bumptech.glide.load.model.ModelLoader)
androidx.viewpager.widget.ViewPager$SavedState$1: androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View getChildAt(int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isAudioChannelCountSupportedV21(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable()
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory: InternalCacheDiskCacheFactory(android.content.Context,java.lang.String,long)
com.google.android.exoplayer2.source.hls.HlsSampleStream: int skipData(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getOpacity()
androidx.appcompat.widget.ResourcesWrapper: ResourcesWrapper(android.content.res.Resources)
com.google.android.exoplayer2.util.TimedValueQueue: java.lang.Object poll(long,boolean)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
com.bumptech.glide.manager.RequestManagerFragment: void onStart()
cn.jzvd.Jzvd: void dismissVolumeDialog()
com.bumptech.glide.load.model.LazyHeaders: int hashCode()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: boolean isNoMoreThanHalfFull()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet,int)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationStart(android.view.animation.Animation)
tv.danmaku.ijk.media.player.IjkMediaPlayer$1: void loadLibrary(java.lang.String)
com.bumptech.glide.load.engine.Jobs: Jobs()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: boolean isNewerThan(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
com.bumptech.glide.load.engine.EngineJob: void notifyCallbacksOfException()
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setStartTime(long)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: int getMinimumHeight()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$Factory: com.google.android.exoplayer2.trackselection.TrackSelection[] createTrackSelections(com.google.android.exoplayer2.trackselection.TrackSelection$Definition[],com.google.android.exoplayer2.upstream.BandwidthMeter)
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.collection.LruCache: java.lang.String toString()
com.bumptech.glide.load.data.StreamLocalUriFetcher: java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver)
androidx.arch.core.internal.SafeIterableMap$ListIterator: SafeIterableMap$ListIterator(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry)
androidx.core.view.ActionProvider: boolean hasSubMenu()
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable getCurrent()
androidx.fragment.app.FragmentManagerImpl: void detachFragment(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.audio.DefaultAudioSink: void releaseKeepSessionIdAudioTrack()
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: void maybeConfigureRenderersForTunneling(com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo,int[][][],com.google.android.exoplayer2.RendererConfiguration[],com.google.android.exoplayer2.trackselection.TrackSelection[],int)
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: com.google.android.exoplayer2.extractor.ts.SeiReader buildSeiReader(com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)
com.google.android.exoplayer2.audio.AudioAttributes: android.media.AudioAttributes getAudioAttributesV21()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoadCompleted(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long)
cn.jzvd.Jzvd: void onError(int,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void queueInputBuffer(com.google.android.exoplayer2.text.SubtitleInputBuffer)
androidx.appcompat.widget.AppCompatImageHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton: boolean performClick()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: byte[] getEncryptionIvArray(java.lang.String)
androidx.appcompat.view.menu.MenuAdapter: void notifyDataSetChanged()
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory: UriLoader$FileDescriptorFactory(android.content.ContentResolver)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void maybeThrowError()
com.google.android.exoplayer2.ExoPlayerImpl$1: ExoPlayerImpl$1(com.google.android.exoplayer2.ExoPlayerImpl,android.os.Looper)
androidx.fragment.app.FragmentActivity: void onMultiWindowModeChanged(boolean)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getEndLine()
com.bumptech.glide.load.model.UnitModelLoader: boolean handles(java.lang.Object)
androidx.appcompat.view.menu.ListMenuPresenter: androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.Region getTransparentRegion()
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: void writeToParcel(android.os.Parcel,int)
cn.jzvd.Jzvd$JZAutoFullscreenListener: void onSensorChanged(android.hardware.SensorEvent)
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: TsPayloadReader$TrackIdGenerator(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getHeight()
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: int readNextSampleSize()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void resetListeners()
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getChildStart(android.view.View)
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: SimpleExoPlayer$ComponentListener(com.google.android.exoplayer2.SimpleExoPlayer)
com.google.android.exoplayer2.audio.DefaultAudioSink: void flushAudioProcessors()
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MissingSchemeDataException: DefaultDrmSessionManager$MissingSchemeDataException(java.util.UUID)
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist copyWithEndTag()
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment findFragmentByWho(java.lang.String)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle setFontColor(int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.lang.String replaceVariableReferences(java.lang.String,java.util.Map)
com.google.android.exoplayer2.video.VideoRendererEventListener: void onVideoDecoderInitialized(java.lang.String,long,long)
androidx.appcompat.graphics.drawable.DrawableContainer: int getCurrentIndex()
com.google.android.exoplayer2.extractor.mp4.Atom: java.lang.String getAtomTypeString(int)
com.bumptech.glide.disklrucache.DiskLruCache$Editor: void abort()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor: void queueInput(java.nio.ByteBuffer)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void invalidateSpanAssignments()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo: AnalyticsCollector$MediaPeriodInfo(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.Timeline,int)
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer: CeaDecoder$CeaInputBuffer(com.google.android.exoplayer2.text.cea.CeaDecoder$1)
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat onConfigure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key: int hashCode()
com.google.android.exoplayer2.extractor.ts.TsExtractor: int access$100(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.appcompat.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)
com.google.android.exoplayer2.source.SampleQueue: boolean setUpstreamFormat(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed: void run()
androidx.appcompat.graphics.drawable.DrawableContainer: void animate(boolean)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void seek(long,long)
androidx.appcompat.widget.SearchView$1: SearchView$1(androidx.appcompat.widget.SearchView)
com.bumptech.glide.load.model.UrlUriLoader: UrlUriLoader(com.bumptech.glide.load.model.ModelLoader)
androidx.fragment.app.FragmentController: boolean dispatchPrepareOptionsMenu(android.view.Menu)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateLoadControlTrackSelection(com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean isInTouchMode()
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: int derivePositionAnchor(int)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo newPassthroughInstance(java.lang.String)
cn.jzvd.JzvdStd: void setScreenFullscreen()
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)
com.google.android.exoplayer2.Format: <clinit>()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel)
androidx.appcompat.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)
com.bumptech.glide.load.engine.ActiveResources: ActiveResources(boolean,java.util.concurrent.Executor)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void addListener(com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistEventListener)
com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate: TtmlDecoder$FrameAndTickRate(float,int,int)
com.google.android.exoplayer2.source.CompositeMediaSource: int getWindowIndexForChildWindowIndex(java.lang.Object,int)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: void startSeek(long)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool: SizeConfigStrategy$KeyPool()
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource)
com.bumptech.glide.util.Util: int hashCode(float,int)
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.google.android.exoplayer2.audio.AudioRendererEventListener: void onAudioSessionId(int)
com.google.android.exoplayer2.metadata.MetadataRenderer: void onDisabled()
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getTtcIndex()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: AppCompatSpinner$DropdownPopup(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int)
androidx.fragment.app.FragmentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isNewSubtitleDataAvailable()
com.google.android.exoplayer2.extractor.ts.TsExtractor: void resetPayloadReaders()
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedBottom(android.view.View)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void setSurface(android.view.Surface)
androidx.core.graphics.drawable.DrawableCompat: boolean isAutoMirrored(android.graphics.drawable.Drawable)
tv.danmaku.ijk.media.player.IMediaPlayer: void setDataSource(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(androidx.appcompat.app.ActionBar$LayoutParams)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder clone()
androidx.appcompat.view.menu.MenuBuilder: android.content.res.Resources getResources()
com.google.android.exoplayer2.upstream.Loader: void release(com.google.android.exoplayer2.upstream.Loader$ReleaseCallback)
androidx.appcompat.view.menu.MenuPopupHelper: boolean isShowing()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
androidx.appcompat.graphics.drawable.StateListDrawable: int[] extractStateSet(android.util.AttributeSet)
androidx.customview.view.AbsSavedState$2: AbsSavedState$2()
com.google.android.exoplayer2.extractor.mp4.TrackFragment: long getSamplePresentationTime(int)
androidx.fragment.app.FragmentController: void dispatchLowMemory()
android.support.v4.media.session.MediaSessionCompat$Token$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.DefaultLoadControl: void reset(boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean getCodecNeedsEosPropagation()
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory: MultiModelLoaderFactory$Factory()
com.google.android.exoplayer2.decoder.CryptoInfo: void set(int,int[],int[],byte[],byte[],int,int,int)
androidx.appcompat.widget.ActionMenuPresenter: void setReserveOverflow(boolean)
androidx.appcompat.view.menu.MenuPopupHelper: MenuPopupHelper(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: com.google.android.exoplayer2.text.SubtitleInputBuffer dequeueInputBuffer()
com.danikula.videocache.file.LruDiskUsage$TouchCallable: java.lang.Void call()
com.bumptech.glide.load.resource.SimpleResource: void recycle()
com.bumptech.glide.load.data.InputStreamRewinder$Factory: com.bumptech.glide.load.data.DataRewinder build(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoaderReleased()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: MatroskaExtractor$InnerEbmlProcessor(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)
cn.jzvd.JZMediaInterface: void pause()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setHotspotBounds(int,int,int,int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long access$400(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams)
com.bumptech.glide.Glide: com.bumptech.glide.RequestManager with(androidx.fragment.app.FragmentActivity)
com.bumptech.glide.load.engine.LockedResource: LockedResource()
androidx.fragment.app.FragmentPagerAdapter: void finishUpdate(android.view.ViewGroup)
androidx.core.provider.FontsContractCompat$FontFamilyResult: androidx.core.provider.FontsContractCompat$FontInfo[] getFonts()
com.google.android.exoplayer2.text.pgs.PgsSubtitle: long getEventTime(int)
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher: android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: int getSize()
androidx.appcompat.widget.ActionBarOverlayLayout: void postRemoveActionBarHideOffset()
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache: byte[] remove(android.net.Uri)
com.google.android.exoplayer2.extractor.ogg.OggPacket: boolean populate(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: AttributeStrategy()
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: int readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: boolean isCompressed(java.net.HttpURLConnection)
com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
com.bumptech.glide.load.engine.EngineKey: java.lang.String toString()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean hasTranslucentRoot()
androidx.appcompat.widget.ListPopupWindow: void setInputMethodMode(int)
androidx.appcompat.widget.LinearLayoutCompat: void measureHorizontal(int,int)
androidx.appcompat.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
com.bumptech.glide.manager.RequestManagerFragment: void onStop()
androidx.collection.SimpleArrayMap: void freeArrays(int[],java.lang.Object[],int)
com.danikula.videocache.HttpProxyCacheServer: void closeSocket(java.net.Socket)
androidx.recyclerview.widget.RecyclerView: void recoverFocusFromState()
android.support.v4.os.ResultReceiver$1: android.support.v4.os.ResultReceiver[] newArray(int)
androidx.fragment.app.FragmentManagerViewModel: boolean shouldDestroy(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.text.cea.CeaDecoder: void queueInputBuffer(com.google.android.exoplayer2.text.SubtitleInputBuffer)
com.bumptech.glide.load.engine.DiskCacheStrategy$2: boolean isDataCacheable(com.bumptech.glide.load.DataSource)
androidx.fragment.app.FragmentPagerAdapter: void startUpdate(android.view.ViewGroup)
com.bumptech.glide.RequestManager: java.util.List getDefaultRequestListeners()
androidx.collection.ArraySet$1: int colIndexOfKey(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionCollapse(android.view.MenuItem)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions override(int,int)
tv.danmaku.ijk.media.player.IMediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addView(android.view.View,int)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment)
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int)
com.google.android.exoplayer2.source.SampleQueue: int advanceTo(long)
androidx.core.widget.NestedScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)
androidx.appcompat.view.StandaloneActionMode: void invalidate()
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$Formatter: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.lifecycle.LiveData: LiveData()
com.bumptech.glide.util.Util: void removeCallbacksOnUiThread(java.lang.Runnable)
com.google.android.exoplayer2.metadata.flac.PictureFrame: int hashCode()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoadCompleted(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long)
com.google.android.exoplayer2.extractor.ts.Ac3Reader: Ac3Reader(java.lang.String)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: void mutate()
com.bumptech.glide.gifdecoder.StandardGifDecoder: StandardGifDecoder(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int)
android.support.v4.media.session.MediaSessionCompat$QueueItem: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: MediaCodecUtil$MediaCodecListCompatV16(com.google.android.exoplayer2.mediacodec.MediaCodecUtil$1)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: void removeObserverInternal()
com.google.android.exoplayer2.Timeline$Window: com.google.android.exoplayer2.Timeline$Window set(java.lang.Object,java.lang.Object,java.lang.Object,long,long,boolean,boolean,boolean,long,long,int,int,long)
androidx.core.view.accessibility.AccessibilityEventCompat: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
androidx.appcompat.view.menu.ActionMenuItem: char getAlphabeticShortcut()
com.google.android.exoplayer2.metadata.id3.GeobFrame$1: com.google.android.exoplayer2.metadata.id3.GeobFrame createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ForwardingListener: boolean onTouchObserved(android.view.MotionEvent)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int peek(byte[],int,int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: void reverse()
com.google.android.exoplayer2.extractor.ts.H262Reader: H262Reader(com.google.android.exoplayer2.extractor.ts.UserDataReader)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithDrmInitData(com.google.android.exoplayer2.drm.DrmInitData)
cn.jzvd.demo.CustomMedia.JZMediaIjk: long getDuration()
androidx.recyclerview.widget.RecyclerView: void requestChildFocus(android.view.View,android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
com.bumptech.glide.load.engine.GlideException: void appendCausesWrapped(java.util.List,java.lang.Appendable)
cn.jzvd.JzvdStd: void onStatePlaying()
com.google.android.exoplayer2.extractor.MpegAudioHeader: boolean populateHeader(int,com.google.android.exoplayer2.extractor.MpegAudioHeader)
androidx.fragment.app.FragmentManagerImpl: void endAnimatingAwayFragments()
com.bumptech.glide.util.Util: int hashCode(float)
androidx.appcompat.view.menu.MenuItemImpl: java.lang.String getShortcutLabel()
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.text.TextRenderer: void clearOutput()
androidx.core.provider.SelfDestructiveThread: void onInvokeRunnable(java.lang.Runnable)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.lang.String access$1200(com.google.android.exoplayer2.source.ProgressiveMediaPeriod)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)
cn.jzvd.demo.ActivityPreloading: ActivityPreloading()
androidx.lifecycle.LiveData$LifecycleBoundObserver: void detachObserver()
androidx.appcompat.graphics.drawable.DrawableContainer: int getOpacity()
com.google.android.exoplayer2.upstream.DefaultDataSource: void addListenersToDataSource(com.google.android.exoplayer2.upstream.DataSource)
com.bumptech.glide.load.resource.bytes.BytesResource: java.lang.Class getResourceClass()
com.bumptech.glide.load.model.FileLoader$StreamFactory: FileLoader$StreamFactory()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getTooltipText()
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate: SearchView$UpdatableTouchDelegate(android.graphics.Rect,android.graphics.Rect,android.view.View)
androidx.appcompat.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: long getCurrentPosition()
com.google.android.exoplayer2.text.ttml.TtmlDecoder$TtsExtent: TtmlDecoder$TtsExtent(int,int)
androidx.recyclerview.widget.OrientationHelper$2: int getTransformedStartWithDecoration(android.view.View)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.util.regex.Pattern compileBooleanAttrPattern(java.lang.String)
com.bumptech.glide.Registry: com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser)
androidx.appcompat.widget.AppCompatButton: void onTextChanged(java.lang.CharSequence,int,int,int)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.audio.DefaultAudioSink: void pause()
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: ImageDecoderResourceDecoder$1(com.bumptech.glide.load.resource.ImageDecoderResourceDecoder,int,int,boolean,com.bumptech.glide.load.DecodeFormat,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.PreferredColorSpace)
com.google.android.exoplayer2.audio.AudioTimestampPoller: long getTimestampSystemTimeUs()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void reset()
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: <clinit>()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer: void initialize(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$6: IjkMediaFormat$6(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
cn.jzvd.demo.ActivityTinyWindowRecycleView: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.drm.DefaultDrmSession$UnexpectedDrmSessionException: DefaultDrmSession$UnexpectedDrmSessionException(java.lang.Throwable)
com.bumptech.glide.load.engine.DiskCacheStrategy$3: boolean decodeCachedData()
androidx.appcompat.widget.AppCompatBackgroundHelper: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDrmSessionManagerError(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,java.lang.Exception)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.bumptech.glide.Registry: com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
com.google.android.exoplayer2.ExoPlayerFactory: com.google.android.exoplayer2.SimpleExoPlayer newSimpleInstance(android.content.Context,com.google.android.exoplayer2.RenderersFactory,com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.LoadControl)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: DefaultBandwidthMeter(android.content.Context,android.util.SparseArray,int,com.google.android.exoplayer2.util.Clock,boolean)
com.google.android.exoplayer2.Format: int getPixelCount()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onQueueTitleChanged(java.lang.CharSequence)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void enterReadingAtomHeaderState()
com.danikula.videocache.file.Md5FileNameGenerator: java.lang.String getExtension(java.lang.String)
com.bumptech.glide.load.model.FileLoader$StreamFactory$1: void close(java.lang.Object)
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isDimensionValid(int)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver: void onReceiveResult(int,android.os.Bundle)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: FragmentedMp4Extractor()
cn.jzvd.demo.ActivityApi: void clickOrientation(android.view.View)
cn.jzvd.demo.ActivityListViewRecyclerView: ActivityListViewRecyclerView()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getPaddingRight()
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionCancel(android.transition.Transition)
com.google.android.exoplayer2.SimpleExoPlayer: long getContentPosition()
com.google.android.exoplayer2.upstream.Loader: <clinit>()
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: SeekMap$Unseekable(long)
com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion: DvbParser$PageRegion(int,int)
com.bumptech.glide.load.model.MultiModelLoaderFactory: com.bumptech.glide.load.model.ModelLoader emptyModelLoader()
com.google.android.exoplayer2.audio.DtsUtil: int parseDtsAudioSampleCount(java.nio.ByteBuffer)
com.bumptech.glide.load.data.StreamAssetPathFetcher: void close(java.lang.Object)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.model.ModelLoader$LoadData buildDelegateData()
androidx.viewpager.widget.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void resetListeners()
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmEventListener: DefaultDrmSessionManager$MediaDrmEventListener(com.google.android.exoplayer2.drm.DefaultDrmSessionManager,com.google.android.exoplayer2.drm.DefaultDrmSessionManager$1)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: MediaCodecInfo(java.lang.String,java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities,boolean,boolean,boolean,boolean,boolean,boolean)
androidx.appcompat.widget.AppCompatDrawableManager: void onConfigurationChanged(android.content.Context)
com.google.android.exoplayer2.util.Util: android.os.Looper getLooper()
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable: RecyclerView$AdapterDataObservable()
com.google.android.exoplayer2.source.ads.AdPlaybackState$AdGroup: AdPlaybackState$AdGroup(int,int[],android.net.Uri[],long[])
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void clearReportedVideoSize()
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: MediaSource$MediaPeriodId(java.lang.Object,long,int)
com.danikula.videocache.file.Files$LastModifiedComparator: int compare(java.io.File,java.io.File)
com.google.android.exoplayer2.source.SampleQueue: void discardTo(long,boolean,boolean)
cn.jzvd.demo.ActivityDirectPlay: void clickTinyWindow(android.view.View)
androidx.core.widget.NestedScrollView: boolean isViewDescendantOf(android.view.View,android.view.View)
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.drawable.Drawable$ConstantState getConstantState()
androidx.appcompat.widget.AppCompatTextView: void onLayout(boolean,int,int,int,int)
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeFocusCompat(int,android.view.View)
com.bumptech.glide.load.engine.EngineKey: EngineKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.google.android.exoplayer2.source.hls.WebvttExtractor: com.google.android.exoplayer2.extractor.TrackOutput buildTrackOutput(long)
androidx.core.content.res.ColorStateListInflaterCompat: android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.viewpager.widget.ViewPager: void removeNonDecorViews()
com.google.android.exoplayer2.extractor.ts.Ac3Reader: Ac3Reader()
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: LinearLayoutManager$SavedState$1()
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onVideoSizeChanged(android.media.MediaPlayer,int,int)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onAudioDisabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.viewpager.widget.ViewPager: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
com.google.android.exoplayer2.util.TraceUtil: void endSection()
com.bumptech.glide.util.Util: java.lang.String sha256BytesToHex(byte[])
com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler: void handleMessage(android.os.Message)
androidx.appcompat.app.AlertController: void installContent()
com.google.android.exoplayer2.text.ttml.TtmlNode: java.util.List getCues(long,java.util.Map,java.util.Map,java.util.Map)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.collection.ArraySet$1: void colPut(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void drawableStateChanged()
com.google.android.exoplayer2.ExoPlayerImplInternal: void notifyTrackSelectionDiscontinuity()
androidx.customview.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.resource.gif.GifDrawable: int getOpacity()
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setFontSize(float)
androidx.recyclerview.widget.LinearLayoutManager: void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: void onPlaybackSpeed(float)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper: boolean onMenuItemActionExpand(android.view.MenuItem)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.drm.DrmSessionManager: com.google.android.exoplayer2.drm.DrmSession acquirePlaceholderSession(android.os.Looper,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: <clinit>()
org.slf4j.event.Level: java.lang.String toString()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void configureCodec(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,android.media.MediaCodec,com.google.android.exoplayer2.Format,android.media.MediaCrypto,float)
tv.danmaku.ijk.media.player.IjkMediaPlayer$EventHandler: void handleMessage(android.os.Message)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: android.media.AudioTrack buildAudioTrack(boolean,com.google.android.exoplayer2.audio.AudioAttributes,int)
com.google.android.exoplayer2.MediaPeriodHolder: void setNext(com.google.android.exoplayer2.MediaPeriodHolder)
org.slf4j.helpers.Util: java.lang.String safeGetSystemProperty(java.lang.String)
com.bumptech.glide.load.data.mediastore.FileService: boolean exists(java.io.File)
androidx.recyclerview.widget.ViewBoundsCheck: boolean isViewWithinBoundFlags(android.view.View,int)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void onBoundsChange(android.graphics.Rect)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.nio.ByteBuffer getInputBuffer(int)
com.google.android.exoplayer2.extractor.ogg.VorbisReader: int readBits(byte,int,int)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onQueueChanged(java.util.List)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter)
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.fragment.app.FragmentManagerState$1: androidx.fragment.app.FragmentManagerState[] newArray(int)
com.google.android.exoplayer2.decoder.SimpleDecoder: void maybeNotifyDecodeLoop()
androidx.appcompat.graphics.drawable.DrawableContainer: int getMinimumWidth()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: int getAudioSessionId()
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(int,int)
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder: boolean handles(android.graphics.drawable.Drawable,com.bumptech.glide.load.Options)
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean parentCanNotifyStatusChanged()
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery: <clinit>()
androidx.appcompat.widget.TintTypedArray: boolean hasValue(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void append(char)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean isChecked()
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.resource.file.FileDecoder: boolean handles(java.io.File,com.bumptech.glide.load.Options)
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery: android.database.Cursor query(android.net.Uri)
com.google.android.exoplayer2.ExoPlayerImpl: int getPlaybackState()
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: com.google.android.exoplayer2.extractor.SeekMap createSeekMap()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setShortcut(char,char)
cn.jzvd.JZTextureView: JZTextureView(android.content.Context)
androidx.appcompat.graphics.drawable.DrawableWrapper: int[] getState()
com.google.android.exoplayer2.util.GlUtil: boolean isProtectedContentExtensionSupported(android.content.Context)
com.bumptech.glide.request.BaseRequestOptions: int getErrorId()
com.google.android.exoplayer2.text.ttml.TtmlStyle: float getFontSize()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.fragment.app.FragmentTransitionCompat21$3: void onTransitionStart(android.transition.Transition)
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: MediaSource$MediaPeriodId(java.lang.Object,int,int,long,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()
com.bumptech.glide.manager.RequestManagerFragment: void registerFragmentWithRoot(android.app.Activity)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
tv.danmaku.ijk.media.player.pragma.DebugLog: void w(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onNewExtractor()
tv.danmaku.ijk.media.player.misc.IMediaFormat: java.lang.String getString(java.lang.String)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config)
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup: void invalidateSpanIndexCache()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean readAtomPayload(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: void init(int,long)
androidx.appcompat.view.menu.MenuItemImpl: int getAlphabeticModifiers()
androidx.viewpager.widget.ViewPager$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
androidx.core.app.ActivityRecreator: java.lang.reflect.Field getMainThreadField()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean onPlaylistError(android.net.Uri,long)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLayoutDirectionChanged(int)
com.bumptech.glide.load.model.StringLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.upstream.StatsDataSource: android.net.Uri getUri()
androidx.appcompat.widget.ToolbarWidgetWrapper: void dismissPopupMenus()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: long getBufferedPositionUs()
com.google.android.exoplayer2.extractor.ogg.OpusReader: long preparePayload(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.engine.LockedResource: <clinit>()
androidx.appcompat.view.menu.CascadingMenuPopup: void addMenu(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.danikula.videocache.HttpProxyCacheServer: java.lang.String appendToProxyUrl(java.lang.String)
androidx.fragment.app.BackStackRecord: boolean interactsWith(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setAllRendererStreamsFinal()
com.google.android.exoplayer2.metadata.flac.VorbisComment$1: VorbisComment$1()
com.google.android.exoplayer2.metadata.id3.ApicFrame$1: ApicFrame$1()
com.bumptech.glide.RequestManager: com.bumptech.glide.RequestBuilder as(java.lang.Class)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean isEnded()
com.danikula.videocache.HttpProxyCacheServer$WaitRequestsRunnable: HttpProxyCacheServer$WaitRequestsRunnable(com.danikula.videocache.HttpProxyCacheServer,java.util.concurrent.CountDownLatch)
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.appcompat.widget.ActionMenuPresenter: android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.ListPopupWindow: void setPromptPosition(int)
androidx.arch.core.executor.ArchTaskExecutor$2: void execute(java.lang.Runnable)
com.google.android.exoplayer2.util.ParsableByteArray: int readUnsignedInt24()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onVideoSizeChanged(int,int,int,float)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: boolean isBlacklisted(int,long)
com.google.android.exoplayer2.upstream.BaseDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(int)
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getContentDataSource()
androidx.core.view.KeyEventDispatcher: android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog)
com.bumptech.glide.disklrucache.DiskLruCache$Editor: java.io.File getFile(int)
androidx.appcompat.view.menu.StandardMenuPopup: boolean tryShow()
androidx.collection.MapCollections$KeySet: int size()
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int)
com.danikula.videocache.Config: Config(java.io.File,com.danikula.videocache.file.FileNameGenerator,com.danikula.videocache.file.DiskUsage,com.danikula.videocache.sourcestorage.SourceInfoStorage)
com.google.android.exoplayer2.ExoPlayerImplInternal: void updateTrackSelectionPlaybackSpeed(float)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodHolder getReadingPeriod()
androidx.appcompat.widget.AppCompatTextHelper: void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface)
cn.jzvd.demo.ActivityApiRotationVideoSize: void onPause()
com.bumptech.glide.load.engine.DataCacheWriter: DataCacheWriter(com.bumptech.glide.load.Encoder,java.lang.Object,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void onLoadCompleted(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long)
com.google.android.exoplayer2.text.dvb.DvbParser: DvbParser(int,int)
com.google.android.exoplayer2.video.DummySurface: int getSecureMode(android.content.Context)
com.bumptech.glide.GlideExperiments$Builder: GlideExperiments$Builder()
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.exoplayer2.Player$EventListener: void onLoadingChanged(boolean)
com.bumptech.glide.load.data.HttpUrlFetcher: HttpUrlFetcher(com.bumptech.glide.load.model.GlideUrl,int)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: int describeContents()
cn.jzvd.demo.ActivityApi: void clickRotationAndVideoSize(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: int describeContents()
androidx.appcompat.view.menu.MenuItemImpl: boolean invoke()
androidx.appcompat.view.menu.MenuPopup: boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void applyTheme(android.content.res.Resources$Theme)
com.google.android.exoplayer2.ui.SubtitleView: void onCues(java.util.List)
com.danikula.videocache.HttpProxyCacheServerClients: void finishProcessRequest()
com.google.android.exoplayer2.upstream.UdpDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int getFrameSizeInBytes(int)
androidx.appcompat.view.menu.BaseMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer: VideoDecoder$AssetFileDescriptorInitializer()
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo: int describeContents()
com.google.android.exoplayer2.ui.SubtitleView: void dispatchDraw(android.graphics.Canvas)
com.google.android.exoplayer2.ExoPlayerImpl: void invokeAll(java.util.concurrent.CopyOnWriteArrayList,com.google.android.exoplayer2.BasePlayer$ListenerInvocation)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
androidx.cursoradapter.widget.ResourceCursorAdapter: ResourceCursorAdapter(android.content.Context,int,android.database.Cursor,boolean)
androidx.appcompat.view.ActionMode: ActionMode()
androidx.core.widget.AutoScrollHelper$ClampedScroller: int getDeltaY()
com.google.android.exoplayer2.MediaPeriodQueue: boolean updateRepeatMode(int)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void output(byte[],int)
androidx.core.widget.ImageViewCompat: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void initQuad(float,float)
com.google.android.exoplayer2.source.SampleQueue: boolean attemptSplice(long)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int)
androidx.fragment.app.Fragment: androidx.fragment.app.Fragment getTargetFragment()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createVideoSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,float,java.util.List,int,float,byte[],int,com.google.android.exoplayer2.video.ColorInfo,com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.resource.gif.GifOptions: <clinit>()
androidx.appcompat.widget.TooltipCompatHandler: boolean updateAnchorPos(android.view.MotionEvent)
com.google.android.exoplayer2.DefaultLoadControl: DefaultLoadControl(com.google.android.exoplayer2.upstream.DefaultAllocator,int,int,int,int,int,int,boolean,int,boolean)
com.bumptech.glide.load.engine.DecodeJob: int getPriority()
com.google.android.exoplayer2.extractor.ogg.StreamReader: long convertGranuleToTime(long)
com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData: StreamReader$SetupData()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)
androidx.recyclerview.widget.RecyclerView$SavedState$1: androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader)
android.support.v4.media.session.PlaybackStateCompat$CustomAction: PlaybackStateCompat$CustomAction(java.lang.String,java.lang.CharSequence,int,android.os.Bundle)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: void reset()
androidx.appcompat.app.AlertController$5: void run()
com.google.android.exoplayer2.text.webvtt.WebvttDecoder: void skipComment(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.Id3Reader: Id3Reader()
androidx.viewpager.widget.ViewPager: boolean dispatchKeyEvent(android.view.KeyEvent)
com.google.android.exoplayer2.audio.Ac3Util: com.google.android.exoplayer2.Format parseAc3AnnexFFormat(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.String,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.engine.EngineResource: java.lang.Class getResourceClass()
com.bumptech.glide.load.engine.LockedResource$1: LockedResource$1()
com.google.android.exoplayer2.util.ParsableByteArray: long readLittleEndianLong()
androidx.collection.ArraySet: boolean remove(java.lang.Object)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setPaneTitle(java.lang.CharSequence)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handlePeriodPrepared(com.google.android.exoplayer2.source.MediaPeriod)
androidx.recyclerview.widget.RecyclerView: void onMeasure(int,int)
tv.danmaku.ijk.media.player.IjkMediaMeta: java.lang.String getDurationInline()
com.google.android.exoplayer2.extractor.ogg.OggPageHeader: OggPageHeader()
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: void appendToNalUnit(byte[],int,int)
com.google.android.exoplayer2.extractor.ts.PesReader: void setState(int)
androidx.activity.ImmLeaksCleaner: ImmLeaksCleaner(android.app.Activity)
androidx.appcompat.widget.SearchView: void onMeasure(int,int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$ParametersBuilder: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters build()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
com.bumptech.glide.load.engine.Engine$EngineJobFactory: com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean)
androidx.core.widget.ListViewAutoScrollHelper: boolean canTargetScrollVertically(int)
androidx.core.text.PrecomputedTextCompat$Params: boolean equals(java.lang.Object)
com.google.android.exoplayer2.BaseRenderer: BaseRenderer(int)
com.google.android.exoplayer2.audio.Sonic: int findPitchPeriodInRange(short[],int,int,int)
com.bumptech.glide.load.resource.bitmap.ImageReader$InputStreamImageReader: ImageReader$InputStreamImageReader(java.io.InputStream,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams()
com.google.android.exoplayer2.audio.DefaultAudioSink: boolean handleBuffer(java.nio.ByteBuffer,long)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: boolean isSeekable()
androidx.collection.MapCollections$KeySet: boolean addAll(java.util.Collection)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getMinimumWidth()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: com.bumptech.glide.load.DataSource getDataSource()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: com.google.android.exoplayer2.extractor.TrackOutput track(int,int)
androidx.appcompat.widget.SuggestionsAdapter: void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: boolean equals(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: void stop()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void invalidateDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.android.exoplayer2.source.SampleQueue: com.google.android.exoplayer2.Format getAdjustedUpstreamFormat(com.google.android.exoplayer2.Format)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: Mp4Extractor()
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.appcompat.widget.SearchView: boolean launchSuggestion(int,int,java.lang.String)
com.bumptech.glide.load.engine.DiskCacheStrategy$3: boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy)
androidx.appcompat.widget.ActionMenuPresenter: boolean hideOverflowMenu()
com.google.android.exoplayer2.metadata.id3.CommentFrame: void writeToParcel(android.os.Parcel,int)
androidx.core.text.PrecomputedTextCompat: int getSpanEnd(java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: void reset()
androidx.appcompat.view.menu.ActionMenuItem: boolean isChecked()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void maybeNotifyRenderedFirstFrame()
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence)
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.lang.String getProfileLevelName(int,int)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void assertNotHardwareConfig(android.graphics.Bitmap$Config)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor createFragmentedMp4Extractor(com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.Format,java.util.List)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder: boolean isSupported()
com.google.android.exoplayer2.extractor.mkv.VarintReader: <clinit>()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspot(float,float)
androidx.appcompat.view.menu.MenuPopupHelper$1: MenuPopupHelper$1(androidx.appcompat.view.menu.MenuPopupHelper)
org.slf4j.event.EventRecodingLogger: void recordEvent(org.slf4j.event.Level,org.slf4j.Marker,java.lang.String,java.lang.Object[],java.lang.Throwable)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.bumptech.glide.disklrucache.DiskLruCache: void readJournalLine(java.lang.String)
cn.jzvd.demo.ActivityListViewFragmentViewPager: void onPause()
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand parseFromSection(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.util.TimestampAdjuster)
com.google.android.exoplayer2.Format$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: ProgressiveMediaPeriod$SampleStreamImpl(com.google.android.exoplayer2.source.ProgressiveMediaPeriod,int)
androidx.recyclerview.widget.RecyclerView: long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.lifecycle.Lifecycling: <clinit>()
com.google.android.exoplayer2.upstream.DataSchemeDataSource: int read(byte[],int,int)
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.MenuItemImpl$1: void onActionProviderVisibilityChanged(boolean)
com.google.android.exoplayer2.extractor.PositionHolder: PositionHolder()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: com.google.android.exoplayer2.upstream.TransferListener getTransferListener()
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onSeekComplete(android.media.MediaPlayer)
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame$1: TextInformationFrame$1()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onPlaybackParametersChanged(com.google.android.exoplayer2.PlaybackParameters)
cn.jzvd.demo.ActivityApiCustomMedia: ActivityApiCustomMedia()
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: AtomParsers$Stz2SampleSizeBox(com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom)
com.google.android.exoplayer2.ExoPlayerImplInternal: void stopRenderers()
androidx.appcompat.view.menu.ListMenuPresenter: ListMenuPresenter(android.content.Context,int)
com.google.android.exoplayer2.extractor.wav.WavExtractor: void seek(long,long)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitle(int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: long getInitialStartTimeUs()
androidx.appcompat.view.menu.MenuPopupHelper: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: boolean secureDecodersExplicit()
com.bumptech.glide.request.ErrorRequestCoordinator: boolean canSetImage(com.bumptech.glide.request.Request)
com.bumptech.glide.load.resource.bitmap.ParcelFileDescriptorBitmapDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
com.google.android.exoplayer2.metadata.id3.InternalFrame$1: com.google.android.exoplayer2.metadata.id3.InternalFrame[] newArray(int)
com.google.android.exoplayer2.extractor.ogg.FlacReader: boolean verifyBitstreamType(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.manager.TargetTracker: void onStart()
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: void setChannelMap(int[])
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void calculateCachedStart()
com.google.android.exoplayer2.drm.DrmInitData$1: com.google.android.exoplayer2.drm.DrmInitData[] newArray(int)
androidx.appcompat.widget.FitWindowsLinearLayout: boolean fitSystemWindows(android.graphics.Rect)
androidx.collection.ArraySet$1: void colClear()
com.google.android.exoplayer2.upstream.Loader: java.util.concurrent.ExecutorService access$500(com.google.android.exoplayer2.upstream.Loader)
androidx.core.widget.NestedScrollView: void stopNestedScroll()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
cn.jzvd.demo.FragmentDemo$1: void onScrollStateChanged(android.widget.AbsListView,int)
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: boolean isSet(int)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: HlsPlaylistParser()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onAudioDisabled(com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.util.ParsableBitArray: void assertValidOffset()
androidx.appcompat.app.AppCompatDelegateImpl: boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState)
cn.jzvd.Jzvd: long getCurrentPositionWhenPlaying()
androidx.activity.OnBackPressedDispatcher: androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)
androidx.recyclerview.widget.RecyclerView: void onDraw(android.graphics.Canvas)
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[])
com.bumptech.glide.util.ByteBufferUtil$SafeArray: ByteBufferUtil$SafeArray(byte[],int,int)
androidx.lifecycle.LifecycleRegistry: void popParentState()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void reevaluateBuffer(long)
com.google.android.exoplayer2.metadata.MetadataDecoderFactory$1: MetadataDecoderFactory$1()
androidx.core.content.res.TypedArrayUtils: int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry$1: com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry[] newArray(int)
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.AudioFocusManager: int handleIdle(boolean)
com.google.android.exoplayer2.text.TextRenderer: boolean isEnded()
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: void fixMarkLimit()
cn.jzvd.demo.ActivityListViewNormal$1: void onScroll(android.widget.AbsListView,int,int,int)
com.google.android.exoplayer2.extractor.ts.LatmReader: void parsePayloadMux(com.google.android.exoplayer2.util.ParsableBitArray,int)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int)
androidx.core.text.PrecomputedTextCompat: android.text.PrecomputedText getPrecomputedText()
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.android.exoplayer2.video.VideoRendererEventListener: void onDroppedFrames(int,long)
com.bumptech.glide.load.engine.EngineJob: void release()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: boolean handles(int)
org.slf4j.helpers.NOPLoggerFactory: NOPLoggerFactory()
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: int getInt(java.lang.String)
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback: void onQueueTitleChanged(java.lang.CharSequence)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor: EngineJob$ResourceCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor)
com.google.android.exoplayer2.text.ssa.SsaDecoder: long parseTimecodeUs(java.lang.String)
com.bumptech.glide.request.SingleRequest: <clinit>()
com.google.android.exoplayer2.util.ParsableByteArray: int readSynchSafeInt()
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder)
androidx.core.view.WindowInsetsCompat: androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int)
com.bumptech.glide.load.model.LazyHeaders$Builder: <clinit>()
androidx.interpolator.view.animation.LookupTableInterpolator: float getInterpolation(float)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$TrueHdSampleRechunker: MatroskaExtractor$TrueHdSampleRechunker()
com.bumptech.glide.util.ExceptionPassthroughInputStream: ExceptionPassthroughInputStream()
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: AspectRatioFrameLayout$AspectRatioUpdateDispatcher(com.google.android.exoplayer2.ui.AspectRatioFrameLayout,com.google.android.exoplayer2.ui.AspectRatioFrameLayout$1)
com.google.android.exoplayer2.video.DummySurface: void assertApiLevel17OrHigher()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void requestStop()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: int getSelectedIndex()
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: com.google.android.exoplayer2.extractor.SeekMap getConstantBitrateSeekMap(long)
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: MdtaMetadataEntry(java.lang.String,byte[],int,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: int getWeight()
androidx.lifecycle.ReportFragment: void onStop()
com.google.android.exoplayer2.source.TrackGroup: int describeContents()
androidx.appcompat.widget.LinearLayoutCompat: androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.core.view.ViewCompat$1: ViewCompat$1(androidx.core.view.OnApplyWindowInsetsListener)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean readFlvHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.ExoPlayerImplInternal: void stopInternal(boolean,boolean,boolean)
androidx.lifecycle.Lifecycling$1: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
androidx.fragment.app.Fragment: void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle)
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: <clinit>()
androidx.collection.LongSparseArray: java.lang.Object get(long,java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create()
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: long read(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void maybeTerminateInputStream(java.net.HttpURLConnection,long)
androidx.core.provider.SelfDestructiveThread: void onDestruction()
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.ExoPlaybackException createRendererException(java.lang.Exception,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: void access$800(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams,long,long)
androidx.core.view.ViewCompat: void setScrollIndicators(android.view.View,int,int)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.session.IMediaSession$Stub$Proxy: android.os.IBinder asBinder()
com.google.android.exoplayer2.text.ssa.SsaDecoder: com.google.android.exoplayer2.text.Cue createCue(java.lang.String,com.google.android.exoplayer2.text.ssa.SsaStyle,com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides,float,float)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.widget.NestedScrollView: void onScrollChanged(int,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setRawTextSize(float)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()
com.google.android.exoplayer2.ExoPlaybackException: ExoPlaybackException(int,java.lang.Throwable)
com.google.android.exoplayer2.DefaultMediaClock: void start()
androidx.fragment.app.BackStackRecord: void dump(java.lang.String,java.io.PrintWriter)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
androidx.core.view.ViewPropertyAnimatorCompat$2: void onAnimationUpdate(android.animation.ValueAnimator)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MissingSchemeDataException: DefaultDrmSessionManager$MissingSchemeDataException(java.util.UUID,com.google.android.exoplayer2.drm.DefaultDrmSessionManager$1)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isCodecUsableDecoder(android.media.MediaCodecInfo,java.lang.String,boolean,java.lang.String)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: void access$000(com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getParentEnd()
cn.jzvd.demo.VideoConstant: <clinit>()
androidx.appcompat.app.WindowDecorActionBar: void animateToMode(boolean)
com.bumptech.glide.GlideContext: java.util.List getDefaultRequestListeners()
androidx.appcompat.view.menu.MenuItemImpl: boolean hasSubMenu()
org.slf4j.event.Level: org.slf4j.event.Level[] values()
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$602(tv.danmaku.ijk.media.player.IjkMediaPlayer,int)
androidx.collection.LongSparseArray: LongSparseArray(int)
com.google.android.exoplayer2.SimpleExoPlayer: void access$1400(com.google.android.exoplayer2.SimpleExoPlayer,android.view.Surface,boolean)
androidx.viewpager.widget.ViewPager: void dispatchOnPageScrolled(int,float,int)
com.google.android.exoplayer2.util.TimestampAdjuster: long ptsToUs(long)
androidx.recyclerview.widget.RecyclerView: void offsetChildrenVertical(int)
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock: void lock()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setTextAppearance(android.content.Context,int)
com.google.android.exoplayer2.upstream.DefaultDataSource: int read(byte[],int,int)
com.google.android.exoplayer2.text.TextRenderer: boolean handleMessage(android.os.Message)
com.google.android.exoplayer2.ui.TrackSelectionView: void setTrackNameProvider(com.google.android.exoplayer2.ui.TrackNameProvider)
androidx.appcompat.app.AppCompatDelegateImpl: void onStop()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder: ByteBufferBitmapImageDecoderResourceDecoder()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void setReadingAdtsHeaderState()
com.google.android.exoplayer2.text.TextRenderer: void invokeUpdateOutputInternal(java.util.List)
android.support.v4.media.session.MediaSessionCompat$QueueItem: java.lang.String toString()
androidx.collection.SimpleArrayMap: int indexOfKey(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: java.util.List getActionList(android.view.View)
androidx.core.provider.FontsContractCompat$2: void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isVendorV29(android.media.MediaCodecInfo)
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long getNextSeekPosition(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.load.model.UrlUriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager,int)
androidx.core.widget.ImageViewCompat: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
tv.danmaku.ijk.media.player.MediaPlayerProxy$4: void onSeekComplete(tv.danmaku.ijk.media.player.IMediaPlayer)
com.bumptech.glide.load.PreferredColorSpace: <clinit>()
com.danikula.videocache.HttpUrlSource: java.lang.String toString()
com.google.android.exoplayer2.metadata.id3.TextInformationFrame$1: com.google.android.exoplayer2.metadata.id3.TextInformationFrame createFromParcel(android.os.Parcel)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)
com.danikula.videocache.HttpUrlSource: HttpUrlSource(java.lang.String,com.danikula.videocache.sourcestorage.SourceInfoStorage)
androidx.fragment.app.FragmentController: android.os.Parcelable saveAllState()
androidx.recyclerview.widget.GridLayoutManager: void setStackFromEnd(boolean)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setPropertyLong(int,long)
androidx.recyclerview.widget.OrientationHelper$2: void offsetChildren(int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: byte[] access$300()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: boolean equals(java.lang.Object)
cn.jzvd.JZMediaInterface: JZMediaInterface(cn.jzvd.Jzvd)
com.bumptech.glide.load.model.ModelCache: ModelCache(long)
com.google.android.exoplayer2.metadata.id3.PrivFrame$1: com.google.android.exoplayer2.metadata.id3.PrivFrame[] newArray(int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setLogEnabled(boolean)
com.google.android.exoplayer2.extractor.DummyTrackOutput: void format(com.google.android.exoplayer2.Format)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void gotoScreenNormal()
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
androidx.core.widget.NestedScrollView: void onStopNestedScroll(android.view.View,int)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitleOptionalHint(boolean)
androidx.exifinterface.media.ExifInterface: boolean isJpegFormat(byte[])
androidx.fragment.app.FragmentManagerImpl: void throwException(java.lang.RuntimeException)
androidx.fragment.app.FragmentManagerImpl: void performPendingDeferredStart(androidx.fragment.app.Fragment)
org.slf4j.helpers.NOPLogger: void error(java.lang.String)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: boolean isFeatureRequired(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities)
com.bumptech.glide.util.MarkEnforcingInputStream: int available()
androidx.fragment.app.Fragment: java.lang.Object getSharedElementReturnTransition()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: android.view.View onCreateActionView()
androidx.core.view.ViewCompat: android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
androidx.recyclerview.widget.RecyclerView: void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener)
androidx.appcompat.widget.AppCompatSpinner: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.app.ActivityRecreator: <clinit>()
androidx.recyclerview.widget.LinearLayoutManager: void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat onConfigure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: FlvExtractor()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions signature(com.bumptech.glide.load.Key)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int read()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: void endMasterElement(int)
androidx.core.util.Pools$SynchronizedPool: java.lang.Object acquire()
androidx.core.graphics.TypefaceCompatApi21Impl: TypefaceCompatApi21Impl()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.ContextMenu$ContextMenuInfo getMenuInfo()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionEnd(android.transition.Transition)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader: int getUInt16()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.bumptech.glide.load.data.HttpUrlFetcher: java.lang.Class getDataClass()
androidx.appcompat.app.AlertController$1: void onClick(android.view.View)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: FragmentedMp4Extractor(int,com.google.android.exoplayer2.util.TimestampAdjuster)
tv.danmaku.ijk.media.player.IMediaPlayer: void setKeepInBackground(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int)
androidx.recyclerview.widget.RecyclerView: void scrollStep(int,int,int[])
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void notifyCbs(int,int)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickRotationTo90(android.view.View)
com.bumptech.glide.load.resource.gif.StreamGifDecoder: boolean handles(java.io.InputStream,com.bumptech.glide.load.Options)
androidx.versionedparcelable.VersionedParcel: void writeCharSequence(java.lang.CharSequence,int)
com.google.android.exoplayer2.MediaPeriodInfo: boolean equals(java.lang.Object)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithFrameRate(float)
com.google.android.exoplayer2.source.EmptySampleStream: int skipData(long)
com.google.android.exoplayer2.metadata.id3.CommentFrame$1: java.lang.Object[] newArray(int)
androidx.appcompat.app.ResourcesFlusher: void flush(android.content.res.Resources)
com.bumptech.glide.load.resource.gif.GifFrameLoader: int getSize()
com.google.android.exoplayer2.source.SinglePeriodTimeline: <clinit>()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.fragment.app.FragmentManagerState: FragmentManagerState(android.os.Parcel)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: int getCodecCount()
com.bumptech.glide.load.data.StreamLocalUriFetcher: java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver)
androidx.core.view.KeyEventDispatcher: boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent)
androidx.core.graphics.drawable.DrawableCompat: void setTint(android.graphics.drawable.Drawable,int)
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams: LinearLayoutCompat$LayoutParams(android.content.Context,android.util.AttributeSet)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: long readLong()
com.google.android.exoplayer2.extractor.ts.Ac4Reader: Ac4Reader()
com.bumptech.glide.load.data.ExifOrientationStream: <clinit>()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void stop()
com.google.android.exoplayer2.text.webvtt.WebvttSubtitle: java.util.List getCues(long)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void seekTo(long)
com.google.android.exoplayer2.audio.DefaultAudioSink$2: DefaultAudioSink$2(com.google.android.exoplayer2.audio.DefaultAudioSink,android.media.AudioTrack)
com.danikula.videocache.HttpUrlSource: java.lang.String getMime()
com.google.android.exoplayer2.DefaultMediaClock: void onRendererDisabled(com.google.android.exoplayer2.Renderer)
androidx.appcompat.graphics.drawable.DrawableWrapper: void onBoundsChange(android.graphics.Rect)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean canNotifyStatusChanged(com.bumptech.glide.request.Request)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
androidx.appcompat.view.menu.MenuBuilder: void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
cn.jzvd.demo.ActivityWebView$JZCallBack: ActivityWebView$JZCallBack(cn.jzvd.demo.ActivityWebView)
com.google.android.exoplayer2.extractor.GaplessInfoHolder: boolean setFromMetadata(com.google.android.exoplayer2.metadata.Metadata)
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper: void onActionViewExpanded()
androidx.core.view.ViewCompat: androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty()
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setActionView(android.view.View)
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource: int getSize()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.Toolbar$LayoutParams: Toolbar$LayoutParams(int,int)
androidx.core.graphics.TypefaceCompatApi26Impl: void abortCreation(java.lang.Object)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: void release()
cn.jzvd.demo.ActivityTinyWindowRecycleView: void onCreate(android.os.Bundle)
androidx.core.graphics.drawable.DrawableCompat: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.bumptech.glide.load.engine.DecodeJob$Stage: <clinit>()
com.bumptech.glide.util.MultiClassKey: MultiClassKey(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback: void onPanelClosed(int,android.view.Menu)
androidx.appcompat.view.menu.MenuBuilder: void setExclusiveItemChecked(android.view.MenuItem)
com.google.android.exoplayer2.PlaybackInfo: com.google.android.exoplayer2.PlaybackInfo copyWithTimeline(com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: DefaultBandwidthMeter(android.content.Context,android.util.SparseArray,int,com.google.android.exoplayer2.util.Clock,boolean,com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$1)
androidx.customview.view.AbsSavedState$2: java.lang.Object[] newArray(int)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$7: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.bumptech.glide.load.resource.gif.GifDrawable: int getFrameIndex()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData$1: java.lang.Object createFromParcel(android.os.Parcel)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: java.lang.String getDataSource()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: ProgressiveMediaPeriod$ExtractingLoadable(com.google.android.exoplayer2.source.ProgressiveMediaPeriod,android.net.Uri,com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder,com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.util.ConditionVariable)
com.bumptech.glide.provider.ResourceDecoderRegistry: ResourceDecoderRegistry()
com.google.android.exoplayer2.extractor.ts.TsExtractor: int findEndOfFirstTsPacketInBuffer()
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder: boolean handles(android.graphics.Bitmap,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: boolean blacklist(int,long)
com.danikula.videocache.file.Files: void setLastModifiedNow(java.io.File)
androidx.recyclerview.widget.RecyclerView: void resetScroll()
androidx.fragment.app.FragmentState$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.lifecycle.ViewModelProvider: androidx.lifecycle.ViewModel get(java.lang.Class)
cn.jzvd.demo.ActivityListViewMultiHolder$1: ActivityListViewMultiHolder$1(cn.jzvd.demo.ActivityListViewMultiHolder)
androidx.core.graphics.drawable.WrappedDrawableApi14: void jumpToCurrentState()
androidx.appcompat.graphics.drawable.DrawableWrapper: DrawableWrapper(android.graphics.drawable.Drawable)
androidx.fragment.app.FragmentTransition: java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View)
com.google.android.exoplayer2.DefaultMediaClock: void resetPosition(long)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void buildTracksFromSampleStreams()
com.google.android.exoplayer2.text.ttml.TtmlNode: void applyStyleToOutput(java.util.Map,android.text.SpannableStringBuilder,int,int)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.BinaryFrame decodeBinaryFrame(com.google.android.exoplayer2.util.ParsableByteArray,int,java.lang.String)
androidx.appcompat.app.AlertController$AlertParams$1: AlertController$AlertParams$1(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView)
androidx.core.app.ActivityCompat: void recreate(android.app.Activity)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: com.google.android.exoplayer2.drm.DrmInitData getDrmInitDataFromAtoms(java.util.List)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findContainingItemView(android.view.View)
androidx.appcompat.widget.AppCompatTextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: void cleanup()
androidx.appcompat.view.menu.MenuPopupHelper: void setGravity(int)
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode: java.lang.String toString()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: <clinit>()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: long getLength()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath)
androidx.appcompat.app.AppCompatDelegateImpl: void setContentView(int)
com.google.android.exoplayer2.ExoPlayerImpl: long getBufferedPosition()
androidx.lifecycle.LiveData$ObserverWrapper: LiveData$ObserverWrapper(androidx.lifecycle.LiveData,androidx.lifecycle.Observer)
com.google.android.exoplayer2.extractor.DummyTrackOutput: void sampleMetadata(long,int,int,int,com.google.android.exoplayer2.extractor.TrackOutput$CryptoData)
com.bumptech.glide.load.data.mediastore.MediaStoreUtil: boolean isMediaStoreUri(android.net.Uri)
androidx.appcompat.widget.AppCompatSpinner$2: AppCompatSpinner$2(androidx.appcompat.widget.AppCompatSpinner)
com.bumptech.glide.util.Util: Util()
com.bumptech.glide.Registry: com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder)
com.google.android.exoplayer2.util.NalUnitUtil$PpsData: NalUnitUtil$PpsData(int,int,boolean)
com.google.android.exoplayer2.source.hls.WebvttExtractor: WebvttExtractor(java.lang.String,com.google.android.exoplayer2.util.TimestampAdjuster)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void access$1000(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker,android.net.Uri,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener: boolean onInfo(tv.danmaku.ijk.media.player.IMediaPlayer,int,int)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: DefaultBandwidthMeter$ConnectivityActionReceiver()
com.bumptech.glide.load.engine.DiskCacheStrategy$2: boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy)
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable: OnBackPressedDispatcher$OnBackPressedCancellable(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: void start()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int)
androidx.core.widget.NestedScrollView: void computeScroll()
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.source.chunk.MediaChunkIterator[] createMediaChunkIterators(com.google.android.exoplayer2.source.hls.HlsMediaChunk,long)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: boolean readFully(byte[],int,int,boolean)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: void release()
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedLeft(android.view.View)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void updateSurfaceScreenOn()
com.google.android.exoplayer2.audio.DefaultAudioSink: long getSubmittedFrames()
androidx.core.widget.NestedScrollView: void requestLayout()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void commitBytesRead(int)
com.google.android.exoplayer2.extractor.wav.WavExtractor$PassthroughOutputWriter: void reset(long)
androidx.appcompat.view.menu.MenuBuilder: void close(boolean)
com.google.android.exoplayer2.text.SubtitleDecoderException: SubtitleDecoderException(java.lang.Exception)
androidx.recyclerview.widget.RecyclerView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)
androidx.collection.ArraySet$1: int colIndexOfValue(java.lang.Object)
androidx.activity.ComponentActivity: void onBackPressed()
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.RequestManager getRequestManager()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void refreshPlaylist(android.net.Uri)
com.bumptech.glide.load.model.MultiModelLoaderFactory: <clinit>()
com.bumptech.glide.request.SingleRequest: boolean isFirstReadyResource()
androidx.appcompat.view.menu.StandardMenuPopup: boolean isShowing()
com.google.android.exoplayer2.audio.BaseAudioProcessor: void reset()
com.google.android.exoplayer2.source.CompositeSequenceableLoader: boolean continueLoading(long)
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: void validateWebvttHeaderLine(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.resource.bitmap.BitmapTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.TintContextWrapper: android.content.res.AssetManager getAssets()
com.bumptech.glide.load.model.MediaStoreFileLoader: MediaStoreFileLoader(android.content.Context)
androidx.appcompat.widget.LinearLayoutCompat: void onDraw(android.graphics.Canvas)
com.google.android.exoplayer2.audio.Ac4Util$SyncFrameInfo: Ac4Util$SyncFrameInfo(int,int,int,int,int)
com.google.android.exoplayer2.util.FlacStreamMetadata: FlacStreamMetadata(byte[],int)
androidx.appcompat.widget.AppCompatDrawableManager$1: AppCompatDrawableManager$1()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: MediaCodecUtil$MediaCodecListCompatV21(boolean,boolean)
com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory: com.google.android.exoplayer2.upstream.DefaultHttpDataSource createDataSourceInternal(com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)
androidx.appcompat.graphics.drawable.StateListDrawable: StateListDrawable(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState)
org.slf4j.helpers.NOPLogger: void warn(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.viewpager.widget.ViewPager$SavedState: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder: ParcelFileDescriptorRewinder(android.os.ParcelFileDescriptor)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$500(tv.danmaku.ijk.media.player.IjkMediaPlayer)
androidx.viewpager.widget.ViewPager: void draw(android.graphics.Canvas)
androidx.collection.ArraySet$1: ArraySet$1(androidx.collection.ArraySet)
cn.jzvd.demo.ActivityTinyWindow: void clickTinyWindow(android.view.View)
cn.jzvd.JZUtils: void showSystemUI(android.content.Context)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setOption(int,java.lang.String,long)
cn.jzvd.demo.ActivityWebView$JZCallBack: void adViewJiaoZiVideoPlayer(int,int,int,int,int)
cn.jzvd.JzvdStd$1: void onReceive(android.content.Context,android.content.Intent)
androidx.fragment.app.FragmentActivity$HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()
com.bumptech.glide.RequestBuilder: RequestBuilder(com.bumptech.glide.Glide,com.bumptech.glide.RequestManager,java.lang.Class,android.content.Context)
com.google.android.exoplayer2.SeekParameters: <clinit>()
tv.danmaku.ijk.media.player.misc.IMediaDataSource: void close()
com.bumptech.glide.load.Option: com.bumptech.glide.load.Option memory(java.lang.String)
androidx.appcompat.widget.ActionBarContextView: androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long)
androidx.collection.ArraySet$1: java.util.Map colGetMap()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void clearMemory()
androidx.fragment.app.FragmentController: void restoreSaveState(android.os.Parcelable)
com.danikula.videocache.InterruptedProxyCacheException: InterruptedProxyCacheException(java.lang.String,java.lang.Throwable)
androidx.collection.ArraySet$1: java.lang.Object colSetValue(int,java.lang.Object)
com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results: FixedSampleSizeRechunker$Results(long[],int[],int,long[],int[],long)
androidx.core.widget.NestedScrollView: void initOrResetVelocityTracker()
androidx.core.graphics.TypefaceCompatApi26Impl: java.lang.Class obtainFontFamily()
androidx.core.app.ActivityRecreator$2: void run()
com.google.android.exoplayer2.extractor.ts.AdtsReader: AdtsReader(boolean)
androidx.core.widget.NestedScrollView: void abortAnimatedScroll()
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: GifFrameResourceDecoder(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
com.bumptech.glide.module.LibraryGlideModule: void registerComponents(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry)
androidx.core.text.PrecomputedTextCompat$Params$Builder: PrecomputedTextCompat$Params$Builder(android.text.TextPaint)
androidx.fragment.app.Fragment: void onStart()
com.google.android.exoplayer2.upstream.DefaultAllocator: DefaultAllocator(boolean,int,int)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.util.LongArray: void add(long)
cn.jzvd.demo.ActivityListView: ActivityListView()
androidx.appcompat.widget.ActionBarOverlayLayout$3: ActionBarOverlayLayout$3(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View hasGapsToFix()
com.google.android.exoplayer2.BasePlayer$ListenerHolder: boolean equals(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: java.lang.String toString()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV16: boolean isFeatureRequired(java.lang.String,java.lang.String,android.media.MediaCodecInfo$CodecCapabilities)
com.google.android.exoplayer2.metadata.id3.Id3Frame: java.lang.String toString()
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.text.subrip.SubripDecoder: float getFractionalPositionForAnchorType(int)
com.google.android.exoplayer2.SimpleExoPlayer: java.util.List access$1102(com.google.android.exoplayer2.SimpleExoPlayer,java.util.List)
com.bumptech.glide.util.CachedHashCodeArrayMap: CachedHashCodeArrayMap()
com.bumptech.glide.load.resource.bitmap.TransformationUtils: int getExifOrientationDegrees(int)
com.google.android.exoplayer2.audio.AudioAttributes: <clinit>()
com.google.android.exoplayer2.source.hls.HlsManifest: HlsManifest(com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean canNotifyStatusChanged(com.bumptech.glide.request.Request)
com.bumptech.glide.provider.ResourceEncoderRegistry: void append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
com.bumptech.glide.manager.SupportRequestManagerFragment: void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment)
com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap: FlacSeekTableSeekMap(com.google.android.exoplayer2.util.FlacStreamMetadata,long)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException access$000(com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException,com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)
com.google.android.exoplayer2.MediaPeriodInfo: com.google.android.exoplayer2.MediaPeriodInfo copyWithContentPositionUs(long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void onLoadCanceled(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable,long,long,boolean)
cn.jzvd.demo.ActivityApiExtendsNormal: void onBackPressed()
com.google.android.exoplayer2.source.hls.WebvttExtractor: void release()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void release()
com.google.android.exoplayer2.SimpleExoPlayer: void access$1600(com.google.android.exoplayer2.SimpleExoPlayer)
com.bumptech.glide.load.resource.gif.GifDrawable: void setAlpha(int)
com.google.android.exoplayer2.trackselection.TrackSelectorResult: boolean isRendererEnabled(int)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
android.support.v4.media.MediaDescriptionCompatApi21: android.net.Uri getIconUri(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void onAttachedToWindow()
com.google.android.exoplayer2.ExoPlayerImplInternal: void prepareInternal(com.google.android.exoplayer2.source.MediaSource,boolean,boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: android.graphics.ColorFilter getColorFilter()
androidx.fragment.app.FragmentTransitionImpl: void captureTransitioningViews(java.util.ArrayList,android.view.View)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence getText(int,java.lang.CharSequence)
androidx.appcompat.view.menu.MenuBuilder: void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter)
com.google.android.exoplayer2.drm.DrmInitData: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: int findNoiseLimit(java.nio.ByteBuffer)
android.support.v4.media.MediaMetadataCompat$1: java.lang.Object[] newArray(int)
androidx.fragment.app.BackStackRecord: void executePopOps(boolean)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: android.net.Uri access$200(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: <clinit>()
androidx.lifecycle.LiveData: void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(androidx.appcompat.widget.ActionMenuView$LayoutParams)
com.google.android.exoplayer2.PlayerMessage: boolean blockUntilDelivered()
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
androidx.appcompat.app.AppCompatDelegateImpl: void initWindowDecorActionBar()
com.google.android.exoplayer2.ExoPlayerImplInternal$PendingMessageInfo: ExoPlayerImplInternal$PendingMessageInfo(com.google.android.exoplayer2.PlayerMessage)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: void onContinueLoadingRequested(com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper)
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: com.google.android.exoplayer2.PlaybackParameters access$100(com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: boolean areAllItemsEnabled()
androidx.appcompat.widget.ListPopupWindow: void setEpicenterBounds(android.graphics.Rect)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: int finishReadDuration(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.widget.ThemeUtils: int getDisabledThemeAttrColor(android.content.Context,int)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int)
com.google.android.exoplayer2.drm.DefaultDrmSession: void release()
com.google.android.exoplayer2.source.ProgressiveMediaSource: void releasePeriod(com.google.android.exoplayer2.source.MediaPeriod)
cn.jzvd.JzvdStd: void setAllControlsVisiblity(int,int,int,int,int,int,int)
androidx.fragment.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: boolean isEmpty()
androidx.exifinterface.media.ExifInterface: <clinit>()
com.google.android.exoplayer2.text.cea.Cea708Decoder: void handleG0Character(int)
androidx.appcompat.widget.ActionBarOverlayLayout$2: ActionBarOverlayLayout$2(androidx.appcompat.widget.ActionBarOverlayLayout)
androidx.core.widget.NestedScrollView: boolean shouldDelayChildPressedState()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void finalize()
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLContext createEGLContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,int)
android.support.v4.media.MediaDescriptionCompatApi21: java.lang.CharSequence getDescription(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean hasFlexibleChildInBothOrientations()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void setSurface(android.view.Surface)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: Id3Decoder()
tv.danmaku.ijk.media.player.misc.AndroidMediaFormat: AndroidMediaFormat(android.media.MediaFormat)
com.danikula.videocache.file.FileCache: FileCache(java.io.File,com.danikula.videocache.file.DiskUsage)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: long bytesRemaining()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResources()
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: boolean canReadBits(int)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int)
com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition: DvbParser$ClutDefinition(int,int[],int[],int[])
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean isOutOfBounds(int,int)
androidx.appcompat.widget.AppCompatTextHelper: AppCompatTextHelper(android.widget.TextView)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: <clinit>()
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer: SafeKeyGenerator$PoolableDigestContainer(java.security.MessageDigest)
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionViewExpanded()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.util.NalUnitUtil: int getNalUnitType(byte[],int)
androidx.viewpager.widget.ViewPager: void onPageScrolled(int,float,int)
androidx.appcompat.app.AppCompatDelegateImpl: void onSaveInstanceState(android.os.Bundle)
androidx.fragment.app.Fragment: boolean isStateSaved()
androidx.fragment.app.FragmentManagerImpl: void burpActive()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: void ensureSize(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.collection.ArrayMap: androidx.collection.MapCollections getCollection()
androidx.fragment.app.FragmentController: boolean dispatchOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkAndReadFrameHeader(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.FlacStreamMetadata,int,com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder)
com.google.android.exoplayer2.MediaPeriodQueue: com.google.android.exoplayer2.MediaPeriodInfo getFollowingMediaPeriodInfo(com.google.android.exoplayer2.MediaPeriodHolder,long)
androidx.core.view.ViewCompat: boolean isLaidOut(android.view.View)
com.google.android.exoplayer2.util.StandaloneMediaClock: void resetPosition(long)
androidx.appcompat.widget.ToolbarWidgetWrapper: int detectDisplayOptions()
com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat: java.lang.String toString()
tv.danmaku.ijk.media.player.IjkMediaPlayer: boolean onNativeInvoke(java.lang.Object,int,android.os.Bundle)
androidx.recyclerview.widget.GridLayoutManager: void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.fragment.app.Fragment: java.lang.Object getSharedElementEnterTransition()
androidx.arch.core.internal.SafeIterableMap: java.util.Iterator descendingIterator()
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$DvbSubtitleInfo: TsPayloadReader$DvbSubtitleInfo(java.lang.String,int,byte[])
com.google.android.exoplayer2.drm.DefaultDrmSession$RequestHandler: boolean maybeRetryRequest(android.os.Message,java.lang.Exception)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStopTrackingTouch(android.widget.SeekBar)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)
androidx.fragment.app.BackStackRecord: void commitNowAllowingStateLoss()
com.bumptech.glide.load.engine.DecodeHelper: DecodeHelper()
com.bumptech.glide.load.data.mediastore.FileService: java.io.File get(java.lang.String)
com.bumptech.glide.provider.ImageHeaderParserRegistry: ImageHeaderParserRegistry()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
androidx.appcompat.view.WindowCallbackWrapper: boolean onSearchRequested(android.view.SearchEvent)
com.google.android.exoplayer2.extractor.mkv.Sniffer: Sniffer()
cn.jzvd.Jzvd$1: void onAudioFocusChange(int)
com.google.android.exoplayer2.upstream.DataSchemeDataSource: DataSchemeDataSource()
androidx.core.widget.AutoScrollHelper$ClampedScroller: boolean isFinished()
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$600(tv.danmaku.ijk.media.player.IjkMediaPlayer)
android.support.v4.os.ResultReceiver$MyRunnable: ResultReceiver$MyRunnable(android.support.v4.os.ResultReceiver,int,android.os.Bundle)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader: long skip(long)
androidx.core.graphics.TypefaceCompat: <clinit>()
androidx.core.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: void onPlaybackSpeed(float)
com.bumptech.glide.load.data.HttpUrlFetcher: com.bumptech.glide.load.DataSource getDataSource()
com.bumptech.glide.load.engine.DecodeHelper: java.util.List getCacheKeys()
androidx.recyclerview.widget.RecyclerView: int getChildDrawingOrder(int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isSmoothScrolling()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void parseId3Header()
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder: com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams()
com.danikula.videocache.Pinger$PingCallable: java.lang.Object call()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: Cea608Decoder$CueBuilder(int,int)
com.google.android.exoplayer2.ExoPlayerImpl: int getCurrentAdIndexInAdGroup()
androidx.fragment.app.Fragment: boolean performContextItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle: java.util.List getCues(long)
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle()
com.google.android.exoplayer2.extractor.ts.PsDurationReader: com.google.android.exoplayer2.util.TimestampAdjuster getScrTimestampAdjuster()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void normalize(android.graphics.Bitmap)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener)
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.Engine$LoadStatus waitForExistingOrStartNewJob(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor,com.bumptech.glide.load.engine.EngineKey,long)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean setState(int[])
com.danikula.videocache.file.Files: void recreateZeroSizeFile(java.io.File)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void processNoisy(java.nio.ByteBuffer)
com.google.android.exoplayer2.extractor.ts.UserDataReader: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker$PsScrSeeker: PsBinarySearchSeeker$PsScrSeeker(com.google.android.exoplayer2.util.TimestampAdjuster)
androidx.appcompat.view.menu.CascadingMenuPopup: boolean flagActionItems()
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: void setTargetId(java.lang.String)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher withParameters(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context,int)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence)
com.google.android.exoplayer2.audio.AudioCapabilities: java.lang.String toString()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setAutoMirrored(boolean)
cn.jzvd.JZMediaInterface: void start()
cn.jzvd.JzvdStd$DismissControlViewTimerTask: JzvdStd$DismissControlViewTimerTask(cn.jzvd.JzvdStd)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
com.bumptech.glide.load.resource.bitmap.Downsampler: boolean isRotationRequired(int)
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1: GlideExecutor$DefaultThreadFactory$1(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory,java.lang.Runnable,java.lang.String)
com.google.android.exoplayer2.Player$EventListener: void onPositionDiscontinuity(int)
com.bumptech.glide.load.Option: byte[] getKeyBytes()
androidx.recyclerview.widget.LinearLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
com.google.android.exoplayer2.SimpleExoPlayer: void prepare(com.google.android.exoplayer2.source.MediaSource,boolean,boolean)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.opengl.EGLConfig chooseEGLConfig(android.opengl.EGLDisplay)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer: void reset()
androidx.appcompat.view.menu.ListMenuItemView: void adjustListItemSelectionBounds(android.graphics.Rect)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void clearExtrasSpans()
com.danikula.videocache.ProxyCache: void waitForSourceData()
com.google.android.exoplayer2.audio.SonicAudioProcessor: float setSpeed(float)
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult overestimatedResult(long,long)
com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData: MediaSourceEventListener$MediaLoadData(int,int,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long)
com.danikula.videocache.file.LruDiskUsage$TouchCallable: java.lang.Object call()
androidx.fragment.app.FragmentActivity$HostCallbacks: java.lang.Object onGetHost()
com.google.android.exoplayer2.text.TextRenderer: boolean isReady()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean flushOrReleaseCodec()
androidx.viewpager.widget.PagerAdapter: int getItemPosition(java.lang.Object)
androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)
androidx.appcompat.widget.AppCompatImageView: boolean hasOverlappingRendering()
androidx.fragment.app.FragmentTransition: void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handleLoadingMediaPeriodChanged(boolean)
androidx.core.graphics.TypefaceCompatBaseImpl: java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: AppCompatDelegateImpl$AutoBatteryNightModeManager(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context)
androidx.core.os.TraceCompat: void endSection()
androidx.appcompat.widget.DropDownListView: void positionSelectorCompat(int,android.view.View)
cn.jzvd.demo.ActivityMain: void onBackPressed()
com.google.android.exoplayer2.BaseRenderer: void start()
androidx.viewpager.widget.ViewPager: void setPageMargin(int)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void prepare()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: void onPositionDiscontinuity(int)
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: int getArrayLength(int[])
com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream: int readData(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean)
com.google.android.exoplayer2.SimpleExoPlayer: void seekTo(int,long)
com.google.android.exoplayer2.video.DummySurface: com.google.android.exoplayer2.video.DummySurface newInstanceV17(android.content.Context,boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onAudioDecoderInitialized(java.lang.String,long,long)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: int getExtractedSamplesCount()
com.google.android.exoplayer2.upstream.RawResourceDataSource: android.net.Uri buildRawResourceUri(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int)
com.google.android.exoplayer2.metadata.icy.IcyHeaders$1: com.google.android.exoplayer2.metadata.icy.IcyHeaders createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: int skipData(int,long)
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget: void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition)
androidx.lifecycle.ReflectiveGenericLifecycleObserver: ReflectiveGenericLifecycleObserver(java.lang.Object)
androidx.core.view.AccessibilityDelegateCompat: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.upstream.StatsDataSource: void addTransferListener(com.google.android.exoplayer2.upstream.TransferListener)
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: boolean isRetry()
org.slf4j.helpers.Util: void report(java.lang.String)
cn.jzvd.JzvdStd: void changeUiToPreparing()
androidx.recyclerview.widget.RecyclerView$Adapter: boolean hasStableIds()
com.google.android.exoplayer2.util.Util: java.lang.String[] splitCodecs(java.lang.String)
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToPreparing()
androidx.viewpager.widget.ViewPager: int getPageMargin()
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTooltipText(java.lang.CharSequence)
com.bumptech.glide.load.engine.ActiveResources: void cleanReferenceQueue()
com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder: com.google.android.exoplayer2.metadata.Metadata decode(com.google.android.exoplayer2.metadata.MetadataInputBuffer)
com.bumptech.glide.load.model.GlideUrl: GlideUrl(java.lang.String)
androidx.core.view.ViewParentCompat: void onStopNestedScroll(android.view.ViewParent,android.view.View,int)
com.bumptech.glide.load.model.ByteArrayLoader: ByteArrayLoader(com.bumptech.glide.load.model.ByteArrayLoader$Converter)
androidx.fragment.app.FragmentContainer: androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)
androidx.appcompat.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)
androidx.appcompat.widget.Toolbar: int layoutChildRight(android.view.View,int,int[],int)
android.support.v4.os.IResultReceiver$Stub$Proxy: IResultReceiver$Stub$Proxy(android.os.IBinder)
com.google.android.exoplayer2.video.HevcConfig: HevcConfig(java.util.List,int)
androidx.versionedparcelable.VersionedParcelParcel: boolean readBoolean()
com.bumptech.glide.load.resource.gif.GifFrameLoader: int getCurrentIndex()
com.bumptech.glide.load.data.BufferedOutputStream: BufferedOutputStream(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int)
androidx.collection.ContainerHelpers: int binarySearch(long[],int,long)
com.google.android.exoplayer2.metadata.icy.IcyDecoder: <clinit>()
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: ExifInterface$ByteOrderedDataInputStream(java.io.InputStream)
com.google.android.exoplayer2.SimpleExoPlayer: com.google.android.exoplayer2.Format access$1002(com.google.android.exoplayer2.SimpleExoPlayer,com.google.android.exoplayer2.Format)
androidx.collection.ArrayMap: java.util.Set keySet()
com.bumptech.glide.load.resource.gif.GifBitmapProvider: GifBitmapProvider(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: java.lang.Class getExoMediaCryptoType(com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.util.ContentLengthInputStream: int read(byte[])
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
com.google.android.exoplayer2.audio.DefaultAudioSink: void writeBuffer(java.nio.ByteBuffer,long)
com.danikula.videocache.StorageUtils: java.io.File getCacheDirectory(android.content.Context,boolean)
androidx.exifinterface.media.ExifInterface: void getPngAttributes(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream)
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry: boolean isItalic()
com.google.android.exoplayer2.AudioFocusManager$AudioFocusListener: AudioFocusManager$AudioFocusListener(com.google.android.exoplayer2.AudioFocusManager,android.os.Handler)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: <clinit>()
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.appcompat.widget.ActionBarContainer: int getMeasuredHeightWithMargins(android.view.View)
androidx.recyclerview.widget.RecyclerView$LayoutManager: android.view.View findViewByPosition(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onStarted()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: SpliceNullCommand()
com.google.android.exoplayer2.metadata.icy.IcyInfo: IcyInfo(byte[],java.lang.String,java.lang.String)
com.google.android.exoplayer2.audio.DefaultAudioSink$InvalidAudioTrackTimestampException: DefaultAudioSink$InvalidAudioTrackTimestampException(java.lang.String,com.google.android.exoplayer2.audio.DefaultAudioSink$1)
androidx.recyclerview.widget.RecyclerView: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.MediaInfo getMediaInfo()
androidx.appcompat.widget.AppCompatTextHelper: void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable checkIconCache(java.lang.String)
androidx.core.widget.NestedScrollView: void initScrollView()
androidx.appcompat.view.menu.MenuItemImpl: int getItemId()
tv.danmaku.ijk.media.player.TextureMediaPlayer: void releaseSurfaceTexture()
androidx.core.content.res.GrowingArrayUtils: int[] append(int[],int,int)
androidx.customview.view.AbsSavedState$1: AbsSavedState$1()
com.google.android.exoplayer2.video.ColorInfo: ColorInfo(android.os.Parcel)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: void setTargetVoice(java.lang.String)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintMode(android.graphics.PorterDuff$Mode)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.fragment.app.Fragment: void onDestroyView()
com.google.android.exoplayer2.ExoPlayerImpl: boolean shouldMaskPosition()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.Rect getConstantPadding()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean flushOrReinitializeCodec()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory: com.bumptech.glide.load.data.DataRewinder build(android.os.ParcelFileDescriptor)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean shouldDropBuffersToKeyframe(long,long,boolean)
androidx.fragment.app.Fragment: boolean isAdded()
org.slf4j.event.EventRecodingLogger: void warn(java.lang.String,java.lang.Object)
com.google.android.exoplayer2.extractor.ts.H262Reader: H262Reader()
com.google.android.exoplayer2.DefaultLoadControl: int calculateTargetBufferSize(com.google.android.exoplayer2.Renderer[],com.google.android.exoplayer2.trackselection.TrackSelectionArray)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: void incrementPendingOperationAcks(int)
com.google.android.exoplayer2.extractor.BinarySearchSeeker: boolean isSeeking()
com.google.android.exoplayer2.util.ParsableBitArray: void readBits(byte[],int,int)
com.bumptech.glide.load.data.InputStreamRewinder: void fixMarkLimits()
com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()
com.bumptech.glide.load.DataSource: com.bumptech.glide.load.DataSource[] values()
androidx.core.widget.TextViewCompat: android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView)
com.google.android.exoplayer2.source.ClippingMediaPeriod: com.google.android.exoplayer2.SeekParameters clipSeekParameters(long,com.google.android.exoplayer2.SeekParameters)
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: void onPause()
org.slf4j.LoggerFactory: void versionSanityCheck()
androidx.recyclerview.widget.LinearLayoutManager: int getOrientation()
androidx.fragment.app.FragmentManagerImpl: int allocBackStackIndex(androidx.fragment.app.BackStackRecord)
androidx.appcompat.view.menu.ActionMenuItemView: boolean needsDividerAfter()
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation: boolean getTransformation(long,android.view.animation.Transformation)
androidx.appcompat.app.ActionBar$LayoutParams: ActionBar$LayoutParams(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.extractor.ts.PsDurationReader: long readScrValueFromPackHeader(byte[])
com.google.android.exoplayer2.text.ttml.TtmlStyle: boolean isLinethrough()
com.google.android.exoplayer2.offline.StreamKey$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor: ChannelMappingAudioProcessor()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDroppedFrames(int,long)
androidx.cursoradapter.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$Stz2SampleSizeBox: boolean isFixedSampleSize()
com.bumptech.glide.util.MultiClassKey: int hashCode()
com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.ui.TrackSelectionView: void access$100(com.google.android.exoplayer2.ui.TrackSelectionView,android.view.View)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void reset()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser)
com.google.android.exoplayer2.ui.TrackSelectionView: TrackSelectionView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.graphics.drawable.StateListDrawable: androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState()
com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService: void reset()
androidx.fragment.app.FragmentManagerImpl: android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment)
androidx.appcompat.widget.ToolbarWidgetWrapper: ToolbarWidgetWrapper(androidx.appcompat.widget.Toolbar,boolean)
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void setCaptionRowCount(int)
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: <clinit>()
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void setPenAttributes(int,int,int,boolean,boolean,int,int)
com.google.android.exoplayer2.upstream.DefaultAllocator: int getTotalBytesAllocated()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: boolean isLooping()
androidx.appcompat.widget.SearchView$PreQAutoCompleteTextViewReflector: void ensureImeVisible(android.widget.AutoCompleteTextView)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
androidx.collection.SimpleArrayMap: int binarySearchHashes(int[],int,int)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1: LoaderManagerImpl$LoaderViewModel$1()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspot(float,float)
com.google.android.exoplayer2.source.hls.HlsChunkSource: com.google.android.exoplayer2.trackselection.TrackSelection getTrackSelection()
com.danikula.videocache.Pinger$PingCallable: Pinger$PingCallable(com.danikula.videocache.Pinger,com.danikula.videocache.Pinger$1)
tv.danmaku.ijk.media.player.pragma.Pragma: Pragma()
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor$Builder newSourceBuilder()
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedFling(float,float,boolean)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[])
androidx.core.content.res.FontResourcesParserCompat: java.util.List readCerts(android.content.res.Resources,int)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void onSetButtonDrawable()
com.bumptech.glide.request.ErrorRequestCoordinator: boolean isValidRequest(com.bumptech.glide.request.Request)
com.google.android.exoplayer2.util.MimeTypes: java.lang.String getTopLevelType(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: void onActivityCreated(android.os.Bundle)
com.bumptech.glide.util.Executors: java.util.concurrent.Executor mainThreadExecutor()
androidx.recyclerview.widget.GapWorker: void prefetch(long)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void start()
com.google.android.exoplayer2.extractor.ts.PsDurationReader: int readDuration(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.google.android.exoplayer2.text.webvtt.WebvttCue: WebvttCue(long,long,java.lang.CharSequence,android.text.Layout$Alignment,float,int,int,float,int,float)
com.bumptech.glide.load.engine.DecodeHelper: java.lang.Class getTranscodeClass()
androidx.appcompat.widget.DropDownListView: void positionSelectorLikeTouchCompat(int,android.view.View,float,float)
androidx.appcompat.view.menu.ActionMenuItemView: void onRestoreInstanceState(android.os.Parcelable)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.mediacodec.MediaCodecInfo getCodecInfo()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition: AnimatedStateListDrawableCompat$Transition(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View getChildClosestToStart()
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: MediaSource$MediaPeriodId(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)
com.google.android.exoplayer2.text.cea.Cea708Decoder: void decode(com.google.android.exoplayer2.text.SubtitleInputBuffer)
androidx.appcompat.view.StandaloneActionMode: android.view.View getCustomView()
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup: void setPromptText(java.lang.CharSequence)
androidx.core.view.ViewPropertyAnimatorListenerAdapter: void onAnimationCancel(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$5: void onAttachedFromWindow()
com.google.android.exoplayer2.text.ttml.TtmlNode: boolean isActive(long)
com.google.android.exoplayer2.extractor.FlacMetadataReader: com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable readSeekTableMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,int)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean)
androidx.core.content.res.TypedArrayUtils: java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
com.bumptech.glide.load.engine.LockedResource: void recycle()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getMinimumWidth()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: <clinit>()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: long getDuration()
androidx.appcompat.view.menu.MenuItemImpl: boolean isActionButton()
androidx.recyclerview.widget.OrientationHelper: androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatDelegateImpl: android.content.res.Configuration createOverrideConfigurationForDayNight(android.content.Context,int,android.content.res.Configuration)
androidx.fragment.app.Fragment: void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener)
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void notifyOnTimedText(tv.danmaku.ijk.media.player.IjkTimedText)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void gotoScreenFullscreen()
androidx.appcompat.widget.ToolbarWidgetWrapper$1: ToolbarWidgetWrapper$1(androidx.appcompat.widget.ToolbarWidgetWrapper)
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: SeekMap$SeekPoints(com.google.android.exoplayer2.extractor.SeekPoint,com.google.android.exoplayer2.extractor.SeekPoint)
com.bumptech.glide.request.BaseRequestOptions: float getSizeMultiplier()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void release()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()
com.google.android.exoplayer2.metadata.id3.GeobFrame: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.extractor.ts.H264Reader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.fragment.app.FragmentActivity: void onPause()
androidx.appcompat.app.AppCompatDelegateImpl$3: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.core.view.OneShotPreDrawListener: OneShotPreDrawListener(android.view.View,java.lang.Runnable)
androidx.lifecycle.ClassesInfoCache: androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class)
androidx.appcompat.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.exoplayer2.ExoPlayerImplInternal: void disableRenderer(com.google.android.exoplayer2.Renderer)
cn.jzvd.JzvdStd: void onStartTrackingTouch(android.widget.SeekBar)
androidx.fragment.app.FragmentFactory: <clinit>()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.widget.NestedScrollView: boolean canScroll()
com.google.android.exoplayer2.PlaybackParameters: int hashCode()
com.google.android.exoplayer2.metadata.icy.IcyInfo$1: IcyInfo$1()
com.google.android.exoplayer2.source.TrackGroupArray: int indexOf(com.google.android.exoplayer2.source.TrackGroup)
androidx.core.app.CoreComponentFactory: android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getIntrinsicHeight()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void integerElement(int,long)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean finishedReadingChunk(com.google.android.exoplayer2.source.hls.HlsMediaChunk)
com.google.android.exoplayer2.extractor.mp4.TrackFragment: void fillEncryptionData(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: boolean isLinethrough()
androidx.recyclerview.widget.GapWorker: void flushTasksWithDeadline(long)
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollExtent()
com.google.android.exoplayer2.extractor.ts.PsExtractor: <clinit>()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object[] newArray(int)
com.bumptech.glide.request.SingleRequest: void onSizeReady(int,int)
androidx.recyclerview.widget.OrientationHelper$1: int getStartAfterPadding()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: com.google.android.exoplayer2.Format updateOutputFormatForTime(long)
androidx.collection.SimpleArrayMap: java.lang.Object replace(java.lang.Object,java.lang.Object)
com.danikula.videocache.sourcestorage.DatabaseSourceInfoStorage: <clinit>()
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: android.graphics.drawable.Drawable newDrawable()
com.google.android.exoplayer2.AudioFocusManager: void handleAudioFocusChange(int)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void releaseCodec()
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: boolean handleMessage(android.os.Message)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void setMeasuredDimensionFromChildren(int,int)
android.support.v4.media.RatingCompat$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: int parseIntAttr(java.lang.String,java.util.regex.Pattern)
com.bumptech.glide.load.resource.gif.GifDrawableTransformation: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: java.lang.String readAmfString(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.model.FileLoader$StreamFactory$1: void close(java.io.InputStream)
cn.jzvd.demo.ApplicationDemo: void onCreate()
com.bumptech.glide.load.resource.bitmap.Downsampler: <clinit>()
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: boolean isReady()
androidx.core.util.Pools$SimplePool: Pools$SimplePool(int)
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnTimedTextListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnTimedTextListener)
androidx.core.view.ViewPropertyAnimatorCompat: ViewPropertyAnimatorCompat(android.view.View)
com.google.android.exoplayer2.util.EGLSurfaceTexture: android.graphics.SurfaceTexture getSurfaceTexture()
com.bumptech.glide.load.model.MediaStoreFileLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.data.StreamLocalUriFetcher: java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver)
com.bumptech.glide.disklrucache.DiskLruCache$Value: java.io.File getFile(int)
com.google.android.exoplayer2.Timeline$Period: boolean isAdAvailable(int,int)
androidx.recyclerview.widget.GapWorker: boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int)
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
com.google.android.exoplayer2.extractor.ts.H265Reader: void skipShortTermRefPicSets(com.google.android.exoplayer2.util.ParsableNalUnitBitArray)
cn.jzvd.demo.ActivityApiCustomMedia: void onBackPressed()
androidx.fragment.app.FragmentTransitionImpl: void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map)
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkAndReadFirstSampleNumber(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.util.FlacStreamMetadata,boolean,com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
tv.danmaku.ijk.media.player.IjkLibLoader: void loadLibrary(java.lang.String)
com.google.android.exoplayer2.extractor.ts.AdtsReader: long getSampleDurationUs()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: long parseTfdt(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void onFinishInflate()
com.google.android.exoplayer2.ExoPlayerFactory: com.google.android.exoplayer2.SimpleExoPlayer newSimpleInstance(android.content.Context,com.google.android.exoplayer2.RenderersFactory,com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.drm.DrmSessionManager,com.google.android.exoplayer2.upstream.BandwidthMeter,com.google.android.exoplayer2.analytics.AnalyticsCollector,android.os.Looper)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
com.google.android.exoplayer2.video.VideoRendererEventListener: void onRenderedFirstFrame(android.view.Surface)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: boolean getPadding(android.graphics.Rect)
com.bumptech.glide.util.MarkEnforcingInputStream: void reset()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
androidx.appcompat.widget.TintTypedArray: boolean getBoolean(int,boolean)
com.google.android.exoplayer2.BaseRenderer: void onStreamChanged(com.google.android.exoplayer2.Format[],long)
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand: <clinit>()
com.google.android.exoplayer2.source.DefaultCompositeSequenceableLoaderFactory: com.google.android.exoplayer2.source.SequenceableLoader createCompositeSequenceableLoader(com.google.android.exoplayer2.source.SequenceableLoader[])
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onStreamChanged(com.google.android.exoplayer2.Format[],long)
tv.danmaku.ijk.media.player.MediaPlayerProxy$7: MediaPlayerProxy$7(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnInfoListener)
androidx.core.graphics.TypefaceCompatBaseImpl$1: boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.engine.DataCacheKey: void updateDiskCacheKey(java.security.MessageDigest)
androidx.appcompat.view.menu.MenuWrapperICS: boolean hasVisibleItems()
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignFromView(android.view.View,int)
com.google.android.exoplayer2.ExoPlayerImpl: long getContentPosition()
com.google.android.exoplayer2.util.Util: int getAudioTrackChannelConfig(int)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.media.AudioAttributesImplBase: int hashCode()
androidx.appcompat.content.res.AppCompatResources: boolean isColorInt(android.content.Context,int)
androidx.appcompat.view.menu.ActionMenuItem: android.graphics.PorterDuff$Mode getIconTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter)
com.bumptech.glide.load.resource.bitmap.CenterInside: void updateDiskCacheKey(java.security.MessageDigest)
androidx.appcompat.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: int access$100(com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuBuilder access$500(androidx.appcompat.widget.ActionMenuPresenter)
androidx.appcompat.app.AppCompatDialog: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.upstream.ParsingLoadable: void cancelLoad()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.metadata.Metadata buildMetadata(java.util.List,java.util.List)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onMediaPeriodReleased(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onVideoEnabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: void maybeSampleSyncParams()
cn.jzvd.demo.CustomJzvd.JzvdStdShowTitleAfterFullscreen: JzvdStdShowTitleAfterFullscreen(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.bumptech.glide.load.resource.gif.GifDrawableEncoder: GifDrawableEncoder()
com.bumptech.glide.request.SingleRequest: android.graphics.drawable.Drawable getErrorDrawable()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: int getLoadedPlaylistDiscontinuitySequence(com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist)
android.support.v4.media.session.ParcelableVolumeInfo: int describeContents()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspotBounds(int,int,int,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getTrafficStatisticByteCount()
androidx.core.view.WindowInsetsCompat$Builder: androidx.core.view.WindowInsetsCompat build()
androidx.core.content.res.ComplexColorCompat: ComplexColorCompat(android.graphics.Shader,android.content.res.ColorStateList,int)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean isStalled(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager$1: int getParentStart()
androidx.versionedparcelable.VersionedParcel: java.lang.reflect.Method getReadMethod(java.lang.String)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int getLength()
com.google.android.exoplayer2.extractor.ts.Ac4Extractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
com.bumptech.glide.Registry: Registry()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void getCodecBuffers(android.media.MediaCodec)
androidx.appcompat.widget.SearchView: void onSearchClicked()
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuPresenter: androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter)
tv.danmaku.ijk.media.player.IjkTimedText: java.lang.String getText()
android.support.v4.media.session.PlaybackStateCompat$1: android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isHdr10PlusOutOfBandMetadataSupported()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void addViewInt(android.view.View,int,boolean)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: int parseOptionalIntAttr(java.lang.String,java.util.regex.Pattern,int)
com.google.android.exoplayer2.audio.SonicAudioProcessor: boolean isEnded()
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder: ByteBufferBitmapDecoder(com.bumptech.glide.load.resource.bitmap.Downsampler)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setOnVideoSizeChangedListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener)
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource: android.graphics.drawable.BitmapDrawable get()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int indexOfTransition(int,int)
androidx.core.widget.NestedScrollView: boolean startNestedScroll(int,int)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch: int compareTo(com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void markForRedelivery()
com.google.android.exoplayer2.util.SlidingPercentile: SlidingPercentile(int)
com.bumptech.glide.load.resource.bitmap.CenterInside: CenterInside()
androidx.collection.MapCollections$KeySet: MapCollections$KeySet(androidx.collection.MapCollections)
androidx.appcompat.widget.Toolbar: int getChildHorizontalGravity(int)
androidx.appcompat.view.menu.MenuWrapperICS: android.view.SubMenu addSubMenu(int,int,int,int)
androidx.appcompat.app.AlertController: void setupCustomContent(android.view.ViewGroup)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl: int access$000(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$SampleStreamImpl)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: boolean canApplyTheme()
com.bumptech.glide.request.transition.NoTransition: boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter)
androidx.fragment.app.FragmentTransaction: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCachedBitmap(int,int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void scheduleNextWork(long,long)
com.google.android.exoplayer2.source.ClippingMediaPeriod: long getBufferedPositionUs()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo: TsPayloadReader$EsInfo(int,java.lang.String,java.util.List,byte[])
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: void floatElement(int,double)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$9: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
androidx.fragment.app.Fragment$3: void run()
androidx.appcompat.widget.SearchView$6: boolean onKey(android.view.View,int,android.view.KeyEvent)
android.support.v4.media.MediaDescriptionCompat$Builder: MediaDescriptionCompat$Builder()
com.google.android.exoplayer2.extractor.VorbisUtil: com.google.android.exoplayer2.extractor.VorbisUtil$CommentHeader readVorbisCommentHeader(com.google.android.exoplayer2.util.ParsableByteArray,boolean,boolean)
com.google.android.exoplayer2.extractor.VorbisBitArray: int getPosition()
androidx.core.util.LogWriter: void write(char[],int,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void maybeThrowPlaylistRefreshError()
com.google.android.exoplayer2.extractor.SeekMap$Unseekable: boolean isSeekable()
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowAdaptiveSelections(boolean)
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: void setFirstFrameOffset(long)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: short readShort()
com.google.android.exoplayer2.util.ParsableByteArray: long readLittleEndianUnsignedInt()
tv.danmaku.ijk.media.player.IMediaPlayer: void setLogEnabled(boolean)
org.slf4j.helpers.NOPLogger: void error(java.lang.String,java.lang.Throwable)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder: ProgressiveMediaPeriod$ExtractorHolder(com.google.android.exoplayer2.extractor.Extractor[])
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.Region getTransparentRegion()
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: TimeSignalCommand(long,long)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int invalidateAfter(int)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isCompatTintEnabled()
androidx.recyclerview.widget.RecyclerView: int computeVerticalScrollRange()
androidx.appcompat.view.menu.MenuItemImpl: android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable)
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel)
androidx.core.content.res.TypedArrayUtils: android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[])
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String toString()
androidx.appcompat.widget.AppCompatSpinner$SavedState: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean isLoading()
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.util.pool.StateVerifier getVerifier()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: com.google.android.exoplayer2.extractor.SeekMap getSeekMap(long,long)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter$VideoHolder: ActivityListViewMultiHolder$VideoListAdapter$VideoHolder(cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.exoplayer2.text.cea.CeaUtil: int readNon255TerminatedValue(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.text.PrecomputedTextCompat: char charAt(int)
androidx.appcompat.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)
androidx.appcompat.widget.MenuPopupWindow: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.recyclerview.widget.RecyclerView$Adapter: RecyclerView$Adapter()
androidx.recyclerview.widget.RecyclerView: boolean hasUpdatedView()
com.bumptech.glide.gifdecoder.StandardGifDecoder: StandardGifDecoder(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider)
com.bumptech.glide.manager.NullConnectivityMonitor: void onStart()
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry: androidx.core.provider.FontRequest getRequest()
com.google.android.exoplayer2.metadata.id3.GeobFrame: boolean equals(java.lang.Object)
androidx.appcompat.widget.TintTypedArray: TintTypedArray(android.content.Context,android.content.res.TypedArray)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: boolean readBoolean()
com.google.android.exoplayer2.upstream.DataSpec: java.lang.String getHttpMethodString()
androidx.core.provider.FontsContractCompat$3: void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void setSliceType(int)
com.bumptech.glide.load.engine.EngineJob: void cancel()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: int getTrackId()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void processAtomEnded(long)
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.danikula.videocache.file.LruDiskUsage: void access$000(com.danikula.videocache.file.LruDiskUsage,java.io.File)
cn.jzvd.demo.ActivityApiUISmallChange: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: boolean skipFully(int,boolean)
com.google.android.exoplayer2.extractor.ogg.OggPacket: int calculatePacketSize(int)
androidx.core.view.accessibility.AccessibilityEventCompat: int getContentChangeTypes(android.view.accessibility.AccessibilityEvent)
tv.danmaku.ijk.media.player.MediaPlayerProxy: int getVideoSarNum()
com.google.android.exoplayer2.util.ParsableNalUnitBitArray: boolean readBit()
androidx.appcompat.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)
androidx.core.graphics.PathParser$PathDataNode: void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path)
com.google.android.exoplayer2.source.CompositeSequenceableLoader: boolean isLoading()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean)
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.fragment.app.FragmentTransitionCompat21: void removeTarget(java.lang.Object,android.view.View)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$MediaDataSourceProxy: long getSize()
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: <clinit>()
androidx.appcompat.widget.VectorEnabledTintResources: <clinit>()
com.google.android.exoplayer2.source.SinglePeriodTimeline: SinglePeriodTimeline(long,long,long,long,long,long,boolean,boolean,boolean,java.lang.Object,java.lang.Object)
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper(android.content.Context,android.content.res.Resources$Theme)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: void parseGaSpecificConfig(com.google.android.exoplayer2.util.ParsableBitArray,int,int)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement: long access$000(com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader$MasterElement)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: int getSeekFrameHeader(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.extractor.ogg.StreamReader$UnseekableOggSeeker: long read(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void queueInput(java.nio.ByteBuffer)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: Mp3Extractor(int,long)
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory: com.bumptech.glide.load.data.DataFetcher build(android.net.Uri)
com.google.android.exoplayer2.metadata.id3.BinaryFrame: boolean equals(java.lang.Object)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap: long getDurationUs()
androidx.appcompat.view.menu.CascadingMenuPopup: <clinit>()
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
cn.jzvd.demo.ActivityListViewMultiHolder$1: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int)
com.bumptech.glide.load.PreferredColorSpace: com.bumptech.glide.load.PreferredColorSpace[] values()
androidx.recyclerview.widget.LinearLayoutManager: void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean isPendingReset()
androidx.appcompat.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)
com.google.android.exoplayer2.source.hls.playlist.FilteringHlsPlaylistParserFactory: FilteringHlsPlaylistParserFactory(com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory,java.util.List)
androidx.appcompat.view.menu.MenuBuilder: void setGroupDividerEnabled(boolean)
org.slf4j.LoggerFactory: <clinit>()
com.google.android.exoplayer2.extractor.ts.PsExtractor: void seek(long,long)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: DrmInitData$SchemeData(java.util.UUID,java.lang.String,byte[])
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: void seek(long)
com.google.android.exoplayer2.util.ParsableBitArray: int getBytePosition()
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long calculateNextSearchBytePosition(long,long,long,long,long,long)
com.google.android.exoplayer2.upstream.DataSourceInputStream: void close()
com.google.android.exoplayer2.extractor.mp4.Sniffer: <clinit>()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setTextSizeInternal(int,float)
com.google.android.exoplayer2.mediacodec.MediaFormatUtil: void maybeSetColorInfo(android.media.MediaFormat,com.google.android.exoplayer2.video.ColorInfo)
com.bumptech.glide.load.engine.DecodePath: DecodePath(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,androidx.core.util.Pools$Pool)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: int parseTextAlignment(java.lang.String)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap,int,int,com.bumptech.glide.load.Options)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter$TextViewHolder: ActivityListViewMultiHolder$VideoListAdapter$TextViewHolder(cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.bumptech.glide.load.model.FileLoader$FileFetcher: FileLoader$FileFetcher(java.io.File,com.bumptech.glide.load.model.FileLoader$FileOpener)
com.bumptech.glide.load.engine.DecodeJob$RunReason: DecodeJob$RunReason(java.lang.String,int)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: long parseTimeExpression(java.lang.String,com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getBaseline()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride$1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride[] newArray(int)
com.google.android.exoplayer2.metadata.flac.VorbisComment: void writeToParcel(android.os.Parcel,int)
com.danikula.videocache.HttpProxyCache: void onCachePercentsAvailableChanged(int)
com.bumptech.glide.load.engine.EngineResource: void acquire()
com.bumptech.glide.Registry$NoModelLoaderAvailableException: Registry$NoModelLoaderAvailableException(java.lang.Object)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.extractor.TrackOutput getMappedTrackOutput(int,int)
android.support.v4.media.session.IMediaControllerCallback$Stub: android.os.IBinder asBinder()
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setFontColor(int)
com.bumptech.glide.load.engine.LockedResource: void release()
androidx.fragment.app.FragmentManagerImpl: void dispatchActivityCreated()
com.google.android.exoplayer2.decoder.SimpleDecoder$1: void run()
androidx.appcompat.view.menu.MenuDialogHelper: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int access$302(tv.danmaku.ijk.media.player.IjkMediaPlayer,int)
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: long getTrimmedFrameCount()
androidx.loader.app.LoaderManagerImpl$LoaderInfo: void removeObserver(androidx.lifecycle.Observer)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: void onSeekStarted()
androidx.exifinterface.media.ExifInterface: void parseTiffHeaders(androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream,int)
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: boolean handles(android.net.Uri,com.bumptech.glide.load.Options)
androidx.fragment.app.FragmentManagerImpl: void forcePostponedTransactions()
androidx.fragment.app.BackStackState: void writeToParcel(android.os.Parcel,int)
androidx.versionedparcelable.ParcelImpl: <clinit>()
com.danikula.videocache.IgnoreHostProxySelector: IgnoreHostProxySelector(java.net.ProxySelector,java.lang.String,int)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setUnderline(boolean)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: int hashCode()
com.bumptech.glide.load.resource.bitmap.CenterInside: boolean equals(java.lang.Object)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: TtmlDecoder()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onPositionReset(long,boolean)
com.bumptech.glide.load.data.HttpUrlFetcher: java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void setAudioStreamType(int)
cn.jzvd.JzvdStd: void onStateAutoComplete()
androidx.collection.LongSparseArray: void clear()
androidx.recyclerview.widget.RecyclerView$ViewHolder: void setIsRecyclable(boolean)
org.slf4j.event.SubstituteLoggingEvent: void setLogger(org.slf4j.helpers.SubstituteLogger)
com.google.android.exoplayer2.ui.SubtitleView: float resolveTextSize(int,float,int,int)
androidx.recyclerview.widget.RecyclerView: android.view.View findContainingItemView(android.view.View)
com.google.android.exoplayer2.source.chunk.Chunk: long getDurationUs()
androidx.activity.ImmLeaksCleaner: <clinit>()
androidx.appcompat.widget.ListPopupWindow: <clinit>()
androidx.lifecycle.ViewModelStore: void clear()
androidx.appcompat.widget.AppCompatSeekBar: void drawableStateChanged()
android.support.v4.os.IResultReceiver$Stub: android.os.IBinder asBinder()
com.google.android.exoplayer2.util.Util: boolean isEncodingHighResolutionIntegerPcm(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setExclusiveCheckable(boolean)
com.bumptech.glide.load.data.BufferedOutputStream: void flush()
com.google.android.exoplayer2.ui.SubtitleView: float resolveCueTextSize(com.google.android.exoplayer2.text.Cue,int,int)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer: VideoDecoder$ParcelFileDescriptorInitializer()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onProcessedOutputBuffer(long)
androidx.fragment.app.Fragment: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void resetCueBuilders()
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier: void throwIfRecycled()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setIsTimestampMaster(boolean)
com.google.android.exoplayer2.extractor.ogg.FlacReader: long preparePayload(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void onLoadCanceled(com.google.android.exoplayer2.source.chunk.Chunk,long,long,boolean)
com.google.android.exoplayer2.source.SampleDataQueue: void rewind()
androidx.appcompat.view.menu.MenuBuilder: android.view.MenuItem getItem(int)
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist: java.util.List getMediaPlaylistUrls(java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: java.lang.String toString()
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int length()
androidx.appcompat.view.menu.MenuBuilder: MenuBuilder(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.core.provider.FontsContractCompat: java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources)
com.google.android.exoplayer2.ExoPlayerImpl: boolean isPlayingAd()
com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24: CryptoInfo$PatternHolderV24(android.media.MediaCodec$CryptoInfo,com.google.android.exoplayer2.decoder.CryptoInfo$1)
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1: com.bumptech.glide.load.engine.EngineJob create()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompatV21: boolean secureDecodersExplicit()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.appcompat.widget.Toolbar: boolean hasExpandedActionView()
cn.jzvd.demo.CustomMedia.JZMediaExo: void onPlayerStateChanged(boolean,int)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setLineAnchor(int)
androidx.lifecycle.LiveData$LifecycleBoundObserver: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
com.google.android.exoplayer2.audio.DefaultAudioSink: int getMaximumEncodedRateBytesPerSecond(int)
androidx.appcompat.widget.SearchView: void updateViewsVisibility(boolean)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioUpdateDispatcher: void run()
androidx.recyclerview.widget.RecyclerView: void draw(android.graphics.Canvas)
com.bumptech.glide.load.engine.SourceGenerator: boolean isCurrentRequest(com.bumptech.glide.load.model.ModelLoader$LoadData)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setAlpha(int)
androidx.appcompat.widget.AppCompatBackgroundHelper: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap: long getTimeUsAtPosition(long)
com.google.android.exoplayer2.ui.DefaultTrackNameProvider: java.lang.String joinWithSeparator(java.lang.String[])
androidx.exifinterface.media.ExifInterface: boolean isThumbnail(java.util.HashMap)
com.google.android.exoplayer2.ui.TrackSelectionView: void setAllowMultipleOverrides(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setTintList(android.content.res.ColorStateList)
com.google.android.exoplayer2.ExoPlayerImpl: void handlePlaybackInfo(com.google.android.exoplayer2.PlaybackInfo,int,boolean,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void pause()
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker: void release(java.lang.String)
com.google.android.exoplayer2.audio.DefaultAudioSink: <clinit>()
com.google.android.exoplayer2.upstream.BaseDataSource: void bytesTransferred(int)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.google.android.exoplayer2.util.Util: java.lang.String toUpperInvariant(java.lang.String)
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager: void reset()
androidx.collection.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
cn.jzvd.demo.ActivityApi: void onPause()
androidx.appcompat.view.menu.ListMenuPresenter: void updateMenuView(boolean)
com.google.android.exoplayer2.source.hls.HlsChunkSource: boolean onPlaylistError(android.net.Uri,long)
androidx.fragment.app.FragmentPagerAdapter: android.os.Parcelable saveState()
com.google.android.exoplayer2.metadata.Metadata: <clinit>()
cn.jzvd.Jzvd: void onStatePlaying()
androidx.collection.LongSparseArray: void put(long,java.lang.Object)
com.google.android.exoplayer2.upstream.ParsingLoadable: java.lang.Object getResult()
androidx.appcompat.widget.DropDownListView: void dispatchDraw(android.graphics.Canvas)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getDirtyFile(int)
com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader: boolean parsePayload(com.google.android.exoplayer2.util.ParsableByteArray,long)
com.google.android.exoplayer2.trackselection.TrackSelectionParameters$Builder: com.google.android.exoplayer2.trackselection.TrackSelectionParameters build()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: long scaleTimecodeToUs(long)
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: java.lang.String toString()
com.bumptech.glide.module.ManifestParser: ManifestParser(android.content.Context)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader: boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options)
com.bumptech.glide.request.ThumbnailRequestCoordinator: ThumbnailRequestCoordinator(java.lang.Object,com.bumptech.glide.request.RequestCoordinator)
com.google.android.exoplayer2.source.hls.playlist.FilteringHlsPlaylistParserFactory: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser createPlaylistParser(com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: void addListener(android.os.Handler,com.google.android.exoplayer2.drm.DefaultDrmSessionEventListener)
com.bumptech.glide.request.target.CustomTarget: void onStop()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView)
cn.jzvd.JZDataSource: JZDataSource(java.util.LinkedHashMap,java.lang.String)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void release()
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: <clinit>()
com.danikula.videocache.HttpProxyCacheServerClients: int getClientsCount()
com.google.android.exoplayer2.text.cea.CeaDecoder: void releaseInputBuffer(com.google.android.exoplayer2.text.cea.CeaDecoder$CeaInputBuffer)
androidx.fragment.app.FragmentState$1: androidx.fragment.app.FragmentState[] newArray(int)
cn.jzvd.JZMediaInterface: void setSurface(android.view.Surface)
androidx.core.widget.NestedScrollView: void measureChild(android.view.View,int,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onInputFormatChanged(com.google.android.exoplayer2.FormatHolder)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: DefaultHlsPlaylistTracker(com.google.android.exoplayer2.source.hls.HlsDataSourceFactory,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory,double)
tv.danmaku.ijk.media.player.IjkTimedText: android.graphics.Rect getBounds()
androidx.appcompat.view.ActionBarPolicy: int getTabContainerHeight()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: <clinit>()
androidx.exifinterface.media.ExifInterface: boolean isWebpFormat(byte[])
cn.jzvd.demo.ActivityTinyWindow: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.source.ExtractorMediaSource: void onChildSourceInfoRefreshed(java.lang.Object,com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.audio.Sonic: int copyInputToOutput(int)
com.google.android.exoplayer2.source.ClippingMediaPeriod: void maybeThrowPrepareError()
com.google.android.exoplayer2.MediaPeriodQueue: boolean updateForPlaybackModeChange()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: DefaultTrackSelector$Parameters(android.os.Parcel)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: java.lang.String getFrameId(int,int,int,int,int)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickVideoImageDiaplayAdapter(android.view.View)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void maybeThrowPrimaryPlaylistRefreshError()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
cn.jzvd.demo.ActivityDirectPlay: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand: <clinit>()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: boolean canKeepCodecWithFlush(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.audio.AudioCapabilities: <clinit>()
androidx.core.view.NestedScrollingChildHelper: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
tv.danmaku.ijk.media.player.AndroidMediaPlayer: boolean isPlayable()
androidx.fragment.app.FragmentTransitionImpl$3: void run()
com.google.android.exoplayer2.SimpleExoPlayer: boolean getPlayWhenReady()
com.bumptech.glide.manager.ActivityFragmentLifecycle: void onStart()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createULong(long,java.nio.ByteOrder)
cn.jzvd.JzvdStd: JzvdStd(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void clearReturnedFromScrapFlag()
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: boolean access$200(com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate)
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: VideoRendererEventListener$EventDispatcher(android.os.Handler,com.google.android.exoplayer2.video.VideoRendererEventListener)
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory: ResourceLoader$FileDescriptorFactory(android.content.res.Resources)
com.google.android.exoplayer2.trackselection.BaseTrackSelection: int indexOf(com.google.android.exoplayer2.Format)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.AppCompatEditText: void drawableStateChanged()
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean isLive()
com.google.android.exoplayer2.source.SampleDataQueue: void discardDownstreamTo(long)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: void release()
com.bumptech.glide.load.engine.DecodePath: com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.exoplayer2.util.Util: boolean areEqual(java.lang.Object,java.lang.Object)
androidx.core.content.res.ComplexColorCompat: boolean isStateful()
com.bumptech.glide.load.engine.SourceGenerator: void onLoadFailedInternal(com.bumptech.glide.load.model.ModelLoader$LoadData,java.lang.Exception)
com.bumptech.glide.manager.RequestManagerFragment: com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode()
androidx.appcompat.app.WindowDecorActionBar: void onContentScrollStarted()
tv.danmaku.ijk.media.player.AndroidMediaPlayer: void setWakeMode(android.content.Context,int)
androidx.appcompat.app.WindowDecorActionBar: void setDisplayOptions(int,int)
com.bumptech.glide.load.model.GlideUrl: java.util.Map getHeaders()
com.bumptech.glide.load.model.UriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.android.exoplayer2.metadata.Metadata: java.lang.String toString()
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void processMoovAtom(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
com.bumptech.glide.load.model.GlideUrl: void updateDiskCacheKey(java.security.MessageDigest)
com.google.android.exoplayer2.BaseRenderer: com.google.android.exoplayer2.FormatHolder getFormatHolder()
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean isAutoMirrored()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: boolean canConstantState()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters$1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters createFromParcel(android.os.Parcel)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void clearAutoSizeConfiguration()
com.google.android.exoplayer2.extractor.DummyTrackOutput: DummyTrackOutput()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader: DefaultImageHeaderParser$ByteBufferReader(java.nio.ByteBuffer)
cn.jzvd.demo.CustomMedia.JZMediaExo: void start()
androidx.fragment.app.FragmentManager: <clinit>()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setChangingConfigurations(int)
com.google.android.exoplayer2.extractor.ExtractorUtil: int peekToLength(com.google.android.exoplayer2.extractor.ExtractorInput,byte[],int,int)
androidx.appcompat.app.AppCompatDelegate: int getDefaultNightMode()
androidx.appcompat.app.WindowDecorActionBar: androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View)
androidx.fragment.app.FragmentManagerImpl: void doPendingDeferredStart()
com.bumptech.glide.util.pool.FactoryPools$FactoryPool: boolean release(java.lang.Object)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: android.text.Layout$Alignment convertTextAlignment(int)
androidx.loader.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
androidx.appcompat.app.AppCompatDelegateImpl$ConfigurationImplApi26: void generateConfigDelta_colorMode(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.bumptech.glide.Registry: com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder)
cn.jzvd.JzvdStd$1: JzvdStd$1(cn.jzvd.JzvdStd)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void readEncryptionData(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: MediaCodecAudioRenderer(android.content.Context,com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.drm.DrmSessionManager,boolean,boolean,android.os.Handler,com.google.android.exoplayer2.audio.AudioRendererEventListener,com.google.android.exoplayer2.audio.AudioSink)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.fragment.app.FragmentManagerViewModel: boolean equals(java.lang.Object)
androidx.appcompat.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)
androidx.appcompat.widget.AlertDialogLayout: boolean tryOnMeasure(int,int)
androidx.appcompat.widget.ListPopupWindow$3: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
androidx.core.content.ContextCompat: int getColor(android.content.Context,int)
androidx.appcompat.app.AlertController$2: AlertController$2(androidx.appcompat.app.AlertController,android.view.View,android.view.View)
com.google.android.exoplayer2.util.FlacStreamMetadata: int getBitsPerSampleLookupKey(int)
androidx.recyclerview.widget.RecyclerView: void addFocusables(java.util.ArrayList,int,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: android.os.Handler access$1000(com.google.android.exoplayer2.source.ProgressiveMediaPeriod)
androidx.recyclerview.widget.LinearLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
androidx.core.graphics.TypefaceCompatBaseImpl: TypefaceCompatBaseImpl()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentById(int)
com.google.android.exoplayer2.audio.Sonic: void getOutput(java.nio.ShortBuffer)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: int peekId3Header(com.google.android.exoplayer2.extractor.ExtractorInput)
android.support.v4.media.session.IMediaSession$Stub$Proxy: void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback)
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setHotspot(float,float)
com.google.android.exoplayer2.metadata.id3.CommentFrame$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.Engine: com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean isAttachedToWindow()
com.google.android.exoplayer2.decoder.OutputBuffer: OutputBuffer()
com.google.android.exoplayer2.MediaPeriodHolder: com.google.android.exoplayer2.trackselection.TrackSelectorResult selectTracks(float,com.google.android.exoplayer2.Timeline)
com.bumptech.glide.request.BaseRequestOptions: int hashCode()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key)
com.google.android.exoplayer2.util.MimeTypes: java.lang.String getCustomMimeTypeForCodec(java.lang.String)
androidx.appcompat.view.menu.CascadingMenuPopup: int getInitialMenuPosition()
com.bumptech.glide.load.data.StreamLocalUriFetcher: void close(java.io.InputStream)
com.google.android.exoplayer2.util.TimestampAdjuster: TimestampAdjuster(long)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand parseFromSection(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.fragment.app.FragmentState: int describeContents()
com.google.android.exoplayer2.extractor.flac.FlacExtractor: void getFrameStartMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.fragment.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.danikula.videocache.sourcestorage.SourceInfoStorageFactory: com.danikula.videocache.sourcestorage.SourceInfoStorage newSourceInfoStorage(android.content.Context)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.source.IcyDataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)
androidx.appcompat.view.menu.BaseMenuWrapper: BaseMenuWrapper(android.content.Context)
com.bumptech.glide.GlideExperiments: boolean isEnabled(java.lang.Class)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: <clinit>()
com.google.android.exoplayer2.extractor.ts.Ac3Extractor: Ac3Extractor()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void floatElement(int,double)
com.google.android.exoplayer2.extractor.mp4.TrackFragment: void fillEncryptionData(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: <clinit>()
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.bumptech.glide.manager.RequestManagerRetriever: void assertNotDestroyed(android.app.Activity)
cn.jzvd.demo.ActivityListViewRecyclerView: boolean onOptionsItemSelected(android.view.MenuItem)
androidx.versionedparcelable.VersionedParcel: androidx.versionedparcelable.VersionedParcelable readVersionedParcelable()
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder: BitmapDrawableDecoder(android.content.res.Resources,com.bumptech.glide.load.ResourceDecoder)
com.google.android.exoplayer2.util.ParsableByteArray: void reset(byte[])
com.bumptech.glide.gifdecoder.StandardGifDecoder: int readBlock()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createString(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspot(float,float)
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier: StateVerifier$DefaultStateVerifier()
androidx.appcompat.widget.ToolbarWidgetWrapper: void setVisibility(int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean seekInsideBufferUs(boolean[],long)
com.google.android.exoplayer2.metadata.id3.InternalFrame: void writeToParcel(android.os.Parcel,int)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Bitmap fitCenter(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: ThumbFetcher(android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener)
com.bumptech.glide.util.Util$1: <clinit>()
androidx.appcompat.widget.Toolbar$SavedState$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isVendor(android.media.MediaCodecInfo)
com.google.android.exoplayer2.metadata.MetadataRenderer: void invokeRenderer(com.google.android.exoplayer2.metadata.Metadata)
com.google.android.exoplayer2.extractor.ogg.StreamReader$UnseekableOggSeeker: StreamReader$UnseekableOggSeeker()
com.bumptech.glide.disklrucache.StrictLineReader$1: StrictLineReader$1(com.bumptech.glide.disklrucache.StrictLineReader,int)
com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean seekInsideBufferUs(long)
androidx.lifecycle.ViewModel: void clear()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: boolean matches(java.util.UUID)
com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor: void processMaybeSilence(java.nio.ByteBuffer)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride$1: java.lang.Object[] newArray(int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean isSeekable()
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode: SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode(com.bumptech.glide.manager.SupportRequestManagerFragment)
com.google.android.exoplayer2.ui.SubtitleView: com.google.android.exoplayer2.text.CaptionStyleCompat getUserCaptionStyleV19()
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2: GlideExecutor$UncaughtThrowableStrategy$2()
com.bumptech.glide.load.engine.executor.GlideExecutor: com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor()
com.danikula.videocache.Pinger: boolean ping(int,int)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: ActivityListViewMultiHolder$VideoListAdapter(cn.jzvd.demo.ActivityListViewMultiHolder,android.content.Context)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event parseFromSection(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.signature.EmptySignature: EmptySignature()
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void enabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.view.menu.MenuBuilder: void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.google.android.exoplayer2.decoder.Buffer: boolean hasSupplementalData()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
androidx.appcompat.widget.AppCompatTextHelper: void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray)
com.google.android.exoplayer2.source.TrackGroup: TrackGroup(android.os.Parcel)
com.google.android.exoplayer2.util.ParsableBitArray: long readBitsToLong(int)
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager: void registerForLayoutCallback(android.view.View)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.android.exoplayer2.Player$EventListener: void onPlayerStateChanged(boolean,int)
androidx.versionedparcelable.ParcelImpl$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void drawableStateChanged()
com.google.android.exoplayer2.video.ColorInfo$1: com.google.android.exoplayer2.video.ColorInfo createFromParcel(android.os.Parcel)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getDuration()
androidx.appcompat.view.SupportActionModeWrapper: void setSubtitle(java.lang.CharSequence)
com.bumptech.glide.load.resource.gif.GifDrawable: void notifyAnimationEndToListeners()
com.bumptech.glide.load.resource.gif.StreamGifDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener maybeBuildDefaultDisplayListenerV17(android.content.Context)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.fragment.app.FragmentManagerImpl$3$1: void run()
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String)
androidx.recyclerview.widget.RecyclerView: boolean isNestedScrollingEnabled()
androidx.appcompat.app.AlertController: void setCustomTitle(android.view.View)
androidx.appcompat.view.menu.MenuAdapter: androidx.appcompat.view.menu.MenuBuilder getAdapterMenu()
com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy: long getBlacklistDurationMsFor(int,long,java.io.IOException,int)
com.bumptech.glide.load.resource.bitmap.VideoDecoder: com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
com.bumptech.glide.util.ContentLengthInputStream: int available()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean selectTracks(com.google.android.exoplayer2.trackselection.TrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long,boolean)
com.google.android.exoplayer2.text.pgs.PgsDecoder: com.google.android.exoplayer2.text.Cue readNextSection(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder)
androidx.appcompat.widget.SearchView: void onQueryRefine(java.lang.CharSequence)
com.google.android.exoplayer2.text.cea.Cea608Decoder: char getExtendedWestEuropeanChar(byte,byte)
cn.jzvd.JZDataSource: JZDataSource(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet)
androidx.appcompat.view.menu.MenuBuilder: android.content.Context getContext()
androidx.fragment.app.FragmentTransition$1: FragmentTransition$1(java.util.ArrayList)
com.bumptech.glide.gifdecoder.StandardGifDecoder: void setDefaultBitmapConfig(android.graphics.Bitmap$Config)
com.bumptech.glide.util.pool.StateVerifier: StateVerifier()
androidx.appcompat.view.menu.MenuBuilder: androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)
org.slf4j.impl.AndroidLoggerAdapter: void info(java.lang.String)
com.bumptech.glide.request.target.CustomTarget: CustomTarget(int,int)
androidx.collection.MapCollections$EntrySet: boolean addAll(java.util.Collection)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)
com.google.android.exoplayer2.extractor.ts.PesReader: PesReader(com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)
com.bumptech.glide.load.model.FileLoader$StreamFactory$1: java.io.InputStream open(java.io.File)
androidx.appcompat.widget.AppCompatImageHelper: boolean shouldApplyFrameworkTintUsingColorFilter()
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1: java.lang.Object create()
com.google.android.exoplayer2.trackselection.FixedTrackSelection: void updateSelectedTrack(long,long,long,java.util.List,com.google.android.exoplayer2.source.chunk.MediaChunkIterator[])
com.google.android.exoplayer2.extractor.mp3.XingSeeker: com.google.android.exoplayer2.extractor.SeekMap$SeekPoints getSeekPoints(long)
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Rect getDestRect()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void prepareAsync()
com.google.android.exoplayer2.SimpleExoPlayer: void addMetadataOutput(com.google.android.exoplayer2.metadata.MetadataOutput)
androidx.appcompat.graphics.drawable.DrawableContainer: int resolveDensity(android.content.res.Resources,int)
androidx.fragment.app.FragmentFactory: java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String)
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu: ActionMenuPresenter$ActionButtonSubmenu(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: void onDismiss()
com.danikula.videocache.file.Files$LastModifiedComparator: int compare(java.lang.Object,java.lang.Object)
com.bumptech.glide.load.engine.DecodeHelper: java.util.List getLoadData()
androidx.cursoradapter.widget.CursorAdapter: java.lang.Object getItem(int)
com.google.android.exoplayer2.source.SampleDataQueue: SampleDataQueue(com.google.android.exoplayer2.upstream.Allocator)
androidx.fragment.app.SuperNotCalledException: SuperNotCalledException(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToStart(boolean,boolean)
androidx.fragment.app.FragmentHostCallback: boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: SimpleExoPlayer$ComponentListener(com.google.android.exoplayer2.SimpleExoPlayer,com.google.android.exoplayer2.SimpleExoPlayer$1)
com.google.android.exoplayer2.DefaultMediaClock: boolean shouldUseStandaloneClock(boolean)
com.google.android.exoplayer2.extractor.ts.TsExtractor: TsExtractor(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getTitle()
androidx.core.graphics.Insets: boolean equals(java.lang.Object)
androidx.core.view.accessibility.AccessibilityClickableSpanCompat: void onClick(android.view.View)
tv.danmaku.ijk.media.player.MediaPlayerProxy: boolean isPlaying()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isFormatSupported(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.audio.SonicAudioProcessor: void reset()
com.danikula.videocache.HttpProxyCacheServerClients: HttpProxyCacheServerClients(java.lang.String,com.danikula.videocache.Config)
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeUpdatePlayingPeriod()
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager: boolean hasResourceToEncode()
androidx.core.text.PrecomputedTextCompat: int getSpanStart(java.lang.Object)
tv.danmaku.ijk.media.player.MediaPlayerProxy$5: MediaPlayerProxy$5(tv.danmaku.ijk.media.player.MediaPlayerProxy,tv.danmaku.ijk.media.player.IMediaPlayer$OnVideoSizeChangedListener)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createVideoContainerFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.google.android.exoplayer2.metadata.Metadata,int,int,int,float,java.util.List,int,int)
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.bumptech.glide.load.model.MultiModelLoaderFactory: MultiModelLoaderFactory(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory)
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter: int getCount()
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1: com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand[] newArray(int)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.core.graphics.drawable.DrawableCompat: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView$LayoutManager: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.graphics.TypefaceCompatApi24Impl: boolean isUsable()
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: void setScreenFullscreen()
androidx.appcompat.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
com.google.android.exoplayer2.ExoPlayerFactory: com.google.android.exoplayer2.SimpleExoPlayer newSimpleInstance(android.content.Context,com.google.android.exoplayer2.RenderersFactory,com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.LoadControl,com.google.android.exoplayer2.drm.DrmSessionManager,android.os.Looper)
androidx.appcompat.view.SupportActionModeWrapper: java.lang.Object getTag()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag buildWholeCueVirtualTag()
com.bumptech.glide.load.resource.bitmap.HardwareConfigState: boolean isFdSizeBelowHardwareLimit()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.appcompat.view.menu.MenuItemImpl: char getNumericShortcut()
com.google.android.exoplayer2.metadata.id3.PrivFrame: <clinit>()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void start()
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaOutputBuffer: void release()
androidx.core.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.extractor.FlacMetadataReader: com.google.android.exoplayer2.metadata.Metadata readId3Metadata(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
com.bumptech.glide.load.data.BufferedOutputStream: void release()
com.bumptech.glide.load.resource.gif.GifDrawableResource: int getSize()
androidx.collection.SimpleArrayMap: java.lang.Object valueAt(int)
cn.jzvd.JzvdStd: void changeStartButtonSize(int)
com.google.android.exoplayer2.util.Util: byte[] getUtf8Bytes(java.lang.String)
com.bumptech.glide.disklrucache.Util: void closeQuietly(java.io.Closeable)
com.bumptech.glide.load.model.StreamEncoder: StreamEncoder(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: <clinit>()
androidx.fragment.app.FragmentManagerImpl: int reverseTransit(int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void maybeNotifyDroppedFrames()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: void setHotspotBounds(int,int,int,int)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: boolean hasValidAnchor()
androidx.appcompat.view.menu.MenuBuilder: void setGroupVisible(int,boolean)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder: ImageDecoderResourceDecoder()
com.bumptech.glide.request.SingleRequest: void setErrorPlaceholder()
androidx.appcompat.widget.SearchView$SearchAutoComplete$1: SearchView$SearchAutoComplete$1(androidx.appcompat.widget.SearchView$SearchAutoComplete)
androidx.appcompat.app.WindowDecorActionBar: void doHide(boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void prependViewToAllSpans(android.view.View)
androidx.fragment.app.FragmentHostCallback: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
com.bumptech.glide.load.engine.EngineJob: void addCallback(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean isMediaCodecExceptionV21(java.lang.IllegalStateException)
androidx.appcompat.widget.ForwardingListener$TriggerLongPress: void run()
com.google.android.exoplayer2.extractor.wav.WavExtractor: void release()
com.bumptech.glide.load.engine.DataCacheGenerator: DataCacheGenerator(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback)
androidx.appcompat.widget.Toolbar: int getChildTop(android.view.View,int)
com.google.android.exoplayer2.source.ExtractorMediaSource: void prepareSourceInternal(com.google.android.exoplayer2.upstream.TransferListener)
androidx.viewpager.widget.ViewPager: void drawableStateChanged()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScrollable(boolean)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: byte[] parseProjFromParent(com.google.android.exoplayer2.util.ParsableByteArray,int,int)
com.google.android.exoplayer2.extractor.ts.SpliceInfoSectionReader: SpliceInfoSectionReader()
com.google.android.exoplayer2.analytics.AnalyticsCollector: com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime generateLoadingMediaPeriodEventTime()
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory: com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String)
androidx.appcompat.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)
com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate: int access$300(com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdate)
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: android.view.View nextViewFromScrapList()
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver: void onInvalidated()
com.bumptech.glide.GenericTransitionOptions: GenericTransitionOptions()
org.slf4j.event.Level: org.slf4j.event.Level valueOf(java.lang.String)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator: SafeKeyGenerator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void setHotspotBounds(int,int,int,int)
com.google.android.exoplayer2.util.EventDispatcher: void removeListener(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.lifecycle.ReportFragment: void injectIfNeededIn(android.app.Activity)
com.google.android.exoplayer2.metadata.id3.CommentFrame$1: com.google.android.exoplayer2.metadata.id3.CommentFrame createFromParcel(android.os.Parcel)
androidx.fragment.app.FragmentViewLifecycleOwner: void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.util.ParsableBitArray: void skipBytes(int)
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource: android.graphics.Bitmap get()
androidx.collection.SimpleArrayMap: java.lang.Object get(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: void onMeasure(int,int)
androidx.core.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)
androidx.core.text.PrecomputedTextCompat: java.lang.CharSequence subSequence(int,int)
androidx.appcompat.resources.R$styleable: <clinit>()
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int)
androidx.appcompat.app.AlertController$AlertParams$3: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.bumptech.glide.load.data.HttpUrlFetcher: void cancel()
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable: void setEnabled(boolean)
cn.jzvd.demo.CustomMedia.JZMediaExo: com.google.android.exoplayer2.SimpleExoPlayer access$000(cn.jzvd.demo.CustomMedia.JZMediaExo)
androidx.appcompat.widget.VectorEnabledTintResources: boolean isCompatVectorFromResourcesEnabled()
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding: DownsampleStrategy$SampleSizeRounding(java.lang.String,int)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager$MediaDrmEventListener: DefaultDrmSessionManager$MediaDrmEventListener(com.google.android.exoplayer2.drm.DefaultDrmSessionManager)
androidx.core.content.ContextCompat: <clinit>()
org.slf4j.helpers.NOPLogger: void info(java.lang.String)
com.google.android.exoplayer2.text.subrip.SubripDecoder: SubripDecoder()
com.google.android.exoplayer2.metadata.id3.GeobFrame: java.lang.String toString()
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: boolean onInfo(android.media.MediaPlayer,int,int)
androidx.viewpager.widget.ViewPager$SavedState: ViewPager$SavedState(android.os.Parcel,java.lang.ClassLoader)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void render(long,long)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setPositionAnchor(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isActivityManifestHandlingUiMode()
com.bumptech.glide.load.resource.bitmap.Downsampler: int round(double)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)
com.bumptech.glide.disklrucache.DiskLruCache$Editor: boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor)
com.google.android.exoplayer2.ui.SubtitlePainter: void drawLayout(android.graphics.Canvas,boolean)
com.bumptech.glide.Glide: void onLowMemory()
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: WebvttCue$Builder()
com.google.android.exoplayer2.trackselection.FixedTrackSelection: int getSelectedIndex()
androidx.recyclerview.widget.RecyclerView: void scrollTo(int,int)
androidx.core.widget.NestedScrollView: android.view.View findFocusableViewInBounds(boolean,int,int)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo getLastReportedPlayingMediaPeriod()
com.google.android.exoplayer2.DefaultRenderersFactory: com.google.android.exoplayer2.Renderer[] createRenderers(android.os.Handler,com.google.android.exoplayer2.video.VideoRendererEventListener,com.google.android.exoplayer2.audio.AudioRendererEventListener,com.google.android.exoplayer2.text.TextOutput,com.google.android.exoplayer2.metadata.MetadataOutput,com.google.android.exoplayer2.drm.DrmSessionManager)
androidx.lifecycle.LiveData: void removeObserver(androidx.lifecycle.Observer)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame$1: com.google.android.exoplayer2.metadata.id3.TextInformationFrame[] newArray(int)
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: EngineJob$ResourceCallbacksAndExecutors(java.util.List)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter: DownsampleStrategy$FitCenter()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: com.google.android.exoplayer2.util.ParsableByteArray getSampleAndTrimBuffer(int,int)
androidx.appcompat.widget.ActionMenuPresenter: boolean flagActionItems()
androidx.appcompat.widget.DropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.appcompat.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)
com.google.android.exoplayer2.text.cea.CeaUtil: void consume(long,com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.extractor.TrackOutput[])
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer: void initialize(android.media.MediaMetadataRetriever,java.lang.Object)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions optionalFitCenter()
com.google.android.exoplayer2.upstream.ParsingLoadable: long bytesLoaded()
androidx.appcompat.widget.ActionMenuView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap: long access$1400(com.google.android.exoplayer2.extractor.BinarySearchSeeker$BinarySearchSeekMap)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean shouldContinueFeeding(long)
com.google.android.exoplayer2.source.ads.AdPlaybackState: int getAdGroupIndexAfterPositionUs(long,long)
com.google.android.exoplayer2.decoder.DecoderInputBuffer: boolean isEncrypted()
androidx.core.view.ViewGroupCompat: boolean isTransitionGroup(android.view.ViewGroup)
androidx.appcompat.app.AppCompatDialog: void setTitle(int)
com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread: void releaseInternal()
androidx.appcompat.app.WindowDecorActionBar: void updateVisibility(boolean)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)
cn.jzvd.Jzvd: long getDuration()
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker$TsPcrSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForPcrValueInBuffer(com.google.android.exoplayer2.util.ParsableByteArray,long,long)
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getBitRate()
com.google.android.exoplayer2.util.XmlPullParserUtil: java.lang.String getAttributeValue(org.xmlpull.v1.XmlPullParser,java.lang.String)
com.google.android.exoplayer2.audio.Sonic: void processStreamInput()
com.google.android.exoplayer2.MediaPeriodQueue: boolean areDurationsCompatible(long,long)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderTitle(int)
cn.jzvd.Jzvd: void dismissProgressDialog()
com.google.android.exoplayer2.extractor.ts.SeiReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.appcompat.widget.ActionMenuView: androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams()
cn.jzvd.Jzvd: void setUp(java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: MediaSessionCompat$QueueItem$1()
com.google.android.exoplayer2.text.ttml.TtmlNode: com.google.android.exoplayer2.text.ttml.TtmlNode buildTextNode(java.lang.String)
com.google.android.exoplayer2.text.webvtt.CssParser: java.lang.String parseNextToken(com.google.android.exoplayer2.util.ParsableByteArray,java.lang.StringBuilder)
androidx.fragment.app.FragmentManagerImpl: void cleanupExec()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
com.google.android.exoplayer2.DefaultLoadControl: void onReleased()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder: ParcelFileDescriptorRewinder$InternalRewinder(android.os.ParcelFileDescriptor)
com.google.android.exoplayer2.ExoPlayerImpl: int getCurrentAdGroupIndex()
cn.jzvd.JzvdStd: void onClickUiToggle()
androidx.recyclerview.widget.RecyclerView: void consumePendingUpdateOperations()
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat: android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: long framesToDurationUs(long)
android.support.v4.media.MediaBrowserCompat$MediaItem: int describeContents()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: int access$002(com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder,int)
com.bumptech.glide.load.model.GlideUrl: java.net.URL toURL()
com.google.android.exoplayer2.extractor.ts.H264Reader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
com.bumptech.glide.manager.SupportRequestManagerFragment: java.lang.String toString()
androidx.appcompat.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isAdaptive(android.media.MediaCodecInfo$CodecCapabilities)
androidx.appcompat.view.menu.MenuBuilder: int findGroupIndex(int)
androidx.viewpager.widget.ViewPager$2: float getInterpolation(float)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void dumpUnchecked()
com.google.android.exoplayer2.MediaPeriodQueue: boolean canKeepMediaPeriodHolder(com.google.android.exoplayer2.MediaPeriodInfo,com.google.android.exoplayer2.MediaPeriodInfo)
androidx.appcompat.widget.AppCompatBackgroundHelper: AppCompatBackgroundHelper(android.view.View)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void scheduleSelf(java.lang.Runnable,long)
androidx.appcompat.view.menu.MenuPopup: void setEpicenterBounds(android.graphics.Rect)
com.bumptech.glide.GlideBuilder$1: GlideBuilder$1(com.bumptech.glide.GlideBuilder)
com.bumptech.glide.manager.SupportRequestManagerFragment: void onAttach(android.content.Context)
com.google.android.exoplayer2.source.SampleQueue: int peekSourceId()
androidx.fragment.app.FragmentTransition: void setViewVisibility(java.util.ArrayList,int)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$Factory: com.bumptech.glide.load.data.DataRewinder build(java.lang.Object)
androidx.appcompat.view.menu.MenuPopupHelper: void onDismiss()
com.google.android.exoplayer2.MediaPeriodQueue: long resolvePeriodIndexToWindowSequenceNumber(java.lang.Object)
com.google.android.exoplayer2.text.cea.Cea608Decoder: java.util.List getDisplayCues()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void attachView(android.view.View,int)
androidx.recyclerview.widget.RecyclerView: void onPointerUp(android.view.MotionEvent)
androidx.recyclerview.widget.LinearLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void setJoiningDeadlineMs()
cn.jzvd.demo.ActivityMain: void clickDirectPlay(android.view.View)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,int,int,com.google.android.exoplayer2.Format,int,java.lang.Object,long,long,long,long,long)
com.bumptech.glide.manager.FirstFrameWaiter: void registerSelf(android.app.Activity)
androidx.fragment.app.FragmentManagerImpl: void executeOps(java.util.ArrayList,java.util.ArrayList,int,int)
androidx.appcompat.view.menu.MenuItemImpl$1: MenuItemImpl$1(androidx.appcompat.view.menu.MenuItemImpl)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean isBufferLate(long)
com.google.android.exoplayer2.util.NalUnitUtil: boolean isNalUnitSei(java.lang.String,byte)
com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker: long getDataEndPosition()
cn.jzvd.demo.ActivityApi: void clickCustomMediaPlayer(android.view.View)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: int access$100(com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData)
androidx.appcompat.widget.TintContextWrapper: android.content.Context wrap(android.content.Context)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void ensureBufferCapacity(int)
androidx.appcompat.widget.SearchView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToPreparing()
com.google.android.exoplayer2.drm.WidevineUtil: long getDurationRemainingSec(java.util.Map,java.lang.String)
androidx.appcompat.widget.ContentFrameLayout: void setDecorPadding(int,int,int,int)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: long[][] calculateAccumulatedSampleSizes(com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Mp4Track[])
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void surfaceCreated(android.view.SurfaceHolder)
androidx.core.provider.FontsContractCompat: java.util.List convertToByteArrayList(android.content.pm.Signature[])
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: boolean equals(java.lang.Object)
com.google.android.exoplayer2.util.TimestampAdjuster: void waitUntilInitialized()
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: VectorDrawableCompat$VPathRenderer()
tv.danmaku.ijk.media.player.IjkMediaPlayer: void deselectTrack(int)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.google.android.exoplayer2.upstream.Loader: void release()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String toString()
androidx.fragment.app.FragmentHostCallback: int onGetWindowAnimations()
androidx.appcompat.view.menu.SubMenuBuilder: android.view.MenuItem getItem()
com.google.android.exoplayer2.audio.Ac4Util: <clinit>()
com.google.android.exoplayer2.text.ttml.TtmlNode: android.text.SpannableStringBuilder cleanUpText(android.text.SpannableStringBuilder)
com.bumptech.glide.disklrucache.StrictLineReader: java.lang.String readLine()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean getPadding(android.graphics.Rect)
androidx.appcompat.app.AlertController: void setupContent(android.view.ViewGroup)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: long adjustReleaseTime(long,long)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context)
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: java.lang.Object getSelectionData()
androidx.fragment.app.Fragment: void performDestroy()
com.bumptech.glide.util.pool.FactoryPools$2: java.util.List create()
com.bumptech.glide.manager.SupportRequestManagerFragment: SupportRequestManagerFragment(com.bumptech.glide.manager.ActivityFragmentLifecycle)
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getItemViewType(int)
androidx.appcompat.widget.ScrollingTabContainerView: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void queueInputBuffer(com.google.android.exoplayer2.text.SubtitleInputBuffer)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$TkhdData: AtomParsers$TkhdData(int,long,int)
cn.jzvd.demo.CustomMedia.JZMediaExo: void setVolume(float,float)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.SubMenu getSubMenu()
com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy: DefaultLoadErrorHandlingPolicy()
com.google.android.exoplayer2.DefaultRenderersFactory: com.google.android.exoplayer2.audio.AudioProcessor[] buildAudioProcessors()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean codecNeedsSetOutputSurfaceWorkaround(java.lang.String)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: void loadCompleted(com.google.android.exoplayer2.upstream.DataSpec,android.net.Uri,java.util.Map,int,long,long,long)
com.google.android.exoplayer2.text.TextRenderer: void render(long,long)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickVideoImageDisplayFillParent(android.view.View)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$VSyncSampler: boolean handleMessage(android.os.Message)
com.bumptech.glide.load.engine.DecodeJob$1: <clinit>()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onPlayerStateChanged(boolean,int)
androidx.appcompat.widget.Toolbar: boolean isChildOrHidden(android.view.View)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: <clinit>()
androidx.fragment.app.FragmentActivity$HostCallbacks: boolean onHasWindowAnimations()
androidx.appcompat.view.menu.MenuBuilder: void clear()
androidx.collection.SparseArrayCompat: java.lang.Object get(int)
androidx.appcompat.view.menu.MenuPopupHelper$1: void onDismiss()
com.google.android.exoplayer2.metadata.id3.PrivFrame: PrivFrame(android.os.Parcel)
com.google.android.exoplayer2.ui.AspectRatioFrameLayout: void onMeasure(int,int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void setState(int)
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$MarginLayoutParams)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void renderToEndOfStream()
tv.danmaku.ijk.media.player.MediaPlayerProxy: void seekTo(long)
com.bumptech.glide.request.ThumbnailRequestCoordinator: void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request)
androidx.core.view.WindowInsetsCompat: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: boolean isClipPath()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: <clinit>()
com.bumptech.glide.load.engine.DecodeJob: com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker$OggSeekMap: boolean isSeekable()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_message_loop(java.lang.Object)
com.bumptech.glide.util.LruCache: void trimToSize(long)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int peek()
com.bumptech.glide.load.engine.GlideException: <clinit>()
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean isLoading()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)
com.bumptech.glide.gifdecoder.StandardGifDecoder: void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.RequestBuilder load(java.lang.Object)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.appcompat.view.SupportMenuInflater: void inflate(int,android.view.Menu)
androidx.core.graphics.drawable.WrappedDrawableApi21: void setHotspotBounds(int,int,int,int)
androidx.appcompat.view.SupportActionModeWrapper: SupportActionModeWrapper(android.content.Context,androidx.appcompat.view.ActionMode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: <clinit>()
androidx.appcompat.widget.AppCompatSpinner$DialogPopup: int getVerticalOffset()
com.bumptech.glide.load.resource.gif.GifFrameLoader: GifFrameLoader(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap)
androidx.recyclerview.widget.RecyclerView: boolean drawChild(android.graphics.Canvas,android.view.View,long)
androidx.appcompat.view.menu.MenuWrapperICS: void close()
androidx.core.widget.TextViewCompat$OreoCallback: android.content.Intent createProcessTextIntent()
androidx.core.widget.NestedScrollView: void stopNestedScroll(int)
com.bumptech.glide.util.pool.FactoryPools$3: FactoryPools$3()
com.bumptech.glide.Registry: com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class)
androidx.core.widget.TextViewCompat: int getFirstBaselineToTopHeight(android.widget.TextView)
androidx.core.graphics.drawable.DrawableCompat: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.fragment.app.Fragment: int getStateAfterAnimating()
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: MemorySizeCalculator(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onVideoInputFormatChanged(com.google.android.exoplayer2.Format)
androidx.appcompat.widget.SearchView$6: SearchView$6(androidx.appcompat.widget.SearchView)
androidx.core.os.TraceCompat: void beginSection(java.lang.String)
androidx.appcompat.app.WindowDecorActionBar: void hideForSystem()
androidx.appcompat.widget.TooltipCompatHandler: void onViewDetachedFromWindow(android.view.View)
androidx.appcompat.widget.AlertDialogLayout: void onMeasure(int,int)
androidx.appcompat.widget.AppCompatToggleButton: AppCompatToggleButton(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.Fragment: boolean getAllowReturnTransitionOverlap()
androidx.appcompat.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: <clinit>()
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode)
androidx.core.graphics.TypefaceCompat: java.lang.String createResourceUid(android.content.res.Resources,int,int)
androidx.appcompat.widget.AppCompatCheckedTextView: void drawableStateChanged()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)
androidx.appcompat.view.menu.CascadingMenuPopup: android.widget.ListView getListView()
com.google.android.exoplayer2.util.Util: java.lang.String[] split(java.lang.String,java.lang.String)
tv.danmaku.ijk.media.player.MediaPlayerProxy$7: boolean onInfo(tv.danmaku.ijk.media.player.IMediaPlayer,int,int)
androidx.collection.MapCollections$ValuesCollection: boolean add(java.lang.Object)
com.bumptech.glide.load.model.ModelCache: void put(java.lang.Object,int,int,java.lang.Object)
androidx.fragment.app.FragmentManagerImpl$3: void onAnimationRepeat(android.view.animation.Animation)
com.bumptech.glide.gifdecoder.GifHeaderParser: void readLSD()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean needsMirroring()
com.google.android.exoplayer2.upstream.ContentDataSource: android.net.Uri getUri()
com.bumptech.glide.load.model.FileLoader$FileFetcher: void cleanup()
androidx.customview.view.AbsSavedState$2: androidx.customview.view.AbsSavedState[] newArray(int)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createSampleFormat(java.lang.String,java.lang.String,long)
com.bumptech.glide.load.engine.executor.GlideExecutor: java.lang.Object invokeAny(java.util.Collection)
cn.jzvd.JZUtils: void clearSavedProgress(android.content.Context,java.lang.Object)
androidx.appcompat.widget.ThemeUtils: android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int)
com.google.android.exoplayer2.metadata.id3.TextInformationFrame: <clinit>()
com.google.android.exoplayer2.source.SampleQueue: void sampleMetadata(long,int,int,int,com.google.android.exoplayer2.extractor.TrackOutput$CryptoData)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: void setTargetClasses(java.lang.String[])
com.bumptech.glide.request.SingleRequest: void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource,boolean)
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.audio.AudioSink$Listener access$900(com.google.android.exoplayer2.audio.DefaultAudioSink)
androidx.arch.core.executor.DefaultTaskExecutor$1: DefaultTaskExecutor$1(androidx.arch.core.executor.DefaultTaskExecutor)
com.google.android.exoplayer2.extractor.VorbisUtil: int iLog(int)
com.google.android.exoplayer2.source.hls.Aes128DataSource: android.net.Uri getUri()
com.google.android.exoplayer2.AudioFocusManager: int handleSetPlayWhenReady(boolean,int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable: ListPopupWindow$ResizePopupRunnable(androidx.appcompat.widget.ListPopupWindow)
androidx.recyclerview.widget.RecyclerView: void onRestoreInstanceState(android.os.Parcelable)
androidx.appcompat.widget.ActionMenuView: boolean isOverflowReserved()
com.google.android.exoplayer2.source.hls.playlist.FilteringHlsPlaylistParserFactory: com.google.android.exoplayer2.upstream.ParsingLoadable$Parser createPlaylistParser()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentTransition: androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition)
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: long access$400(com.google.android.exoplayer2.upstream.Loader$LoadErrorAction)
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupEnabled(int,boolean)
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean isLoadingPossible()
com.google.android.exoplayer2.extractor.FlacFrameReader: boolean checkFrameHeaderFromPeek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.util.FlacStreamMetadata,int,com.google.android.exoplayer2.extractor.FlacFrameReader$SampleNumberHolder)
androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTooltipText()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: void ensureSpaceForPeek(int)
com.google.android.exoplayer2.text.ssa.SsaStyle: com.google.android.exoplayer2.text.ssa.SsaStyle fromStyleLine(java.lang.String,com.google.android.exoplayer2.text.ssa.SsaStyle$Format)
androidx.appcompat.app.WindowDecorActionBar: void showForActionMode()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: boolean mayFillRequest(int,java.lang.Integer)
com.google.android.exoplayer2.source.ClippingMediaPeriod: boolean isPendingInitialDiscontinuity()
androidx.core.widget.NestedScrollView: void requestChildFocus(android.view.View,android.view.View)
androidx.core.widget.NestedScrollView$AccessibilityDelegate: NestedScrollView$AccessibilityDelegate()
com.bumptech.glide.Glide: void checkAndInitializeGlide(android.content.Context,com.bumptech.glide.GeneratedAppGlideModule)
com.bumptech.glide.request.target.CustomTarget: void onLoadFailed(android.graphics.drawable.Drawable)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: boolean isStateful()
androidx.core.view.WindowInsetsCompat: WindowInsetsCompat(android.view.WindowInsets)
androidx.fragment.app.FragmentManagerImpl: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.audio.DefaultAudioSink: void setAudioAttributes(com.google.android.exoplayer2.audio.AudioAttributes)
com.google.android.exoplayer2.util.Util: java.lang.Object[] nullSafeArrayCopyOfRange(java.lang.Object[],int,int)
com.google.android.exoplayer2.util.CodecSpecificDataUtil: android.util.Pair parseAacAudioSpecificConfig(byte[])
com.google.android.exoplayer2.upstream.Loader: void maybeThrowError()
com.google.android.exoplayer2.util.Util: int binarySearchCeil(long[],long,boolean,boolean)
com.bumptech.glide.load.data.LocalUriFetcher: LocalUriFetcher(android.content.ContentResolver,android.net.Uri)
androidx.appcompat.view.menu.MenuPopupHelper: boolean tryShow(int,int)
androidx.media.AudioAttributesImplBase: int getUsage()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)
com.bumptech.glide.load.data.HttpUrlFetcher: HttpUrlFetcher(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory)
androidx.appcompat.widget.ToolbarWidgetWrapper: void updateToolbarLogo()
com.google.android.exoplayer2.audio.AudioTimestampPoller: AudioTimestampPoller(android.media.AudioTrack)
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidthMode()
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher: com.bumptech.glide.load.DataSource getDataSource()
tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener: boolean onError(tv.danmaku.ijk.media.player.IMediaPlayer,int,int)
androidx.appcompat.view.menu.StandardMenuPopup: void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback)
com.google.android.exoplayer2.BaseRenderer: int supportsMixedMimeTypeAdaptation()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setSpanCount(int)
com.bumptech.glide.RequestManager: void pauseAllRequests()
androidx.appcompat.app.WindowDecorActionBar: int getDisplayOptions()
android.support.v4.media.session.MediaSessionCompat$Token: void writeToParcel(android.os.Parcel,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher access$600(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
com.google.android.exoplayer2.text.dvb.DvbParser: int paint8BitPixelCodeString(com.google.android.exoplayer2.util.ParsableBitArray,int[],byte[],int,int,android.graphics.Paint,android.graphics.Canvas)
androidx.appcompat.widget.SuggestionsAdapter: void setViewText(android.widget.TextView,java.lang.CharSequence)
com.google.android.exoplayer2.util.Util: boolean isLocalFileUri(android.net.Uri)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View findFirstVisibleItemClosestToStart(boolean)
androidx.appcompat.app.AppCompatDelegate: void attachBaseContext(android.content.Context)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void growArray(int,int)
com.google.android.exoplayer2.audio.Sonic: void queueInput(java.nio.ShortBuffer)
com.google.android.exoplayer2.extractor.ts.H265Reader: void endNalUnit(long,int,int,long)
androidx.appcompat.widget.ActionMenuPresenter: void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.ExoPlaybackException: com.google.android.exoplayer2.ExoPlaybackException createForOutOfMemoryError(java.lang.OutOfMemoryError)
com.bumptech.glide.RequestManager: com.bumptech.glide.RequestBuilder asDrawable()
com.google.android.exoplayer2.extractor.BinarySearchSeeker: BinarySearchSeeker(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekTimestampConverter,com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSeeker,long,long,long,long,long,long,int)
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory: AssetUriLoader$StreamFactory(android.content.res.AssetManager)
cn.jzvd.demo.AdapterListView: int getCount()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: android.util.Pair parseEdts(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
com.bumptech.glide.load.resource.bitmap.CenterCrop: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean supportsPredictiveItemAnimations()
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: com.google.android.exoplayer2.drm.DrmSession acquireSession(android.os.Looper,com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1: void handle(java.lang.Throwable)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: java.lang.Object createFromParcel(android.os.Parcel)
tv.danmaku.ijk.media.player.IjkMediaPlayer: int getVideoWidth()
tv.danmaku.ijk.media.player.misc.IjkTrackInfo: java.lang.String getLanguage()
androidx.recyclerview.widget.OrientationHelper$2: int getEnd()
com.google.android.exoplayer2.ExoPlayerImplInternal$MediaSourceRefreshInfo: ExoPlayerImplInternal$MediaSourceRefreshInfo(com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.Timeline)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean isPlaying()
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlStyle createIfNull(com.google.android.exoplayer2.text.ttml.TtmlStyle)
androidx.appcompat.app.AlertController$CheckedItemAdapter: AlertController$CheckedItemAdapter(android.content.Context,int,int,java.lang.CharSequence[])
androidx.appcompat.view.SupportMenuInflater$MenuState: android.view.SubMenu addSubMenuItem()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onRenderedFirstFrame()
tv.danmaku.ijk.media.player.AbstractMediaPlayer: void setOnErrorListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnErrorListener)
com.bumptech.glide.request.RequestCoordinator$RequestState: RequestCoordinator$RequestState(java.lang.String,int,boolean)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void writeSubtitleSampleData(com.google.android.exoplayer2.extractor.ExtractorInput,byte[],int)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition: AnimatedStateListDrawableCompat$AnimatableTransition(android.graphics.drawable.Animatable)
org.slf4j.LoggerFactory: void replaySingleEvent(org.slf4j.event.SubstituteLoggingEvent)
com.google.android.exoplayer2.extractor.ts.TsDurationReader: int finishReadDuration(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.RequestManager: void setRequestOptions(com.bumptech.glide.request.RequestOptions)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)
androidx.media.AudioAttributesCompat: java.lang.String toString()
cn.jzvd.Jzvd: void startProgressTimer()
androidx.appcompat.view.StandaloneActionMode: void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder)
androidx.fragment.app.FragmentManagerImpl$1: FragmentManagerImpl$1(androidx.fragment.app.FragmentManagerImpl,boolean)
androidx.appcompat.widget.AppCompatTextHelper: void setCompoundTints()
com.google.android.exoplayer2.metadata.scte35.PrivateCommand$1: PrivateCommand$1()
androidx.appcompat.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.viewpager.widget.ViewPager: void setCurrentItem(int,boolean)
com.google.android.exoplayer2.drm.DrmInitData: int describeContents()
androidx.appcompat.widget.TintTypedArray: int getInt(int,int)
androidx.recyclerview.widget.GapWorker: void buildTaskList()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampUpDuration(int)
com.google.android.exoplayer2.extractor.ts.DtsReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getCurrent()
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: MenuItemWrapperICS$ActionProviderWrapper(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider)
com.google.android.exoplayer2.extractor.ts.TsUtil: int findSyncBytePosition(byte[],int,int)
com.google.android.exoplayer2.extractor.ts.LatmReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: AudioRendererEventListener$EventDispatcher(android.os.Handler,com.google.android.exoplayer2.audio.AudioRendererEventListener)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onTimelineChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_setup(java.lang.Object)
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: AbsActionBarView$VisibilityAnimListener(androidx.appcompat.widget.AbsActionBarView)
com.google.android.exoplayer2.source.SampleDataQueue: int preAppend(int)
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.danikula.videocache.Pinger: java.util.List getDefaultProxies()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int readFromDataSource(byte[],int,int,int,boolean)
com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Bitmap getFirstFrame()
com.google.android.exoplayer2.Player$EventListener: void onTimelineChanged(com.google.android.exoplayer2.Timeline,java.lang.Object,int)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: void onCompletion(android.media.MediaPlayer)
com.google.android.exoplayer2.decoder.Buffer: boolean isKeyFrame()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: java.lang.String getCodecMimeType(android.media.MediaCodecInfo,java.lang.String,boolean,java.lang.String)
com.google.android.exoplayer2.trackselection.TrackSelectionArray: TrackSelectionArray(com.google.android.exoplayer2.trackselection.TrackSelection[])
com.bumptech.glide.load.engine.DiskCacheStrategy$4: DiskCacheStrategy$4()
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool: com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain()
androidx.lifecycle.LiveData: void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper)
androidx.core.view.DisplayCutoutCompat: java.lang.String toString()
androidx.lifecycle.ViewModelProvider$KeyedFactory: androidx.lifecycle.ViewModel create(java.lang.Class)
com.google.android.exoplayer2.audio.AudioRendererEventListener: void onAudioDecoderInitialized(java.lang.String,long,long)
tv.danmaku.ijk.media.player.AndroidMediaPlayer$AndroidMediaPlayerListenerHolder: void onSeekComplete(android.media.MediaPlayer)
androidx.appcompat.view.ActionBarPolicy: ActionBarPolicy(android.content.Context)
androidx.recyclerview.widget.RecyclerView: boolean isComputingLayout()
cn.jzvd.JZMediaInterface: long getCurrentPosition()
androidx.appcompat.widget.AppCompatSpinner: AppCompatSpinner(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme)
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29: void rebase(android.content.res.Resources$Theme)
com.google.android.exoplayer2.PlaybackInfo: PlaybackInfo(com.google.android.exoplayer2.Timeline,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,int,com.google.android.exoplayer2.ExoPlaybackException,boolean,com.google.android.exoplayer2.source.TrackGroupArray,com.google.android.exoplayer2.trackselection.TrackSelectorResult,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,long)
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory: java.lang.String toString()
androidx.appcompat.view.menu.ActionMenuItem: boolean isVisible()
com.google.android.exoplayer2.decoder.DecoderInputBuffer: void resetSupplementalData(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: void setLine(int)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void _setOption(int,java.lang.String,java.lang.String)
tv.danmaku.ijk.media.player.IjkMediaCodecInfo: java.lang.String getLevelName(int)
com.google.android.exoplayer2.extractor.ogg.StreamReader: int readHeaders(com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.MediaPlayerProxy: java.lang.String getDataSource()
com.google.android.exoplayer2.audio.AudioCapabilities: int hashCode()
androidx.arch.core.internal.SafeIterableMap: java.util.Map$Entry newest()
androidx.core.graphics.PathParser: void addNode(java.util.ArrayList,char,float[])
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean shouldParseLeafAtom(int)
com.google.android.exoplayer2.text.webvtt.WebvttParserUtil: java.util.regex.Matcher findNextCueHeader(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.model.ResourceLoader$StreamFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
androidx.core.content.res.ResourcesCompat$FontCallback: void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler)
androidx.core.provider.FontsContractCompat: android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources)
androidx.core.graphics.TypefaceCompatBaseImpl$1: int getWeight(java.lang.Object)
com.google.android.exoplayer2.upstream.StatsDataSource: void resetBytesRead()
com.bumptech.glide.load.model.UriLoader$StreamFactory: UriLoader$StreamFactory(android.content.ContentResolver)
com.bumptech.glide.load.model.ByteBufferEncoder: ByteBufferEncoder()
androidx.appcompat.graphics.drawable.StateListDrawable: void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState)
android.support.v4.media.session.MediaSessionCompat$QueueItem$1: android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.source.EmptySampleStream: void maybeThrowError()
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onBufferingUpdate(android.media.MediaPlayer,int)
androidx.appcompat.widget.Toolbar: void addCustomViewsWithGravity(java.util.List,int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void replaceText(java.lang.CharSequence)
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3: AppCompatSpinner$DropdownPopup$3(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener)
com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache: byte[] get(android.net.Uri)
androidx.collection.SparseArrayCompat: void put(int,java.lang.Object)
com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer: H262Reader$CsdBuffer(int)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.CompositeGeneratedAdaptersObserver: void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event)
com.google.android.exoplayer2.extractor.mkv.VarintReader: int getLastLength()
com.google.android.exoplayer2.source.ClippingMediaPeriod: long getAdjustedSeekPositionUs(long,com.google.android.exoplayer2.SeekParameters)
cn.jzvd.demo.AdapterListView: java.lang.Object getItem(int)
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy: void onQueueTitleChanged(java.lang.CharSequence)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
androidx.appcompat.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)
com.google.android.exoplayer2.ui.TrackSelectionView$ComponentListener: TrackSelectionView$ComponentListener(com.google.android.exoplayer2.ui.TrackSelectionView,com.google.android.exoplayer2.ui.TrackSelectionView$1)
com.bumptech.glide.Glide: com.bumptech.glide.GlideContext getGlideContext()
com.bumptech.glide.request.BaseRequestOptions: boolean getUseUnlimitedSourceGeneratorsPool()
com.google.android.exoplayer2.extractor.ts.PsExtractor: void maybeOutputSeekMap(long)
com.bumptech.glide.load.resource.bytes.BytesResource: BytesResource(byte[])
androidx.appcompat.widget.Toolbar$SavedState$1: androidx.appcompat.widget.Toolbar$SavedState[] newArray(int)
com.bumptech.glide.request.target.ViewTarget: void setRequest(com.bumptech.glide.request.Request)
androidx.appcompat.widget.SearchView: void updateCloseButton()
androidx.appcompat.widget.ForwardingListener: ForwardingListener(android.view.View)
com.google.android.exoplayer2.text.tx3g.Tx3gDecoder: void attachFontFamily(android.text.SpannableStringBuilder,java.lang.String,java.lang.String,int,int,int)
com.google.android.exoplayer2.util.ParsableByteArray: int peekUnsignedByte()
com.google.android.exoplayer2.util.ParsableByteArray: java.lang.String readString(int,java.nio.charset.Charset)
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate: android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.google.android.exoplayer2.BasePlayer: boolean isPlaying()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.upstream.Loader$Loadable,long,long,java.io.IOException,int)
androidx.recyclerview.widget.RecyclerView: void pullGlows(float,float,float,float)
androidx.media.AudioAttributesCompat: int toVolumeStreamType(boolean,int,int)
com.bumptech.glide.load.data.StreamLocalUriFetcher: <clinit>()
com.bumptech.glide.load.engine.DiskCacheStrategy$4: boolean decodeCachedData()
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: java.util.UUID access$000(com.google.android.exoplayer2.drm.DrmInitData$SchemeData)
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator: AnimatorInflaterCompat$PathDataEvaluator()
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event: com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event access$300(android.os.Parcel)
com.google.android.exoplayer2.video.VideoDecoderOutputBuffer: void init(long,int,java.nio.ByteBuffer)
com.bumptech.glide.util.MarkEnforcingInputStream: long skip(long)
cn.jzvd.demo.CustomMedia.JZMediaExo: void prepare()
com.google.android.exoplayer2.text.ssa.SsaDialogueFormat: SsaDialogueFormat(int,int,int,int,int)
androidx.core.widget.NestedScrollView: boolean scrollAndFocus(int,int,int)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
androidx.recyclerview.widget.LinearLayoutManager$LayoutState: void assignPositionFromScrapList(android.view.View)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void parseCueSettingsList(java.lang.String,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)
com.google.android.exoplayer2.drm.DrmInitData: boolean containsSchemeDataWithUuid(java.util.ArrayList,int,java.util.UUID)
androidx.core.graphics.PathParser$PathDataNode: void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float)
androidx.appcompat.widget.AppCompatCompoundButtonHelper: void loadFromAttributes(android.util.AttributeSet,int)
com.google.android.exoplayer2.source.hls.HlsMediaPeriod: boolean continueLoading(long)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.upstream.ParsingLoadable: java.util.Map getResponseHeaders()
com.google.android.exoplayer2.text.ttml.TtmlNode: android.text.SpannableStringBuilder getRegionOutput(java.lang.String,java.util.Map)
androidx.core.graphics.TypefaceCompatUtil: boolean copyToFile(java.io.File,android.content.res.Resources,int)
androidx.appcompat.view.menu.MenuItemImpl: boolean shouldShowShortcut()
org.slf4j.helpers.NOPLogger: NOPLogger()
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.exoplayer2.audio.TrimmingAudioProcessor: void setTrimFrameCount(int,int)
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: UnitModelLoader$UnitFetcher(java.lang.Object)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$4: IjkMediaFormat$4(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.google.android.exoplayer2.source.SampleDataQueue: void readData(long,java.nio.ByteBuffer,int)
com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: void render(long,long)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat: IjkMediaFormat(tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
com.google.android.exoplayer2.SimpleExoPlayer: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
cn.jzvd.demo.ActivityListViewNormal$1: void onScrollStateChanged(android.widget.AbsListView,int)
androidx.fragment.app.FragmentHostCallback: android.view.LayoutInflater onGetLayoutInflater()
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)
androidx.recyclerview.widget.RecyclerView$ViewHolder: java.util.List getUnmodifiedPayloads()
androidx.recyclerview.widget.GridLayoutManager: int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.metadata.MetadataDecoderFactory$1: boolean supportsFormat(com.google.android.exoplayer2.Format)
androidx.appcompat.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
androidx.core.util.ObjectsCompat: boolean equals(java.lang.Object,java.lang.Object)
com.bumptech.glide.RequestBuilder: java.lang.Object clone()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void resetSync()
com.danikula.videocache.sourcestorage.NoSourceInfoStorage: void put(java.lang.String,com.danikula.videocache.SourceInfo)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsReconfigureWorkaround(java.lang.String)
com.google.android.exoplayer2.extractor.ts.TsExtractor: void release()
com.bumptech.glide.request.target.ImageViewTargetFactory: ImageViewTargetFactory()
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
androidx.appcompat.view.menu.MenuItemImpl: int getOrdering()
com.google.android.exoplayer2.metadata.icy.IcyHeaders: java.lang.String toString()
com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator: java.lang.String getFormatId()
androidx.core.view.KeyEventDispatcher: boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent)
androidx.fragment.app.Fragment: void performPictureInPictureModeChanged(boolean)
com.google.android.exoplayer2.SimpleExoPlayer: long getTotalBufferedDuration()
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long getPlaybackHeadPositionUs()
androidx.core.graphics.drawable.WrappedDrawableApi14: int getIntrinsicWidth()
androidx.appcompat.app.AppCompatDelegate: androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
cn.jzvd.demo.ActivityListViewNormal$1: ActivityListViewNormal$1(cn.jzvd.demo.ActivityListViewNormal)
org.slf4j.event.SubstituteLoggingEvent: SubstituteLoggingEvent()
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder: boolean handles(java.io.InputStream,com.bumptech.glide.load.Options)
androidx.viewpager.widget.ViewPager: boolean isDecorView(android.view.View)
androidx.fragment.app.BackStackRecord: void bumpBackStackNesting(int)
androidx.appcompat.widget.VectorEnabledTintResources: VectorEnabledTintResources(android.content.Context,android.content.res.Resources)
androidx.collection.SparseArrayCompat: void remove(int)
androidx.appcompat.app.AlertController: void setMessage(java.lang.CharSequence)
androidx.core.content.res.GradientColorInflaterCompat: androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
androidx.lifecycle.LiveData: java.lang.Object getValue()
com.bumptech.glide.load.engine.DataCacheGenerator: DataCacheGenerator(java.util.List,com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: com.google.android.exoplayer2.trackselection.TrackSelection$Definition selectFixedVideoTrack(com.google.android.exoplayer2.source.TrackGroupArray,int[][],com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long access$100(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams)
androidx.appcompat.widget.ResourceManagerInternal: void checkVectorDrawableSetup(android.content.Context)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onPlayerStateChanged(boolean,int)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean isReady()
androidx.appcompat.view.menu.StandardMenuPopup$2: void onViewAttachedToWindow(android.view.View)
androidx.recyclerview.widget.LinearLayoutManager: void updateLayoutStateToFillEnd(int,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean access$1300(com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)
androidx.appcompat.view.menu.ActionMenuItem: void applyIconTint()
com.google.android.exoplayer2.extractor.ts.PesReader: boolean continueRead(com.google.android.exoplayer2.util.ParsableByteArray,byte[],int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createTextContainerFormat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,int,java.lang.String)
com.google.android.exoplayer2.source.ExtractorMediaSource: ExtractorMediaSource(android.net.Uri,com.google.android.exoplayer2.upstream.DataSource$Factory,com.google.android.exoplayer2.extractor.ExtractorsFactory,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy,java.lang.String,int,java.lang.Object)
com.google.android.exoplayer2.source.hls.WebvttExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory access$600(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.appcompat.view.menu.MenuBuilder: void close()
com.bumptech.glide.load.model.ModelLoaderRegistry: ModelLoaderRegistry(androidx.core.util.Pools$Pool)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData merge(com.google.android.exoplayer2.drm.DrmInitData)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.util.pool.FactoryPools: androidx.core.util.Pools$Pool threadSafe(int,com.bumptech.glide.util.pool.FactoryPools$Factory)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme)
androidx.appcompat.view.menu.MenuWrapperICS: void removeGroup(int)
cn.jzvd.JZMediaSystem: void setSpeed(float)
androidx.lifecycle.LifecycleRegistry: void setCurrentState(androidx.lifecycle.Lifecycle$State)
cn.jzvd.JzvdStd: android.content.BroadcastReceiver access$000(cn.jzvd.JzvdStd)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: boolean peekFully(byte[],int,int,boolean)
com.google.android.exoplayer2.upstream.UdpDataSource: UdpDataSource()
androidx.core.graphics.ColorUtils: <clinit>()
androidx.collection.ArraySet: boolean contains(java.lang.Object)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.URL handleRedirect(java.net.URL,java.lang.String)
androidx.core.widget.AutoScrollHelper$ClampedScroller: void setRampDownDuration(int)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: SpliceScheduleCommand$ComponentSplice(int,long,com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1)
androidx.appcompat.widget.ButtonBarLayout: int getNextVisibleChildIndex(int)
com.google.android.exoplayer2.metadata.MetadataDecoderFactory$1: com.google.android.exoplayer2.metadata.MetadataDecoder createDecoder(com.google.android.exoplayer2.Format)
androidx.fragment.app.FragmentTransition: java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsDiscardToSpsWorkaround(java.lang.String,com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.source.hls.HlsChunkSource$EncryptionKeyChunk: byte[] getResult()
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.SuggestionsAdapter: android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void decode(com.google.android.exoplayer2.text.SubtitleInputBuffer)
androidx.core.graphics.drawable.WrappedDrawableApi14: boolean updateTint(int[])
com.google.android.exoplayer2.analytics.AnalyticsListener: void onMediaPeriodReleased(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
androidx.appcompat.widget.SearchView: void onVoiceClicked()
org.slf4j.helpers.MarkerIgnoringBase: MarkerIgnoringBase()
androidx.appcompat.widget.ListPopupWindow$3: ListPopupWindow$3(androidx.appcompat.widget.ListPopupWindow)
androidx.versionedparcelable.VersionedParcel: void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void trimToSize(long)
com.google.android.exoplayer2.util.Util: java.lang.String getCommaDelimitedSimpleClassNames(java.lang.Object[])
com.bumptech.glide.load.engine.EngineJob: void incrementPendingCallbacks(int)
com.bumptech.glide.load.engine.Engine: void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)
androidx.appcompat.app.WindowDecorActionBar$2: WindowDecorActionBar$2(androidx.appcompat.app.WindowDecorActionBar)
androidx.fragment.app.Fragment: void performActivityCreated(android.os.Bundle)
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
androidx.fragment.app.Fragment: int getNextAnim()
androidx.appcompat.widget.RtlSpacingHelper: RtlSpacingHelper()
androidx.appcompat.widget.Toolbar: void ensureCollapseButtonView()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: void setScreenReaderFocusable(boolean)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: int maxH264DecodableFrameSize()
com.bumptech.glide.GlideBuilder$LogRequestOrigins: GlideBuilder$LogRequestOrigins()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int convertFocusDirectionToLayoutDirection(int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDownstreamFormatChanged(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,com.google.android.exoplayer2.source.MediaSourceEventListener$MediaLoadData)
androidx.appcompat.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)
androidx.core.graphics.TypefaceCompatApi24Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter$ConnectivityActionReceiver: void register(com.google.android.exoplayer2.upstream.DefaultBandwidthMeter)
androidx.appcompat.app.AppCompatViewInflater: androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long access$300(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams)
androidx.fragment.app.Fragment: void onPrimaryNavigationFragmentChanged(boolean)
androidx.appcompat.app.AppCompatDialog: boolean superDispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.view.menu.CascadingMenuPopup: void showMenu(androidx.appcompat.view.menu.MenuBuilder)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: double parseDoubleAttr(java.lang.String,java.util.regex.Pattern)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
androidx.core.os.TraceCompat: <clinit>()
androidx.fragment.app.Fragment: void restoreViewState(android.os.Bundle)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: void add(java.lang.Object)
com.bumptech.glide.Glide: void registerRequestManager(com.bumptech.glide.RequestManager)
org.slf4j.helpers.SubstituteLogger: boolean isDelegateNull()
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo: void assignCoordinateFromPadding()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getTcpSpeed()
com.google.android.exoplayer2.source.ClippingMediaPeriod: void reevaluateBuffer(long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getChildMeasureSpec(int,int,int,int,boolean)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: void decrementArrayOfSize(int,java.lang.Class)
com.google.android.exoplayer2.source.ProgressiveMediaSource: void onSourceInfoRefreshed(long,boolean,boolean)
com.bumptech.glide.load.resource.bitmap.CenterCrop: int hashCode()
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.extractor.ts.LatmReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
com.bumptech.glide.load.resource.bitmap.Downsampler$1: Downsampler$1()
com.google.android.exoplayer2.metadata.emsg.EventMessage$1: com.google.android.exoplayer2.metadata.emsg.EventMessage[] newArray(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: <clinit>()
cn.jzvd.JzvdStd: void showVolumeDialog(float,int)
tv.danmaku.ijk.media.player.misc.IjkMediaFormat$1: java.lang.String doFormat(tv.danmaku.ijk.media.player.misc.IjkMediaFormat)
com.danikula.videocache.file.LruDiskUsage: void trim(java.util.List)
androidx.savedstate.Recreator: Recreator(androidx.savedstate.SavedStateRegistryOwner)
androidx.appcompat.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void assertNotInLayoutOrScroll(java.lang.String)
com.bumptech.glide.load.data.DataRewinderRegistry: void register(com.bumptech.glide.load.data.DataRewinder$Factory)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: com.google.android.exoplayer2.metadata.scte35.PrivateCommand parseFromSection(com.google.android.exoplayer2.util.ParsableByteArray,int,long)
com.google.android.exoplayer2.metadata.MetadataRenderer: void flushPendingMetadata()
androidx.core.content.res.TypedArrayUtils: int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int)
com.bumptech.glide.gifdecoder.GifHeaderParser: void readBlock()
androidx.appcompat.widget.Toolbar: boolean onHoverEvent(android.view.MotionEvent)
androidx.collection.SimpleArrayMap: java.lang.Object getOrDefault(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentManager: FragmentManager()
androidx.recyclerview.widget.RecyclerView$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride$1: DefaultTrackSelector$SelectionOverride$1()
androidx.viewpager.widget.ViewPager: void onRestoreInstanceState(android.os.Parcelable)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.util.List getAvailableCodecInfos(boolean)
cn.jzvd.demo.ActivityApiCustomMedia: void clickChangeToSystem(android.view.View)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: int readInternal(byte[],int,int)
androidx.appcompat.widget.ToolbarWidgetWrapper$2: void onAnimationEnd(android.view.View)
com.google.android.exoplayer2.util.XmlPullParserUtil: boolean isEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String)
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: int translateOffset(long)
com.google.android.exoplayer2.source.hls.HlsMediaChunk: void feedDataToExtractor(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.android.exoplayer2.DefaultLoadControl: void assertGreaterOrEqual(int,int,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void updateLocalMatrix()
androidx.media.AudioAttributesImplBase: java.lang.String toString()
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy)
androidx.core.view.ViewCompat: androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat)
com.google.android.exoplayer2.audio.DefaultAudioSink: DefaultAudioSink(com.google.android.exoplayer2.audio.AudioCapabilities,com.google.android.exoplayer2.audio.DefaultAudioSink$AudioProcessorChain,boolean)
com.bumptech.glide.load.resource.UnitTransformation: com.bumptech.glide.load.resource.UnitTransformation get()
androidx.recyclerview.widget.RecyclerView$Adapter: void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView)
androidx.core.view.ViewCompat$4: ViewCompat$4(int,java.lang.Class,int,int)
com.bumptech.glide.load.resource.bitmap.InputStreamBitmapImageDecoderResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options)
com.google.android.exoplayer2.source.CompositeMediaSource: com.google.android.exoplayer2.source.MediaSource$MediaPeriodId getMediaPeriodIdForChildMediaPeriodId(java.lang.Object,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: MultiModelLoader$MultiFetcher(java.util.List,androidx.core.util.Pools$Pool)
androidx.appcompat.app.AlertDialog$Builder: AlertDialog$Builder(android.content.Context)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handleContinueLoadingRequested(com.google.android.exoplayer2.source.MediaPeriod)
com.google.android.exoplayer2.MediaPeriodQueue: void reevaluateBuffer(long)
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: ChapterTocFrame(java.lang.String,boolean,boolean,java.lang.String[],com.google.android.exoplayer2.metadata.id3.Id3Frame[])
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: long getDataEndPosition()
androidx.core.text.PrecomputedTextCompat$Params: PrecomputedTextCompat$Params(android.text.PrecomputedText$Params)
com.google.android.exoplayer2.drm.DefaultDrmSession: DefaultDrmSession(java.util.UUID,com.google.android.exoplayer2.drm.ExoMediaDrm,com.google.android.exoplayer2.drm.DefaultDrmSession$ProvisioningManager,com.google.android.exoplayer2.drm.DefaultDrmSession$ReleaseCallback,java.util.List,int,boolean,boolean,byte[],java.util.HashMap,com.google.android.exoplayer2.drm.MediaDrmCallback,android.os.Looper,com.google.android.exoplayer2.util.EventDispatcher,com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy)
com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom: Atom$LeafAtom(int,com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice: void writeToParcel(android.os.Parcel)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long getPlaybackHeadPosition()
androidx.fragment.app.FragmentManagerImpl: void makeInactive(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.audio.DefaultAudioSink: int getFramesPerEncodedSample(int,java.nio.ByteBuffer)
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher: void startNextOrFail()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
cn.jzvd.JzvdStd: boolean onTouch(android.view.View,android.view.MotionEvent)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void onStateAutoComplete()
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1: java.lang.Object[] newArray(int)
androidx.appcompat.widget.AppCompatImageHelper: boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable)
org.slf4j.event.EventRecodingLogger: void error(java.lang.String)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.upstream.StatsDataSource access$200(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable)
com.bumptech.glide.load.engine.GlideException: void appendExceptionMessage(java.lang.Throwable,java.lang.Appendable)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: long parseLongAttr(java.lang.String,java.util.regex.Pattern)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void flush()
com.google.android.exoplayer2.extractor.ogg.FlacReader: void reset(boolean)
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions autoClone()
androidx.core.app.ActivityRecreator$2: ActivityRecreator$2(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: java.nio.ByteBuffer getOutputBuffer(int)
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream: ByteBufferUtil$ByteBufferStream(java.nio.ByteBuffer)
com.google.android.exoplayer2.util.FlacStreamMetadata: long getDurationUs()
androidx.fragment.app.BackStackRecord: int commitInternal(boolean)
androidx.exifinterface.media.ExifInterface: boolean isExifDataOnly(java.io.BufferedInputStream)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void repositionToWrapContentIfNecessary()
com.bumptech.glide.load.model.DataUrlLoader: boolean handles(java.lang.Object)
androidx.media.AudioAttributesImplBase: int getFlags()
com.google.android.exoplayer2.upstream.Loader: void clearFatalError()
androidx.appcompat.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()
com.google.android.exoplayer2.util.ParsableBitArray: int readBits(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.media.AudioAttributesCompat: java.lang.String usageToString(int)
org.slf4j.event.EventRecodingLogger: EventRecodingLogger(org.slf4j.helpers.SubstituteLogger,java.util.Queue)
com.bumptech.glide.request.RequestOptions: com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key)
cn.jzvd.demo.ActivityApiExtendsNormal: void onCreate(android.os.Bundle)
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: void markForRedelivery()
com.bumptech.glide.load.engine.DecodeHelper: void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider)
androidx.fragment.app.FragmentTransition: void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.fragment.app.FragmentTransition: void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection)
com.google.android.exoplayer2.SimpleExoPlayer$ComponentListener: void onVideoDecoderInitialized(java.lang.String,long,long)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintMode(android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.util.ParsableBitArray: ParsableBitArray(byte[])
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
androidx.appcompat.widget.SuggestionsAdapter: void updateSpinnerState(android.database.Cursor)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getAlpha()
androidx.fragment.app.FragmentTransitionCompat21: void setEpicenter(java.lang.Object,android.graphics.Rect)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean isRunning()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,com.google.android.exoplayer2.drm.DrmInitData)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.metadata.emsg.EventMessage: EventMessage(android.os.Parcel)
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter: java.lang.Object newArray(int)
cn.jzvd.Jzvd: void setUp(java.lang.String,java.lang.String,int,java.lang.Class)
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources$Theme getTheme()
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: android.util.Pair linearlyInterpolate(long,long[],long[])
com.google.android.exoplayer2.Timeline: int getLastWindowIndex(boolean)
com.bumptech.glide.load.engine.LockedResource: void init(com.bumptech.glide.load.engine.Resource)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: android.graphics.Point getCodecMaxSize(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,com.google.android.exoplayer2.Format)
com.bumptech.glide.Registry: java.util.List getModelLoaders(java.lang.Object)
androidx.appcompat.widget.AppCompatHintHelper: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View)
com.google.android.exoplayer2.MediaPeriodQueue: boolean isLastInPeriod(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.google.android.exoplayer2.BaseRenderer: void disable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void toPath(android.graphics.Path)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.upstream.ParsingLoadable,long,long,java.io.IOException,int)
androidx.arch.core.internal.SafeIterableMap$Entry: int hashCode()
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyShortcut(int,android.view.KeyEvent)
com.bumptech.glide.load.engine.EngineResource: EngineResource(com.bumptech.glide.load.engine.Resource,boolean,boolean,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.appcompat.view.menu.CascadingMenuPopup: android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder)
com.danikula.videocache.HttpProxyCacheServer$Builder: com.danikula.videocache.Config buildConfig()
com.google.android.exoplayer2.extractor.ogg.StreamReader: void seek(long,long)
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: DefaultAudioSink$PositionTrackerListener(com.google.android.exoplayer2.audio.DefaultAudioSink,com.google.android.exoplayer2.audio.DefaultAudioSink$1)
cn.jzvd.demo.CustomJzvd.JzvdStdAutoCompleteAfterFullscreen: void onAutoCompletion()
tv.danmaku.ijk.media.player.IMediaPlayer: int getVideoWidth()
androidx.activity.ComponentActivity$1: void run()
com.google.android.exoplayer2.MediaPeriodQueue: boolean updateShuffleModeEnabled(boolean)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int[] getState()
androidx.collection.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)
androidx.appcompat.widget.SearchView: int getInputType()
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setText(java.lang.CharSequence)
com.google.android.exoplayer2.util.ParsableByteArray: int capacity()
cn.jzvd.Jzvd: void clearFloatScreen()
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks: void onActivityStopped(android.app.Activity)
cn.jzvd.Jzvd: android.content.Context getApplicationContext()
androidx.appcompat.widget.ResourcesWrapper: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: boolean equals(java.lang.Object)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand$1: com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.AudioFocusManager: int requestAudioFocusDefault()
com.google.android.exoplayer2.upstream.DefaultAllocator: int getIndividualAllocationLength()
androidx.appcompat.widget.Toolbar: boolean shouldCollapse()
tv.danmaku.ijk.media.player.IjkMediaMeta: long getLong(java.lang.String)
androidx.cursoradapter.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults)
com.google.android.exoplayer2.source.ads.AdPlaybackState: boolean isPositionBeforeAdGroup(long,int)
androidx.core.view.ViewCompat: int getWindowSystemUiVisibility(android.view.View)
androidx.appcompat.view.menu.SubMenuBuilder: boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.String getActionSymbolicName(int)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: void reset()
com.google.android.exoplayer2.extractor.ts.AdtsReader: void setCheckingAdtsHeaderState()
android.support.v4.media.RatingCompat$1: RatingCompat$1()
androidx.recyclerview.widget.GridLayoutManager: androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams()
androidx.appcompat.view.menu.ExpandedMenuView: void initialize(androidx.appcompat.view.menu.MenuBuilder)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
cn.jzvd.demo.AdapterListView: android.view.View getView(int,android.view.View,android.view.ViewGroup)
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean isHardwareAcceleratedV29(android.media.MediaCodecInfo)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean hasAnyOfTheFlags(int)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame: int hashCode()
com.google.android.exoplayer2.extractor.ts.TsExtractor: com.google.android.exoplayer2.extractor.ExtractorOutput access$700(com.google.android.exoplayer2.extractor.ts.TsExtractor)
androidx.appcompat.widget.ResourceManagerInternal: boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: void outputSample(int)
com.bumptech.glide.load.engine.DecodeJob: int compareTo(java.lang.Object)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setNumericShortcut(char,int)
androidx.appcompat.widget.ResourcesWrapper: java.lang.String getQuantityString(int,int)
com.google.android.exoplayer2.Format: int describeContents()
androidx.viewpager.widget.ViewPager: boolean pageLeft()
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
androidx.appcompat.widget.ResourcesWrapper: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme)
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon: void jumpToCurrentState()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.Poolable create()
com.bumptech.glide.load.ImageHeaderParserUtils: int getOrientationInternal(java.util.List,com.bumptech.glide.load.ImageHeaderParserUtils$OrientationReader)
com.google.android.exoplayer2.MediaPeriodInfo: MediaPeriodInfo(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long,long,long,long,boolean,boolean)
com.bumptech.glide.request.ErrorRequestCoordinator: void clear()
androidx.fragment.app.Fragment: void onSaveInstanceState(android.os.Bundle)
com.bumptech.glide.request.transition.NoTransition: com.bumptech.glide.request.transition.TransitionFactory getFactory()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean continueLoading(long)
androidx.fragment.app.FragmentController: void dispatchMultiWindowModeChanged(boolean)
com.bumptech.glide.request.BaseRequestOptions: java.lang.Class getResourceClass()
com.google.android.exoplayer2.extractor.DefaultExtractorInput: long getPeekPosition()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$AudioSinkListener: MediaCodecAudioRenderer$AudioSinkListener(com.google.android.exoplayer2.audio.MediaCodecAudioRenderer,com.google.android.exoplayer2.audio.MediaCodecAudioRenderer$1)
com.google.android.exoplayer2.extractor.ts.LatmReader: int parseAudioSpecificConfig(com.google.android.exoplayer2.util.ParsableBitArray)
com.google.android.exoplayer2.util.ParsableBitArray: void putInt(int,int)
androidx.core.util.Pools$SimplePool: boolean isInPool(java.lang.Object)
com.bumptech.glide.load.data.StreamLocalUriFetcher: void close(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
android.support.v4.os.IResultReceiver$Stub: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
androidx.fragment.app.Fragment: androidx.lifecycle.ViewModelStore getViewModelStore()
com.google.android.exoplayer2.metadata.id3.ChapterTocFrame: ChapterTocFrame(android.os.Parcel)
com.bumptech.glide.load.model.UriLoader: UriLoader(com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.widget.AppCompatDrawableManager$1: android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker: void remove(android.graphics.Bitmap)
com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker: TsBinarySearchSeeker(com.google.android.exoplayer2.util.TimestampAdjuster,long,long,int)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(com.google.android.exoplayer2.upstream.DataSpec)
com.google.android.exoplayer2.source.BaseMediaSource: void refreshSourceInfo(com.google.android.exoplayer2.Timeline)
androidx.lifecycle.FullLifecycleObserverAdapter: FullLifecycleObserverAdapter(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getWidth()
androidx.appcompat.widget.AppCompatSpinner$SavedState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1: java.io.File getCacheDirectory()
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery: ThumbFetcher$ImageThumbnailQuery(android.content.ContentResolver)
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1: DrawableToBitmapConverter$1()
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory: ResourceLoader$AssetFileDescriptorFactory(android.content.res.Resources)
com.bumptech.glide.load.model.GlideUrl: GlideUrl(java.net.URL,com.bumptech.glide.load.model.Headers)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None: float getScaleFactor(int,int,int,int)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config)
cn.jzvd.demo.ActivityListViewRecyclerView$1: void onChildViewDetachedFromWindow(android.view.View)
androidx.appcompat.app.AppCompatDelegateImpl$6$1: AppCompatDelegateImpl$6$1(androidx.appcompat.app.AppCompatDelegateImpl$6)
androidx.versionedparcelable.VersionedParcel: void writeString(java.lang.String,int)
androidx.fragment.app.FragmentController: void dispatchCreate()
com.bumptech.glide.gifdecoder.GifHeader: GifHeader()
com.google.android.exoplayer2.SimpleExoPlayer: void setVideoSurface(android.view.Surface)
androidx.customview.view.AbsSavedState$2: java.lang.Object createFromParcel(android.os.Parcel)
org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)
com.google.android.exoplayer2.source.ads.AdPlaybackState: AdPlaybackState(long[])
com.google.android.exoplayer2.util.ParsableByteArray: void setPosition(int)
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void stringElement(int,java.lang.String)
com.google.android.exoplayer2.extractor.ogg.OggPacket: com.google.android.exoplayer2.util.ParsableByteArray getPayload()
cn.jzvd.Jzvd: void onAutoCompletion()
androidx.fragment.app.FragmentHostCallback: FragmentHostCallback(androidx.fragment.app.FragmentActivity)
cn.jzvd.JZUtils: java.lang.String stringForTime(long)
androidx.viewpager.widget.ViewPager: androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int)
androidx.viewpager.widget.ViewPager$ViewPositionComparator: int compare(java.lang.Object,java.lang.Object)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
androidx.core.app.NavUtils: void navigateUpTo(android.app.Activity,android.content.Intent)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean onTouchEvent(android.view.MotionEvent)
androidx.core.widget.TextViewCompat$OreoCallback: void onDestroyActionMode(android.view.ActionMode)
androidx.fragment.app.BackStackRecord: BackStackRecord(androidx.fragment.app.FragmentManagerImpl)
androidx.appcompat.widget.SearchView: void launchQuerySearch(int,java.lang.String,java.lang.String)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: void format(com.google.android.exoplayer2.Format)
com.google.android.exoplayer2.source.SampleQueue: void splice()
androidx.appcompat.view.StandaloneActionMode: java.lang.CharSequence getTitle()
com.google.android.exoplayer2.text.ssa.SsaStyle: int parseAlignment(java.lang.String)
androidx.appcompat.view.StandaloneActionMode: boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener)
androidx.appcompat.app.AppCompatDialog: android.view.View findViewById(int)
com.google.android.exoplayer2.upstream.BaseDataSource: void addTransferListener(com.google.android.exoplayer2.upstream.TransferListener)
androidx.fragment.app.FragmentManagerImpl: void addFragment(androidx.fragment.app.Fragment,boolean)
com.bumptech.glide.request.SingleRequest: boolean canNotifyStatusChanged()
com.google.android.exoplayer2.ExoPlayerImpl: void setPlayWhenReady(boolean,int)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int)
com.google.android.exoplayer2.extractor.ogg.StreamReader: void reset(boolean)
tv.danmaku.ijk.media.player.misc.IMediaFormat: int getInteger(java.lang.String)
androidx.recyclerview.widget.RecyclerView: int getDeepestFocusedViewWithId(android.view.View)
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder: ResourceBitmapDecoder(com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: boolean isExifOrientationRequired(int)
com.bumptech.glide.load.data.LocalUriFetcher: void cleanup()
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
com.bumptech.glide.RequestManager$1: RequestManager$1(com.bumptech.glide.RequestManager)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1: VideoDecoder$ByteBufferInitializer$1(com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer,java.nio.ByteBuffer)
com.bumptech.glide.load.engine.GlideException: java.util.List getCauses()
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: int parseAlignmentOverride(java.lang.String)
androidx.core.view.ViewCompat: androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View)
androidx.recyclerview.widget.LayoutState: LayoutState()
com.google.android.exoplayer2.audio.SonicAudioProcessor: boolean isActive()
androidx.recyclerview.widget.RecyclerView: int computeHorizontalScrollExtent()
com.bumptech.glide.manager.RequestManagerRetriever: boolean isActivityVisible(android.content.Context)
androidx.appcompat.widget.TintTypedArray: android.graphics.drawable.Drawable getDrawable(int)
com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)
com.google.android.exoplayer2.text.CaptionStyleCompat: <clinit>()
androidx.viewpager.widget.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB: android.view.View onCreateActionView(android.view.MenuItem)
androidx.fragment.app.FragmentManagerState$1: java.lang.Object createFromParcel(android.os.Parcel)
com.danikula.videocache.Pinger: boolean isPingRequest(java.lang.String)
com.google.android.exoplayer2.source.TrackGroup$1: java.lang.Object createFromParcel(android.os.Parcel)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void setSelected(boolean)
androidx.collection.MapCollections$ValuesCollection: boolean addAll(java.util.Collection)
com.google.android.exoplayer2.text.webvtt.WebvttCssStyle: int getFontSizeUnit()
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean isUpdated()
com.google.android.exoplayer2.audio.SonicAudioProcessor: com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat configure(com.google.android.exoplayer2.audio.AudioProcessor$AudioFormat)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void seekMap(com.google.android.exoplayer2.extractor.SeekMap)
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry: ModelLoaderRegistry$ModelLoaderCache$Entry(java.util.List)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
androidx.appcompat.widget.TintTypedArray: androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[])
androidx.appcompat.widget.LinearLayoutCompat: void drawHorizontalDivider(android.graphics.Canvas,int)
androidx.appcompat.view.menu.MenuAdapter: void findExpandedIndex()
com.google.android.exoplayer2.extractor.SeekMap$SeekPoints: java.lang.String toString()
androidx.appcompat.widget.AppCompatTextClassifierHelper: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.recyclerview.widget.RecyclerView: int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.appcompat.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: java.util.List getDecoderInfos(com.google.android.exoplayer2.mediacodec.MediaCodecSelector,com.google.android.exoplayer2.Format,boolean)
org.slf4j.helpers.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Map)
androidx.collection.SimpleArrayMap: void ensureCapacity(int)
com.bumptech.glide.load.engine.DecodeJob: void cancel()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.view.menu.BaseMenuWrapper: void internalClear()
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: void put(android.graphics.Bitmap)
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback: android.graphics.drawable.Drawable$Callback unwrap()
com.google.android.exoplayer2.extractor.mp4.AtomParsers: boolean canApplyEditWithGaplessInfo(long[],long,long,long)
androidx.appcompat.widget.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)
org.slf4j.helpers.MarkerIgnoringBase: java.lang.String toString()
com.google.android.exoplayer2.audio.AudioRendererEventListener: void onAudioSinkUnderrun(int,long,long)
com.danikula.videocache.IgnoreHostProxySelector: void install(java.lang.String,int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: java.lang.CharSequence getLabel()
androidx.appcompat.view.menu.ActionMenuItem: void setShowAsAction(int)
androidx.collection.SimpleArrayMap: boolean remove(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.extractor.ts.MpegAudioReader: void packetStarted(long,int)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeUniformWithPresetSizes(int[],int)
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder: BitmapDrawableTranscoder(android.content.res.Resources)
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.bumptech.glide.disklrucache.DiskLruCache$Entry: void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[])
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: int compareFormatValues(int,int)
androidx.core.app.TaskStackBuilder: TaskStackBuilder(android.content.Context)
androidx.recyclerview.widget.StaggeredGridLayoutManager: boolean areAllEndsEqual()
androidx.fragment.app.FragmentManagerImpl: void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: boolean parseOptionalBooleanAttribute(java.lang.String,java.util.regex.Pattern,boolean)
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder: com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options)
com.bumptech.glide.load.data.DataRewinderRegistry: DataRewinderRegistry()
com.bumptech.glide.load.resource.bytes.BytesResource: int getSize()
com.bumptech.glide.GlideContext: com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.bumptech.glide.util.LruCache: void onItemEvicted(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: java.lang.String readString(com.google.android.exoplayer2.extractor.ExtractorInput,int)
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener: AppCompatViewInflater$DeclaredOnClickListener(android.view.View,java.lang.String)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void maybeUpdateIsInCaptionService(byte,byte)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: ScrollingTabContainerView$TabView(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast: com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int)
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper: boolean onPerformDefaultAction()
com.bumptech.glide.disklrucache.DiskLruCache$Entry: DiskLruCache$Entry(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1)
com.bumptech.glide.load.ImageHeaderParserUtils$4: ImageHeaderParserUtils$4(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
androidx.appcompat.view.menu.MenuPopup: void onItemClick(android.widget.AdapterView,android.view.View,int,long)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean updateAndVerifyCurrentChannel(byte)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void setVolume(float,float)
com.bumptech.glide.util.Preconditions: java.util.Collection checkNotEmpty(java.util.Collection)
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback: AppCompatDelegateImpl$ActionMenuPresenterCallback(androidx.appcompat.app.AppCompatDelegateImpl)
androidx.core.content.res.ResourcesCompat: android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean)
androidx.appcompat.widget.SuggestionsAdapter: android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri)
androidx.appcompat.widget.SearchView$9: void onNothingSelected(android.widget.AdapterView)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsEosPropagationWorkaround(com.google.android.exoplayer2.mediacodec.MediaCodecInfo)
androidx.core.graphics.drawable.WrappedDrawableApi14: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)
cn.jzvd.JzvdStd: void onStopTrackingTouch(android.widget.SeekBar)
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: int getLayoutId()
com.danikula.videocache.file.LruDiskUsage: void touch(java.io.File)
com.google.android.exoplayer2.text.pgs.PgsSubtitle: java.util.List getCues(long)
androidx.core.widget.TextViewCompat$OreoCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)
com.google.android.exoplayer2.trackselection.TrackSelection$Definition: TrackSelection$Definition(com.google.android.exoplayer2.source.TrackGroup,int[])
com.google.android.exoplayer2.trackselection.BaseTrackSelection: com.google.android.exoplayer2.Format getSelectedFormat()
com.google.android.exoplayer2.MediaPeriodHolder: boolean isLoadingMediaPeriod()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo tryResolveWindowIndex(int)
androidx.core.widget.AutoScrollHelper: float computeTargetVelocity(int,float,float,float)
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl: void setTitle(java.lang.CharSequence)
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker: void add(android.graphics.Bitmap)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable)
androidx.collection.SparseArrayCompat: void gc()
androidx.core.graphics.drawable.WrappedDrawableApi14: void setTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$AccessibilityViewProperty: java.lang.Object get(android.view.View)
androidx.appcompat.view.menu.StandardMenuPopup: void setOnDismissListener(android.widget.PopupWindow$OnDismissListener)
androidx.collection.LongSparseArray: androidx.collection.LongSparseArray clone()
com.google.android.exoplayer2.ExoPlayerImpl: void setPlaybackParameters(com.google.android.exoplayer2.PlaybackParameters)
com.bumptech.glide.manager.RequestTracker: void clearRequests()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.UrlLinkFrame decodeWxxxFrame(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector: boolean isSupportedAdaptiveAudioTrack(com.google.android.exoplayer2.Format,int,com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple,int,boolean,boolean,boolean)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
cn.jzvd.demo.ActivityListViewMultiHolder: void onPause()
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: void backspace()
com.bumptech.glide.load.model.FileLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void maybeThrowError()
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader: QMediaStoreUriLoader(android.content.Context,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class)
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean isMediaChunk(com.google.android.exoplayer2.source.chunk.Chunk)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createAudioSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,int,int,java.util.List,com.google.android.exoplayer2.drm.DrmInitData,int,java.lang.String)
com.bumptech.glide.load.model.ModelCache: java.lang.Object get(java.lang.Object,int,int)
com.google.android.exoplayer2.source.BaseMediaSource: void enableInternal()
com.google.android.exoplayer2.trackselection.TrackSelectionArray: com.google.android.exoplayer2.trackselection.TrackSelection[] getAll()
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void clearCallbacksAndListener()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.exoplayer2.text.webvtt.CssParser: boolean maybeSkipWhitespace(com.google.android.exoplayer2.util.ParsableByteArray)
androidx.core.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
androidx.appcompat.app.AppCompatDelegateImpl: int calculateNightMode()
androidx.core.view.OneShotPreDrawListener: void onViewDetachedFromWindow(android.view.View)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand$1: com.google.android.exoplayer2.metadata.scte35.PrivateCommand createFromParcel(android.os.Parcel)
androidx.arch.core.executor.ArchTaskExecutor$1: ArchTaskExecutor$1()
androidx.media.AudioAttributesImplApi21: java.lang.String toString()
androidx.collection.ContainerHelpers: <clinit>()
com.bumptech.glide.load.resource.gif.GifDrawableResource: GifDrawableResource(com.bumptech.glide.load.resource.gif.GifDrawable)
com.google.android.exoplayer2.audio.DefaultAudioSink: int getChannelConfig(int,boolean)
androidx.appcompat.widget.ActionMenuView: int measureChildForCells(android.view.View,int,int,int,int)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long readDiscontinuity()
com.google.android.exoplayer2.util.ParsableByteArray: ParsableByteArray(byte[],int)
com.google.android.exoplayer2.text.pgs.PgsDecoder$CueBuilder: void parseIdentifierSection(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: float readFloat()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: void removeEventListener(com.google.android.exoplayer2.upstream.BandwidthMeter$EventListener)
androidx.appcompat.widget.ResourceManagerInternal: long createCacheKey(android.util.TypedValue)
androidx.core.view.NestedScrollingChildHelper: boolean dispatchNestedPreFling(float,float)
com.bumptech.glide.request.target.ImageViewTarget: void setDrawable(android.graphics.drawable.Drawable)
org.slf4j.helpers.NOPLogger: void warn(java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
androidx.fragment.app.Fragment: androidx.core.app.SharedElementCallback getExitTransitionCallback()
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver: void onChanged()
android.support.v4.media.session.PlaybackStateCompatApi21: long getActiveQueueItemId(java.lang.Object)
com.google.android.exoplayer2.upstream.DefaultHttpDataSource: <clinit>()
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter: int getViewTypeCount()
com.google.android.exoplayer2.extractor.ogg.OpusReader: <clinit>()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDecoderDisabled(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,int,com.google.android.exoplayer2.decoder.DecoderCounters)
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.widget.SearchView: void updateFocusedState()
com.bumptech.glide.request.RequestCoordinator$RequestState: com.bumptech.glide.request.RequestCoordinator$RequestState valueOf(java.lang.String)
com.bumptech.glide.load.resource.gif.GifBitmapProvider: android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: void updateCacheStates()
cn.jzvd.demo.ActivityApiExtendsNormal: ActivityApiExtendsNormal()
com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader: ScriptTagPayloadReader()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator: int getTotalDuration()
org.slf4j.helpers.SubstituteLogger: org.slf4j.Logger getEventRecordingLogger()
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setEnabled(boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: boolean isSeeking()
cn.jzvd.demo.CustomJzvd.JzvdStdMp3: void changeUiToError()
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: android.content.IntentFilter createIntentFilterForBroadcastReceiver()
androidx.appcompat.app.AppCompatDelegateImpl: void closePanel(int)
com.google.android.exoplayer2.util.TimedValueQueue: void doubleCapacityIfFull()
com.google.android.exoplayer2.util.ParsableBitArray: void reset(byte[],int)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isSpecialNorthAmericanChar(byte,byte)
com.bumptech.glide.load.resource.bitmap.BitmapEncoder: BitmapEncoder(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.bumptech.glide.load.model.ModelLoaderRegistry: java.util.List getModelLoaders(java.lang.Object)
com.bumptech.glide.load.model.MultiModelLoaderFactory: java.util.List getDataClasses(java.lang.Class)
androidx.core.graphics.TypefaceCompatBaseImpl: android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int)
com.google.android.exoplayer2.util.SlidingPercentile: float getPercentile(float)
androidx.appcompat.widget.ActionBarOverlayLayout$1: void onAnimationCancel(android.animation.Animator)
com.google.android.exoplayer2.ExoPlayerImplInternal: void resetRendererPosition(long)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: boolean codecNeedsEosOutputExceptionWorkaround(java.lang.String)
androidx.core.text.PrecomputedTextCompat: void removeSpan(java.lang.Object)
com.google.android.exoplayer2.MediaPeriodHolder: void release()
com.bumptech.glide.util.LruCache: void clearMemory()
com.google.android.exoplayer2.decoder.DecoderInputBuffer: com.google.android.exoplayer2.decoder.DecoderInputBuffer newFlagsOnlyInstance()
com.google.android.exoplayer2.ExoPlayerLibraryInfo: <clinit>()
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format copyWithExoMediaCryptoType(java.lang.Class)
com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory: java.util.List getClosedCaptionFormats(com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)
com.google.android.exoplayer2.MediaPeriodInfo: int hashCode()
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean onLevelChange(int)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int hashCode()
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory: com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setEndTime(long)
com.google.android.exoplayer2.extractor.FlacMetadataReader: boolean readMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.FlacMetadataReader$FlacStreamMetadataHolder)
androidx.collection.SimpleArrayMap: void clear()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: boolean supportsAutoSizeText()
androidx.collection.ArraySet: boolean addAll(java.util.Collection)
com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: long read(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.appcompat.view.menu.MenuBuilder: void changeMenuMode()
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onReadingStarted(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
androidx.core.app.ActivityRecreator: java.lang.Class getActivityThreadClass()
androidx.core.view.ViewPropertyAnimatorCompat$1: void onAnimationCancel(android.animation.Animator)
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1: void close(java.lang.Object)
androidx.core.app.CoreComponentFactory: android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent)
androidx.fragment.app.FragmentTransitionCompat21$1: FragmentTransitionCompat21$1(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect)
com.google.android.exoplayer2.upstream.Loader$LoadErrorAction: int access$300(com.google.android.exoplayer2.upstream.Loader$LoadErrorAction)
com.google.android.exoplayer2.metadata.flac.PictureFrame$1: PictureFrame$1()
tv.danmaku.ijk.media.player.IMediaPlayer: void setOnCompletionListener(tv.danmaku.ijk.media.player.IMediaPlayer$OnCompletionListener)
androidx.recyclerview.widget.RecyclerView: void ensureLeftGlow()
androidx.appcompat.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)
com.google.android.exoplayer2.source.hls.HlsMediaSource: com.google.android.exoplayer2.source.MediaPeriod createPeriod(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.upstream.Allocator,long)
androidx.appcompat.widget.ForwardingListener: void onViewDetachedFromWindow(android.view.View)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.Metadata decode(byte[],int)
androidx.recyclerview.widget.RecyclerView: boolean onInterceptTouchEvent(android.view.MotionEvent)
cn.jzvd.demo.ApplicationDemo: ApplicationDemo()
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void disabled(com.google.android.exoplayer2.decoder.DecoderCounters)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: FragmentedMp4Extractor(int,com.google.android.exoplayer2.util.TimestampAdjuster,com.google.android.exoplayer2.extractor.mp4.Track,java.util.List,com.google.android.exoplayer2.extractor.TrackOutput)
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.metadata.icy.IcyInfo$1: com.google.android.exoplayer2.metadata.icy.IcyInfo createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void setDrmInitData(com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.RequestBuilder: <clinit>()
androidx.appcompat.view.menu.ActionMenuItem: int getNumericModifiers()
androidx.lifecycle.ReportFragment: void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener)
com.google.android.exoplayer2.source.SampleQueue: boolean mayReadSample(int)
androidx.core.graphics.TypefaceCompatApi21Impl: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
com.bumptech.glide.load.engine.ActiveResources: ActiveResources(boolean)
com.bumptech.glide.load.resource.gif.StreamGifDecoder: boolean handles(java.lang.Object,com.bumptech.glide.load.Options)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: int measureHeightOfChildrenCompat(int,int,int,int,int)
androidx.appcompat.widget.ActionMenuView$LayoutParams: ActionMenuView$LayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.BaseRenderer: long getReadingPositionUs()
com.bumptech.glide.request.BaseRequestOptions: java.lang.Object clone()
com.bumptech.glide.load.resource.bitmap.CenterCrop: boolean equals(java.lang.Object)
com.google.android.exoplayer2.source.MediaSourceEventListener$EventDispatcher: MediaSourceEventListener$EventDispatcher(java.util.concurrent.CopyOnWriteArrayList,int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long)
cn.jzvd.JZDataSource: java.lang.String getKeyFromDataSource(int)
com.bumptech.glide.util.ByteBufferUtil: byte[] toBytes(java.nio.ByteBuffer)
com.bumptech.glide.load.resource.gif.GifDrawableTransformation: com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int)
cn.jzvd.demo.CustomMedia.JZMediaExo: boolean isPlaying()
com.google.android.exoplayer2.metadata.Metadata: com.google.android.exoplayer2.metadata.Metadata$Entry get(int)
tv.danmaku.ijk.media.player.IMediaPlayer$OnBufferingUpdateListener: void onBufferingUpdate(tv.danmaku.ijk.media.player.IMediaPlayer,int)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters: int hashCode()
com.google.android.exoplayer2.extractor.mp4.MdtaMetadataEntry: void writeToParcel(android.os.Parcel,int)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
com.bumptech.glide.load.model.ModelCache$1: void onItemEvicted(java.lang.Object,java.lang.Object)
com.bumptech.glide.manager.TargetTracker: void onStop()
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setBold(boolean)
android.support.v4.media.MediaMetadataCompat: MediaMetadataCompat(android.os.Parcel)
com.bumptech.glide.load.resource.transcode.TranscoderRegistry: void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable: com.google.android.exoplayer2.upstream.DataSpec buildDataSpec(long)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onCodecInitialized(java.lang.String,long,long)
com.bumptech.glide.manager.SupportRequestManagerFragment: void registerFragmentWithRoot(android.content.Context,androidx.fragment.app.FragmentManager)
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.appcompat.widget.SearchView: void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect)
androidx.appcompat.widget.ScrollingTabContainerView$TabView: void bindTab(androidx.appcompat.app.ActionBar$Tab)
androidx.fragment.app.FragmentManagerImpl: void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment)
org.slf4j.LoggerFactory: void reportMultipleBindingAmbiguity(java.util.Set)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: int hashCode()
com.google.android.exoplayer2.video.VideoRendererEventListener: void onVideoEnabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.core.graphics.drawable.WrappedDrawableState: WrappedDrawableState(androidx.core.graphics.drawable.WrappedDrawableState)
androidx.fragment.app.FragmentManagerImpl: void dispatchStart()
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
cn.jzvd.demo.ActivityListViewMultiHolder$VideoListAdapter: long getItemId(int)
androidx.appcompat.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollExtent()
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader: boolean handles(java.lang.Object)
com.google.android.exoplayer2.ExoPlayerImpl: void handlePlaybackParameters(com.google.android.exoplayer2.PlaybackParameters,boolean)
com.google.android.exoplayer2.extractor.mp4.AtomParsers$StszSampleSizeBox: AtomParsers$StszSampleSizeBox(com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom)
com.google.android.exoplayer2.C: long usToMs(long)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
androidx.core.view.NestedScrollingChildHelper: boolean hasNestedScrollingParent()
com.bumptech.glide.load.engine.cache.LruResourceCache: LruResourceCache(long)
org.slf4j.event.SubstituteLoggingEvent: void setTimeStamp(long)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: boolean isSnapshotValid(android.net.Uri)
tv.danmaku.ijk.media.player.IjkMediaPlayer: void native_setLogLevel(int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker: void maybeThrowPlaylistRefreshError(android.net.Uri)
com.google.android.exoplayer2.metadata.id3.GeobFrame: GeobFrame(android.os.Parcel)
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker: DiskCacheWriteLocker()
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder: android.os.ParcelFileDescriptor rewindAndGet()
androidx.core.graphics.ColorUtils: int compositeColors(int,int)
androidx.recyclerview.widget.LinearLayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
androidx.recyclerview.widget.RecyclerView: void ensureRightGlow()
androidx.collection.ArraySet: boolean add(java.lang.Object)
androidx.fragment.app.Fragment: void callStartTransitionListener()
androidx.fragment.app.FragmentHostCallback: android.content.Context getContext()
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlDecoder$TtsExtent parseTtsExtent(org.xmlpull.v1.XmlPullParser)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyUpPanel(int,android.view.KeyEvent)
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
com.google.android.exoplayer2.text.ssa.SsaDecoder: android.text.Layout$Alignment toTextAlignment(int)
com.google.android.exoplayer2.source.hls.HlsMediaSource$Factory: HlsMediaSource$Factory(com.google.android.exoplayer2.upstream.DataSource$Factory)
com.google.android.exoplayer2.util.LongArray: long[] toArray()
com.bumptech.glide.gifdecoder.GifHeader: int getHeight()
com.bumptech.glide.load.resource.bitmap.Downsampler: int getDensityMultiplier(double)
com.google.android.exoplayer2.source.IcyDataSource: int read(byte[],int,int)
tv.danmaku.ijk.media.player.IMediaPlayer: int getAudioSessionId()
androidx.core.graphics.TypefaceCompatApi29Impl: android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream)
com.google.android.exoplayer2.source.ProgressiveMediaSource: void maybeThrowSourceInfoRefreshError()
androidx.appcompat.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)
androidx.recyclerview.widget.GridLayoutManager: void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int)
androidx.exifinterface.media.ExifInterface$Rational: double calculate()
com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder: void rollUp()
androidx.appcompat.graphics.drawable.DrawableContainer: boolean onLevelChange(int)
com.google.android.exoplayer2.upstream.DefaultDataSourceFactory: DefaultDataSourceFactory(android.content.Context,java.lang.String)
androidx.savedstate.SavedStateRegistry: android.os.Bundle consumeRestoredStateForKey(java.lang.String)
com.google.android.exoplayer2.SimpleExoPlayer: void sendVolumeToRenderers()
androidx.recyclerview.widget.RecyclerView: boolean dispatchNestedFling(float,float,boolean)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long access$000(com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams)
androidx.recyclerview.widget.RecyclerView: void removeAndRecycleViews()
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper$DefaultDisplayListener: void onDisplayAdded(int)
com.google.android.exoplayer2.analytics.AnalyticsListener: void onRenderedFirstFrame(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime,android.view.Surface)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
tv.danmaku.ijk.media.player.IjkMediaMeta: java.util.ArrayList getParcelableArrayList(java.lang.String)
androidx.fragment.app.FragmentState: java.lang.String toString()
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
com.danikula.videocache.HttpUrlSource: java.lang.String getUrl()
com.google.android.exoplayer2.util.Util: int[] toArray(java.util.List)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry: int hashCode()
com.bumptech.glide.gifdecoder.StandardGifDecoder: void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame)
com.google.android.exoplayer2.audio.DefaultAudioSink$PositionTrackerListener: void onInvalidLatency(long)
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory: DiskLruCache$DiskLruCacheThreadFactory()
cn.jzvd.demo.ActivityListViewFragmentViewPager: void onPageScrollStateChanged(int)
cn.jzvd.JZMediaSystem: void setVolume(float,float)
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: void haltActionBarHideOffsetAnimations()
androidx.recyclerview.widget.StaggeredGridLayoutManager$1: StaggeredGridLayoutManager$1(androidx.recyclerview.widget.StaggeredGridLayoutManager)
com.danikula.videocache.HttpUrlSource: int read(byte[])
cn.jzvd.JzvdStd: JzvdStd(android.content.Context)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: boolean canAcquireSession(com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher: MediaStoreFileLoader$FilePathFetcher(android.content.Context,android.net.Uri)
com.danikula.videocache.file.Files: java.util.List getLruListFiles(java.io.File)
com.google.android.exoplayer2.decoder.DecoderCounters: void ensureUpdated()
com.bumptech.glide.request.BaseRequestOptions: android.graphics.drawable.Drawable getPlaceholderDrawable()
com.google.android.exoplayer2.extractor.mp3.MlltSeeker: MlltSeeker(long[],long[])
androidx.core.content.res.FontResourcesParserCompat: androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap)
androidx.core.widget.TextViewCompat$OreoCallback: java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager)
androidx.collection.ArraySet: java.util.Iterator iterator()
com.google.android.exoplayer2.MediaPeriodHolder: void disassociateNoSampleRenderersWithEmptySampleStream(com.google.android.exoplayer2.source.SampleStream[])
com.bumptech.glide.request.BaseRequestOptions: boolean isScaleOnlyOrNoTransform()
androidx.fragment.app.BackStackState$1: androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel)
cn.jzvd.demo.ActivityApiUISmallChange: void onPause()
com.google.android.exoplayer2.ExoPlayerImpl: com.google.android.exoplayer2.Timeline getCurrentTimeline()
com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand$1: SpliceNullCommand$1()
androidx.lifecycle.LifecycleRegistry$ObserverWithState: LifecycleRegistry$ObserverWithState(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State)
com.google.android.exoplayer2.extractor.ogg.OggPacket: void reset()
com.google.android.exoplayer2.mediacodec.MediaCodecUtil: boolean codecNeedsDisableAdaptationWorkaround(java.lang.String)
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks: void onObtainBounds()
cn.jzvd.demo.CustomMedia.JZMediaExo: void onRepeatModeChanged(int)
com.google.android.exoplayer2.util.Util: java.lang.String formatInvariant(java.lang.String,java.lang.Object[])
cn.jzvd.Jzvd: void showProgressDialog(float,java.lang.String,long,java.lang.String,long)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.NestedScrollView: boolean dispatchNestedPreFling(float,float)
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key: void init(int,java.lang.Class)
com.google.android.exoplayer2.BasePlayer: long getContentDuration()
android.support.v4.media.session.ParcelableVolumeInfo$1: java.lang.Object[] newArray(int)
androidx.appcompat.view.menu.SubMenuBuilder: void setGroupDividerEnabled(boolean)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isXdsControlCode(byte)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void maybeRenotifyRenderedFirstFrame()
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag: com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag buildStartTag(java.lang.String,int)
androidx.collection.ArraySet: int indexOf(java.lang.Object,int)
com.google.android.exoplayer2.audio.DefaultAudioSink: com.google.android.exoplayer2.PlaybackParameters getPlaybackParameters()
androidx.fragment.app.Fragment$2: Fragment$2(androidx.fragment.app.Fragment)
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager: void onChange()
com.google.android.exoplayer2.MediaPeriodHolder: long getBufferedPositionUs()
com.google.android.exoplayer2.SeekParameters: boolean equals(java.lang.Object)
com.bumptech.glide.RequestBuilder: com.bumptech.glide.request.Request obtainRequest(java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,java.util.concurrent.Executor)
com.google.android.exoplayer2.video.VideoRendererEventListener: void onVideoDisabled(com.google.android.exoplayer2.decoder.DecoderCounters)
androidx.appcompat.widget.ListPopupWindow: int getWidth()
androidx.collection.MapCollections$MapIterator: java.lang.Object next()
com.google.android.exoplayer2.upstream.HttpDataSource$BaseFactory: com.google.android.exoplayer2.upstream.DataSource createDataSource()
com.google.android.exoplayer2.metadata.id3.BinaryFrame: int hashCode()
com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning()
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.util.Map parseHeader(org.xmlpull.v1.XmlPullParser,java.util.Map,com.google.android.exoplayer2.text.ttml.TtmlDecoder$CellResolution,com.google.android.exoplayer2.text.ttml.TtmlDecoder$TtsExtent,java.util.Map,java.util.Map)
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1: ByteArrayLoader$ByteBufferFactory$1(com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void setReverseLayout(boolean)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void onDrmKeysLoaded()
tv.danmaku.ijk.media.player.IjkTimedText: IjkTimedText(android.graphics.Rect,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable)
androidx.core.widget.PopupWindowCompat: void setOverlapAnchor(android.widget.PopupWindow,boolean)
com.google.android.exoplayer2.extractor.DefaultExtractorInput: int skip(int)
com.bumptech.glide.load.engine.SourceGenerator: void reschedule()
com.google.android.exoplayer2.upstream.DefaultBandwidthMeter: java.util.Map createInitialBitrateCountryGroupAssignment()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState: int addTransition(int,int,android.graphics.drawable.Drawable,boolean)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
androidx.appcompat.widget.AlertDialogLayout: void onLayout(boolean,int,int,int,int)
com.bumptech.glide.load.engine.DecodeHelper: boolean isScaleOnlyOrNoTransform()
com.google.android.exoplayer2.extractor.BinarySearchSeeker: void setSeekTargetUs(long)
com.google.android.exoplayer2.util.Util: java.lang.Object[] nullSafeArrayConcatenation(java.lang.Object[],java.lang.Object[])
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: com.google.android.exoplayer2.upstream.Loader$LoadErrorAction onLoadError(com.google.android.exoplayer2.upstream.ParsingLoadable,long,long,java.io.IOException,int)
androidx.recyclerview.widget.RecyclerView: boolean onGenericMotionEvent(android.view.MotionEvent)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch: WebvttCueParser$StyleMatch(int,com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)
com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper: void updateDefaultDisplayRefreshRateParams()
com.bumptech.glide.load.resource.file.FileDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int,com.bumptech.glide.load.Options)
androidx.collection.LruCache: java.lang.Object get(java.lang.Object)
com.bumptech.glide.load.model.MultiModelLoaderFactory: void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory)
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
androidx.collection.MapCollections$EntrySet: boolean removeAll(java.util.Collection)
androidx.recyclerview.widget.RecyclerView$LayoutManager: boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams)
androidx.appcompat.widget.ResourceManagerInternal: android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int)
com.google.android.exoplayer2.text.SubtitleDecoderFactory$1: com.google.android.exoplayer2.text.SubtitleDecoder createDecoder(com.google.android.exoplayer2.Format)
com.bumptech.glide.load.engine.Engine: void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource)
com.google.android.exoplayer2.audio.Sonic: Sonic(int,int,float,float,int)
com.google.android.exoplayer2.metadata.emsg.EventMessage: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getMinimumWidth()
com.bumptech.glide.request.BaseRequestOptions: int getOverrideHeight()
androidx.appcompat.widget.SearchView: void updateSubmitButton(boolean)
com.bumptech.glide.load.engine.GlideException: java.lang.Throwable fillInStackTrace()
cn.jzvd.demo.CustomJzvd.JzvdStdShowShareButtonAfterFullscreen: void onClick(android.view.View)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager)
com.bumptech.glide.util.ExceptionPassthroughInputStream: long skip(long)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: int getOpacity()
com.bumptech.glide.load.ImageHeaderParser$ImageType: com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String)
com.google.android.exoplayer2.drm.DrmInitData: com.google.android.exoplayer2.drm.DrmInitData createSessionCreationData(com.google.android.exoplayer2.drm.DrmInitData,com.google.android.exoplayer2.drm.DrmInitData)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
com.google.android.exoplayer2.extractor.ogg.OggExtractor: boolean sniff(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void setPendingOutputEndOfStream()
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput: HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput(com.google.android.exoplayer2.extractor.TrackOutput,int)
androidx.collection.ArrayMap: java.util.Collection values()
cn.jzvd.demo.CustomJzvd.JzvdStdSpeed: void setScreenFullscreen()
com.bumptech.glide.load.model.GlideUrl: java.net.URL getSafeUrl()
com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException: HttpDataSource$HttpDataSourceException(java.io.IOException,com.google.android.exoplayer2.upstream.DataSpec,int)
androidx.fragment.app.FragmentManagerViewModel: androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore)
com.bumptech.glide.request.SingleRequest: boolean isComplete()
cn.jzvd.JZDataSource: JZDataSource(java.lang.String,java.lang.String)
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState: void mutate()
android.support.v4.os.ResultReceiver$MyRunnable: void run()
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher: java.lang.Class getDataClass()
android.support.v4.media.session.IMediaSession$Stub$Proxy: IMediaSession$Stub$Proxy(android.os.IBinder)
androidx.appcompat.widget.ForwardingListener: boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void copyLengthFromLoader(com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.exifinterface.media.ExifInterface: void addDefaultValuesForCompatibility()
androidx.appcompat.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: java.util.ArrayList access$000(com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker)
com.google.android.exoplayer2.text.cea.Cea608Decoder: void handlePreambleAddressCode(byte,byte)
com.bumptech.glide.load.engine.DecodeJob: void logWithTimeAndKey(java.lang.String,long,java.lang.String)
com.bumptech.glide.manager.RequestTracker: void pauseAllRequests()
androidx.appcompat.app.AppCompatDelegateImpl: AppCompatDelegateImpl(android.app.Dialog,androidx.appcompat.app.AppCompatCallback)
com.google.android.exoplayer2.upstream.DataSourceInputStream: int read(byte[])
com.google.android.exoplayer2.extractor.SeekPoint: int hashCode()
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat: PathInterpolatorCompat(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser)
androidx.appcompat.view.menu.StandardMenuPopup: boolean flagActionItems()
android.support.v4.media.MediaDescriptionCompatApi21$Builder: void setMediaId(java.lang.Object,java.lang.String)
com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo: Ac3Util$SyncFrameInfo(java.lang.String,int,int,int,int,int,com.google.android.exoplayer2.audio.Ac3Util$1)
androidx.core.view.ViewCompat: boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent)
com.google.android.exoplayer2.decoder.Buffer: void addFlag(int)
com.bumptech.glide.util.Util: boolean isOnBackgroundThread()
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: java.lang.Class getDataClass()
androidx.core.graphics.drawable.WrappedDrawableApi14: <clinit>()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionPause(android.transition.Transition)
com.bumptech.glide.load.model.ByteBufferFileLoader: ByteBufferFileLoader()
com.bumptech.glide.load.engine.DecodeJob: void logWithTimeAndKey(java.lang.String,long)
com.google.android.exoplayer2.ExoPlayerImplInternal: long getMaxRendererReadPositionUs()
com.google.android.exoplayer2.metadata.icy.IcyInfo: java.lang.String toString()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition: boolean canReverse()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onExtrasChanged(android.os.Bundle)
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: java.io.InputStream decode(java.lang.String)
androidx.appcompat.widget.ActionMenuView: boolean hideOverflowMenu()
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: DrawableContainer$DrawableContainerState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources)
com.bumptech.glide.util.MultiClassKey: boolean equals(java.lang.Object)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setDisplay(android.view.SurfaceHolder)
androidx.fragment.app.Fragment: java.lang.Object getReenterTransition()
androidx.appcompat.view.menu.MenuItemWrapperICS: boolean hasSubMenu()
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState: AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState(android.graphics.drawable.Drawable$ConstantState)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$FormatAdjustingSampleQueue: HlsSampleStreamWrapper$FormatAdjustingSampleQueue(com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.drm.DrmSessionManager,java.util.Map)
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData: void setAll(com.google.android.exoplayer2.util.NalUnitUtil$SpsData,int,int,int,int,boolean,boolean,boolean,boolean,int,int,int,int,int)
com.google.android.exoplayer2.upstream.Allocation: Allocation(byte[],int)
androidx.arch.core.internal.SafeIterableMap$Entry: java.lang.Object setValue(java.lang.Object)
cn.jzvd.demo.ActivityApiOrientation: void onBackPressed()
androidx.recyclerview.widget.RecyclerView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions: int getHeightPixels()
androidx.recyclerview.widget.LinearLayoutManager: void setStackFromEnd(boolean)
androidx.appcompat.view.menu.MenuItemImpl: androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher(java.lang.Runnable)
androidx.recyclerview.widget.RecyclerView$LayoutParams: int getViewLayoutPosition()
com.bumptech.glide.util.LogTime: long getLogTime()
com.google.android.exoplayer2.text.cea.CeaDecoder: com.google.android.exoplayer2.text.SubtitleOutputBuffer dequeueOutputBuffer()
android.support.v4.media.session.IMediaControllerCallback$Stub: IMediaControllerCallback$Stub()
androidx.recyclerview.widget.OrientationHelper$2: int getDecoratedMeasurementInOther(android.view.View)
androidx.appcompat.view.menu.MenuItemWrapperICS: void setShowAsAction(int)
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy: java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config)
com.bumptech.glide.util.Util: int hashCode(boolean,int)
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.exoplayer2.AudioFocusManager: void abandonAudioFocusDefault()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: boolean canReuseCache()
androidx.appcompat.view.menu.MenuBuilder: void flagActionItems()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: java.util.Map createIcyMetadataHeaders()
androidx.recyclerview.widget.RecyclerView$ItemDecoration: void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
androidx.appcompat.view.menu.BaseMenuWrapper: android.view.MenuItem getMenuItemWrapper(android.view.MenuItem)
com.google.android.exoplayer2.metadata.id3.Id3Frame: int describeContents()
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: boolean isLowMemoryDevice(android.app.ActivityManager)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Bitmap$Config getNonNullConfig(android.graphics.Bitmap)
androidx.core.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState: void updateDensity(android.content.res.Resources)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: java.lang.String[] parseStyleIds(java.lang.String)
com.bumptech.glide.Glide: com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever()
com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader: void createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput,com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)
androidx.fragment.app.FragmentManagerImpl: void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList)
androidx.appcompat.graphics.drawable.DrawableWrapper: void setFilterBitmap(boolean)
com.google.android.exoplayer2.drm.DefaultDrmSessionManager: void prepare()
androidx.appcompat.view.menu.MenuItemImpl: java.lang.CharSequence getContentDescription()
com.google.android.exoplayer2.mediacodec.MediaCodecSelector$1: MediaCodecSelector$1()
com.google.android.exoplayer2.ui.SubtitleView: SubtitleView(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory: com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key create()
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
com.google.android.exoplayer2.source.TrackGroup$1: TrackGroup$1()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ScrollingTabContainerView: androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setColorFilter(android.graphics.ColorFilter)
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface findFromCache(android.content.res.Resources,int,int)
com.google.android.exoplayer2.metadata.id3.MlltFrame$1: MlltFrame$1()
androidx.versionedparcelable.VersionedParcel: java.lang.CharSequence readCharSequence(java.lang.CharSequence,int)
androidx.appcompat.view.menu.ActionMenuItem: androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int)
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry: ResourceEncoderRegistry$Entry(java.lang.Class,com.bumptech.glide.load.ResourceEncoder)
com.google.android.exoplayer2.extractor.ogg.OggExtractor: void init(com.google.android.exoplayer2.extractor.ExtractorOutput)
com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: long maybeResyncToNextLevel1Element(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.util.Util: java.lang.Object[] nullSafeArrayAppend(java.lang.Object[],java.lang.Object)
androidx.recyclerview.widget.GapWorker$1: GapWorker$1()
com.danikula.videocache.ProxyCache: void onSourceRead()
androidx.exifinterface.media.ExifInterface: boolean isRafFormat(byte[])
androidx.viewpager.widget.ViewPager: void setPageMarginDrawable(int)
com.google.android.exoplayer2.extractor.amr.AmrExtractor: int peekNextSampleSize(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.ExoPlayerImpl: long periodPositionUsToWindowPositionMs(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,long)
com.google.android.exoplayer2.metadata.id3.ChapterFrame: boolean equals(java.lang.Object)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener)
com.bumptech.glide.load.resource.ImageDecoderResourceDecoder$1: void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: boolean suppressRead()
androidx.core.widget.AutoScrollHelper: void startAnimating()
com.bumptech.glide.request.ErrorRequestCoordinator: boolean parentCanSetImage()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection$DefaultBandwidthProvider: AdaptiveTrackSelection$DefaultBandwidthProvider(com.google.android.exoplayer2.upstream.BandwidthMeter,float,long)
androidx.core.app.CoreComponentFactory: java.lang.Object checkCompatWrapper(java.lang.Object)
com.google.android.exoplayer2.extractor.ts.DtsReader: void parseHeader()
com.bumptech.glide.provider.ResourceEncoderRegistry: com.bumptech.glide.load.ResourceEncoder get(java.lang.Class)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: boolean isReady(int)
tv.danmaku.ijk.media.player.MediaPlayerProxy: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)
com.google.android.exoplayer2.Format: com.google.android.exoplayer2.Format createImageSampleFormat(java.lang.String,java.lang.String,java.lang.String,int,int,java.util.List,java.lang.String,com.google.android.exoplayer2.drm.DrmInitData)
com.google.android.exoplayer2.extractor.ChunkIndex: int getChunkIndex(long)
com.google.android.exoplayer2.video.ColorInfo: int hashCode()
com.google.android.exoplayer2.util.Util: android.os.Handler createHandler(android.os.Looper,android.os.Handler$Callback)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: long getCurrentPositionUs(boolean)
com.google.android.exoplayer2.Timeline$1: int getWindowCount()
com.bumptech.glide.load.resource.bytes.BytesResource: void recycle()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: int getIntrinsicWidth()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setTintList(android.content.res.ColorStateList)
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onBufferingUpdate(tv.danmaku.ijk.media.player.IMediaPlayer,int)
com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper: void endTracks()
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationEnd(android.view.View)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void autoSizeText()
com.google.android.exoplayer2.source.SampleQueue: int readSampleMetadata(com.google.android.exoplayer2.FormatHolder,com.google.android.exoplayer2.decoder.DecoderInputBuffer,boolean,boolean,long,com.google.android.exoplayer2.source.SampleQueue$SampleExtrasHolder)
androidx.core.widget.AutoScrollHelper: androidx.core.widget.AutoScrollHelper setRampDownDuration(int)
androidx.collection.SimpleArrayMap: boolean equals(java.lang.Object)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.manager.FrameWaiter buildFrameWaiter(com.bumptech.glide.GlideExperiments)
com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.google.android.exoplayer2.ExoPlayerImplInternal: void maybeContinueLoading()
androidx.recyclerview.widget.StaggeredGridLayoutManager: void updateMeasureSpecs(int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.recyclerview.widget.RecyclerView$LayoutManager: void requestLayout()
com.google.android.exoplayer2.util.TimedValueQueue: void addUnchecked(long,java.lang.Object)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void onDisabled()
com.bumptech.glide.load.resource.transcode.UnitTranscoder: com.bumptech.glide.load.resource.transcode.ResourceTranscoder get()
androidx.customview.view.AbsSavedState: android.os.Parcelable getSuperState()
com.google.android.exoplayer2.util.EGLSurfaceTexture: void generateTextureIds(int[])
com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat[] values()
tv.danmaku.ijk.media.player.IMediaPlayer: void setWakeMode(android.content.Context,int)
androidx.appcompat.widget.ActionBarOverlayLayout$3: void run()
androidx.fragment.app.FragmentTransitionCompat21: java.lang.Object cloneTransition(java.lang.Object)
androidx.fragment.app.Fragment: boolean isHideReplaced()
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToPauseClear()
androidx.appcompat.view.menu.MenuBuilder: void setOverrideVisibleItems(boolean)
androidx.lifecycle.LifecycleRegistry: androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State)
com.bumptech.glide.Registry: com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
com.bumptech.glide.load.model.ModelCache$1: ModelCache$1(com.bumptech.glide.load.model.ModelCache,long)
androidx.core.view.OneShotPreDrawListener: void removeListener()
com.bumptech.glide.request.target.ViewTarget: java.lang.Object getTag()
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener: void onAnimationStart(android.view.View)
com.google.android.exoplayer2.source.ClippingMediaPeriod: ClippingMediaPeriod(com.google.android.exoplayer2.source.MediaPeriod,boolean,long,long)
com.google.android.exoplayer2.text.ssa.SsaDecoder: void parseScriptInfo(com.google.android.exoplayer2.util.ParsableByteArray)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void loadPlaylist()
com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist copy(java.util.List)
com.google.android.exoplayer2.text.SimpleSubtitleDecoder: java.lang.Exception createUnexpectedDecodeException(java.lang.Throwable)
com.google.android.exoplayer2.extractor.flv.FlvExtractor: com.google.android.exoplayer2.util.ParsableByteArray prepareTagData(com.google.android.exoplayer2.extractor.ExtractorInput)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$VariantInfo$1: java.lang.Object createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.upstream.DataSpec: com.google.android.exoplayer2.upstream.DataSpec subrange(long,long)
com.bumptech.glide.load.resource.bitmap.Downsampler: boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType)
com.bumptech.glide.load.engine.EngineResource: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegateImpl: androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager(android.content.Context)
com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder: com.google.android.exoplayer2.text.Subtitle decode(byte[],int,boolean)
com.google.android.exoplayer2.util.FlacStreamMetadata: FlacStreamMetadata(int,int,int,int,int,int,int,long,com.google.android.exoplayer2.util.FlacStreamMetadata$SeekTable,com.google.android.exoplayer2.metadata.Metadata)
com.google.android.exoplayer2.metadata.MetadataRenderer: MetadataRenderer(com.google.android.exoplayer2.metadata.MetadataOutput,android.os.Looper)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void readAtomPayload(com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.recyclerview.widget.OrientationHelper$2: int getModeInOther()
androidx.core.widget.AutoScrollHelper$ClampedScroller: void computeScrollDelta()
com.bumptech.glide.manager.SupportRequestManagerFragment: java.util.Set getDescendantRequestManagerFragments()
com.google.android.exoplayer2.util.SystemHandlerWrapper: SystemHandlerWrapper(android.os.Handler)
com.google.android.exoplayer2.extractor.ts.AdtsReader: boolean tryRead(com.google.android.exoplayer2.util.ParsableByteArray,byte[],int)
cn.jzvd.demo.CustomJzvd.JzvdStdShowTextureViewAfterAutoComplete: void onAutoCompletion()
com.google.android.exoplayer2.C: <clinit>()
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher: void close(android.os.ParcelFileDescriptor)
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickVideoImageDisplayFillCrop(android.view.View)
com.bumptech.glide.disklrucache.StrictLineReader: StrictLineReader(java.io.InputStream,int,java.nio.charset.Charset)
tv.danmaku.ijk.media.player.IjkMediaPlayer: tv.danmaku.ijk.media.player.misc.IjkTrackInfo[] getTrackInfo()
androidx.appcompat.widget.ActionMenuView: boolean showOverflowMenu()
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu)
androidx.appcompat.view.menu.SubMenuWrapperICS: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
cn.jzvd.demo.ActivityApi: void clickPreloading(android.view.View)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: java.lang.reflect.Field getTextViewField(java.lang.String)
com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory[] values()
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: LruBitmapPool(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set)
androidx.appcompat.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
com.google.android.exoplayer2.text.SubtitleOutputBuffer: java.util.List getCues(long)
com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory: com.google.android.exoplayer2.source.hls.HlsExtractorFactory$Result createExtractor(com.google.android.exoplayer2.extractor.Extractor,android.net.Uri,com.google.android.exoplayer2.Format,java.util.List,com.google.android.exoplayer2.util.TimestampAdjuster,java.util.Map,com.google.android.exoplayer2.extractor.ExtractorInput)
tv.danmaku.ijk.media.player.IMediaPlayer: void setAudioStreamType(int)
com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder: com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder setLineType(int)
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter: boolean flagActionItems()
com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode: void initialize(com.google.android.exoplayer2.upstream.Allocation,com.google.android.exoplayer2.source.SampleDataQueue$AllocationNode)
android.support.v4.media.session.MediaSessionCompat: void ensureClassLoader(android.os.Bundle)
androidx.core.provider.FontsContractCompat$FontInfo: int getWeight()
androidx.appcompat.app.AppCompatDelegate: int getLocalNightMode()
androidx.recyclerview.widget.LinearLayoutManager: android.os.Parcelable onSaveInstanceState()
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory: ByteBufferFileLoader$Factory()
com.google.android.exoplayer2.metadata.emsg.EventMessage$1: java.lang.Object createFromParcel(android.os.Parcel)
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher: void cancel()
com.bumptech.glide.load.engine.GlideException: void logRootCauses(java.lang.String)
androidx.recyclerview.widget.RecyclerView$LayoutParams: boolean isItemRemoved()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet,int)
com.google.android.exoplayer2.source.TrackGroupArray$1: java.lang.Object createFromParcel(android.os.Parcel)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void changeUiToPauseShow()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: void release()
com.google.android.exoplayer2.metadata.id3.Id3Decoder: int indexOfEos(byte[],int,int)
com.google.android.exoplayer2.audio.AudioTrackPositionTracker: boolean mayHandleBuffer(long)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: boolean isSupportedTag(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.source.ProgressiveMediaSource: com.google.android.exoplayer2.source.MediaPeriod createPeriod(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId,com.google.android.exoplayer2.upstream.Allocator,long)
androidx.fragment.app.FragmentManagerImpl$2: FragmentManagerImpl$2(androidx.fragment.app.FragmentManagerImpl)
com.google.android.exoplayer2.text.CaptionStyleCompat: com.google.android.exoplayer2.text.CaptionStyleCompat createFromCaptionStyle(android.view.accessibility.CaptioningManager$CaptionStyle)
androidx.lifecycle.LiveData$ObserverWrapper: boolean isAttachedTo(androidx.lifecycle.LifecycleOwner)
androidx.core.view.ViewCompat: android.view.Display getDisplay(android.view.View)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.core.util.Pools$SynchronizedPool: boolean release(java.lang.Object)
androidx.core.graphics.drawable.WrappedDrawableApi14: void setAutoMirrored(boolean)
androidx.core.provider.FontsContractCompat$3: FontsContractCompat$3(java.lang.String)
com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher: void renderedFirstFrame(android.view.Surface)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory: ByteBufferRewinder$Factory()
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioTrackScore: DefaultTrackSelector$AudioTrackScore(com.google.android.exoplayer2.Format,com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters,int)
com.bumptech.glide.load.ImageHeaderParserUtils: com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher: FileDescriptorAssetPathFetcher(android.content.res.AssetManager,java.lang.String)
com.google.android.exoplayer2.util.Assertions: void checkState(boolean,java.lang.Object)
com.bumptech.glide.GlideBuilder$WaitForFramesAfterTrimMemory: GlideBuilder$WaitForFramesAfterTrimMemory()
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader: boolean handles(android.net.Uri)
com.bumptech.glide.load.engine.DataCacheGenerator: void cancel()
com.bumptech.glide.load.model.UnitModelLoader$Factory: UnitModelLoader$Factory()
androidx.appcompat.view.menu.MenuDialogHelper: void dismiss()
cn.jzvd.demo.ActivityApiUIBigChange: void onCreate(android.os.Bundle)
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: DefaultAudioSink$PlaybackParametersCheckpoint(com.google.android.exoplayer2.PlaybackParameters,long,long)
com.google.android.exoplayer2.util.MimeTypes: int getTrackTypeOfCodec(java.lang.String)
androidx.recyclerview.widget.LinearLayoutManager: void ensureLayoutState()
androidx.appcompat.graphics.drawable.DrawableWrapper: boolean setState(int[])
com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher: void decoderInitialized(java.lang.String,long,long)
android.support.v4.media.MediaDescriptionCompat$Builder: android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri)
com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean headersMatch(int,long)
com.google.android.exoplayer2.metadata.emsg.EventMessage: EventMessage(java.lang.String,java.lang.String,long,long,byte[])
androidx.core.view.DisplayCutoutCompat: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatSeekBar: AppCompatSeekBar(android.content.Context,android.util.AttributeSet)
org.slf4j.helpers.NamedLoggerBase: java.lang.String getName()
com.bumptech.glide.request.target.ViewTarget: void setTag(java.lang.Object)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int calculateScrollDirectionForPosition(int)
androidx.appcompat.widget.ResourceManagerInternal: void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList)
androidx.fragment.app.FragmentManagerImpl: void hideFragment(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.metadata.id3.UrlLinkFrame$1: com.google.android.exoplayer2.metadata.id3.UrlLinkFrame createFromParcel(android.os.Parcel)
com.google.android.exoplayer2.extractor.ts.AdtsReader: void readSample(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.resource.bitmap.TransformationUtils: void applyMatrix(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix)
androidx.fragment.app.FragmentHostCallback: void onAttachFragment(androidx.fragment.app.Fragment)
androidx.appcompat.app.WindowDecorActionBar: WindowDecorActionBar(android.app.Dialog)
com.google.android.exoplayer2.audio.DefaultAudioSink$Configuration: int getDefaultBufferSize()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()
com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist$Variant: HlsMasterPlaylist$Variant(android.net.Uri,com.google.android.exoplayer2.Format,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap)
androidx.recyclerview.widget.StaggeredGridLayoutManager: void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat: boolean equals(java.lang.Object)
androidx.recyclerview.widget.RecyclerView$Adapter: void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
com.google.android.exoplayer2.upstream.DefaultAllocator: DefaultAllocator(boolean,int)
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode: RequestManagerFragment$FragmentRequestManagerTreeNode(com.bumptech.glide.manager.RequestManagerFragment)
androidx.appcompat.app.AlertDialog$Builder: androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback)
androidx.arch.core.internal.SafeIterableMap$Entry: SafeIterableMap$Entry(java.lang.Object,java.lang.Object)
androidx.core.content.PermissionChecker: int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String)
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader: int length()
com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection: long[][][] getAllocationCheckpoints(long[][])
com.google.android.exoplayer2.text.dvb.DvbParser: byte[] buildClutMapTable(int,int,com.google.android.exoplayer2.util.ParsableBitArray)
androidx.core.view.WindowInsetsCompat: int hashCode()
com.google.android.exoplayer2.extractor.mp4.MetadataUtil: com.google.android.exoplayer2.metadata.id3.Id3Frame parseUint8Attribute(int,java.lang.String,com.google.android.exoplayer2.util.ParsableByteArray,boolean,boolean)
com.google.android.exoplayer2.trackselection.DefaultTrackSelector$SelectionOverride: DefaultTrackSelector$SelectionOverride(android.os.Parcel)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean selectDrawable(int)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekOperationParams: long getNextSearchBytePosition()
com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker: void startSeek(long)
com.bumptech.glide.load.data.ParcelFileDescriptorRewinder: java.lang.Object rewindAndGet()
com.google.android.exoplayer2.util.EventDispatcher$HandlerAndListener: void dispatch(com.google.android.exoplayer2.util.EventDispatcher$Event)
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config)
androidx.core.widget.TextViewCompat: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.exifinterface.media.ExifInterface$ExifAttribute: double getDoubleValue(java.nio.ByteOrder)
com.google.android.exoplayer2.drm.DefaultDrmSession: boolean isOpen()
com.google.android.exoplayer2.source.IcyDataSource: IcyDataSource(com.google.android.exoplayer2.upstream.DataSource,int,com.google.android.exoplayer2.source.IcyDataSource$Listener)
androidx.appcompat.widget.ForwardingListener: void clearCallbacks()
androidx.appcompat.widget.TintTypedArray: java.lang.CharSequence[] getTextArray(int)
com.google.android.exoplayer2.decoder.SimpleDecoder: boolean canDecodeBuffer()
androidx.appcompat.app.AppCompatDialog: int getThemeResId(android.content.Context,int)
androidx.core.provider.FontRequest: java.util.List getCertificates()
com.bumptech.glide.load.engine.DiskCacheStrategy$1: boolean decodeCachedResource()
cn.jzvd.demo.ActivityApiRotationVideoSize: void clickRotationTo180(android.view.View)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int getDecoratedRight(android.view.View)
tv.danmaku.ijk.media.player.misc.AndroidTrackInfo: java.lang.String getInfoInline()
androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)
com.bumptech.glide.manager.RequestManagerRetriever$1: com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: android.media.MediaFormat getMediaFormat(com.google.android.exoplayer2.Format,java.lang.String,com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues,float,boolean,int)
com.google.android.exoplayer2.text.cea.Cea708Decoder$CueBuilder: int getArgbColorFromCeaColor(int,int,int,int)
androidx.fragment.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)
com.bumptech.glide.RequestManager: com.bumptech.glide.request.RequestOptions getDefaultRequestOptions()
com.google.android.exoplayer2.text.ssa.SsaStyle$Overrides: java.lang.String stripStyleOverrides(java.lang.String)
android.support.v4.media.session.MediaSessionCompat$Token: int describeContents()
com.google.android.exoplayer2.source.MediaSource$MediaPeriodId: int hashCode()
com.google.android.exoplayer2.upstream.AssetDataSource$AssetDataSourceException: AssetDataSource$AssetDataSourceException(java.io.IOException)
androidx.appcompat.app.AlertController: void setupTitle(android.view.ViewGroup)
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1: void run()
androidx.viewpager.widget.ViewPager: void dispatchOnScrollStateChanged(int)
com.google.android.exoplayer2.extractor.mp4.AtomParsers: android.util.Pair parseSampleEntryEncryptionData(com.google.android.exoplayer2.util.ParsableByteArray,int,int)
com.google.android.exoplayer2.audio.AuxEffectInfo: int hashCode()
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.exoplayer2.Timeline$Window: <clinit>()
com.bumptech.glide.util.Preconditions: java.lang.String checkNotEmpty(java.lang.String)
com.google.android.exoplayer2.ExoPlayerImplInternal: void seekToCurrentPosition(boolean)
com.bumptech.glide.request.ErrorRequestCoordinator: boolean isComplete()
com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlProcessor: void binaryElement(int,int,com.google.android.exoplayer2.extractor.ExtractorInput)
androidx.fragment.app.FragmentManagerImpl: void showFragment(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.source.SinglePeriodTimeline: int getWindowCount()
androidx.appcompat.app.AppCompatDelegateImpl$ContextThemeWrapperCompatApi17Impl: void applyOverrideConfiguration(android.view.ContextThemeWrapper,android.content.res.Configuration)
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: boolean shouldForceRenderOutputBuffer(long,long)
androidx.recyclerview.widget.RecyclerView$LayoutManager: int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void parseMoof(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom,android.util.SparseArray,int,byte[])
com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: void seek(long,long)
com.bumptech.glide.gifdecoder.StandardGifDecoder: int getDelay(int)
android.support.v4.media.RatingCompat$1: android.support.v4.media.RatingCompat[] newArray(int)
androidx.exifinterface.media.ExifInterface: boolean isRw2Format(byte[])
com.danikula.videocache.ProxyCache$SourceReaderRunnable: void run()
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean isEquivalentTo(com.bumptech.glide.request.Request)
com.google.android.exoplayer2.MediaPeriodHolder: void setRendererOffset(long)
androidx.appcompat.view.SupportActionModeWrapper: android.view.View getCustomView()
androidx.core.content.res.ResourcesCompat$FontCallback$2: void run()
com.google.android.exoplayer2.util.FlacStreamMetadata: long getApproxBytesPerFrame()
androidx.appcompat.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()
tv.danmaku.ijk.media.player.IjkMediaPlayer: long getCacheStatisticFileForwards()
androidx.appcompat.app.AppCompatDelegateImpl$1: boolean shouldWrapException(java.lang.Throwable)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: com.google.android.exoplayer2.util.MediaClock getMediaClock()
androidx.core.graphics.TypefaceCompatApi26Impl: android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView$ViewHolder: boolean shouldIgnore()
com.google.android.exoplayer2.extractor.ts.AdtsReader: AdtsReader(boolean,java.lang.String)
com.bumptech.glide.request.BaseRequestOptions: android.graphics.drawable.Drawable getFallbackDrawable()
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback: androidx.appcompat.view.menu.ShowableListMenu getPopup()
com.google.android.exoplayer2.source.CompositeMediaSource: void releaseSourceInternal()
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache: int generateCacheKey(int,android.graphics.PorterDuff$Mode)
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: int parseRoleFlags(java.lang.String,java.util.Map)
androidx.viewpager.widget.ViewPager: void onAttachedToWindow()
androidx.appcompat.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool: java.lang.Object get(int,java.lang.Class)
com.danikula.videocache.ProxyCacheException: ProxyCacheException(java.lang.String,java.lang.Throwable)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)
androidx.appcompat.widget.TooltipCompatHandler: void scheduleShow()
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat: void onRepeatModeChanged(int)
org.slf4j.LoggerFactory: void fixSubstituteLoggers()
com.google.android.exoplayer2.video.VideoListener: void onSurfaceSizeChanged(int,int)
com.google.android.exoplayer2.extractor.ts.Ac3Reader: void packetFinished()
androidx.core.view.ViewPropertyAnimatorCompat: androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator)
com.google.android.exoplayer2.util.StandaloneMediaClock: void start()
cn.jzvd.demo.ActivityTinyWindowRecycleViewMultiHolder: boolean onOptionsItemSelected(android.view.MenuItem)
com.google.android.exoplayer2.upstream.DataSourceInputStream: void open()
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.collection.ArraySet: boolean retainAll(java.util.Collection)
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1: java.lang.Object open(java.io.File)
android.support.v4.media.session.PlaybackStateCompat: <clinit>()
com.google.android.exoplayer2.util.Util: java.lang.String normalizeLanguageCode(java.lang.String)
com.google.android.exoplayer2.source.BaseMediaSource: boolean isEnabled()
com.bumptech.glide.load.model.stream.UrlLoader: boolean handles(java.net.URL)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)
com.bumptech.glide.load.resource.bitmap.Downsampler: void calculateConfig(com.bumptech.glide.load.resource.bitmap.ImageReader,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void handleSourceInfoRefreshed(com.google.android.exoplayer2.ExoPlayerImplInternal$MediaSourceRefreshInfo)
com.google.android.exoplayer2.Timeline$1: java.lang.Object getUidOfPeriod(int)
com.bumptech.glide.manager.RequestManagerRetriever: com.bumptech.glide.RequestManager getApplicationManager(android.content.Context)
androidx.recyclerview.widget.LinearLayoutManager: int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodInfo getMediaPeriodInfo(com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox access$100(com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)
com.bumptech.glide.util.ExceptionPassthroughInputStream: boolean markSupported()
com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser: java.lang.String parseStringAttr(java.lang.String,java.util.regex.Pattern,java.util.Map)
cn.jzvd.demo.ActivityListViewFragmentViewPager: void onCreate(android.os.Bundle)
androidx.collection.LongSparseArray: void remove(long)
androidx.appcompat.app.AppCompatActivity: void onCreate(android.os.Bundle)
android.support.v4.media.RatingCompat$1: android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel)
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21: void onAudioInfoChanged(int,int,int,int,int)
com.bumptech.glide.manager.SupportRequestManagerFragment: com.bumptech.glide.RequestManager getRequestManager()
androidx.appcompat.widget.ListPopupWindow$3: void onNothingSelected(android.widget.AdapterView)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri)
androidx.core.graphics.PathParser$PathDataNode: PathParser$PathDataNode(char,float[])
cn.jzvd.demo.ActivityListViewMultiHolder$1: void onScroll(android.widget.AbsListView,int,int,int)
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory: DefaultConnectivityMonitorFactory()
com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader: void parseHeader()
androidx.appcompat.view.menu.MenuPopupHelper: androidx.appcompat.view.menu.MenuPopup createPopup()
com.bumptech.glide.load.engine.DecodeHelper: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool()
com.google.android.exoplayer2.metadata.Metadata$1: com.google.android.exoplayer2.metadata.Metadata createFromParcel(android.os.Parcel)
cn.jzvd.Jzvd: void onInfo(int,int)
com.google.android.exoplayer2.ui.SubtitleView: void setTextSize(int,float)
cn.jzvd.demo.CustomMedia.JZMediaSystemAssertFolder: void release()
androidx.cursoradapter.widget.CursorAdapter: void onContentChanged()
com.google.android.exoplayer2.metadata.icy.IcyInfo: IcyInfo(android.os.Parcel)
cn.jzvd.demo.CustomJzvd.MyJzvdStd: void startVideo()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.bumptech.glide.GlideContext: com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool()
com.google.android.exoplayer2.extractor.ts.Ac4Reader: void seek()
com.google.android.exoplayer2.video.spherical.CameraMotionRenderer: float[] parseMetadata(java.nio.ByteBuffer)
androidx.collection.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside: float getScaleFactor(int,int,int,int)
com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry$1: HlsTrackMetadataEntry$1()
com.google.android.exoplayer2.ui.TrackSelectionView: void setShowDisableOption(boolean)
com.google.android.exoplayer2.text.cea.CeaDecoder$CeaOutputBuffer: CeaDecoder$CeaOutputBuffer(com.google.android.exoplayer2.text.cea.CeaDecoder,com.google.android.exoplayer2.text.cea.CeaDecoder$1)
com.bumptech.glide.util.LruCache$Entry: LruCache$Entry(java.lang.Object,int)
com.google.android.exoplayer2.upstream.DataSourceInputStream: int read(byte[],int,int)
com.bumptech.glide.request.ThumbnailRequestCoordinator: boolean parentCanSetImage()
androidx.collection.ArraySet: java.lang.String toString()
androidx.recyclerview.widget.RecyclerView$ViewHolder: long getItemId()
androidx.appcompat.view.menu.MenuWrapperICS: android.view.MenuItem add(int,int,int,int)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void onDisabled()
com.google.android.exoplayer2.extractor.ts.Ac3Reader: boolean continueRead(com.google.android.exoplayer2.util.ParsableByteArray,byte[],int)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.graphics.TypefaceCompat: android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int)
tv.danmaku.ijk.media.player.MediaPlayerProxy$3: void onBufferingUpdate(tv.danmaku.ijk.media.player.IMediaPlayer,int)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: boolean hasData()
androidx.exifinterface.media.ExifInterface$ExifAttribute: androidx.exifinterface.media.ExifInterface$ExifAttribute createUShort(int,java.nio.ByteOrder)
com.google.android.exoplayer2.extractor.ts.AdtsExtractor: AdtsExtractor(int)
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.Fragment findFragmentByTag(java.lang.String)
androidx.appcompat.widget.Toolbar: void addSystemView(android.view.View,boolean)
com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand: com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand parseFromSection(com.google.android.exoplayer2.util.ParsableByteArray,long,com.google.android.exoplayer2.util.TimestampAdjuster)
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean)
com.google.android.exoplayer2.source.ClippingMediaPeriod: long selectTracks(com.google.android.exoplayer2.trackselection.TrackSelection[],boolean[],com.google.android.exoplayer2.source.SampleStream[],boolean[],long)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
androidx.core.graphics.drawable.DrawableCompat: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: void parsePositionAttribute(java.lang.String,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)
androidx.appcompat.app.WindowDecorActionBar: void enableContentAnimations(boolean)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper: void loadFromAttributes(android.util.AttributeSet,int)
androidx.core.provider.FontsContractCompat$5: int compare(java.lang.Object,java.lang.Object)
com.google.android.exoplayer2.SimpleExoPlayer: void release()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isSecureV21(android.media.MediaCodecInfo$CodecCapabilities)
com.google.android.exoplayer2.text.ttml.TtmlDecoder: com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate parseFrameAndTickRates(org.xmlpull.v1.XmlPullParser)
androidx.recyclerview.widget.StaggeredGridLayoutManager: int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.load.model.FileLoader$FileFetcher: com.bumptech.glide.load.DataSource getDataSource()
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.google.android.exoplayer2.Player$EventListener: void onIsPlayingChanged(boolean)
com.bumptech.glide.disklrucache.DiskLruCache: void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean)
androidx.appcompat.graphics.drawable.DrawableContainer: boolean canApplyTheme()
com.google.android.exoplayer2.drm.DefaultDrmSession$ResponseHandler: DefaultDrmSession$ResponseHandler(com.google.android.exoplayer2.drm.DefaultDrmSession,android.os.Looper)
com.google.android.exoplayer2.text.ttml.TtmlStyle: com.google.android.exoplayer2.text.ttml.TtmlStyle setBackgroundColor(int)
com.google.android.exoplayer2.extractor.VorbisUtil: void readResidues(com.google.android.exoplayer2.extractor.VorbisBitArray)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: IjkMediaMeta$IjkStreamMeta(int)
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer: void initialize(android.media.MediaMetadataRetriever,java.lang.Object)
androidx.appcompat.graphics.drawable.DrawableWrapper: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)
androidx.core.provider.SelfDestructiveThread$2: void run()
androidx.recyclerview.widget.RecyclerView: void dispatchChildDetached(android.view.View)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: PrivateCommand(android.os.Parcel,com.google.android.exoplayer2.metadata.scte35.PrivateCommand$1)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
androidx.recyclerview.widget.ScrollbarHelper: int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean)
com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition: DvbParser$RegionComposition(int,boolean,int,int,int,int,int,int,int,int,android.util.SparseArray)
androidx.fragment.app.FragmentManagerViewModel: void clearNonConfigState(androidx.fragment.app.Fragment)
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException: MediaCodecRenderer$DecoderInitializationException(java.lang.String,java.lang.Throwable,java.lang.String,boolean,com.google.android.exoplayer2.mediacodec.MediaCodecInfo,java.lang.String,com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)
androidx.lifecycle.Lifecycle$Event: <clinit>()
androidx.recyclerview.widget.RecyclerView$LayoutParams: RecyclerView$LayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatImageHelper: void applySupportImageTint()
com.google.android.exoplayer2.extractor.MpegAudioHeader: int getFrameSampleCount(int)
com.google.android.exoplayer2.metadata.Metadata$Entry: byte[] getWrappedMetadataBytes()
com.danikula.videocache.ProxyCache: void tryComplete()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException: DefaultImageHeaderParser$Reader$EndOfFileException()
com.google.android.exoplayer2.text.TextRenderer: void onDisabled()
com.bumptech.glide.request.BaseRequestOptions: com.bumptech.glide.request.BaseRequestOptions optionalCenterInside()
tv.danmaku.ijk.media.player.TextureMediaPlayer: void setSurface(android.view.Surface)
androidx.viewpager.widget.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
com.google.android.exoplayer2.analytics.AnalyticsCollector$MediaPeriodQueueTracker: void onSeekProcessed()
androidx.recyclerview.widget.LinearLayoutManager: android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
com.bumptech.glide.request.SingleRequest: boolean canNotifyCleared()
androidx.appcompat.widget.ContentFrameLayout: void onDetachedFromWindow()
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: <clinit>()
tv.danmaku.ijk.media.player.MediaPlayerProxy: int getVideoWidth()
com.google.android.exoplayer2.analytics.AnalyticsListener: void onDrmKeysLoaded(com.google.android.exoplayer2.analytics.AnalyticsListener$EventTime)
cn.jzvd.JZUtils: void setRequestedOrientation(android.content.Context,int)
android.support.v4.media.session.MediaSessionCompat$Token: android.support.v4.media.session.IMediaSession getExtraBinder()
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ByteBufferInitializer$1: long getSize()
androidx.fragment.app.BackStackRecord: void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: AppCompatMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getMemoryCacheSize()
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.Toolbar: void onDetachedFromWindow()
com.google.android.exoplayer2.util.SlidingPercentile: void reset()
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder: GifDrawableBytesTranscoder()
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.bumptech.glide.GlideBuilder: GlideBuilder()
com.google.android.exoplayer2.upstream.FileDataSource$FileDataSourceException: FileDataSource$FileDataSourceException(java.lang.String,java.io.IOException)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
androidx.appcompat.view.menu.SubMenuBuilder: boolean isGroupDividerEnabled()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper: SupportActionModeWrapper$CallbackWrapper(android.content.Context,android.view.ActionMode$Callback)
androidx.appcompat.app.AppCompatDelegateImpl: boolean onKeyDown(int,android.view.KeyEvent)
android.support.v4.media.MediaMetadataCompat$1: android.support.v4.media.MediaMetadataCompat[] newArray(int)
androidx.collection.MapCollections$EntrySet: java.lang.Object[] toArray()
androidx.appcompat.widget.LinearLayoutCompat: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int)
com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker$MediaPlaylistBundle: void onLoadCanceled(com.google.android.exoplayer2.upstream.ParsingLoadable,long,long,boolean)
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span: int getDeletedSize()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
com.google.android.exoplayer2.text.ttml.TtmlStyle: android.text.Layout$Alignment getTextAlign()
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: android.util.Pair parseSidx(com.google.android.exoplayer2.util.ParsableByteArray,long)
com.bumptech.glide.util.CachedHashCodeArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)
androidx.appcompat.app.AppCompatDelegate: void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate)
com.bumptech.glide.request.RequestOptions: com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy)
cn.jzvd.JzvdStd: void updateStartImage()
androidx.appcompat.view.ContextThemeWrapper: android.content.res.Resources getResourcesInternal()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setColorFilter(android.graphics.ColorFilter)
com.google.android.exoplayer2.source.ProgressiveMediaPeriod: long access$1100(com.google.android.exoplayer2.source.ProgressiveMediaPeriod)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle: void updateDrmInitData(com.google.android.exoplayer2.drm.DrmInitData)
androidx.appcompat.widget.ActionBarOverlayLayout: void removeActionBarHideOffset()
com.google.android.exoplayer2.text.cea.Cea708Cue: int compareTo(java.lang.Object)
androidx.core.widget.NestedScrollView: int computeHorizontalScrollOffset()
com.google.android.exoplayer2.DefaultLoadControl: boolean retainBackBufferFromKeyframe()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.bumptech.glide.load.engine.DataCacheKey: int hashCode()
androidx.appcompat.widget.SearchView: void onTextFocusChanged()
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: boolean isTunneling(android.media.MediaCodecInfo$CodecCapabilities)
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.lang.String toString()
com.google.android.exoplayer2.source.BaseMediaSource: void disable(com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller)
com.google.android.exoplayer2.util.LongArray: LongArray(int)
androidx.appcompat.graphics.drawable.DrawableWrapper: android.graphics.drawable.Drawable getWrappedDrawable()
androidx.appcompat.graphics.drawable.DrawableWrapper: void setColorFilter(android.graphics.ColorFilter)
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator: FragmentManagerImpl$AnimationOrAnimator(android.view.animation.Animation)
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getRawResourceDataSource()
com.bumptech.glide.load.engine.DiskCacheStrategy$4: boolean isDataCacheable(com.bumptech.glide.load.DataSource)
com.google.android.exoplayer2.metadata.scte35.PrivateCommand: PrivateCommand(long,byte[],long)
com.google.android.exoplayer2.extractor.ts.TsExtractor: <clinit>()
androidx.appcompat.widget.ListPopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)
androidx.fragment.app.FragmentActivity: void onStop()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
android.support.v4.media.MediaBrowserCompat$MediaItem: java.lang.String toString()
androidx.fragment.app.FragmentPagerAdapter: FragmentPagerAdapter(androidx.fragment.app.FragmentManager)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1: void onAnimationStart(android.view.View)
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher: void cancel()
androidx.appcompat.widget.ActionMenuPresenter: void updateMenuView(boolean)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.appcompat.app.AppCompatDelegateImpl: boolean isHandleNativeActionModesEnabled()
com.bumptech.glide.load.engine.ActiveResources$2: ActiveResources$2(com.bumptech.glide.load.engine.ActiveResources)
com.bumptech.glide.load.model.ByteArrayLoader: com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[],int,int,com.bumptech.glide.load.Options)
androidx.collection.MapCollections$ValuesCollection: boolean remove(java.lang.Object)
android.support.v4.media.session.PlaybackStateCompatApi21: java.util.List getCustomActions(java.lang.Object)
com.bumptech.glide.request.BaseRequestOptions: boolean isValidOverride()
androidx.core.content.res.TypedArrayUtils: android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int)
androidx.cursoradapter.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)
androidx.appcompat.widget.ListPopupWindow: void setSelection(int)
com.bumptech.glide.load.model.ModelLoaderRegistry: ModelLoaderRegistry(com.bumptech.glide.load.model.MultiModelLoaderFactory)
com.google.android.exoplayer2.video.AvcConfig: com.google.android.exoplayer2.video.AvcConfig parse(com.google.android.exoplayer2.util.ParsableByteArray)
com.bumptech.glide.load.ImageHeaderParserUtils$3: ImageHeaderParserUtils$3(com.bumptech.glide.load.data.ParcelFileDescriptorRewinder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.google.android.exoplayer2.decoder.Buffer: boolean isEndOfStream()
com.google.android.exoplayer2.upstream.DefaultDataSource: com.google.android.exoplayer2.upstream.DataSource getAssetDataSource()
androidx.appcompat.app.AppCompatDelegateImpl: void onPostCreate(android.os.Bundle)
cn.jzvd.demo.ActivityTinyWindow: void onBackPressed()
androidx.media.AudioAttributesImplBase: int getContentType()
androidx.appcompat.widget.DrawableUtils: <clinit>()
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: int describeContents()
androidx.fragment.app.FragmentTransitionCompat21$2: void onTransitionResume(android.transition.Transition)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.bumptech.glide.Glide: void trimMemory(int)
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.appcompat.graphics.drawable.DrawableContainer: void setDither(boolean)
com.google.android.exoplayer2.extractor.ts.SectionReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.google.android.exoplayer2.util.Util: int getPcmFrameSize(int,int)
androidx.viewpager.widget.ViewPager: boolean pageScrolled(int)
com.google.android.exoplayer2.text.webvtt.WebvttCueParser: boolean parseCue(com.google.android.exoplayer2.util.ParsableByteArray,com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder,java.util.List)
com.google.android.exoplayer2.video.VideoRendererEventListener: void onVideoSizeChanged(int,int,int,float)
com.google.android.exoplayer2.audio.BaseAudioProcessor: BaseAudioProcessor()
androidx.recyclerview.widget.LinearLayoutManager: int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: int getAlpha()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState(android.os.Parcel)
androidx.collection.ArraySet: boolean equals(java.lang.Object)
org.slf4j.LoggerFactory: void bind()
com.bumptech.glide.load.Option: com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater)
com.google.android.exoplayer2.upstream.RawResourceDataSource: void close()
cn.jzvd.JzvdStd: void setBufferProgress(int)
com.bumptech.glide.Registry: com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object)
com.danikula.videocache.HttpProxyCacheServer: void closeSocketInput(java.net.Socket)
androidx.appcompat.widget.ActionMenuPresenter: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.appcompat.view.ViewPropertyAnimatorCompatSet: androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat)
com.google.android.exoplayer2.ExoPlayerImplInternal: void reselectTracksInternal()
com.bumptech.glide.RequestManager: com.bumptech.glide.RequestBuilder load(java.lang.String)
com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor: void onMoovContainerAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)
com.bumptech.glide.load.data.mediastore.ThumbFetcher: com.bumptech.glide.load.DataSource getDataSource()
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: int getPassthroughEncoding(int,java.lang.String)
androidx.fragment.app.Fragment: void performSaveInstanceState(android.os.Bundle)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
com.google.android.exoplayer2.metadata.id3.CommentFrame$1: CommentFrame$1()
com.google.android.exoplayer2.extractor.ts.PesReader: void consume(com.google.android.exoplayer2.util.ParsableByteArray,int)
com.bumptech.glide.load.data.ExifOrientationStream: boolean markSupported()
com.google.android.exoplayer2.Player$EventListener: void onSeekProcessed()
com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader: boolean endNalUnit(long,int,boolean,boolean)
com.google.android.exoplayer2.offline.StreamKey: int compareTo(java.lang.Object)
androidx.fragment.app.FragmentManagerImpl: void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean)
com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor: <clinit>()
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser: int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool)
com.google.android.exoplayer2.metadata.id3.Id3Decoder: com.google.android.exoplayer2.metadata.id3.TextInformationFrame decodeTxxxFrame(com.google.android.exoplayer2.util.ParsableByteArray,int)
androidx.exifinterface.media.ExifInterface$ByteOrderedDataInputStream: int available()
com.google.android.exoplayer2.offline.StreamKey: StreamKey(android.os.Parcel)
com.bumptech.glide.load.model.ResourceLoader$UriFactory: ResourceLoader$UriFactory(android.content.res.Resources)
com.google.android.exoplayer2.source.hls.HlsMediaSource: void releaseSourceInternal()
com.google.android.exoplayer2.extractor.MpegAudioHeader: <clinit>()
androidx.fragment.app.FragmentManagerImpl: androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int)
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable: AutoScrollHelper$ScrollAnimationRunnable(androidx.core.widget.AutoScrollHelper)
com.bumptech.glide.load.model.FileLoader: FileLoader(com.bumptech.glide.load.model.FileLoader$FileOpener)
com.google.android.exoplayer2.analytics.AnalyticsCollector: void setPlayer(com.google.android.exoplayer2.Player)
com.google.android.exoplayer2.audio.MediaCodecAudioRenderer: void configureCodec(com.google.android.exoplayer2.mediacodec.MediaCodecInfo,android.media.MediaCodec,com.google.android.exoplayer2.Format,android.media.MediaCrypto,float)
androidx.core.widget.NestedScrollView: boolean isOffScreen(android.view.View)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1: androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int)
com.google.android.exoplayer2.drm.DrmInitData$SchemeData: boolean equals(java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: boolean hasWindowFocus()
com.google.android.exoplayer2.video.MediaCodecVideoRenderer: void onStreamChanged(com.google.android.exoplayer2.Format[],long)
cn.jzvd.demo.CustomJzvd.JzvdStdAutoCompleteAfterFullscreen: JzvdStdAutoCompleteAfterFullscreen(android.content.Context,android.util.AttributeSet)
cn.jzvd.demo.ApplicationDemo: com.danikula.videocache.HttpProxyCacheServer newProxy()
com.google.android.exoplayer2.util.FlacStreamMetadata: com.google.android.exoplayer2.Format getFormat(byte[],com.google.android.exoplayer2.metadata.Metadata)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
cn.jzvd.demo.ActivityApiCustomMedia: void clickChangeToExo(android.view.View)
androidx.arch.core.internal.FastSafeIterableMap: FastSafeIterableMap()
com.bumptech.glide.request.SingleRequest: void notifyLoadFailed()
androidx.core.graphics.TypefaceCompatApi24Impl: <clinit>()
com.google.android.exoplayer2.ui.SubtitleView: void setBottomPaddingFraction(float)
androidx.appcompat.widget.AppCompatTextHelper: int getAutoSizeMinTextSize()
com.google.android.exoplayer2.SimpleExoPlayer: java.util.concurrent.CopyOnWriteArraySet access$200(com.google.android.exoplayer2.SimpleExoPlayer)
cn.jzvd.demo.ActivityListViewFragmentViewPager: void onPageScrolled(int,float,int)
androidx.fragment.app.FragmentManagerImpl$4: FragmentManagerImpl$4(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment)
androidx.recyclerview.widget.StaggeredGridLayoutManager: android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State)
androidx.core.graphics.PathParser: float[] getFloats(java.lang.String)
androidx.core.app.NavUtils: android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName)
androidx.appcompat.widget.ResourcesWrapper: java.lang.CharSequence[] getTextArray(int)
com.google.android.exoplayer2.ExoPlayerImplInternal: void release()
androidx.appcompat.widget.ActionMenuPresenter: void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean)
com.google.android.exoplayer2.source.MediaSourceEventListener: void onMediaPeriodCreated(int,com.google.android.exoplayer2.source.MediaSource$MediaPeriodId)
com.google.android.exoplayer2.audio.DefaultAudioSink$PlaybackParametersCheckpoint: DefaultAudioSink$PlaybackParametersCheckpoint(com.google.android.exoplayer2.PlaybackParameters,long,long,com.google.android.exoplayer2.audio.DefaultAudioSink$1)
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: void setAutoMirrored(boolean)
androidx.appcompat.widget.AppCompatSpinner: void onMeasure(int,int)
tv.danmaku.ijk.media.player.IjkMediaMeta$IjkStreamMeta: java.lang.String getBitrateInline()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.view.menu.MenuItemWrapperICS: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)
androidx.fragment.app.BackStackState$1: BackStackState$1()
androidx.fragment.app.FragmentTransitionCompat21: void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList)
com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24: void access$100(com.google.android.exoplayer2.decoder.CryptoInfo$PatternHolderV24,int,int)
androidx.appcompat.view.SupportActionModeWrapper: android.view.Menu getMenu()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: void jumpToCurrentState()
cn.jzvd.demo.CustomMedia.JZMediaIjk: void onVideoSizeChanged(tv.danmaku.ijk.media.player.IMediaPlayer,int,int,int,int)
com.bumptech.glide.provider.ResourceEncoderRegistry: ResourceEncoderRegistry()
com.bumptech.glide.disklrucache.DiskLruCache: void rebuildJournal()
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry: FontResourcesParserCompat$FontFamilyFilesResourceEntry(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[])
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options)
androidx.recyclerview.widget.RecyclerView$ViewHolder: void addFlags(int)
androidx.fragment.app.FragmentState$1: FragmentState$1()
androidx.core.view.MenuItemCompat: void setNumericShortcut(android.view.MenuItem,char,int)
androidx.appcompat.view.menu.MenuItemWrapperICS: java.lang.CharSequence getContentDescription()
com.google.android.exoplayer2.ExoPlayerImplInternal: boolean shouldContinueLoading()
com.bumptech.glide.load.engine.ResourceCacheKey: <clinit>()
androidx.appcompat.view.menu.MenuWrapperICS: void setGroupCheckable(int,boolean,boolean)
com.google.android.exoplayer2.text.cea.Cea608Decoder: boolean isPreambleAddressCode(byte,byte)
androidx.appcompat.widget.AppCompatDrawableManager: void preload()
androidx.collection.MapCollections$ValuesCollection: java.util.Iterator iterator()
com.google.android.exoplayer2.mediacodec.MediaCodecRenderer: void setOperatingRate(float)
com.google.android.exoplayer2.mediacodec.MediaCodecInfo: android.graphics.Point alignVideoSizeV21(int,int)
com.bumptech.glide.load.engine.EngineJob$CallResourceReady: EngineJob$CallResourceReady(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback)
com.danikula.videocache.ProxyCache$SourceReaderRunnable: ProxyCache$SourceReaderRunnable(com.danikula.videocache.ProxyCache)
com.google.android.exoplayer2.ui.SubtitleView: void setFractionalTextSize(float,boolean)
com.bumptech.glide.load.resource.gif.GifFrameLoader: void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1: java.lang.Object[] newArray(int)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup: int invalidateFullSpansAfter(int)
com.google.android.exoplayer2.metadata.id3.InternalFrame: boolean equals(java.lang.Object)
com.google.android.exoplayer2.MediaPeriodHolder: MediaPeriodHolder(com.google.android.exoplayer2.RendererCapabilities[],long,com.google.android.exoplayer2.trackselection.TrackSelector,com.google.android.exoplayer2.upstream.Allocator,com.google.android.exoplayer2.source.MediaSource,com.google.android.exoplayer2.MediaPeriodInfo,com.google.android.exoplayer2.trackselection.TrackSelectorResult)
android.support.v4.media.MediaDescriptionCompat: android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object)
